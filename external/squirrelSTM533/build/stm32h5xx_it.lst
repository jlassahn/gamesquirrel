ARM GAS  /tmp/ccFst7i9.s 			page 1


   1              		.cpu cortex-m33
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32h5xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv8-m.main
  21              		.arch_extension dsp
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	NMI_Handler:
  28              	.LFB361:
  29              		.file 1 "Core/Src/stm32h5xx_it.c"
   1:Core/Src/stm32h5xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32h5xx_it.c **** /**
   3:Core/Src/stm32h5xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32h5xx_it.c ****   * @file    stm32h5xx_it.c
   5:Core/Src/stm32h5xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32h5xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32h5xx_it.c ****   * @attention
   8:Core/Src/stm32h5xx_it.c ****   *
   9:Core/Src/stm32h5xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/stm32h5xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32h5xx_it.c ****   *
  12:Core/Src/stm32h5xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32h5xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32h5xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32h5xx_it.c ****   *
  16:Core/Src/stm32h5xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32h5xx_it.c ****   */
  18:Core/Src/stm32h5xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32h5xx_it.c **** 
  20:Core/Src/stm32h5xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32h5xx_it.c **** #include "main.h"
  22:Core/Src/stm32h5xx_it.c **** #include "stm32h5xx_it.h"
  23:Core/Src/stm32h5xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32h5xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32h5xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32h5xx_it.c **** 
  27:Core/Src/stm32h5xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32h5xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32h5xx_it.c **** 
ARM GAS  /tmp/ccFst7i9.s 			page 2


  30:Core/Src/stm32h5xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32h5xx_it.c **** 
  32:Core/Src/stm32h5xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32h5xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32h5xx_it.c **** 
  35:Core/Src/stm32h5xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32h5xx_it.c **** 
  37:Core/Src/stm32h5xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32h5xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32h5xx_it.c **** 
  40:Core/Src/stm32h5xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32h5xx_it.c **** 
  42:Core/Src/stm32h5xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32h5xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32h5xx_it.c **** 
  45:Core/Src/stm32h5xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32h5xx_it.c **** 
  47:Core/Src/stm32h5xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32h5xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32h5xx_it.c **** 
  50:Core/Src/stm32h5xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32h5xx_it.c **** 
  52:Core/Src/stm32h5xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32h5xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32h5xx_it.c **** 
  55:Core/Src/stm32h5xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32h5xx_it.c **** 
  57:Core/Src/stm32h5xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32h5xx_it.c **** 
  59:Core/Src/stm32h5xx_it.c **** /* USER CODE BEGIN EV */
  60:Core/Src/stm32h5xx_it.c **** 
  61:Core/Src/stm32h5xx_it.c **** /* USER CODE END EV */
  62:Core/Src/stm32h5xx_it.c **** 
  63:Core/Src/stm32h5xx_it.c **** /******************************************************************************/
  64:Core/Src/stm32h5xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  65:Core/Src/stm32h5xx_it.c **** /******************************************************************************/
  66:Core/Src/stm32h5xx_it.c **** /**
  67:Core/Src/stm32h5xx_it.c ****   * @brief This function handles Non maskable interrupt.
  68:Core/Src/stm32h5xx_it.c ****   */
  69:Core/Src/stm32h5xx_it.c **** void NMI_Handler(void)
  70:Core/Src/stm32h5xx_it.c **** {
  30              		.loc 1 70 1 view -0
  31              		.cfi_startproc
  32              		@ Volatile: function does not return.
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36              	.L2:
  71:Core/Src/stm32h5xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  72:Core/Src/stm32h5xx_it.c **** 
  73:Core/Src/stm32h5xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  74:Core/Src/stm32h5xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  75:Core/Src/stm32h5xx_it.c ****    while (1)
  37              		.loc 1 75 4 discriminator 1 view .LVU1
  76:Core/Src/stm32h5xx_it.c ****   {
  77:Core/Src/stm32h5xx_it.c ****   }
  38              		.loc 1 77 3 discriminator 1 view .LVU2
ARM GAS  /tmp/ccFst7i9.s 			page 3


  75:Core/Src/stm32h5xx_it.c ****   {
  39              		.loc 1 75 10 discriminator 1 view .LVU3
  40 0000 FEE7     		b	.L2
  41              		.cfi_endproc
  42              	.LFE361:
  44              		.section	.text.HardFault_Handler,"ax",%progbits
  45              		.align	1
  46              		.global	HardFault_Handler
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu fpv4-sp-d16
  52              	HardFault_Handler:
  53              	.LFB362:
  78:Core/Src/stm32h5xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32h5xx_it.c **** }
  80:Core/Src/stm32h5xx_it.c **** 
  81:Core/Src/stm32h5xx_it.c **** /**
  82:Core/Src/stm32h5xx_it.c ****   * @brief This function handles Hard fault interrupt.
  83:Core/Src/stm32h5xx_it.c ****   */
  84:Core/Src/stm32h5xx_it.c **** void HardFault_Handler(void)
  85:Core/Src/stm32h5xx_it.c **** {
  54              		.loc 1 85 1 view -0
  55              		.cfi_startproc
  56              		@ Volatile: function does not return.
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.L4:
  86:Core/Src/stm32h5xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  87:Core/Src/stm32h5xx_it.c **** 
  88:Core/Src/stm32h5xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  89:Core/Src/stm32h5xx_it.c ****   while (1)
  61              		.loc 1 89 3 discriminator 1 view .LVU5
  90:Core/Src/stm32h5xx_it.c ****   {
  91:Core/Src/stm32h5xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  92:Core/Src/stm32h5xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  93:Core/Src/stm32h5xx_it.c ****   }
  62              		.loc 1 93 3 discriminator 1 view .LVU6
  89:Core/Src/stm32h5xx_it.c ****   {
  63              		.loc 1 89 9 discriminator 1 view .LVU7
  64 0000 FEE7     		b	.L4
  65              		.cfi_endproc
  66              	.LFE362:
  68              		.section	.text.MemManage_Handler,"ax",%progbits
  69              		.align	1
  70              		.global	MemManage_Handler
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv4-sp-d16
  76              	MemManage_Handler:
  77              	.LFB363:
  94:Core/Src/stm32h5xx_it.c **** }
  95:Core/Src/stm32h5xx_it.c **** 
  96:Core/Src/stm32h5xx_it.c **** /**
  97:Core/Src/stm32h5xx_it.c ****   * @brief This function handles Memory management fault.
ARM GAS  /tmp/ccFst7i9.s 			page 4


  98:Core/Src/stm32h5xx_it.c ****   */
  99:Core/Src/stm32h5xx_it.c **** void MemManage_Handler(void)
 100:Core/Src/stm32h5xx_it.c **** {
  78              		.loc 1 100 1 view -0
  79              		.cfi_startproc
  80              		@ Volatile: function does not return.
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.L6:
 101:Core/Src/stm32h5xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 102:Core/Src/stm32h5xx_it.c **** 
 103:Core/Src/stm32h5xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 104:Core/Src/stm32h5xx_it.c ****   while (1)
  85              		.loc 1 104 3 discriminator 1 view .LVU9
 105:Core/Src/stm32h5xx_it.c ****   {
 106:Core/Src/stm32h5xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 107:Core/Src/stm32h5xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 108:Core/Src/stm32h5xx_it.c ****   }
  86              		.loc 1 108 3 discriminator 1 view .LVU10
 104:Core/Src/stm32h5xx_it.c ****   {
  87              		.loc 1 104 9 discriminator 1 view .LVU11
  88 0000 FEE7     		b	.L6
  89              		.cfi_endproc
  90              	.LFE363:
  92              		.section	.text.BusFault_Handler,"ax",%progbits
  93              		.align	1
  94              		.global	BusFault_Handler
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv4-sp-d16
 100              	BusFault_Handler:
 101              	.LFB364:
 109:Core/Src/stm32h5xx_it.c **** }
 110:Core/Src/stm32h5xx_it.c **** 
 111:Core/Src/stm32h5xx_it.c **** /**
 112:Core/Src/stm32h5xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 113:Core/Src/stm32h5xx_it.c ****   */
 114:Core/Src/stm32h5xx_it.c **** void BusFault_Handler(void)
 115:Core/Src/stm32h5xx_it.c **** {
 102              		.loc 1 115 1 view -0
 103              		.cfi_startproc
 104              		@ Volatile: function does not return.
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              	.L8:
 116:Core/Src/stm32h5xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 117:Core/Src/stm32h5xx_it.c **** 
 118:Core/Src/stm32h5xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 119:Core/Src/stm32h5xx_it.c ****   while (1)
 109              		.loc 1 119 3 discriminator 1 view .LVU13
 120:Core/Src/stm32h5xx_it.c ****   {
 121:Core/Src/stm32h5xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 122:Core/Src/stm32h5xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 123:Core/Src/stm32h5xx_it.c ****   }
ARM GAS  /tmp/ccFst7i9.s 			page 5


 110              		.loc 1 123 3 discriminator 1 view .LVU14
 119:Core/Src/stm32h5xx_it.c ****   {
 111              		.loc 1 119 9 discriminator 1 view .LVU15
 112 0000 FEE7     		b	.L8
 113              		.cfi_endproc
 114              	.LFE364:
 116              		.section	.text.UsageFault_Handler,"ax",%progbits
 117              		.align	1
 118              		.global	UsageFault_Handler
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	UsageFault_Handler:
 125              	.LFB365:
 124:Core/Src/stm32h5xx_it.c **** }
 125:Core/Src/stm32h5xx_it.c **** 
 126:Core/Src/stm32h5xx_it.c **** /**
 127:Core/Src/stm32h5xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 128:Core/Src/stm32h5xx_it.c ****   */
 129:Core/Src/stm32h5xx_it.c **** void UsageFault_Handler(void)
 130:Core/Src/stm32h5xx_it.c **** {
 126              		.loc 1 130 1 view -0
 127              		.cfi_startproc
 128              		@ Volatile: function does not return.
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 132              	.L10:
 131:Core/Src/stm32h5xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 132:Core/Src/stm32h5xx_it.c **** 
 133:Core/Src/stm32h5xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 134:Core/Src/stm32h5xx_it.c ****   while (1)
 133              		.loc 1 134 3 discriminator 1 view .LVU17
 135:Core/Src/stm32h5xx_it.c ****   {
 136:Core/Src/stm32h5xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 137:Core/Src/stm32h5xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 138:Core/Src/stm32h5xx_it.c ****   }
 134              		.loc 1 138 3 discriminator 1 view .LVU18
 134:Core/Src/stm32h5xx_it.c ****   {
 135              		.loc 1 134 9 discriminator 1 view .LVU19
 136 0000 FEE7     		b	.L10
 137              		.cfi_endproc
 138              	.LFE365:
 140              		.section	.text.SVC_Handler,"ax",%progbits
 141              		.align	1
 142              		.global	SVC_Handler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	SVC_Handler:
 149              	.LFB366:
 139:Core/Src/stm32h5xx_it.c **** }
 140:Core/Src/stm32h5xx_it.c **** 
 141:Core/Src/stm32h5xx_it.c **** /**
 142:Core/Src/stm32h5xx_it.c ****   * @brief This function handles System service call via SWI instruction.
ARM GAS  /tmp/ccFst7i9.s 			page 6


 143:Core/Src/stm32h5xx_it.c ****   */
 144:Core/Src/stm32h5xx_it.c **** void SVC_Handler(void)
 145:Core/Src/stm32h5xx_it.c **** {
 150              		.loc 1 145 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 146:Core/Src/stm32h5xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 147:Core/Src/stm32h5xx_it.c **** 
 148:Core/Src/stm32h5xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 149:Core/Src/stm32h5xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 150:Core/Src/stm32h5xx_it.c **** 
 151:Core/Src/stm32h5xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 152:Core/Src/stm32h5xx_it.c **** }
 155              		.loc 1 152 1 view .LVU21
 156 0000 7047     		bx	lr
 157              		.cfi_endproc
 158              	.LFE366:
 160              		.section	.text.DebugMon_Handler,"ax",%progbits
 161              		.align	1
 162              		.global	DebugMon_Handler
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu fpv4-sp-d16
 168              	DebugMon_Handler:
 169              	.LFB367:
 153:Core/Src/stm32h5xx_it.c **** 
 154:Core/Src/stm32h5xx_it.c **** /**
 155:Core/Src/stm32h5xx_it.c ****   * @brief This function handles Debug monitor.
 156:Core/Src/stm32h5xx_it.c ****   */
 157:Core/Src/stm32h5xx_it.c **** void DebugMon_Handler(void)
 158:Core/Src/stm32h5xx_it.c **** {
 170              		.loc 1 158 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 159:Core/Src/stm32h5xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 160:Core/Src/stm32h5xx_it.c **** 
 161:Core/Src/stm32h5xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 162:Core/Src/stm32h5xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 163:Core/Src/stm32h5xx_it.c **** 
 164:Core/Src/stm32h5xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 165:Core/Src/stm32h5xx_it.c **** }
 175              		.loc 1 165 1 view .LVU23
 176 0000 7047     		bx	lr
 177              		.cfi_endproc
 178              	.LFE367:
 180              		.section	.text.PendSV_Handler,"ax",%progbits
 181              		.align	1
 182              		.global	PendSV_Handler
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccFst7i9.s 			page 7


 188              	PendSV_Handler:
 189              	.LFB368:
 166:Core/Src/stm32h5xx_it.c **** 
 167:Core/Src/stm32h5xx_it.c **** /**
 168:Core/Src/stm32h5xx_it.c ****   * @brief This function handles Pendable request for system service.
 169:Core/Src/stm32h5xx_it.c ****   */
 170:Core/Src/stm32h5xx_it.c **** void PendSV_Handler(void)
 171:Core/Src/stm32h5xx_it.c **** {
 190              		.loc 1 171 1 view -0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 172:Core/Src/stm32h5xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 173:Core/Src/stm32h5xx_it.c **** 
 174:Core/Src/stm32h5xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 175:Core/Src/stm32h5xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 176:Core/Src/stm32h5xx_it.c **** 
 177:Core/Src/stm32h5xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 178:Core/Src/stm32h5xx_it.c **** }
 195              		.loc 1 178 1 view .LVU25
 196 0000 7047     		bx	lr
 197              		.cfi_endproc
 198              	.LFE368:
 200              		.section	.text.SysTick_Handler,"ax",%progbits
 201              		.align	1
 202              		.global	SysTick_Handler
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 206              		.fpu fpv4-sp-d16
 208              	SysTick_Handler:
 209              	.LFB369:
 179:Core/Src/stm32h5xx_it.c **** 
 180:Core/Src/stm32h5xx_it.c **** /**
 181:Core/Src/stm32h5xx_it.c ****   * @brief This function handles System tick timer.
 182:Core/Src/stm32h5xx_it.c ****   */
 183:Core/Src/stm32h5xx_it.c **** void SysTick_Handler(void)
 184:Core/Src/stm32h5xx_it.c **** {
 210              		.loc 1 184 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214 0000 08B5     		push	{r3, lr}
 215              	.LCFI0:
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 3, -8
 218              		.cfi_offset 14, -4
 185:Core/Src/stm32h5xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 186:Core/Src/stm32h5xx_it.c **** 
 187:Core/Src/stm32h5xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 188:Core/Src/stm32h5xx_it.c ****   HAL_IncTick();
 219              		.loc 1 188 3 view .LVU27
 220 0002 FFF7FEFF 		bl	HAL_IncTick
 221              	.LVL0:
 189:Core/Src/stm32h5xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 190:Core/Src/stm32h5xx_it.c **** 
ARM GAS  /tmp/ccFst7i9.s 			page 8


 191:Core/Src/stm32h5xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 192:Core/Src/stm32h5xx_it.c **** }
 222              		.loc 1 192 1 is_stmt 0 view .LVU28
 223 0006 08BD     		pop	{r3, pc}
 224              		.cfi_endproc
 225              	.LFE369:
 227              		.text
 228              	.Letext0:
 229              		.file 2 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal.h"
ARM GAS  /tmp/ccFst7i9.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h5xx_it.c
     /tmp/ccFst7i9.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccFst7i9.s:27     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccFst7i9.s:45     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccFst7i9.s:52     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccFst7i9.s:69     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccFst7i9.s:76     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccFst7i9.s:93     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccFst7i9.s:100    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccFst7i9.s:117    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccFst7i9.s:124    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccFst7i9.s:141    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccFst7i9.s:148    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccFst7i9.s:161    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccFst7i9.s:168    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccFst7i9.s:181    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccFst7i9.s:188    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccFst7i9.s:201    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccFst7i9.s:208    .text.SysTick_Handler:0000000000000000 SysTick_Handler

UNDEFINED SYMBOLS
HAL_IncTick
