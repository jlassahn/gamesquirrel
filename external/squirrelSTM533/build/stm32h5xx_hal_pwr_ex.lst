ARM GAS  /tmp/cc9o9g6Q.s 			page 1


   1              		.cpu cortex-m33
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32h5xx_hal_pwr_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_PWREx_ConfigSupply,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_PWREx_ConfigSupply
  20              		.arch armv8-m.main
  21              		.arch_extension dsp
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	HAL_PWREx_ConfigSupply:
  28              	.LVL0:
  29              	.LFB361:
  30              		.file 1 "Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c"
   1:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
   2:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   ******************************************************************************
   3:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @file    stm32h5xx_hal_pwr_ex.c
   4:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief   Extended PWR HAL module driver.
   6:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *          functionalities of the Power Controller extension peripheral :
   8:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *           + Power Supply Control Functions
   9:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *           + Voltage Monitoring Functions
  10:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *           + Wakeup Pins configuration Functions
  11:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *           + Memories Retention Functions
  12:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *           + IO and JTAG Retention Functions
  13:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   ******************************************************************************
  14:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @attention
  15:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *
  16:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * Copyright (c) 2023 STMicroelectronics.
  17:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * All rights reserved.
  18:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *
  19:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * in the root directory of this software component.
  21:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *
  23:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   ******************************************************************************
  24:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
  25:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
  26:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /* Includes ------------------------------------------------------------------*/
  27:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** #include "stm32h5xx_hal.h"
  28:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/cc9o9g6Q.s 			page 2


  29:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /** @addtogroup STM32H5xx_HAL_Driver
  30:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @{
  31:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
  32:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
  33:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /** @defgroup PWREx PWREx
  34:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief    PWR Extended HAL module driver
  35:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @{
  36:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
  37:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
  38:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** #if defined (HAL_PWR_MODULE_ENABLED)
  39:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
  40:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /* Private typedef -----------------------------------------------------------*/
  41:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /* Private define ------------------------------------------------------------*/
  42:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
  43:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /** @defgroup PWR_Extended_Private_Defines PWR Extended Private Defines
  44:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @{
  45:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
  46:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /* PORTI pins mask */
  47:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** #define PWR_PORTI_AVAILABLE_PINS  (0xFFU)
  48:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /*!< Time out value of flags setting */
  49:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** #define PWR_FLAG_SETTING_DELAY    (0x32U)
  50:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
  51:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /** @defgroup PWR_PVM_Mode_Mask PWR PVM Mode Mask
  52:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @{
  53:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
  54:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** #define PVM_RISING_EDGE  (0x01U)  /*!< Mask for rising edge set as PVM trigger                     
  55:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** #define PVM_FALLING_EDGE (0x02U)  /*!< Mask for falling edge set as PVM trigger                    
  56:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** #define PVM_MODE_IT      (0x04U)  /*!< Mask for interruption yielded by PVM threshold crossing     
  57:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** #define PVM_MODE_EVT     (0x08U)  /*!< Mask for event yielded by PVM threshold crossing            
  58:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
  59:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @}
  60:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
  61:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
  62:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /** @defgroup PWREx_WakeUp_Pins_Offsets PWREx Wake-Up Pins offsets
  63:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @{
  64:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
  65:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
  66:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /* Wake-Up Pins PWR Pin Pull shift offsets */
  67:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** #define PWR_WAKEUP_PINS_PULL_SHIFT_OFFSET (2U)
  68:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
  69:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
  70:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @}
  71:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
  72:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
  73:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
  74:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @}
  75:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
  76:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
  77:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /* Private macro -------------------------------------------------------------*/
  78:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /* Private variables ---------------------------------------------------------*/
  79:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /* Private function prototypes -----------------------------------------------*/
  80:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /* Exported functions --------------------------------------------------------*/
  81:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
  82:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions PWR Extended Exported Functions
  83:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @{
  84:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
  85:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/cc9o9g6Q.s 			page 3


  86:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group1 Power Supply Control Functions
  87:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief    Power supply control functions
  88:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *
  89:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** @verbatim
  90:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****  ===============================================================================
  91:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****                   ##### Power supply control functions #####
  92:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****  ===============================================================================
  93:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     [..]
  94:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** @endverbatim
  95:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @{
  96:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
  97:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
  98:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
  99:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Configure the system Power Supply.
 100:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @param  SupplySource : Specifies the Power Supply source to set after a
 101:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                        system startup.
 102:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values :
 103:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_EXTERNAL_SOURCE_SUPPLY : The SMPS and the LDO are
 104:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                                              Bypassed. The Vcore Power
 105:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                                              Domains are supplied from
 106:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                                              external source.
 107:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval HAL status.
 108:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 109:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ConfigSupply(uint32_t SupplySource)
 110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
  31              		.loc 1 110 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
 111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   uint32_t tickstart;
  35              		.loc 1 111 3 view .LVU1
 112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Check the parameters */
 114:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   assert_param(IS_PWR_SUPPLY(SupplySource));
  36              		.loc 1 114 3 view .LVU2
 115:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 116:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   if ((PWR->SCCR & PWR_SCCR_BYPASS) != (PWR_SCCR_BYPASS))
  37              		.loc 1 116 3 view .LVU3
  38              		.loc 1 116 11 is_stmt 0 view .LVU4
  39 0000 104B     		ldr	r3, .L13
  40 0002 1B6B     		ldr	r3, [r3, #48]
  41              		.loc 1 116 6 view .LVU5
  42 0004 13F0010F 		tst	r3, #1
  43 0008 01D0     		beq	.L11
 117:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   {
 118:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     /* Set the power supply configuration */
 119:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     MODIFY_REG(PWR->SCCR, PWR_SUPPLY_CONFIG_MASK, SupplySource);
 120:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 121:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     /* Get tick */
 122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     tickstart = HAL_GetTick();
 123:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 124:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     /* Wait till voltage level flag is set */
 125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     while (__HAL_PWR_GET_FLAG(PWR_FLAG_ACTVOSRDY) == 0U)
 126:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     {
 127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       if ((HAL_GetTick() - tickstart) > PWR_FLAG_SETTING_DELAY)
 128:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       {
 129:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****         return HAL_ERROR;
ARM GAS  /tmp/cc9o9g6Q.s 			page 4


 130:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       }
 131:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     }
 132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   }
 133:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 134:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   return HAL_OK;
  44              		.loc 1 134 10 view .LVU6
  45 000a 0020     		movs	r0, #0
  46              	.LVL1:
 135:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
  47              		.loc 1 135 1 view .LVU7
  48 000c 7047     		bx	lr
  49              	.LVL2:
  50              	.L11:
 110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   uint32_t tickstart;
  51              		.loc 1 110 1 view .LVU8
  52 000e 10B5     		push	{r4, lr}
  53              	.LCFI0:
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 4, -8
  56              		.cfi_offset 14, -4
 119:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
  57              		.loc 1 119 5 is_stmt 1 view .LVU9
  58 0010 0C4A     		ldr	r2, .L13
  59 0012 136B     		ldr	r3, [r2, #48]
  60 0014 23F48073 		bic	r3, r3, #256
  61 0018 23F00103 		bic	r3, r3, #1
  62 001c 1843     		orrs	r0, r0, r3
  63              	.LVL3:
 119:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
  64              		.loc 1 119 5 is_stmt 0 view .LVU10
  65 001e 1063     		str	r0, [r2, #48]
 122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
  66              		.loc 1 122 5 is_stmt 1 view .LVU11
 122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
  67              		.loc 1 122 17 is_stmt 0 view .LVU12
  68 0020 FFF7FEFF 		bl	HAL_GetTick
  69              	.LVL4:
  70 0024 0446     		mov	r4, r0
  71              	.LVL5:
 125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     {
  72              		.loc 1 125 5 is_stmt 1 view .LVU13
  73              	.L3:
 125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     {
  74              		.loc 1 125 11 view .LVU14
 125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     {
  75              		.loc 1 125 12 is_stmt 0 view .LVU15
  76 0026 074B     		ldr	r3, .L13
  77 0028 5B69     		ldr	r3, [r3, #20]
 125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     {
  78              		.loc 1 125 11 view .LVU16
  79 002a 13F4005F 		tst	r3, #8192
  80 002e 06D1     		bne	.L12
 127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       {
  81              		.loc 1 127 7 is_stmt 1 view .LVU17
 127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       {
  82              		.loc 1 127 12 is_stmt 0 view .LVU18
  83 0030 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cc9o9g6Q.s 			page 5


  84              	.LVL6:
 127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       {
  85              		.loc 1 127 26 view .LVU19
  86 0034 001B     		subs	r0, r0, r4
 127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       {
  87              		.loc 1 127 10 view .LVU20
  88 0036 3228     		cmp	r0, #50
  89 0038 F5D9     		bls	.L3
 129:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       }
  90              		.loc 1 129 16 view .LVU21
  91 003a 0120     		movs	r0, #1
  92 003c 00E0     		b	.L2
  93              	.L12:
 134:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
  94              		.loc 1 134 10 view .LVU22
  95 003e 0020     		movs	r0, #0
  96              	.L2:
  97              		.loc 1 135 1 view .LVU23
  98 0040 10BD     		pop	{r4, pc}
  99              	.LVL7:
 100              	.L14:
 101              		.loc 1 135 1 view .LVU24
 102 0042 00BF     		.align	2
 103              	.L13:
 104 0044 00080244 		.word	1140983808
 105              		.cfi_endproc
 106              	.LFE361:
 108              		.section	.text.HAL_PWREx_GetSupplyConfig,"ax",%progbits
 109              		.align	1
 110              		.global	HAL_PWREx_GetSupplyConfig
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv4-sp-d16
 116              	HAL_PWREx_GetSupplyConfig:
 117              	.LFB362:
 136:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 137:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 138:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Get the power supply configuration.
 139:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval The supply configuration.
 140:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** uint32_t HAL_PWREx_GetSupplyConfig(void)
 142:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 118              		.loc 1 142 1 is_stmt 1 view -0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 143:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   return (PWR->SCCR & PWR_SUPPLY_CONFIG_MASK);
 123              		.loc 1 143 3 view .LVU26
 124              		.loc 1 143 14 is_stmt 0 view .LVU27
 125 0000 034B     		ldr	r3, .L16
 126 0002 186B     		ldr	r0, [r3, #48]
 144:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 127              		.loc 1 144 1 view .LVU28
 128 0004 20F0FE00 		bic	r0, r0, #254
 129 0008 C005     		lsls	r0, r0, #23
ARM GAS  /tmp/cc9o9g6Q.s 			page 6


 130 000a C00D     		lsrs	r0, r0, #23
 131 000c 7047     		bx	lr
 132              	.L17:
 133 000e 00BF     		.align	2
 134              	.L16:
 135 0010 00080244 		.word	1140983808
 136              		.cfi_endproc
 137              	.LFE362:
 139              		.section	.text.HAL_PWREx_ControlVoltageScaling,"ax",%progbits
 140              		.align	1
 141              		.global	HAL_PWREx_ControlVoltageScaling
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	HAL_PWREx_ControlVoltageScaling:
 148              	.LVL8:
 149              	.LFB363:
 145:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 146:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 147:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Configure the main internal regulator output voltage.
 148:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @param  VoltageScaling : Specifies the regulator output voltage to achieve
 149:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                          a tradeoff between performance and power
 150:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                          consumption.
 151:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values :
 152:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE0 : Regulator voltage output
 153:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                                                Scale 0 mode.
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE1 : Regulator voltage output
 155:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                                                range 1 mode.
 156:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE2 : Regulator voltage output
 157:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                                                range 2 mode.
 158:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE3 : Regulator voltage output
 159:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                                                range 3 mode.
 160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval HAL Status
 161:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 162:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
 163:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 150              		.loc 1 163 1 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		.loc 1 163 1 is_stmt 0 view .LVU30
 155 0000 38B5     		push	{r3, r4, r5, lr}
 156              	.LCFI1:
 157              		.cfi_def_cfa_offset 16
 158              		.cfi_offset 3, -16
 159              		.cfi_offset 4, -12
 160              		.cfi_offset 5, -8
 161              		.cfi_offset 14, -4
 162 0002 0546     		mov	r5, r0
 164:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   uint32_t tickstart = HAL_GetTick();
 163              		.loc 1 164 3 is_stmt 1 view .LVU31
 164              		.loc 1 164 24 is_stmt 0 view .LVU32
 165 0004 FFF7FEFF 		bl	HAL_GetTick
 166              	.LVL9:
 165:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 166:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Check the parameters */
ARM GAS  /tmp/cc9o9g6Q.s 			page 7


 167:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));
 167              		.loc 1 167 3 is_stmt 1 view .LVU33
 168:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 169:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Get the voltage scaling  */
 170:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   if ((PWR->VOSSR & PWR_VOSSR_ACTVOS) == (VoltageScaling << 10U))
 168              		.loc 1 170 3 view .LVU34
 169              		.loc 1 170 11 is_stmt 0 view .LVU35
 170 0008 0E4B     		ldr	r3, .L26
 171 000a 5B69     		ldr	r3, [r3, #20]
 172              		.loc 1 170 19 view .LVU36
 173 000c 03F44043 		and	r3, r3, #49152
 174              		.loc 1 170 6 view .LVU37
 175 0010 B3EB852F 		cmp	r3, r5, lsl #10
 176 0014 14D0     		beq	.L22
 177 0016 0446     		mov	r4, r0
 171:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   {
 172:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     /* Old and new voltage scaling configuration match : nothing to do */
 173:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     return HAL_OK;
 174:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   }
 175:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 176:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Set the voltage range */
 177:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->VOSCR, PWR_VOSCR_VOS, VoltageScaling);
 178              		.loc 1 177 3 is_stmt 1 view .LVU38
 179 0018 0A4B     		ldr	r3, .L26
 180 001a 1869     		ldr	r0, [r3, #16]
 181              	.LVL10:
 182              		.loc 1 177 3 is_stmt 0 view .LVU39
 183 001c 20F03000 		bic	r0, r0, #48
 184 0020 0543     		orrs	r5, r5, r0
 185              	.LVL11:
 186              		.loc 1 177 3 view .LVU40
 187 0022 1D61     		str	r5, [r3, #16]
 178:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 179:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Wait till voltage level flag is set */
 180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   while (__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY) == 0U)
 188              		.loc 1 180 3 is_stmt 1 view .LVU41
 189              	.L20:
 190              		.loc 1 180 9 view .LVU42
 191              		.loc 1 180 10 is_stmt 0 view .LVU43
 192 0024 074B     		ldr	r3, .L26
 193 0026 5B69     		ldr	r3, [r3, #20]
 194              		.loc 1 180 9 view .LVU44
 195 0028 13F0080F 		tst	r3, #8
 196 002c 06D1     		bne	.L25
 181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   {
 182:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     if ((HAL_GetTick() - tickstart) > PWR_FLAG_SETTING_DELAY)
 197              		.loc 1 182 5 is_stmt 1 view .LVU45
 198              		.loc 1 182 10 is_stmt 0 view .LVU46
 199 002e FFF7FEFF 		bl	HAL_GetTick
 200              	.LVL12:
 201              		.loc 1 182 24 view .LVU47
 202 0032 001B     		subs	r0, r0, r4
 203              		.loc 1 182 8 view .LVU48
 204 0034 3228     		cmp	r0, #50
 205 0036 F5D9     		bls	.L20
 183:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     {
 184:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       return HAL_ERROR;
ARM GAS  /tmp/cc9o9g6Q.s 			page 8


 206              		.loc 1 184 14 view .LVU49
 207 0038 0120     		movs	r0, #1
 208 003a 00E0     		b	.L19
 209              	.L25:
 185:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     }
 186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   }
 187:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 188:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   return HAL_OK;
 210              		.loc 1 188 10 view .LVU50
 211 003c 0020     		movs	r0, #0
 212              	.LVL13:
 213              	.L19:
 189:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 214              		.loc 1 189 1 view .LVU51
 215 003e 38BD     		pop	{r3, r4, r5, pc}
 216              	.LVL14:
 217              	.L22:
 173:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   }
 218              		.loc 1 173 12 view .LVU52
 219 0040 0020     		movs	r0, #0
 220              	.LVL15:
 173:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   }
 221              		.loc 1 173 12 view .LVU53
 222 0042 FCE7     		b	.L19
 223              	.L27:
 224              		.align	2
 225              	.L26:
 226 0044 00080244 		.word	1140983808
 227              		.cfi_endproc
 228              	.LFE363:
 230              		.section	.text.HAL_PWREx_GetVoltageRange,"ax",%progbits
 231              		.align	1
 232              		.global	HAL_PWREx_GetVoltageRange
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 236              		.fpu fpv4-sp-d16
 238              	HAL_PWREx_GetVoltageRange:
 239              	.LFB364:
 190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 191:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 192:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Get the main internal regulator output voltage. Reflecting the last
 193:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *        VOS value applied to the PMU.
 194:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval The current applied VOS selection.
 195:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 196:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** uint32_t HAL_PWREx_GetVoltageRange(void)
 197:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 240              		.loc 1 197 1 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              		@ link register save eliminated.
 198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Get the active voltage scaling */
 199:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   return (PWR->VOSSR & PWR_VOSSR_ACTVOS);
 245              		.loc 1 199 3 view .LVU55
 246              		.loc 1 199 14 is_stmt 0 view .LVU56
 247 0000 024B     		ldr	r3, .L29
ARM GAS  /tmp/cc9o9g6Q.s 			page 9


 248 0002 5869     		ldr	r0, [r3, #20]
 200:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 249              		.loc 1 200 1 view .LVU57
 250 0004 00F44040 		and	r0, r0, #49152
 251 0008 7047     		bx	lr
 252              	.L30:
 253 000a 00BF     		.align	2
 254              	.L29:
 255 000c 00080244 		.word	1140983808
 256              		.cfi_endproc
 257              	.LFE364:
 259              		.section	.text.HAL_PWREx_ControlStopModeVoltageScaling,"ax",%progbits
 260              		.align	1
 261              		.global	HAL_PWREx_ControlStopModeVoltageScaling
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	HAL_PWREx_ControlStopModeVoltageScaling:
 268              	.LVL16:
 269              	.LFB365:
 201:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 202:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 203:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Configure the main internal regulator output voltage in STOP mode.
 204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @param  VoltageScaling : Specifies the regulator output voltage when the
 205:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         system enters Stop mode to achieve a tradeoff between performance
 206:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         and power consumption.
 207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 208:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_SVOS_SCALE3 : Regulator voltage output range
 209:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                                             3 mode.
 210:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_SVOS_SCALE4 : Regulator voltage output range
 211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                                             4 mode.
 212:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_SVOS_SCALE5 : Regulator voltage output range
 213:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                                             5 mode.
 214:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   The Stop mode voltage scaling for SVOS4 and SVOS5 sets the voltage
 215:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         regulator in Low-power (LP) mode to further reduce power consumption.
 216:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         When preselecting SVOS3, the use of the voltage regulator low-power
 217:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         mode (LP) can be selected by LPDS register bit.
 218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   The selected SVOS4 and SVOS5 levels add an additional startup delay
 219:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         when exiting from system Stop mode.
 220:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval HAL Status.
 221:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 222:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ControlStopModeVoltageScaling(uint32_t VoltageScaling)
 223:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 270              		.loc 1 223 1 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 224:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Check the parameters */
 225:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_MODE_REGULATOR_VOLTAGE(VoltageScaling));
 275              		.loc 1 225 3 view .LVU59
 226:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 227:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Return the stop mode voltage range */
 228:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->PMCR, PWR_PMCR_SVOS, VoltageScaling);
 276              		.loc 1 228 3 view .LVU60
 277 0000 034A     		ldr	r2, .L32
ARM GAS  /tmp/cc9o9g6Q.s 			page 10


 278 0002 1368     		ldr	r3, [r2]
 279 0004 23F00C03 		bic	r3, r3, #12
 280 0008 0343     		orrs	r3, r3, r0
 281 000a 1360     		str	r3, [r2]
 229:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 230:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   return HAL_OK;
 282              		.loc 1 230 3 view .LVU61
 231:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 283              		.loc 1 231 1 is_stmt 0 view .LVU62
 284 000c 0020     		movs	r0, #0
 285              	.LVL17:
 286              		.loc 1 231 1 view .LVU63
 287 000e 7047     		bx	lr
 288              	.L33:
 289              		.align	2
 290              	.L32:
 291 0010 00080244 		.word	1140983808
 292              		.cfi_endproc
 293              	.LFE365:
 295              		.section	.text.HAL_PWREx_GetStopModeVoltageRange,"ax",%progbits
 296              		.align	1
 297              		.global	HAL_PWREx_GetStopModeVoltageRange
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 301              		.fpu fpv4-sp-d16
 303              	HAL_PWREx_GetStopModeVoltageRange:
 304              	.LFB366:
 232:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 233:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 234:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Get the main internal regulator output voltage in STOP mode.
 235:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval The actual applied VOS selection.
 236:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 237:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** uint32_t HAL_PWREx_GetStopModeVoltageRange(void)
 238:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 305              		.loc 1 238 1 is_stmt 1 view -0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 239:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Return the stop voltage scaling */
 240:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   return (PWR->PMCR & PWR_PMCR_SVOS);
 310              		.loc 1 240 3 view .LVU65
 311              		.loc 1 240 14 is_stmt 0 view .LVU66
 312 0000 024B     		ldr	r3, .L35
 313 0002 1868     		ldr	r0, [r3]
 241:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 314              		.loc 1 241 1 view .LVU67
 315 0004 00F00C00 		and	r0, r0, #12
 316 0008 7047     		bx	lr
 317              	.L36:
 318 000a 00BF     		.align	2
 319              	.L35:
 320 000c 00080244 		.word	1140983808
 321              		.cfi_endproc
 322              	.LFE366:
 324              		.section	.text.HAL_PWREx_ConfigAVD,"ax",%progbits
ARM GAS  /tmp/cc9o9g6Q.s 			page 11


 325              		.align	1
 326              		.global	HAL_PWREx_ConfigAVD
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 330              		.fpu fpv4-sp-d16
 332              	HAL_PWREx_ConfigAVD:
 333              	.LVL18:
 334              	.LFB367:
 242:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 243:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @}
 244:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 245:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 246:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group2 Voltage Monitoring Functions
 247:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief    Voltage monitoring functions
 248:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *
 249:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** @verbatim
 250:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****  ===============================================================================
 251:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****                      ##### Voltage Monitoring Functions #####
 252:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****  ===============================================================================
 253:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     [..]
 254:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** @endverbatim
 255:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @{
 256:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 257:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 258:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 259:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief  Configure the event mode and the voltage threshold detected by the
 260:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         Analog Voltage Detector (AVD).
 261:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @param  sConfigAVD : Pointer to an PWREx_AVDTypeDef structure that contains
 262:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                      the configuration information for the AVD.
 263:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   Refer to the electrical characteristics of your device datasheet for
 264:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         more details about the voltage threshold corresponding to each
 265:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         detection level.
 266:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 267:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 268:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_ConfigAVD(const PWREx_AVDTypeDef *sConfigAVD)
 269:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 335              		.loc 1 269 1 is_stmt 1 view -0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              		@ link register save eliminated.
 270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Check the parameters */
 271:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   assert_param(IS_PWR_AVD_LEVEL(sConfigAVD->AVDLevel));
 340              		.loc 1 271 3 view .LVU69
 272:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   assert_param(IS_PWR_AVD_MODE(sConfigAVD->Mode));
 341              		.loc 1 272 3 view .LVU70
 273:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 274:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Set the ALS[10:9] bits according to AVDLevel value */
 275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->VMCR, PWR_VMCR_ALS, sConfigAVD->AVDLevel);
 342              		.loc 1 275 3 view .LVU71
 343 0000 224A     		ldr	r2, .L42
 344 0002 536B     		ldr	r3, [r2, #52]
 345 0004 23F4C063 		bic	r3, r3, #1536
 346 0008 0168     		ldr	r1, [r0]
 347 000a 0B43     		orrs	r3, r3, r1
 348 000c 5363     		str	r3, [r2, #52]
ARM GAS  /tmp/cc9o9g6Q.s 			page 12


 276:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 277:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Clear any previous config */
 278:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   __HAL_PWR_AVD_EXTI_DISABLE_EVENT();
 349              		.loc 1 278 3 view .LVU72
 350 000e 204B     		ldr	r3, .L42+4
 351 0010 D3F88420 		ldr	r2, [r3, #132]
 352 0014 22F48032 		bic	r2, r2, #65536
 353 0018 C3F88420 		str	r2, [r3, #132]
 279:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   __HAL_PWR_AVD_EXTI_DISABLE_IT();
 354              		.loc 1 279 3 view .LVU73
 355 001c D3F88020 		ldr	r2, [r3, #128]
 356 0020 22F48032 		bic	r2, r2, #65536
 357 0024 C3F88020 		str	r2, [r3, #128]
 280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   __HAL_PWR_AVD_EXTI_DISABLE_RISING_EDGE();
 358              		.loc 1 280 3 view .LVU74
 359 0028 1A68     		ldr	r2, [r3]
 360 002a 22F48032 		bic	r2, r2, #65536
 361 002e 1A60     		str	r2, [r3]
 281:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   __HAL_PWR_AVD_EXTI_DISABLE_FALLING_EDGE();
 362              		.loc 1 281 3 view .LVU75
 363 0030 5A68     		ldr	r2, [r3, #4]
 364 0032 22F48032 		bic	r2, r2, #65536
 365 0036 5A60     		str	r2, [r3, #4]
 282:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 283:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Configure the interrupt mode */
 284:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   if ((sConfigAVD->Mode & AVD_MODE_IT) == AVD_MODE_IT)
 366              		.loc 1 284 3 view .LVU76
 367              		.loc 1 284 18 is_stmt 0 view .LVU77
 368 0038 4368     		ldr	r3, [r0, #4]
 369              		.loc 1 284 6 view .LVU78
 370 003a 13F4803F 		tst	r3, #65536
 371 003e 06D0     		beq	.L38
 285:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   {
 286:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     __HAL_PWR_AVD_EXTI_ENABLE_IT();
 372              		.loc 1 286 5 is_stmt 1 view .LVU79
 373 0040 134A     		ldr	r2, .L42+4
 374 0042 D2F88030 		ldr	r3, [r2, #128]
 375 0046 43F48033 		orr	r3, r3, #65536
 376 004a C2F88030 		str	r3, [r2, #128]
 377              	.L38:
 287:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   }
 288:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 289:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Configure the event mode */
 290:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   if ((sConfigAVD->Mode & AVD_MODE_EVT) == AVD_MODE_EVT)
 378              		.loc 1 290 3 view .LVU80
 379              		.loc 1 290 18 is_stmt 0 view .LVU81
 380 004e 4368     		ldr	r3, [r0, #4]
 381              		.loc 1 290 6 view .LVU82
 382 0050 13F4003F 		tst	r3, #131072
 383 0054 06D0     		beq	.L39
 291:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   {
 292:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     __HAL_PWR_AVD_EXTI_ENABLE_EVENT();
 384              		.loc 1 292 5 is_stmt 1 view .LVU83
 385 0056 0E4A     		ldr	r2, .L42+4
 386 0058 D2F88430 		ldr	r3, [r2, #132]
 387 005c 43F48033 		orr	r3, r3, #65536
 388 0060 C2F88430 		str	r3, [r2, #132]
ARM GAS  /tmp/cc9o9g6Q.s 			page 13


 389              	.L39:
 293:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   }
 294:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 295:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Rising edge configuration */
 296:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   if ((sConfigAVD->Mode & AVD_RISING_EDGE) == AVD_RISING_EDGE)
 390              		.loc 1 296 3 view .LVU84
 391              		.loc 1 296 18 is_stmt 0 view .LVU85
 392 0064 4368     		ldr	r3, [r0, #4]
 393              		.loc 1 296 6 view .LVU86
 394 0066 13F0010F 		tst	r3, #1
 395 006a 04D0     		beq	.L40
 297:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   {
 298:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     __HAL_PWR_AVD_EXTI_ENABLE_RISING_EDGE();
 396              		.loc 1 298 5 is_stmt 1 view .LVU87
 397 006c 084A     		ldr	r2, .L42+4
 398 006e 1368     		ldr	r3, [r2]
 399 0070 43F48033 		orr	r3, r3, #65536
 400 0074 1360     		str	r3, [r2]
 401              	.L40:
 299:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   }
 300:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 301:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Falling edge configuration */
 302:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   if ((sConfigAVD->Mode & AVD_FALLING_EDGE) == AVD_FALLING_EDGE)
 402              		.loc 1 302 3 view .LVU88
 403              		.loc 1 302 18 is_stmt 0 view .LVU89
 404 0076 4368     		ldr	r3, [r0, #4]
 405              		.loc 1 302 6 view .LVU90
 406 0078 13F0020F 		tst	r3, #2
 407 007c 04D0     		beq	.L37
 303:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   {
 304:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     __HAL_PWR_AVD_EXTI_ENABLE_FALLING_EDGE();
 408              		.loc 1 304 5 is_stmt 1 view .LVU91
 409 007e 044A     		ldr	r2, .L42+4
 410 0080 5368     		ldr	r3, [r2, #4]
 411 0082 43F48033 		orr	r3, r3, #65536
 412 0086 5360     		str	r3, [r2, #4]
 413              	.L37:
 305:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   }
 306:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 414              		.loc 1 306 1 is_stmt 0 view .LVU92
 415 0088 7047     		bx	lr
 416              	.L43:
 417 008a 00BF     		.align	2
 418              	.L42:
 419 008c 00080244 		.word	1140983808
 420 0090 00200244 		.word	1140989952
 421              		.cfi_endproc
 422              	.LFE367:
 424              		.section	.text.HAL_PWREx_EnableAVD,"ax",%progbits
 425              		.align	1
 426              		.global	HAL_PWREx_EnableAVD
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 430              		.fpu fpv4-sp-d16
 432              	HAL_PWREx_EnableAVD:
 433              	.LFB368:
ARM GAS  /tmp/cc9o9g6Q.s 			page 14


 307:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 308:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 309:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Enable the Analog Voltage Detector (AVD).
 310:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 311:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 312:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_EnableAVD(void)
 313:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 434              		.loc 1 313 1 is_stmt 1 view -0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 314:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Enable the Analog Voltage Detector */
 315:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   SET_BIT(PWR->VMCR, PWR_VMCR_AVDEN);
 439              		.loc 1 315 3 view .LVU94
 440 0000 024A     		ldr	r2, .L45
 441 0002 536B     		ldr	r3, [r2, #52]
 442 0004 43F48073 		orr	r3, r3, #256
 443 0008 5363     		str	r3, [r2, #52]
 316:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 444              		.loc 1 316 1 is_stmt 0 view .LVU95
 445 000a 7047     		bx	lr
 446              	.L46:
 447              		.align	2
 448              	.L45:
 449 000c 00080244 		.word	1140983808
 450              		.cfi_endproc
 451              	.LFE368:
 453              		.section	.text.HAL_PWREx_DisableAVD,"ax",%progbits
 454              		.align	1
 455              		.global	HAL_PWREx_DisableAVD
 456              		.syntax unified
 457              		.thumb
 458              		.thumb_func
 459              		.fpu fpv4-sp-d16
 461              	HAL_PWREx_DisableAVD:
 462              	.LFB369:
 317:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 318:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 319:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Disable the Analog Voltage Detector(AVD).
 320:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 321:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 322:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_DisableAVD(void)
 323:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 463              		.loc 1 323 1 is_stmt 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 324:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Disable the Analog Voltage Detector */
 325:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->VMCR, PWR_VMCR_AVDEN);
 468              		.loc 1 325 3 view .LVU97
 469 0000 024A     		ldr	r2, .L48
 470 0002 536B     		ldr	r3, [r2, #52]
 471 0004 23F48073 		bic	r3, r3, #256
 472 0008 5363     		str	r3, [r2, #52]
 326:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
ARM GAS  /tmp/cc9o9g6Q.s 			page 15


 473              		.loc 1 326 1 is_stmt 0 view .LVU98
 474 000a 7047     		bx	lr
 475              	.L49:
 476              		.align	2
 477              	.L48:
 478 000c 00080244 		.word	1140983808
 479              		.cfi_endproc
 480              	.LFE369:
 482              		.section	.text.HAL_PWREx_EnableUSBVoltageDetector,"ax",%progbits
 483              		.align	1
 484              		.global	HAL_PWREx_EnableUSBVoltageDetector
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 488              		.fpu fpv4-sp-d16
 490              	HAL_PWREx_EnableUSBVoltageDetector:
 491              	.LFB370:
 327:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 328:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** #if defined (PWR_USBSCR_USB33DEN)
 329:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 330:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Enable the USB voltage level detector.
 331:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 332:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 333:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_EnableUSBVoltageDetector(void)
 334:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 492              		.loc 1 334 1 is_stmt 1 view -0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              		@ link register save eliminated.
 335:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Enable the USB voltage detector */
 336:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   SET_BIT(PWR->USBSCR, PWR_USBSCR_USB33DEN);
 497              		.loc 1 336 3 view .LVU100
 498 0000 024A     		ldr	r2, .L51
 499 0002 936B     		ldr	r3, [r2, #56]
 500 0004 43F08073 		orr	r3, r3, #16777216
 501 0008 9363     		str	r3, [r2, #56]
 337:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 502              		.loc 1 337 1 is_stmt 0 view .LVU101
 503 000a 7047     		bx	lr
 504              	.L52:
 505              		.align	2
 506              	.L51:
 507 000c 00080244 		.word	1140983808
 508              		.cfi_endproc
 509              	.LFE370:
 511              		.section	.text.HAL_PWREx_DisableUSBVoltageDetector,"ax",%progbits
 512              		.align	1
 513              		.global	HAL_PWREx_DisableUSBVoltageDetector
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 517              		.fpu fpv4-sp-d16
 519              	HAL_PWREx_DisableUSBVoltageDetector:
 520              	.LFB371:
 338:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 339:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
ARM GAS  /tmp/cc9o9g6Q.s 			page 16


 340:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Disable the USB voltage level detector.
 341:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 342:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 343:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_DisableUSBVoltageDetector(void)
 344:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 521              		.loc 1 344 1 is_stmt 1 view -0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 345:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Disable the USB voltage detector */
 346:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->USBSCR, PWR_USBSCR_USB33DEN);
 526              		.loc 1 346 3 view .LVU103
 527 0000 024A     		ldr	r2, .L54
 528 0002 936B     		ldr	r3, [r2, #56]
 529 0004 23F08073 		bic	r3, r3, #16777216
 530 0008 9363     		str	r3, [r2, #56]
 347:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 531              		.loc 1 347 1 is_stmt 0 view .LVU104
 532 000a 7047     		bx	lr
 533              	.L55:
 534              		.align	2
 535              	.L54:
 536 000c 00080244 		.word	1140983808
 537              		.cfi_endproc
 538              	.LFE371:
 540              		.section	.text.HAL_PWREx_EnableVddUSB,"ax",%progbits
 541              		.align	1
 542              		.global	HAL_PWREx_EnableVddUSB
 543              		.syntax unified
 544              		.thumb
 545              		.thumb_func
 546              		.fpu fpv4-sp-d16
 548              	HAL_PWREx_EnableVddUSB:
 549              	.LFB372:
 348:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 349:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 350:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief  Enable VDDUSB supply.
 351:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   Remove VDDUSB electrical and logical isolation, once VDDUSB supply
 352:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         is present for consumption saving.
 353:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 354:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 355:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_EnableVddUSB(void)
 356:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 550              		.loc 1 356 1 is_stmt 1 view -0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              		@ link register save eliminated.
 357:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   SET_BIT(PWR->USBSCR, PWR_USBSCR_USB33SV);
 555              		.loc 1 357 3 view .LVU106
 556 0000 024A     		ldr	r2, .L57
 557 0002 936B     		ldr	r3, [r2, #56]
 558 0004 43F00073 		orr	r3, r3, #33554432
 559 0008 9363     		str	r3, [r2, #56]
 358:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 560              		.loc 1 358 1 is_stmt 0 view .LVU107
ARM GAS  /tmp/cc9o9g6Q.s 			page 17


 561 000a 7047     		bx	lr
 562              	.L58:
 563              		.align	2
 564              	.L57:
 565 000c 00080244 		.word	1140983808
 566              		.cfi_endproc
 567              	.LFE372:
 569              		.section	.text.HAL_PWREx_DisableVddUSB,"ax",%progbits
 570              		.align	1
 571              		.global	HAL_PWREx_DisableVddUSB
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
 575              		.fpu fpv4-sp-d16
 577              	HAL_PWREx_DisableVddUSB:
 578              	.LFB373:
 359:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 360:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 361:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief  Disable VDDUSB supply.
 362:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 363:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 364:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_DisableVddUSB(void)
 365:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 579              		.loc 1 365 1 is_stmt 1 view -0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              		@ link register save eliminated.
 366:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->USBSCR, PWR_USBSCR_USB33SV);
 584              		.loc 1 366 3 view .LVU109
 585 0000 024A     		ldr	r2, .L60
 586 0002 936B     		ldr	r3, [r2, #56]
 587 0004 23F00073 		bic	r3, r3, #33554432
 588 0008 9363     		str	r3, [r2, #56]
 367:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 589              		.loc 1 367 1 is_stmt 0 view .LVU110
 590 000a 7047     		bx	lr
 591              	.L61:
 592              		.align	2
 593              	.L60:
 594 000c 00080244 		.word	1140983808
 595              		.cfi_endproc
 596              	.LFE373:
 598              		.section	.text.HAL_PWREx_EnableMonitoring,"ax",%progbits
 599              		.align	1
 600              		.global	HAL_PWREx_EnableMonitoring
 601              		.syntax unified
 602              		.thumb
 603              		.thumb_func
 604              		.fpu fpv4-sp-d16
 606              	HAL_PWREx_EnableMonitoring:
 607              	.LFB374:
 368:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** #endif /* PWR_USBSCR_USB33DEN */
 369:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 370:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 371:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief  Enable the VBAT and temperature monitoring.
 372:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
ARM GAS  /tmp/cc9o9g6Q.s 			page 18


 373:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 374:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_EnableMonitoring(void)
 375:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 608              		.loc 1 375 1 is_stmt 1 view -0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 376:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   SET_BIT(PWR->BDCR, PWR_BDCR_MONEN);
 613              		.loc 1 376 3 view .LVU112
 614 0000 024A     		ldr	r2, .L63
 615 0002 136A     		ldr	r3, [r2, #32]
 616 0004 43F00203 		orr	r3, r3, #2
 617 0008 1362     		str	r3, [r2, #32]
 377:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 618              		.loc 1 377 1 is_stmt 0 view .LVU113
 619 000a 7047     		bx	lr
 620              	.L64:
 621              		.align	2
 622              	.L63:
 623 000c 00080244 		.word	1140983808
 624              		.cfi_endproc
 625              	.LFE374:
 627              		.section	.text.HAL_PWREx_DisableMonitoring,"ax",%progbits
 628              		.align	1
 629              		.global	HAL_PWREx_DisableMonitoring
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 633              		.fpu fpv4-sp-d16
 635              	HAL_PWREx_DisableMonitoring:
 636              	.LFB375:
 378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 379:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 380:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief  Disable the VBAT and temperature monitoring.
 381:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 382:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 383:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_DisableMonitoring(void)
 384:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 637              		.loc 1 384 1 is_stmt 1 view -0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              		@ link register save eliminated.
 385:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->BDCR, PWR_BDCR_MONEN);
 642              		.loc 1 385 3 view .LVU115
 643 0000 024A     		ldr	r2, .L66
 644 0002 136A     		ldr	r3, [r2, #32]
 645 0004 23F00203 		bic	r3, r3, #2
 646 0008 1362     		str	r3, [r2, #32]
 386:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 647              		.loc 1 386 1 is_stmt 0 view .LVU116
 648 000a 7047     		bx	lr
 649              	.L67:
 650              		.align	2
 651              	.L66:
 652 000c 00080244 		.word	1140983808
ARM GAS  /tmp/cc9o9g6Q.s 			page 19


 653              		.cfi_endproc
 654              	.LFE375:
 656              		.section	.text.HAL_PWREx_EnableUCPDStandbyMode,"ax",%progbits
 657              		.align	1
 658              		.global	HAL_PWREx_EnableUCPDStandbyMode
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 662              		.fpu fpv4-sp-d16
 664              	HAL_PWREx_EnableUCPDStandbyMode:
 665              	.LFB376:
 387:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 388:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** #if defined (PWR_UCPDR_UCPD_STBY)
 389:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 390:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief  Enable UCPD configuration memorization in Standby mode.
 391:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 392:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 393:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_EnableUCPDStandbyMode(void)
 394:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 666              		.loc 1 394 1 is_stmt 1 view -0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 395:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   SET_BIT(PWR->UCPDR, PWR_UCPDR_UCPD_STBY);
 671              		.loc 1 395 3 view .LVU118
 672 0000 024A     		ldr	r2, .L69
 673 0002 D36A     		ldr	r3, [r2, #44]
 674 0004 43F00203 		orr	r3, r3, #2
 675 0008 D362     		str	r3, [r2, #44]
 396:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 676              		.loc 1 396 1 is_stmt 0 view .LVU119
 677 000a 7047     		bx	lr
 678              	.L70:
 679              		.align	2
 680              	.L69:
 681 000c 00080244 		.word	1140983808
 682              		.cfi_endproc
 683              	.LFE376:
 685              		.section	.text.HAL_PWREx_DisableUCPDStandbyMode,"ax",%progbits
 686              		.align	1
 687              		.global	HAL_PWREx_DisableUCPDStandbyMode
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv4-sp-d16
 693              	HAL_PWREx_DisableUCPDStandbyMode:
 694              	.LFB377:
 397:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 398:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 399:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief  Disable UCPD configuration memorization in Standby mode.
 400:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   This function must be called on exiting the Standby mode and before
 401:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         any UCPD configuration update.
 402:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 403:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 404:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_DisableUCPDStandbyMode(void)
 405:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
ARM GAS  /tmp/cc9o9g6Q.s 			page 20


 695              		.loc 1 405 1 is_stmt 1 view -0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 406:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->UCPDR, PWR_UCPDR_UCPD_STBY);
 700              		.loc 1 406 3 view .LVU121
 701 0000 024A     		ldr	r2, .L72
 702 0002 D36A     		ldr	r3, [r2, #44]
 703 0004 23F00203 		bic	r3, r3, #2
 704 0008 D362     		str	r3, [r2, #44]
 407:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 705              		.loc 1 407 1 is_stmt 0 view .LVU122
 706 000a 7047     		bx	lr
 707              	.L73:
 708              		.align	2
 709              	.L72:
 710 000c 00080244 		.word	1140983808
 711              		.cfi_endproc
 712              	.LFE377:
 714              		.section	.text.HAL_PWREx_EnableUCPDDeadBattery,"ax",%progbits
 715              		.align	1
 716              		.global	HAL_PWREx_EnableUCPDDeadBattery
 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
 720              		.fpu fpv4-sp-d16
 722              	HAL_PWREx_EnableUCPDDeadBattery:
 723              	.LFB378:
 408:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** #endif /* PWR_UCPDR_UCPD_STBY */
 409:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 410:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** #if defined (PWR_UCPDR_UCPD_DBDIS)
 411:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 412:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief  Enable dead battery behavior.
 413:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   After exiting reset, the USB Type-C (dead battery) behavior is
 414:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         enabled, which may have a pull-down effect on CC1 and CC2 pins.
 415:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         It is recommended to disable it in all cases, either to stop this
 416:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         pull-down or to handover control to the UCPD (the UCPD must be
 417:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         initialized before doing the disable).
 418:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 419:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 420:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_EnableUCPDDeadBattery(void)
 421:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 724              		.loc 1 421 1 is_stmt 1 view -0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              		@ link register save eliminated.
 422:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->UCPDR, PWR_UCPDR_UCPD_DBDIS);
 729              		.loc 1 422 3 view .LVU124
 730 0000 024A     		ldr	r2, .L75
 731 0002 D36A     		ldr	r3, [r2, #44]
 732 0004 23F00103 		bic	r3, r3, #1
 733 0008 D362     		str	r3, [r2, #44]
 423:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 734              		.loc 1 423 1 is_stmt 0 view .LVU125
 735 000a 7047     		bx	lr
ARM GAS  /tmp/cc9o9g6Q.s 			page 21


 736              	.L76:
 737              		.align	2
 738              	.L75:
 739 000c 00080244 		.word	1140983808
 740              		.cfi_endproc
 741              	.LFE378:
 743              		.section	.text.HAL_PWREx_DisableUCPDDeadBattery,"ax",%progbits
 744              		.align	1
 745              		.global	HAL_PWREx_DisableUCPDDeadBattery
 746              		.syntax unified
 747              		.thumb
 748              		.thumb_func
 749              		.fpu fpv4-sp-d16
 751              	HAL_PWREx_DisableUCPDDeadBattery:
 752              	.LFB379:
 424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 425:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 426:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief  Disable dead battery behavior.
 427:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   After exiting reset, the USB Type-C (dead battery) behavior is
 428:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         enabled, which may have a pull-down effect on CC1 and CC2 pins.
 429:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         It is recommended to disable it in all cases, either to stop this
 430:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         pull-down or to handover control to the UCPD (the UCPD must be
 431:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         initialized before doing the disable).
 432:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 433:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 434:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_DisableUCPDDeadBattery(void)
 435:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 753              		.loc 1 435 1 is_stmt 1 view -0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 0, uses_anonymous_args = 0
 757              		@ link register save eliminated.
 436:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   SET_BIT(PWR->UCPDR, PWR_UCPDR_UCPD_DBDIS);
 758              		.loc 1 436 3 view .LVU127
 759 0000 024A     		ldr	r2, .L78
 760 0002 D36A     		ldr	r3, [r2, #44]
 761 0004 43F00103 		orr	r3, r3, #1
 762 0008 D362     		str	r3, [r2, #44]
 437:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 763              		.loc 1 437 1 is_stmt 0 view .LVU128
 764 000a 7047     		bx	lr
 765              	.L79:
 766              		.align	2
 767              	.L78:
 768 000c 00080244 		.word	1140983808
 769              		.cfi_endproc
 770              	.LFE379:
 772              		.section	.text.HAL_PWREx_EnableBatteryCharging,"ax",%progbits
 773              		.align	1
 774              		.global	HAL_PWREx_EnableBatteryCharging
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu fpv4-sp-d16
 780              	HAL_PWREx_EnableBatteryCharging:
 781              	.LVL19:
 782              	.LFB380:
ARM GAS  /tmp/cc9o9g6Q.s 			page 22


 438:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** #endif /* PWR_UCPDR_UCPD_DBDIS */
 439:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 440:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 441:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief  Enable the Battery charging.
 442:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   When VDD is present, charge the external battery through an internal
 443:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         resistor.
 444:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @param  ResistorValue : Specifies the charging resistor.
 445:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                         This parameter can be one of the following values :
 446:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                         @arg PWR_BATTERY_CHARGING_RESISTOR_5   : 5 KOhm resistor.
 447:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                         @arg PWR_BATTERY_CHARGING_RESISTOR_1_5 : 1.5 KOhm resistor.
 448:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 449:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 450:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_EnableBatteryCharging(uint32_t ResistorValue)
 451:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 783              		.loc 1 451 1 is_stmt 1 view -0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              		@ link register save eliminated.
 452:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Check the parameter */
 453:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   assert_param(IS_PWR_BATTERY_RESISTOR_SELECT(ResistorValue));
 788              		.loc 1 453 3 view .LVU130
 454:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 455:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Specify the charging resistor */
 456:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->BDCR, PWR_BDCR_VBRS, ResistorValue);
 789              		.loc 1 456 3 view .LVU131
 790 0000 054A     		ldr	r2, .L81
 791 0002 136A     		ldr	r3, [r2, #32]
 792 0004 23F40073 		bic	r3, r3, #512
 793 0008 0343     		orrs	r3, r3, r0
 794 000a 1362     		str	r3, [r2, #32]
 457:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 458:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Enable the Battery charging */
 459:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   SET_BIT(PWR->BDCR, PWR_BDCR_VBE);
 795              		.loc 1 459 3 view .LVU132
 796 000c 136A     		ldr	r3, [r2, #32]
 797 000e 43F48073 		orr	r3, r3, #256
 798 0012 1362     		str	r3, [r2, #32]
 460:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 799              		.loc 1 460 1 is_stmt 0 view .LVU133
 800 0014 7047     		bx	lr
 801              	.L82:
 802 0016 00BF     		.align	2
 803              	.L81:
 804 0018 00080244 		.word	1140983808
 805              		.cfi_endproc
 806              	.LFE380:
 808              		.section	.text.HAL_PWREx_DisableBatteryCharging,"ax",%progbits
 809              		.align	1
 810              		.global	HAL_PWREx_DisableBatteryCharging
 811              		.syntax unified
 812              		.thumb
 813              		.thumb_func
 814              		.fpu fpv4-sp-d16
 816              	HAL_PWREx_DisableBatteryCharging:
 817              	.LFB381:
 461:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/cc9o9g6Q.s 			page 23


 462:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 463:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief  Disable the Battery charging.
 464:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 465:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 466:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_DisableBatteryCharging(void)
 467:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 818              		.loc 1 467 1 is_stmt 1 view -0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822              		@ link register save eliminated.
 468:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->BDCR, PWR_BDCR_VBE);
 823              		.loc 1 468 3 view .LVU135
 824 0000 024A     		ldr	r2, .L84
 825 0002 136A     		ldr	r3, [r2, #32]
 826 0004 23F48073 		bic	r3, r3, #256
 827 0008 1362     		str	r3, [r2, #32]
 469:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 828              		.loc 1 469 1 is_stmt 0 view .LVU136
 829 000a 7047     		bx	lr
 830              	.L85:
 831              		.align	2
 832              	.L84:
 833 000c 00080244 		.word	1140983808
 834              		.cfi_endproc
 835              	.LFE381:
 837              		.section	.text.HAL_PWREx_EnableAnalogBooster,"ax",%progbits
 838              		.align	1
 839              		.global	HAL_PWREx_EnableAnalogBooster
 840              		.syntax unified
 841              		.thumb
 842              		.thumb_func
 843              		.fpu fpv4-sp-d16
 845              	HAL_PWREx_EnableAnalogBooster:
 846              	.LFB382:
 470:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 471:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 472:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Enable the booster to guarantee the analog switch AC performance when
 473:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *        the VDD supply voltage is below 2V7.
 474:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   The VDD supply voltage can be monitored through the PVD and the PLS
 475:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         field bits.
 476:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 477:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 478:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_EnableAnalogBooster(void)
 479:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 847              		.loc 1 479 1 is_stmt 1 view -0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              		@ link register save eliminated.
 480:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Enable the Analog voltage */
 481:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   SET_BIT(PWR->PMCR, PWR_PMCR_AVD_READY);
 852              		.loc 1 481 3 view .LVU138
 853 0000 044B     		ldr	r3, .L87
 854 0002 1A68     		ldr	r2, [r3]
 855 0004 42F40052 		orr	r2, r2, #8192
 856 0008 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc9o9g6Q.s 			page 24


 482:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 483:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Enable VDDA booster */
 484:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   SET_BIT(PWR->PMCR, PWR_PMCR_BOOSTE);
 857              		.loc 1 484 3 view .LVU139
 858 000a 1A68     		ldr	r2, [r3]
 859 000c 42F48052 		orr	r2, r2, #4096
 860 0010 1A60     		str	r2, [r3]
 485:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 861              		.loc 1 485 1 is_stmt 0 view .LVU140
 862 0012 7047     		bx	lr
 863              	.L88:
 864              		.align	2
 865              	.L87:
 866 0014 00080244 		.word	1140983808
 867              		.cfi_endproc
 868              	.LFE382:
 870              		.section	.text.HAL_PWREx_DisableAnalogBooster,"ax",%progbits
 871              		.align	1
 872              		.global	HAL_PWREx_DisableAnalogBooster
 873              		.syntax unified
 874              		.thumb
 875              		.thumb_func
 876              		.fpu fpv4-sp-d16
 878              	HAL_PWREx_DisableAnalogBooster:
 879              	.LFB383:
 486:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 487:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 488:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Disable the analog booster.
 489:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 490:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_DisableAnalogBooster(void)
 492:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 880              		.loc 1 492 1 is_stmt 1 view -0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 884              		@ link register save eliminated.
 493:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Disable VDDA booster */
 494:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->PMCR, PWR_PMCR_BOOSTE);
 885              		.loc 1 494 3 view .LVU142
 886 0000 044B     		ldr	r3, .L90
 887 0002 1A68     		ldr	r2, [r3]
 888 0004 22F48052 		bic	r2, r2, #4096
 889 0008 1A60     		str	r2, [r3]
 495:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 496:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Disable the Analog voltage */
 497:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->PMCR, PWR_PMCR_AVD_READY);
 890              		.loc 1 497 3 view .LVU143
 891 000a 1A68     		ldr	r2, [r3]
 892 000c 22F40052 		bic	r2, r2, #8192
 893 0010 1A60     		str	r2, [r3]
 498:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 894              		.loc 1 498 1 is_stmt 0 view .LVU144
 895 0012 7047     		bx	lr
 896              	.L91:
 897              		.align	2
 898              	.L90:
ARM GAS  /tmp/cc9o9g6Q.s 			page 25


 899 0014 00080244 		.word	1140983808
 900              		.cfi_endproc
 901              	.LFE383:
 903              		.section	.text.HAL_PWREx_PVD_AVD_Rising_Callback,"ax",%progbits
 904              		.align	1
 905              		.weak	HAL_PWREx_PVD_AVD_Rising_Callback
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 909              		.fpu fpv4-sp-d16
 911              	HAL_PWREx_PVD_AVD_Rising_Callback:
 912              	.LFB385:
 499:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 500:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 501:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief  This function handles the PWR PVD/AVD interrupt request.
 502:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   This API should be called under the PVD_AVD_IRQHandler().
 503:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   The use of this API is when the PVD and AVD are activated at the same time.
 504:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None
 505:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 506:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_PVD_AVD_IRQHandler(void)
 507:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 508:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Check PWR PVD AVD EXTI Rising flag */
 509:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   if (__HAL_PWR_PVD_AVD_EXTI_GET_RISING_FLAG() != 0U)
 510:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   {
 511:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     /* Clear PWR PVD AVD EXTI Rising pending bit */
 512:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     WRITE_REG(EXTI->RPR1, PWR_EXTI_LINE_AVD);
 513:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 514:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     /* PWR PVD AVD Rising interrupt user callback */
 515:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     HAL_PWREx_PVD_AVD_Rising_Callback();
 516:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   }
 517:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 518:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Check PWR PVD AVD EXTI Falling flag */
 519:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   if (__HAL_PWR_PVD_AVD_EXTI_GET_FALLING_FLAG() != 0U)
 520:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   {
 521:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     /* Clear PWR PVD AVD EXTI Falling pending bit */
 522:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     WRITE_REG(EXTI->FPR1, PWR_EXTI_LINE_AVD);
 523:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 524:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     /* PWR PVD AVD Falling interrupt user callback */
 525:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     HAL_PWREx_PVD_AVD_Falling_Callback();
 526:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   }
 527:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 528:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 529:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 530:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief PWR PVD AVD Rising interrupt callback.
 531:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 532:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 533:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVD_AVD_Rising_Callback(void)
 534:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 913              		.loc 1 534 1 is_stmt 1 view -0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 0
 916              		@ frame_needed = 0, uses_anonymous_args = 0
 917              		@ link register save eliminated.
 535:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 536:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****             the HAL_PWR_AVDCallback can be implemented in the user file
 537:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 538:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
ARM GAS  /tmp/cc9o9g6Q.s 			page 26


 918              		.loc 1 538 1 view .LVU146
 919 0000 7047     		bx	lr
 920              		.cfi_endproc
 921              	.LFE385:
 923              		.section	.text.HAL_PWREx_PVD_AVD_Falling_Callback,"ax",%progbits
 924              		.align	1
 925              		.weak	HAL_PWREx_PVD_AVD_Falling_Callback
 926              		.syntax unified
 927              		.thumb
 928              		.thumb_func
 929              		.fpu fpv4-sp-d16
 931              	HAL_PWREx_PVD_AVD_Falling_Callback:
 932              	.LFB386:
 539:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 540:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 541:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief PWR PVD AVD Falling interrupt callback.
 542:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 543:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 544:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVD_AVD_Falling_Callback(void)
 545:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 933              		.loc 1 545 1 view -0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937              		@ link register save eliminated.
 546:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 547:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****             the HAL_PWR_AVDCallback can be implemented in the user file
 548:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 549:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 938              		.loc 1 549 1 view .LVU148
 939 0000 7047     		bx	lr
 940              		.cfi_endproc
 941              	.LFE386:
 943              		.section	.text.HAL_PWREx_PVD_AVD_IRQHandler,"ax",%progbits
 944              		.align	1
 945              		.global	HAL_PWREx_PVD_AVD_IRQHandler
 946              		.syntax unified
 947              		.thumb
 948              		.thumb_func
 949              		.fpu fpv4-sp-d16
 951              	HAL_PWREx_PVD_AVD_IRQHandler:
 952              	.LFB384:
 507:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Check PWR PVD AVD EXTI Rising flag */
 953              		.loc 1 507 1 view -0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957 0000 08B5     		push	{r3, lr}
 958              	.LCFI2:
 959              		.cfi_def_cfa_offset 8
 960              		.cfi_offset 3, -8
 961              		.cfi_offset 14, -4
 509:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   {
 962              		.loc 1 509 3 view .LVU150
 509:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   {
 963              		.loc 1 509 7 is_stmt 0 view .LVU151
 964 0002 0C4B     		ldr	r3, .L100
ARM GAS  /tmp/cc9o9g6Q.s 			page 27


 965 0004 DB68     		ldr	r3, [r3, #12]
 509:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   {
 966              		.loc 1 509 6 view .LVU152
 967 0006 13F4803F 		tst	r3, #65536
 968 000a 05D1     		bne	.L98
 969              	.L95:
 519:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   {
 970              		.loc 1 519 3 is_stmt 1 view .LVU153
 519:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   {
 971              		.loc 1 519 7 is_stmt 0 view .LVU154
 972 000c 094B     		ldr	r3, .L100
 973 000e 1B69     		ldr	r3, [r3, #16]
 519:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   {
 974              		.loc 1 519 6 view .LVU155
 975 0010 13F4803F 		tst	r3, #65536
 976 0014 07D1     		bne	.L99
 977              	.L94:
 527:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 978              		.loc 1 527 1 view .LVU156
 979 0016 08BD     		pop	{r3, pc}
 980              	.L98:
 512:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 981              		.loc 1 512 5 is_stmt 1 view .LVU157
 982 0018 064B     		ldr	r3, .L100
 983 001a 4FF48032 		mov	r2, #65536
 984 001e DA60     		str	r2, [r3, #12]
 515:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   }
 985              		.loc 1 515 5 view .LVU158
 986 0020 FFF7FEFF 		bl	HAL_PWREx_PVD_AVD_Rising_Callback
 987              	.LVL20:
 988 0024 F2E7     		b	.L95
 989              	.L99:
 522:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 990              		.loc 1 522 5 view .LVU159
 991 0026 034B     		ldr	r3, .L100
 992 0028 4FF48032 		mov	r2, #65536
 993 002c 1A61     		str	r2, [r3, #16]
 525:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   }
 994              		.loc 1 525 5 view .LVU160
 995 002e FFF7FEFF 		bl	HAL_PWREx_PVD_AVD_Falling_Callback
 996              	.LVL21:
 527:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 997              		.loc 1 527 1 is_stmt 0 view .LVU161
 998 0032 F0E7     		b	.L94
 999              	.L101:
 1000              		.align	2
 1001              	.L100:
 1002 0034 00200244 		.word	1140989952
 1003              		.cfi_endproc
 1004              	.LFE384:
 1006              		.section	.text.HAL_PWREx_EnableWakeUpPin,"ax",%progbits
 1007              		.align	1
 1008              		.global	HAL_PWREx_EnableWakeUpPin
 1009              		.syntax unified
 1010              		.thumb
 1011              		.thumb_func
 1012              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc9o9g6Q.s 			page 28


 1014              	HAL_PWREx_EnableWakeUpPin:
 1015              	.LVL22:
 1016              	.LFB387:
 550:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 551:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @}
 552:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 553:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 554:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group3 Wakeup Pins configuration Functions
 555:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief    Wakeup Pins configuration functions
 556:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *
 557:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** @verbatim
 558:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****  ===============================================================================
 559:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****                      ##### Wakeup Pins configuration Functions #####
 560:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****  ===============================================================================
 561:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     [..]
 562:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** @endverbatim
 563:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @{
 564:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 565:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 566:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 567:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Enable the Wake-up PINx functionality.
 568:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @param  sPinParams : Pointer to a PWREx_WakeupPinTypeDef structure that
 569:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                      contains the configuration information for the wake-up
 570:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                      Pin.
 571:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 572:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 573:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_EnableWakeUpPin(const PWREx_WakeupPinTypeDef *sPinParams)
 574:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 1017              		.loc 1 574 1 is_stmt 1 view -0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021              		@ link register save eliminated.
 575:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   uint32_t pinConfig;
 1022              		.loc 1 575 3 view .LVU163
 576:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   uint32_t regMask;
 1023              		.loc 1 576 3 view .LVU164
 577:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   const uint32_t pullMask = PWR_WUCR_WUPPUPD1;
 1024              		.loc 1 577 3 view .LVU165
 578:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 579:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Check the parameters */
 580:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   assert_param(IS_PWR_WAKEUP_PIN(sPinParams->WakeUpPin));
 1025              		.loc 1 580 3 view .LVU166
 581:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   assert_param(IS_PWR_WAKEUP_PIN_POLARITY(sPinParams->PinPolarity));
 1026              		.loc 1 581 3 view .LVU167
 582:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   assert_param(IS_PWR_WAKEUP_PIN_PULL(sPinParams->PinPull));
 1027              		.loc 1 582 3 view .LVU168
 583:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 584:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   pinConfig = sPinParams->WakeUpPin | \
 1028              		.loc 1 584 3 view .LVU169
 1029              		.loc 1 584 25 is_stmt 0 view .LVU170
 1030 0000 0368     		ldr	r3, [r0]
 585:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****               (sPinParams->PinPolarity << ((POSITION_VAL(sPinParams->WakeUpPin) + PWR_WUCR_WUPP1_Po
 1031              		.loc 1 585 26 view .LVU171
 1032 0002 4168     		ldr	r1, [r0, #4]
 1033              	.LVL23:
 1034              	.LBB18:
ARM GAS  /tmp/cc9o9g6Q.s 			page 29


 1035              	.LBI18:
 1036              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
ARM GAS  /tmp/cc9o9g6Q.s 			page 30


  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc9o9g6Q.s 			page 31


 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
ARM GAS  /tmp/cc9o9g6Q.s 			page 32


 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
ARM GAS  /tmp/cc9o9g6Q.s 			page 33


 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc9o9g6Q.s 			page 34


 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
ARM GAS  /tmp/cc9o9g6Q.s 			page 35


 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 1037              		.loc 2 373 31 is_stmt 1 view .LVU172
 1038              	.LBB19:
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 1039              		.loc 2 375 3 view .LVU173
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 1040              		.loc 2 380 4 view .LVU174
 1041              		.syntax unified
 1042              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1043 0004 93FAA3F2 		rbit r2, r3
 1044              	@ 0 "" 2
 1045              	.LVL24:
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
ARM GAS  /tmp/cc9o9g6Q.s 			page 36


 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 1046              		.loc 2 393 3 view .LVU175
 1047              		.loc 2 393 3 is_stmt 0 view .LVU176
 1048              		.thumb
 1049              		.syntax unified
 1050              	.LBE19:
 1051              	.LBE18:
 1052              	.LBB20:
 1053              	.LBI20:
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 1054              		.loc 2 403 30 is_stmt 1 view .LVU177
 1055              	.LBB21:
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 1056              		.loc 2 414 3 view .LVU178
 1057              		.loc 2 414 6 is_stmt 0 view .LVU179
 1058 0008 A2B3     		cbz	r2, .L107
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 1059              		.loc 2 418 3 is_stmt 1 view .LVU180
 1060              		.loc 2 418 10 is_stmt 0 view .LVU181
 1061 000a B2FA82F2 		clz	r2, r2
 1062              	.LVL25:
 1063              	.L103:
 1064              		.loc 2 418 10 view .LVU182
 1065              	.LBE21:
 1066              	.LBE20:
 1067              		.loc 1 585 81 view .LVU183
 1068 000e 0832     		adds	r2, r2, #8
 1069              		.loc 1 585 103 view .LVU184
 1070 0010 02F01F02 		and	r2, r2, #31
 1071              		.loc 1 585 40 view .LVU185
 1072 0014 01FA02F2 		lsl	r2, r1, r2
ARM GAS  /tmp/cc9o9g6Q.s 			page 37


 584:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****               (sPinParams->PinPolarity << ((POSITION_VAL(sPinParams->WakeUpPin) + PWR_WUCR_WUPP1_Po
 1073              		.loc 1 584 37 view .LVU186
 1074 0018 43EA0201 		orr	r1, r3, r2
 586:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****               (sPinParams->PinPull << (((POSITION_VAL(sPinParams->WakeUpPin) * PWR_WAKEUP_PINS_PULL
 1075              		.loc 1 586 26 view .LVU187
 1076 001c 8068     		ldr	r0, [r0, #8]
 1077              	.LVL26:
 1078              	.LBB23:
 1079              	.LBI23:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1080              		.loc 2 373 31 is_stmt 1 view .LVU188
 1081              	.LBB24:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1082              		.loc 2 375 3 view .LVU189
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1083              		.loc 2 380 4 view .LVU190
 1084              		.syntax unified
 1085              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1086 001e 93FAA3F2 		rbit r2, r3
 1087              	@ 0 "" 2
 1088              	.LVL27:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1089              		.loc 2 393 3 view .LVU191
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1090              		.loc 2 393 3 is_stmt 0 view .LVU192
 1091              		.thumb
 1092              		.syntax unified
 1093              	.LBE24:
 1094              	.LBE23:
 1095              	.LBB25:
 1096              	.LBI25:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1097              		.loc 2 403 30 is_stmt 1 view .LVU193
 1098              	.LBB26:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1099              		.loc 2 414 3 view .LVU194
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1100              		.loc 2 414 6 is_stmt 0 view .LVU195
 1101 0022 4AB3     		cbz	r2, .L108
 1102              		.loc 2 418 3 is_stmt 1 view .LVU196
 1103              		.loc 2 418 10 is_stmt 0 view .LVU197
 1104 0024 B2FA82F2 		clz	r2, r2
 1105              	.LVL28:
 1106              	.L104:
 1107              		.loc 2 418 10 view .LVU198
 1108              	.LBE26:
 1109              	.LBE25:
 587:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****                                         + PWR_WUCR_WUPPUPD1_Pos) & 0x1FU));
 1110              		.loc 1 587 41 view .LVU199
 1111 0028 0832     		adds	r2, r2, #8
 1112 002a 5200     		lsls	r2, r2, #1
 1113              		.loc 1 587 66 view .LVU200
 1114 002c 02F01E02 		and	r2, r2, #30
 586:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****                                         + PWR_WUCR_WUPPUPD1_Pos) & 0x1FU));
 1115              		.loc 1 586 36 view .LVU201
 1116 0030 00FA02F2 		lsl	r2, r0, r2
 584:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****               (sPinParams->PinPolarity << ((POSITION_VAL(sPinParams->WakeUpPin) + PWR_WUCR_WUPP1_Po
ARM GAS  /tmp/cc9o9g6Q.s 			page 38


 1117              		.loc 1 584 13 view .LVU202
 1118 0034 0A43     		orrs	r2, r2, r1
 1119              	.LVL29:
 588:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 589:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   regMask   = sPinParams->WakeUpPin | \
 1120              		.loc 1 589 3 is_stmt 1 view .LVU203
 1121              	.LBB28:
 1122              	.LBI28:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1123              		.loc 2 373 31 view .LVU204
 1124              	.LBB29:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1125              		.loc 2 375 3 view .LVU205
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1126              		.loc 2 380 4 view .LVU206
 1127              		.syntax unified
 1128              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1129 0036 93FAA3F1 		rbit r1, r3
 1130              	@ 0 "" 2
 1131              	.LVL30:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1132              		.loc 2 393 3 view .LVU207
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1133              		.loc 2 393 3 is_stmt 0 view .LVU208
 1134              		.thumb
 1135              		.syntax unified
 1136              	.LBE29:
 1137              	.LBE28:
 1138              	.LBB30:
 1139              	.LBI30:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1140              		.loc 2 403 30 is_stmt 1 view .LVU209
 1141              	.LBB31:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1142              		.loc 2 414 3 view .LVU210
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1143              		.loc 2 414 6 is_stmt 0 view .LVU211
 1144 003a F9B1     		cbz	r1, .L109
 1145              		.loc 2 418 3 is_stmt 1 view .LVU212
 1146              		.loc 2 418 10 is_stmt 0 view .LVU213
 1147 003c B1FA81F1 		clz	r1, r1
 1148              	.LVL31:
 1149              	.L105:
 1150              		.loc 2 418 10 view .LVU214
 1151              	.LBE31:
 1152              	.LBE30:
 590:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****               (PWR_WUCR_WUPP1 << (POSITION_VAL(sPinParams->WakeUpPin) & 0x1FU)) | \
 1153              		.loc 1 590 71 view .LVU215
 1154 0040 01F01F00 		and	r0, r1, #31
 1155              		.loc 1 590 31 view .LVU216
 1156 0044 4FF48071 		mov	r1, #256
 1157 0048 8140     		lsls	r1, r1, r0
 589:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****               (PWR_WUCR_WUPP1 << (POSITION_VAL(sPinParams->WakeUpPin) & 0x1FU)) | \
 1158              		.loc 1 589 37 view .LVU217
 1159 004a 1943     		orrs	r1, r1, r3
 1160              	.LVL32:
 1161              	.LBB33:
ARM GAS  /tmp/cc9o9g6Q.s 			page 39


 1162              	.LBI33:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1163              		.loc 2 373 31 is_stmt 1 view .LVU218
 1164              	.LBB34:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1165              		.loc 2 375 3 view .LVU219
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1166              		.loc 2 380 4 view .LVU220
 1167              		.syntax unified
 1168              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1169 004c 93FAA3F3 		rbit r3, r3
 1170              	@ 0 "" 2
 1171              	.LVL33:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1172              		.loc 2 393 3 view .LVU221
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1173              		.loc 2 393 3 is_stmt 0 view .LVU222
 1174              		.thumb
 1175              		.syntax unified
 1176              	.LBE34:
 1177              	.LBE33:
 1178              	.LBB35:
 1179              	.LBI35:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1180              		.loc 2 403 30 is_stmt 1 view .LVU223
 1181              	.LBB36:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1182              		.loc 2 414 3 view .LVU224
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1183              		.loc 2 414 6 is_stmt 0 view .LVU225
 1184 0050 B3B1     		cbz	r3, .L110
 1185              		.loc 2 418 3 is_stmt 1 view .LVU226
 1186              		.loc 2 418 10 is_stmt 0 view .LVU227
 1187 0052 B3FA83F3 		clz	r3, r3
 1188              	.LVL34:
 1189              	.L106:
 1190              		.loc 2 418 10 view .LVU228
 1191              	.LBE36:
 1192              	.LBE35:
 591:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****               (pullMask << ((POSITION_VAL(sPinParams->WakeUpPin) * PWR_WAKEUP_PINS_PULL_SHIFT_OFFSE
 1193              		.loc 1 591 66 view .LVU229
 1194 0056 5B00     		lsls	r3, r3, #1
 1195              		.loc 1 591 103 view .LVU230
 1196 0058 03F01E03 		and	r3, r3, #30
 1197              		.loc 1 591 25 view .LVU231
 1198 005c 4FF44030 		mov	r0, #196608
 1199 0060 00FA03F3 		lsl	r3, r0, r3
 589:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****               (PWR_WUCR_WUPP1 << (POSITION_VAL(sPinParams->WakeUpPin) & 0x1FU)) | \
 1200              		.loc 1 589 13 view .LVU232
 1201 0064 0B43     		orrs	r3, r3, r1
 1202              	.LVL35:
 592:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 593:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Enable and Specify the Wake-Up pin polarity and the pull configuration
 594:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****      for the event detection (rising or falling edge) */
 595:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->WUCR, regMask, pinConfig);
 1203              		.loc 1 595 3 is_stmt 1 view .LVU233
 1204 0066 0748     		ldr	r0, .L111
ARM GAS  /tmp/cc9o9g6Q.s 			page 40


 1205 0068 816C     		ldr	r1, [r0, #72]
 1206 006a 21EA0303 		bic	r3, r1, r3
 1207              	.LVL36:
 1208              		.loc 1 595 3 is_stmt 0 view .LVU234
 1209 006e 1A43     		orrs	r2, r2, r3
 1210              	.LVL37:
 1211              		.loc 1 595 3 view .LVU235
 1212 0070 8264     		str	r2, [r0, #72]
 596:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 1213              		.loc 1 596 1 view .LVU236
 1214 0072 7047     		bx	lr
 1215              	.LVL38:
 1216              	.L107:
 1217              	.LBB38:
 1218              	.LBB22:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1219              		.loc 2 416 12 view .LVU237
 1220 0074 2022     		movs	r2, #32
 1221              	.LVL39:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1222              		.loc 2 416 12 view .LVU238
 1223 0076 CAE7     		b	.L103
 1224              	.LVL40:
 1225              	.L108:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1226              		.loc 2 416 12 view .LVU239
 1227              	.LBE22:
 1228              	.LBE38:
 1229              	.LBB39:
 1230              	.LBB27:
 1231 0078 2022     		movs	r2, #32
 1232              	.LVL41:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1233              		.loc 2 416 12 view .LVU240
 1234 007a D5E7     		b	.L104
 1235              	.LVL42:
 1236              	.L109:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1237              		.loc 2 416 12 view .LVU241
 1238              	.LBE27:
 1239              	.LBE39:
 1240              	.LBB40:
 1241              	.LBB32:
 1242 007c 2021     		movs	r1, #32
 1243              	.LVL43:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1244              		.loc 2 416 12 view .LVU242
 1245 007e DFE7     		b	.L105
 1246              	.LVL44:
 1247              	.L110:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1248              		.loc 2 416 12 view .LVU243
 1249              	.LBE32:
 1250              	.LBE40:
 1251              	.LBB41:
 1252              	.LBB37:
 1253 0080 2023     		movs	r3, #32
ARM GAS  /tmp/cc9o9g6Q.s 			page 41


 1254              	.LVL45:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1255              		.loc 2 416 12 view .LVU244
 1256 0082 E8E7     		b	.L106
 1257              	.L112:
 1258              		.align	2
 1259              	.L111:
 1260 0084 00080244 		.word	1140983808
 1261              	.LBE37:
 1262              	.LBE41:
 1263              		.cfi_endproc
 1264              	.LFE387:
 1266              		.section	.text.HAL_PWREx_DisableWakeUpPin,"ax",%progbits
 1267              		.align	1
 1268              		.global	HAL_PWREx_DisableWakeUpPin
 1269              		.syntax unified
 1270              		.thumb
 1271              		.thumb_func
 1272              		.fpu fpv4-sp-d16
 1274              	HAL_PWREx_DisableWakeUpPin:
 1275              	.LVL46:
 1276              	.LFB388:
 597:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 598:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 599:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Disable the Wake-up PINx functionality.
 600:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @param  WakeUpPinx : Specifies the Wake-Up pin to be disabled.
 601:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 602:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *           @arg PWR_WAKEUP_PIN1
 603:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *           @arg PWR_WAKEUP_PIN2
 604:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *           @arg PWR_WAKEUP_PIN3
 605:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *           @arg PWR_WAKEUP_PIN4
 606:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *           @arg PWR_WAKEUP_PIN5
 607:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *           @arg PWR_WAKEUP_PIN6
 608:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *           @arg PWR_WAKEUP_PIN7
 609:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *           @arg PWR_WAKEUP_PIN8
 610:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   The PWR_WAKEUP_PIN6, PWR_WAKEUP_PIN7 and PWR_WAKEUP_PIN8 are not available for
 611:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         STM32H503xx devices.
 612:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None
 613:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 614:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_DisableWakeUpPin(uint32_t WakeUpPinx)
 615:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 1277              		.loc 1 615 1 is_stmt 1 view -0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 0
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
 1281              		@ link register save eliminated.
 616:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Check the parameter */
 617:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 1282              		.loc 1 617 3 view .LVU246
 618:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 619:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Disable the WakeUpPin */
 620:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->WUCR, (PWR_WUCR_WUPEN & WakeUpPinx));
 1283              		.loc 1 620 3 view .LVU247
 1284 0000 034A     		ldr	r2, .L114
 1285 0002 936C     		ldr	r3, [r2, #72]
 1286 0004 C0B2     		uxtb	r0, r0
 1287              	.LVL47:
ARM GAS  /tmp/cc9o9g6Q.s 			page 42


 1288              		.loc 1 620 3 is_stmt 0 view .LVU248
 1289 0006 23EA0003 		bic	r3, r3, r0
 1290 000a 9364     		str	r3, [r2, #72]
 621:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 1291              		.loc 1 621 1 view .LVU249
 1292 000c 7047     		bx	lr
 1293              	.L115:
 1294 000e 00BF     		.align	2
 1295              	.L114:
 1296 0010 00080244 		.word	1140983808
 1297              		.cfi_endproc
 1298              	.LFE388:
 1300              		.section	.text.HAL_PWREx_EnableFlashPowerDown,"ax",%progbits
 1301              		.align	1
 1302              		.global	HAL_PWREx_EnableFlashPowerDown
 1303              		.syntax unified
 1304              		.thumb
 1305              		.thumb_func
 1306              		.fpu fpv4-sp-d16
 1308              	HAL_PWREx_EnableFlashPowerDown:
 1309              	.LFB389:
 622:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 623:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 624:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @}
 625:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 626:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 627:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group4 Memories Retention Functions
 628:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief    Memories retention functions
 629:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *
 630:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** @verbatim
 631:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****  ===============================================================================
 632:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****                      ##### Memories Retention Functions #####
 633:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****  ===============================================================================
 634:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     [..]
 635:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** @endverbatim
 636:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @{
 637:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 638:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 639:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 640:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Enable the Flash Power Down in Stop mode.
 641:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   When Flash Power Down is enabled  the Flash memory enters low-power
 642:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         mode. This feature allows to
 643:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         obtain the best trade-off between low-power consumption and restart
 644:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         time when exiting from Stop mode.
 645:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 646:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 647:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_EnableFlashPowerDown(void)
 648:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 1310              		.loc 1 648 1 is_stmt 1 view -0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 0
 1313              		@ frame_needed = 0, uses_anonymous_args = 0
 1314              		@ link register save eliminated.
 649:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Enable the Flash Power Down */
 650:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   SET_BIT(PWR->PMCR, PWR_PMCR_FLPS);
 1315              		.loc 1 650 3 view .LVU251
 1316 0000 024A     		ldr	r2, .L117
ARM GAS  /tmp/cc9o9g6Q.s 			page 43


 1317 0002 1368     		ldr	r3, [r2]
 1318 0004 43F40073 		orr	r3, r3, #512
 1319 0008 1360     		str	r3, [r2]
 651:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 1320              		.loc 1 651 1 is_stmt 0 view .LVU252
 1321 000a 7047     		bx	lr
 1322              	.L118:
 1323              		.align	2
 1324              	.L117:
 1325 000c 00080244 		.word	1140983808
 1326              		.cfi_endproc
 1327              	.LFE389:
 1329              		.section	.text.HAL_PWREx_DisableFlashPowerDown,"ax",%progbits
 1330              		.align	1
 1331              		.global	HAL_PWREx_DisableFlashPowerDown
 1332              		.syntax unified
 1333              		.thumb
 1334              		.thumb_func
 1335              		.fpu fpv4-sp-d16
 1337              	HAL_PWREx_DisableFlashPowerDown:
 1338              	.LFB390:
 652:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 653:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 654:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Disable the Flash Power Down in Stop mode.
 655:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   When Flash Power Down is disabled  the Flash memory is kept on
 656:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         normal mode. This feature allows
 657:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         to obtain the best trade-off between low-power consumption and
 658:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         restart time when exiting from Stop mode.
 659:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 660:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 661:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_DisableFlashPowerDown(void)
 662:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 1339              		.loc 1 662 1 is_stmt 1 view -0
 1340              		.cfi_startproc
 1341              		@ args = 0, pretend = 0, frame = 0
 1342              		@ frame_needed = 0, uses_anonymous_args = 0
 1343              		@ link register save eliminated.
 663:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Disable the Flash Power Down */
 664:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->PMCR, PWR_PMCR_FLPS);
 1344              		.loc 1 664 3 view .LVU254
 1345 0000 024A     		ldr	r2, .L120
 1346 0002 1368     		ldr	r3, [r2]
 1347 0004 23F40073 		bic	r3, r3, #512
 1348 0008 1360     		str	r3, [r2]
 665:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 1349              		.loc 1 665 1 is_stmt 0 view .LVU255
 1350 000a 7047     		bx	lr
 1351              	.L121:
 1352              		.align	2
 1353              	.L120:
 1354 000c 00080244 		.word	1140983808
 1355              		.cfi_endproc
 1356              	.LFE390:
 1358              		.section	.text.HAL_PWREx_EnableMemoryShutOff,"ax",%progbits
 1359              		.align	1
 1360              		.global	HAL_PWREx_EnableMemoryShutOff
 1361              		.syntax unified
ARM GAS  /tmp/cc9o9g6Q.s 			page 44


 1362              		.thumb
 1363              		.thumb_func
 1364              		.fpu fpv4-sp-d16
 1366              	HAL_PWREx_EnableMemoryShutOff:
 1367              	.LVL48:
 1368              	.LFB391:
 666:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 667:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 668:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Enable memory block shut-off in Stop mode
 669:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   In Stop mode, the content of the memory blocks is
 670:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         maintained. Further power optimization can be obtained by switching
 671:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         off some memory blocks. This optimization implies loss of the memory
 672:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         content. The user can select which memory is discarded during STOP
 673:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         mode by means of xxSO bits.
 674:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @param  MemoryBlock : Specifies the memory block to shut-off during Stop mode.
 675:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values for STM32H573xx/STM32H563xx/STM32H56
 676:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_ETHERNET_MEMORY_BLOCK      PWR_PMCR_ETHERNETSO    : Ethernet shut-off contr
 677:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM3_MEMORY_BLOCK          PWR_PMCR_SRAM3SO       : RAM3 shut-off control i
 678:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM2_16_MEMORY_BLOCK       PWR_PMCR_SRAM2_16SO    : RAM2 16k byte shut-off 
 679:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM2_48_MEMORY_BLOCK       PWR_PMCR_SRAM2_48SO    : RAM2 48k byte shut-off 
 680:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM1_MEMORY_BLOCK          PWR_PMCR_SRAM1SO       : RAM1 shut-off control i
 681:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values for STM32H533xx/STM32H523xx :
 682:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM3_MEMORY_BLOCK          PWR_PMCR_SRAM3SO       : RAM3 shut-off control i
 683:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM2_LOW_16_MEMORY_BLOCK   PWR_PMCR_SRAM2_16LSO   : RAM2 Low 16k byte shut-
 684:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            in Stop mode
 685:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM2_HIGH_16_MEMORY_BLOCK  PWR_PMCR_SRAM2_16HSO   : RAM2 High 16k byte shut
 686:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            in Stop mode
 687:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM2_48_MEMORY_BLOCK       PWR_PMCR_SRAM2_48SO    : RAM2 48k byte shut-off 
 688:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM1_MEMORY_BLOCK          PWR_PMCR_SRAM1SO       : RAM1 shut-off control i
 689:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values for STM32H503xx :
 690:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM2_MEMORY_BLOCK          PWR_PMCR_SRAM2SO       : RAM2 shut-off control i
 691:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM1_MEMORY_BLOCK          PWR_PMCR_SRAM1SO       : RAM1 shut-off control i
 692:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 693:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 694:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_EnableMemoryShutOff(uint32_t MemoryBlock)
 695:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 1369              		.loc 1 695 1 is_stmt 1 view -0
 1370              		.cfi_startproc
 1371              		@ args = 0, pretend = 0, frame = 0
 1372              		@ frame_needed = 0, uses_anonymous_args = 0
 1373              		@ link register save eliminated.
 696:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Check the parameter */
 697:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   assert_param(IS_PWR_MEMORY_BLOCK(MemoryBlock));
 1374              		.loc 1 697 3 view .LVU257
 698:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 699:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Enable memory block shut-off */
 700:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   SET_BIT(PWR->PMCR, MemoryBlock);
 1375              		.loc 1 700 3 view .LVU258
 1376 0000 024A     		ldr	r2, .L123
 1377 0002 1368     		ldr	r3, [r2]
 1378 0004 0343     		orrs	r3, r3, r0
 1379 0006 1360     		str	r3, [r2]
 701:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 1380              		.loc 1 701 1 is_stmt 0 view .LVU259
 1381 0008 7047     		bx	lr
 1382              	.L124:
 1383 000a 00BF     		.align	2
ARM GAS  /tmp/cc9o9g6Q.s 			page 45


 1384              	.L123:
 1385 000c 00080244 		.word	1140983808
 1386              		.cfi_endproc
 1387              	.LFE391:
 1389              		.section	.text.HAL_PWREx_DisableMemoryShutOff,"ax",%progbits
 1390              		.align	1
 1391              		.global	HAL_PWREx_DisableMemoryShutOff
 1392              		.syntax unified
 1393              		.thumb
 1394              		.thumb_func
 1395              		.fpu fpv4-sp-d16
 1397              	HAL_PWREx_DisableMemoryShutOff:
 1398              	.LVL49:
 1399              	.LFB392:
 702:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 703:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 704:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Disable memory block shut-off in Stop mode
 705:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @param  MemoryBlock : Specifies the memory block to keep content during
 706:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *                       Stop mode.
 707:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values for STM32H573xx/STM32H563xx/STM32H56
 708:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_ETHERNET_MEMORY_BLOCK      PWR_PMCR_ETHERNETSO    : Ethernet shut-off contr
 709:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM3_MEMORY_BLOCK          PWR_PMCR_SRAM3SO       : RAM3 shut-off control i
 710:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM2_16_MEMORY_BLOCK       PWR_PMCR_SRAM2_16SO    : RAM2 16k byte shut-off 
 711:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM2_48_MEMORY_BLOCK       PWR_PMCR_SRAM2_48SO    : RAM2 48k byte shut-off 
 712:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM1_MEMORY_BLOCK          PWR_PMCR_SRAM1SO       : RAM1 shut-off control i
 713:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values for STM32H533xx/STM32H523xx :
 714:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM3_MEMORY_BLOCK          PWR_PMCR_SRAM3SO       : RAM3 shut-off control i
 715:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM2_LOW_16_MEMORY_BLOCK   PWR_PMCR_SRAM2_16LSO   : RAM2 Low 16k byte shut-
 716:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            in Stop mode
 717:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM2_HIGH_16_MEMORY_BLOCK  PWR_PMCR_SRAM2_16HSO   : RAM2 High 16k byte shut
 718:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            in Stop mode
 719:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM2_48_MEMORY_BLOCK       PWR_PMCR_SRAM2_48SO    : RAM2 48k byte shut-off 
 720:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM1_MEMORY_BLOCK          PWR_PMCR_SRAM1SO       : RAM1 shut-off control i
 721:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values for STM32H503xx :
 722:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM2_MEMORY_BLOCK          PWR_PMCR_SRAM2SO       : RAM2 shut-off control i
 723:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *            @arg PWR_RAM1_MEMORY_BLOCK          PWR_PMCR_SRAM1SO       : RAM1 shut-off control i
 724:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 725:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 726:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_DisableMemoryShutOff(uint32_t MemoryBlock)
 727:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 1400              		.loc 1 727 1 is_stmt 1 view -0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 0, uses_anonymous_args = 0
 1404              		@ link register save eliminated.
 728:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Check the parameter */
 729:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   assert_param(IS_PWR_MEMORY_BLOCK(MemoryBlock));
 1405              		.loc 1 729 3 view .LVU261
 730:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 731:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Disable memory block shut-off */
 732:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->PMCR, MemoryBlock);
 1406              		.loc 1 732 3 view .LVU262
 1407 0000 024A     		ldr	r2, .L126
 1408 0002 1368     		ldr	r3, [r2]
 1409 0004 23EA0003 		bic	r3, r3, r0
 1410 0008 1360     		str	r3, [r2]
 733:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
ARM GAS  /tmp/cc9o9g6Q.s 			page 46


 1411              		.loc 1 733 1 is_stmt 0 view .LVU263
 1412 000a 7047     		bx	lr
 1413              	.L127:
 1414              		.align	2
 1415              	.L126:
 1416 000c 00080244 		.word	1140983808
 1417              		.cfi_endproc
 1418              	.LFE392:
 1420              		.section	.text.HAL_PWREx_EnableBkupRAMRetention,"ax",%progbits
 1421              		.align	1
 1422              		.global	HAL_PWREx_EnableBkupRAMRetention
 1423              		.syntax unified
 1424              		.thumb
 1425              		.thumb_func
 1426              		.fpu fpv4-sp-d16
 1428              	HAL_PWREx_EnableBkupRAMRetention:
 1429              	.LFB393:
 734:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 735:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 736:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief  Enable the Backup RAM retention in Standby and VBAT modes.
 737:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   If BREN is reset, the backup RAM can still be used in Run, Sleep and
 738:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         Stop modes. However, its content is lost in Standby, Shutdown and
 739:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         VBAT modes. This bit can be writte
 740:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 741:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 742:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableBkupRAMRetention(void)
 743:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 1430              		.loc 1 743 1 is_stmt 1 view -0
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 0
 1433              		@ frame_needed = 0, uses_anonymous_args = 0
 1434              		@ link register save eliminated.
 744:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   SET_BIT(PWR->BDCR, PWR_BDCR_BREN);
 1435              		.loc 1 744 3 view .LVU265
 1436 0000 034A     		ldr	r2, .L129
 1437 0002 136A     		ldr	r3, [r2, #32]
 1438 0004 43F00103 		orr	r3, r3, #1
 1439 0008 1362     		str	r3, [r2, #32]
 745:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 746:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   return HAL_OK;
 1440              		.loc 1 746 3 view .LVU266
 747:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 1441              		.loc 1 747 1 is_stmt 0 view .LVU267
 1442 000a 0020     		movs	r0, #0
 1443 000c 7047     		bx	lr
 1444              	.L130:
 1445 000e 00BF     		.align	2
 1446              	.L129:
 1447 0010 00080244 		.word	1140983808
 1448              		.cfi_endproc
 1449              	.LFE393:
 1451              		.section	.text.HAL_PWREx_DisableBkupRAMRetention,"ax",%progbits
 1452              		.align	1
 1453              		.global	HAL_PWREx_DisableBkupRAMRetention
 1454              		.syntax unified
 1455              		.thumb
 1456              		.thumb_func
ARM GAS  /tmp/cc9o9g6Q.s 			page 47


 1457              		.fpu fpv4-sp-d16
 1459              	HAL_PWREx_DisableBkupRAMRetention:
 1460              	.LFB394:
 748:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 749:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 750:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief  Disable the Backup RAM retention in Standby and VBAT modes.
 751:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   If BREN is reset, the backup RAM can still be used in Run, Sleep and
 752:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         Stop modes. However, its content is lost in Standby, Shutdown and
 753:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         VBAT modes. This bit can be write
 754:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 755:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 756:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_DisableBkupRAMRetention(void)
 757:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 1461              		.loc 1 757 1 is_stmt 1 view -0
 1462              		.cfi_startproc
 1463              		@ args = 0, pretend = 0, frame = 0
 1464              		@ frame_needed = 0, uses_anonymous_args = 0
 1465              		@ link register save eliminated.
 758:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->BDCR, PWR_BDCR_BREN);
 1466              		.loc 1 758 3 view .LVU269
 1467 0000 024A     		ldr	r2, .L132
 1468 0002 136A     		ldr	r3, [r2, #32]
 1469 0004 23F00103 		bic	r3, r3, #1
 1470 0008 1362     		str	r3, [r2, #32]
 759:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 1471              		.loc 1 759 1 is_stmt 0 view .LVU270
 1472 000a 7047     		bx	lr
 1473              	.L133:
 1474              		.align	2
 1475              	.L132:
 1476 000c 00080244 		.word	1140983808
 1477              		.cfi_endproc
 1478              	.LFE394:
 1480              		.section	.text.HAL_PWREx_EnableStandbyIORetention,"ax",%progbits
 1481              		.align	1
 1482              		.global	HAL_PWREx_EnableStandbyIORetention
 1483              		.syntax unified
 1484              		.thumb
 1485              		.thumb_func
 1486              		.fpu fpv4-sp-d16
 1488              	HAL_PWREx_EnableStandbyIORetention:
 1489              	.LFB395:
 760:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 761:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @}
 762:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 763:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 764:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group5 IO and JTAG Retention Functions
 765:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief    IO and JTAG Retention functions
 766:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *
 767:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** @verbatim
 768:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****  ===============================================================================
 769:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****                      ##### IO and JTAG Retention Functions #####
 770:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****  ===============================================================================
 771:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****     [..]
 772:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       In the Standby mode, the I/Os are by default in floating state. If the IORETEN bit in the
 773:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       PWR_IORETR register is set, the I/Os output state is retained. IO Retention mode is
 774:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       enabled for all IO except the IO support the standby functionality and JTAG IOs (PA13,
ARM GAS  /tmp/cc9o9g6Q.s 			page 48


 775:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       PA14, PA15 and PB4). When entering into Standby mode, the state of the output is
 776:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       sampled, and pull-up or pull-down resistor are set to maintain the IO output during Standby
 777:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       mode.
 778:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       If the JTAGIORETEN bit in the PWR_IORETR register is set, the I/Os output state is
 779:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       retained. IO Retention mode is enabled for PA13, PA14, PA15 and PB4 (default JTAG pullup/
 780:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****       pull-down after wakeup are not enabled).
 781:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** @endverbatim
 782:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @{
 783:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 784:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 785:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 786:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Enable GPIO state retention in Standby mode.
 787:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   When entering into standby mode, the output is sampled, and applied to the output IO du
 788:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         the standby power mode
 789:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 790:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 791:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_EnableStandbyIORetention(void)
 792:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 1490              		.loc 1 792 1 is_stmt 1 view -0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 0, uses_anonymous_args = 0
 1494              		@ link register save eliminated.
 793:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Enable GPIO state retention */
 794:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   SET_BIT(PWR->IORETR, PWR_IORETR_IORETEN);
 1495              		.loc 1 794 3 view .LVU272
 1496 0000 024A     		ldr	r2, .L135
 1497 0002 136D     		ldr	r3, [r2, #80]
 1498 0004 43F00103 		orr	r3, r3, #1
 1499 0008 1365     		str	r3, [r2, #80]
 795:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 1500              		.loc 1 795 1 is_stmt 0 view .LVU273
 1501 000a 7047     		bx	lr
 1502              	.L136:
 1503              		.align	2
 1504              	.L135:
 1505 000c 00080244 		.word	1140983808
 1506              		.cfi_endproc
 1507              	.LFE395:
 1509              		.section	.text.HAL_PWREx_DisableStandbyIORetention,"ax",%progbits
 1510              		.align	1
 1511              		.global	HAL_PWREx_DisableStandbyIORetention
 1512              		.syntax unified
 1513              		.thumb
 1514              		.thumb_func
 1515              		.fpu fpv4-sp-d16
 1517              	HAL_PWREx_DisableStandbyIORetention:
 1518              	.LFB396:
 796:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 797:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 798:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Disable GPIO state retention in Standby mode.
 799:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 800:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 801:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_DisableStandbyIORetention(void)
 802:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 1519              		.loc 1 802 1 is_stmt 1 view -0
 1520              		.cfi_startproc
ARM GAS  /tmp/cc9o9g6Q.s 			page 49


 1521              		@ args = 0, pretend = 0, frame = 0
 1522              		@ frame_needed = 0, uses_anonymous_args = 0
 1523              		@ link register save eliminated.
 803:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Disable GPIO state retention */
 804:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->IORETR, PWR_IORETR_IORETEN);
 1524              		.loc 1 804 3 view .LVU275
 1525 0000 024A     		ldr	r2, .L138
 1526 0002 136D     		ldr	r3, [r2, #80]
 1527 0004 23F00103 		bic	r3, r3, #1
 1528 0008 1365     		str	r3, [r2, #80]
 805:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 1529              		.loc 1 805 1 is_stmt 0 view .LVU276
 1530 000a 7047     		bx	lr
 1531              	.L139:
 1532              		.align	2
 1533              	.L138:
 1534 000c 00080244 		.word	1140983808
 1535              		.cfi_endproc
 1536              	.LFE396:
 1538              		.section	.text.HAL_PWREx_EnableStandbyJTAGIORetention,"ax",%progbits
 1539              		.align	1
 1540              		.global	HAL_PWREx_EnableStandbyJTAGIORetention
 1541              		.syntax unified
 1542              		.thumb
 1543              		.thumb_func
 1544              		.fpu fpv4-sp-d16
 1546              	HAL_PWREx_EnableStandbyJTAGIORetention:
 1547              	.LFB397:
 806:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 808:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief  Enable JTAG IOs state retention in Standby mode.
 809:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @note   when entering into standby mode, the output is sampled, and applied to the output IO du
 810:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   *         the standby power mode
 811:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 812:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 813:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_EnableStandbyJTAGIORetention(void)
 814:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 1548              		.loc 1 814 1 is_stmt 1 view -0
 1549              		.cfi_startproc
 1550              		@ args = 0, pretend = 0, frame = 0
 1551              		@ frame_needed = 0, uses_anonymous_args = 0
 1552              		@ link register save eliminated.
 815:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Enable JTAG IOs state retention */
 816:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   SET_BIT(PWR->IORETR, PWR_IORETR_JTAGIORETEN);
 1553              		.loc 1 816 3 view .LVU278
 1554 0000 024A     		ldr	r2, .L141
 1555 0002 136D     		ldr	r3, [r2, #80]
 1556 0004 43F48033 		orr	r3, r3, #65536
 1557 0008 1365     		str	r3, [r2, #80]
 817:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 1558              		.loc 1 817 1 is_stmt 0 view .LVU279
 1559 000a 7047     		bx	lr
 1560              	.L142:
 1561              		.align	2
 1562              	.L141:
 1563 000c 00080244 		.word	1140983808
 1564              		.cfi_endproc
ARM GAS  /tmp/cc9o9g6Q.s 			page 50


 1565              	.LFE397:
 1567              		.section	.text.HAL_PWREx_DisableStandbyJTAGIORetention,"ax",%progbits
 1568              		.align	1
 1569              		.global	HAL_PWREx_DisableStandbyJTAGIORetention
 1570              		.syntax unified
 1571              		.thumb
 1572              		.thumb_func
 1573              		.fpu fpv4-sp-d16
 1575              	HAL_PWREx_DisableStandbyJTAGIORetention:
 1576              	.LFB398:
 818:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** 
 819:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** /**
 820:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @brief Disable JTAG IOs state retention in Standby mode.
 821:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   * @retval None.
 822:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   */
 823:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** void HAL_PWREx_DisableStandbyJTAGIORetention(void)
 824:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** {
 1577              		.loc 1 824 1 is_stmt 1 view -0
 1578              		.cfi_startproc
 1579              		@ args = 0, pretend = 0, frame = 0
 1580              		@ frame_needed = 0, uses_anonymous_args = 0
 1581              		@ link register save eliminated.
 825:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   /* Enable JTAG IOs state retention */
 826:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->IORETR, PWR_IORETR_JTAGIORETEN);
 1582              		.loc 1 826 3 view .LVU281
 1583 0000 024A     		ldr	r2, .L144
 1584 0002 136D     		ldr	r3, [r2, #80]
 1585 0004 23F48033 		bic	r3, r3, #65536
 1586 0008 1365     		str	r3, [r2, #80]
 827:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c **** }
 1587              		.loc 1 827 1 is_stmt 0 view .LVU282
 1588 000a 7047     		bx	lr
 1589              	.L145:
 1590              		.align	2
 1591              	.L144:
 1592 000c 00080244 		.word	1140983808
 1593              		.cfi_endproc
 1594              	.LFE398:
 1596              		.text
 1597              	.Letext0:
 1598              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1599              		.file 4 "Drivers/CMSIS/Device/ST/STM32H5xx/Include/stm32h533xx.h"
 1600              		.file 5 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_def.h"
 1601              		.file 6 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_pwr_ex.h"
 1602              		.file 7 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal.h"
ARM GAS  /tmp/cc9o9g6Q.s 			page 51


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h5xx_hal_pwr_ex.c
     /tmp/cc9o9g6Q.s:18     .text.HAL_PWREx_ConfigSupply:0000000000000000 $t
     /tmp/cc9o9g6Q.s:27     .text.HAL_PWREx_ConfigSupply:0000000000000000 HAL_PWREx_ConfigSupply
     /tmp/cc9o9g6Q.s:104    .text.HAL_PWREx_ConfigSupply:0000000000000044 $d
     /tmp/cc9o9g6Q.s:109    .text.HAL_PWREx_GetSupplyConfig:0000000000000000 $t
     /tmp/cc9o9g6Q.s:116    .text.HAL_PWREx_GetSupplyConfig:0000000000000000 HAL_PWREx_GetSupplyConfig
     /tmp/cc9o9g6Q.s:135    .text.HAL_PWREx_GetSupplyConfig:0000000000000010 $d
     /tmp/cc9o9g6Q.s:140    .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 $t
     /tmp/cc9o9g6Q.s:147    .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 HAL_PWREx_ControlVoltageScaling
     /tmp/cc9o9g6Q.s:226    .text.HAL_PWREx_ControlVoltageScaling:0000000000000044 $d
     /tmp/cc9o9g6Q.s:231    .text.HAL_PWREx_GetVoltageRange:0000000000000000 $t
     /tmp/cc9o9g6Q.s:238    .text.HAL_PWREx_GetVoltageRange:0000000000000000 HAL_PWREx_GetVoltageRange
     /tmp/cc9o9g6Q.s:255    .text.HAL_PWREx_GetVoltageRange:000000000000000c $d
     /tmp/cc9o9g6Q.s:260    .text.HAL_PWREx_ControlStopModeVoltageScaling:0000000000000000 $t
     /tmp/cc9o9g6Q.s:267    .text.HAL_PWREx_ControlStopModeVoltageScaling:0000000000000000 HAL_PWREx_ControlStopModeVoltageScaling
     /tmp/cc9o9g6Q.s:291    .text.HAL_PWREx_ControlStopModeVoltageScaling:0000000000000010 $d
     /tmp/cc9o9g6Q.s:296    .text.HAL_PWREx_GetStopModeVoltageRange:0000000000000000 $t
     /tmp/cc9o9g6Q.s:303    .text.HAL_PWREx_GetStopModeVoltageRange:0000000000000000 HAL_PWREx_GetStopModeVoltageRange
     /tmp/cc9o9g6Q.s:320    .text.HAL_PWREx_GetStopModeVoltageRange:000000000000000c $d
     /tmp/cc9o9g6Q.s:325    .text.HAL_PWREx_ConfigAVD:0000000000000000 $t
     /tmp/cc9o9g6Q.s:332    .text.HAL_PWREx_ConfigAVD:0000000000000000 HAL_PWREx_ConfigAVD
     /tmp/cc9o9g6Q.s:419    .text.HAL_PWREx_ConfigAVD:000000000000008c $d
     /tmp/cc9o9g6Q.s:425    .text.HAL_PWREx_EnableAVD:0000000000000000 $t
     /tmp/cc9o9g6Q.s:432    .text.HAL_PWREx_EnableAVD:0000000000000000 HAL_PWREx_EnableAVD
     /tmp/cc9o9g6Q.s:449    .text.HAL_PWREx_EnableAVD:000000000000000c $d
     /tmp/cc9o9g6Q.s:454    .text.HAL_PWREx_DisableAVD:0000000000000000 $t
     /tmp/cc9o9g6Q.s:461    .text.HAL_PWREx_DisableAVD:0000000000000000 HAL_PWREx_DisableAVD
     /tmp/cc9o9g6Q.s:478    .text.HAL_PWREx_DisableAVD:000000000000000c $d
     /tmp/cc9o9g6Q.s:483    .text.HAL_PWREx_EnableUSBVoltageDetector:0000000000000000 $t
     /tmp/cc9o9g6Q.s:490    .text.HAL_PWREx_EnableUSBVoltageDetector:0000000000000000 HAL_PWREx_EnableUSBVoltageDetector
     /tmp/cc9o9g6Q.s:507    .text.HAL_PWREx_EnableUSBVoltageDetector:000000000000000c $d
     /tmp/cc9o9g6Q.s:512    .text.HAL_PWREx_DisableUSBVoltageDetector:0000000000000000 $t
     /tmp/cc9o9g6Q.s:519    .text.HAL_PWREx_DisableUSBVoltageDetector:0000000000000000 HAL_PWREx_DisableUSBVoltageDetector
     /tmp/cc9o9g6Q.s:536    .text.HAL_PWREx_DisableUSBVoltageDetector:000000000000000c $d
     /tmp/cc9o9g6Q.s:541    .text.HAL_PWREx_EnableVddUSB:0000000000000000 $t
     /tmp/cc9o9g6Q.s:548    .text.HAL_PWREx_EnableVddUSB:0000000000000000 HAL_PWREx_EnableVddUSB
     /tmp/cc9o9g6Q.s:565    .text.HAL_PWREx_EnableVddUSB:000000000000000c $d
     /tmp/cc9o9g6Q.s:570    .text.HAL_PWREx_DisableVddUSB:0000000000000000 $t
     /tmp/cc9o9g6Q.s:577    .text.HAL_PWREx_DisableVddUSB:0000000000000000 HAL_PWREx_DisableVddUSB
     /tmp/cc9o9g6Q.s:594    .text.HAL_PWREx_DisableVddUSB:000000000000000c $d
     /tmp/cc9o9g6Q.s:599    .text.HAL_PWREx_EnableMonitoring:0000000000000000 $t
     /tmp/cc9o9g6Q.s:606    .text.HAL_PWREx_EnableMonitoring:0000000000000000 HAL_PWREx_EnableMonitoring
     /tmp/cc9o9g6Q.s:623    .text.HAL_PWREx_EnableMonitoring:000000000000000c $d
     /tmp/cc9o9g6Q.s:628    .text.HAL_PWREx_DisableMonitoring:0000000000000000 $t
     /tmp/cc9o9g6Q.s:635    .text.HAL_PWREx_DisableMonitoring:0000000000000000 HAL_PWREx_DisableMonitoring
     /tmp/cc9o9g6Q.s:652    .text.HAL_PWREx_DisableMonitoring:000000000000000c $d
     /tmp/cc9o9g6Q.s:657    .text.HAL_PWREx_EnableUCPDStandbyMode:0000000000000000 $t
     /tmp/cc9o9g6Q.s:664    .text.HAL_PWREx_EnableUCPDStandbyMode:0000000000000000 HAL_PWREx_EnableUCPDStandbyMode
     /tmp/cc9o9g6Q.s:681    .text.HAL_PWREx_EnableUCPDStandbyMode:000000000000000c $d
     /tmp/cc9o9g6Q.s:686    .text.HAL_PWREx_DisableUCPDStandbyMode:0000000000000000 $t
     /tmp/cc9o9g6Q.s:693    .text.HAL_PWREx_DisableUCPDStandbyMode:0000000000000000 HAL_PWREx_DisableUCPDStandbyMode
     /tmp/cc9o9g6Q.s:710    .text.HAL_PWREx_DisableUCPDStandbyMode:000000000000000c $d
     /tmp/cc9o9g6Q.s:715    .text.HAL_PWREx_EnableUCPDDeadBattery:0000000000000000 $t
     /tmp/cc9o9g6Q.s:722    .text.HAL_PWREx_EnableUCPDDeadBattery:0000000000000000 HAL_PWREx_EnableUCPDDeadBattery
     /tmp/cc9o9g6Q.s:739    .text.HAL_PWREx_EnableUCPDDeadBattery:000000000000000c $d
     /tmp/cc9o9g6Q.s:744    .text.HAL_PWREx_DisableUCPDDeadBattery:0000000000000000 $t
ARM GAS  /tmp/cc9o9g6Q.s 			page 52


     /tmp/cc9o9g6Q.s:751    .text.HAL_PWREx_DisableUCPDDeadBattery:0000000000000000 HAL_PWREx_DisableUCPDDeadBattery
     /tmp/cc9o9g6Q.s:768    .text.HAL_PWREx_DisableUCPDDeadBattery:000000000000000c $d
     /tmp/cc9o9g6Q.s:773    .text.HAL_PWREx_EnableBatteryCharging:0000000000000000 $t
     /tmp/cc9o9g6Q.s:780    .text.HAL_PWREx_EnableBatteryCharging:0000000000000000 HAL_PWREx_EnableBatteryCharging
     /tmp/cc9o9g6Q.s:804    .text.HAL_PWREx_EnableBatteryCharging:0000000000000018 $d
     /tmp/cc9o9g6Q.s:809    .text.HAL_PWREx_DisableBatteryCharging:0000000000000000 $t
     /tmp/cc9o9g6Q.s:816    .text.HAL_PWREx_DisableBatteryCharging:0000000000000000 HAL_PWREx_DisableBatteryCharging
     /tmp/cc9o9g6Q.s:833    .text.HAL_PWREx_DisableBatteryCharging:000000000000000c $d
     /tmp/cc9o9g6Q.s:838    .text.HAL_PWREx_EnableAnalogBooster:0000000000000000 $t
     /tmp/cc9o9g6Q.s:845    .text.HAL_PWREx_EnableAnalogBooster:0000000000000000 HAL_PWREx_EnableAnalogBooster
     /tmp/cc9o9g6Q.s:866    .text.HAL_PWREx_EnableAnalogBooster:0000000000000014 $d
     /tmp/cc9o9g6Q.s:871    .text.HAL_PWREx_DisableAnalogBooster:0000000000000000 $t
     /tmp/cc9o9g6Q.s:878    .text.HAL_PWREx_DisableAnalogBooster:0000000000000000 HAL_PWREx_DisableAnalogBooster
     /tmp/cc9o9g6Q.s:899    .text.HAL_PWREx_DisableAnalogBooster:0000000000000014 $d
     /tmp/cc9o9g6Q.s:904    .text.HAL_PWREx_PVD_AVD_Rising_Callback:0000000000000000 $t
     /tmp/cc9o9g6Q.s:911    .text.HAL_PWREx_PVD_AVD_Rising_Callback:0000000000000000 HAL_PWREx_PVD_AVD_Rising_Callback
     /tmp/cc9o9g6Q.s:924    .text.HAL_PWREx_PVD_AVD_Falling_Callback:0000000000000000 $t
     /tmp/cc9o9g6Q.s:931    .text.HAL_PWREx_PVD_AVD_Falling_Callback:0000000000000000 HAL_PWREx_PVD_AVD_Falling_Callback
     /tmp/cc9o9g6Q.s:944    .text.HAL_PWREx_PVD_AVD_IRQHandler:0000000000000000 $t
     /tmp/cc9o9g6Q.s:951    .text.HAL_PWREx_PVD_AVD_IRQHandler:0000000000000000 HAL_PWREx_PVD_AVD_IRQHandler
     /tmp/cc9o9g6Q.s:1002   .text.HAL_PWREx_PVD_AVD_IRQHandler:0000000000000034 $d
     /tmp/cc9o9g6Q.s:1007   .text.HAL_PWREx_EnableWakeUpPin:0000000000000000 $t
     /tmp/cc9o9g6Q.s:1014   .text.HAL_PWREx_EnableWakeUpPin:0000000000000000 HAL_PWREx_EnableWakeUpPin
     /tmp/cc9o9g6Q.s:1260   .text.HAL_PWREx_EnableWakeUpPin:0000000000000084 $d
     /tmp/cc9o9g6Q.s:1267   .text.HAL_PWREx_DisableWakeUpPin:0000000000000000 $t
     /tmp/cc9o9g6Q.s:1274   .text.HAL_PWREx_DisableWakeUpPin:0000000000000000 HAL_PWREx_DisableWakeUpPin
     /tmp/cc9o9g6Q.s:1296   .text.HAL_PWREx_DisableWakeUpPin:0000000000000010 $d
     /tmp/cc9o9g6Q.s:1301   .text.HAL_PWREx_EnableFlashPowerDown:0000000000000000 $t
     /tmp/cc9o9g6Q.s:1308   .text.HAL_PWREx_EnableFlashPowerDown:0000000000000000 HAL_PWREx_EnableFlashPowerDown
     /tmp/cc9o9g6Q.s:1325   .text.HAL_PWREx_EnableFlashPowerDown:000000000000000c $d
     /tmp/cc9o9g6Q.s:1330   .text.HAL_PWREx_DisableFlashPowerDown:0000000000000000 $t
     /tmp/cc9o9g6Q.s:1337   .text.HAL_PWREx_DisableFlashPowerDown:0000000000000000 HAL_PWREx_DisableFlashPowerDown
     /tmp/cc9o9g6Q.s:1354   .text.HAL_PWREx_DisableFlashPowerDown:000000000000000c $d
     /tmp/cc9o9g6Q.s:1359   .text.HAL_PWREx_EnableMemoryShutOff:0000000000000000 $t
     /tmp/cc9o9g6Q.s:1366   .text.HAL_PWREx_EnableMemoryShutOff:0000000000000000 HAL_PWREx_EnableMemoryShutOff
     /tmp/cc9o9g6Q.s:1385   .text.HAL_PWREx_EnableMemoryShutOff:000000000000000c $d
     /tmp/cc9o9g6Q.s:1390   .text.HAL_PWREx_DisableMemoryShutOff:0000000000000000 $t
     /tmp/cc9o9g6Q.s:1397   .text.HAL_PWREx_DisableMemoryShutOff:0000000000000000 HAL_PWREx_DisableMemoryShutOff
     /tmp/cc9o9g6Q.s:1416   .text.HAL_PWREx_DisableMemoryShutOff:000000000000000c $d
     /tmp/cc9o9g6Q.s:1421   .text.HAL_PWREx_EnableBkupRAMRetention:0000000000000000 $t
     /tmp/cc9o9g6Q.s:1428   .text.HAL_PWREx_EnableBkupRAMRetention:0000000000000000 HAL_PWREx_EnableBkupRAMRetention
     /tmp/cc9o9g6Q.s:1447   .text.HAL_PWREx_EnableBkupRAMRetention:0000000000000010 $d
     /tmp/cc9o9g6Q.s:1452   .text.HAL_PWREx_DisableBkupRAMRetention:0000000000000000 $t
     /tmp/cc9o9g6Q.s:1459   .text.HAL_PWREx_DisableBkupRAMRetention:0000000000000000 HAL_PWREx_DisableBkupRAMRetention
     /tmp/cc9o9g6Q.s:1476   .text.HAL_PWREx_DisableBkupRAMRetention:000000000000000c $d
     /tmp/cc9o9g6Q.s:1481   .text.HAL_PWREx_EnableStandbyIORetention:0000000000000000 $t
     /tmp/cc9o9g6Q.s:1488   .text.HAL_PWREx_EnableStandbyIORetention:0000000000000000 HAL_PWREx_EnableStandbyIORetention
     /tmp/cc9o9g6Q.s:1505   .text.HAL_PWREx_EnableStandbyIORetention:000000000000000c $d
     /tmp/cc9o9g6Q.s:1510   .text.HAL_PWREx_DisableStandbyIORetention:0000000000000000 $t
     /tmp/cc9o9g6Q.s:1517   .text.HAL_PWREx_DisableStandbyIORetention:0000000000000000 HAL_PWREx_DisableStandbyIORetention
     /tmp/cc9o9g6Q.s:1534   .text.HAL_PWREx_DisableStandbyIORetention:000000000000000c $d
     /tmp/cc9o9g6Q.s:1539   .text.HAL_PWREx_EnableStandbyJTAGIORetention:0000000000000000 $t
     /tmp/cc9o9g6Q.s:1546   .text.HAL_PWREx_EnableStandbyJTAGIORetention:0000000000000000 HAL_PWREx_EnableStandbyJTAGIORetention
     /tmp/cc9o9g6Q.s:1563   .text.HAL_PWREx_EnableStandbyJTAGIORetention:000000000000000c $d
     /tmp/cc9o9g6Q.s:1568   .text.HAL_PWREx_DisableStandbyJTAGIORetention:0000000000000000 $t
     /tmp/cc9o9g6Q.s:1575   .text.HAL_PWREx_DisableStandbyJTAGIORetention:0000000000000000 HAL_PWREx_DisableStandbyJTAGIORetention
     /tmp/cc9o9g6Q.s:1592   .text.HAL_PWREx_DisableStandbyJTAGIORetention:000000000000000c $d
ARM GAS  /tmp/cc9o9g6Q.s 			page 53



UNDEFINED SYMBOLS
HAL_GetTick
