ARM GAS  /tmp/ccPzREru.s 			page 1


   1              		.cpu cortex-m33
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32h5xx_hal.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_MspInit
  20              		.arch armv8-m.main
  21              		.arch_extension dsp
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	HAL_MspInit:
  28              	.LFB363:
  29              		.file 1 "Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c"
   1:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
   2:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *************************************************************************************************
   3:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @file    stm32h5xx_hal.c
   4:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
   8:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   @verbatim
   9:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   =================================================================================================
  10:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   =================================================================================================
  12:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]
  13:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]
  16:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     The HAL contains two APIs' categories:
  17:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  20:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   @endverbatim
  21:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *************************************************************************************************
  22:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @attention
  23:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
  24:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * Copyright (c) 2023 STMicroelectronics.
  25:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * All rights reserved.
  26:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
  27:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * This software is licensed under terms that can be found in the LICENSE file
  28:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * in the root directory of this software component.
  29:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
ARM GAS  /tmp/ccPzREru.s 			page 2


  30:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
  31:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *************************************************************************************************
  32:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
  33:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  34:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Includes ---------------------------------------------------------------------------------------
  35:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #include "stm32h5xx_hal.h"
  36:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  37:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @addtogroup STM32H5xx_HAL_Driver
  38:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
  39:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
  40:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  41:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL HAL
  42:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief HAL module driver
  43:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
  44:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
  45:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  46:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  47:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  48:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Private typedef --------------------------------------------------------------------------------
  49:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Private define ---------------------------------------------------------------------------------
  50:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
  51:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief STM32H5xx HAL Driver version number 1.3.0
  52:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****    */
  53:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define __STM32H5XX_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  54:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define __STM32H5XX_HAL_VERSION_SUB1   (0x03U) /*!< [23:16] sub1 version */
  55:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define __STM32H5XX_HAL_VERSION_SUB2   (0x00U) /*!< [15:8]  sub2 version */
  56:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define __STM32H5XX_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  57:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define __STM32H5XX_HAL_VERSION         ((__STM32H5XX_HAL_VERSION_MAIN << 24U)\
  58:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                          |(__STM32H5XX_HAL_VERSION_SUB1 << 16U)\
  59:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                          |(__STM32H5XX_HAL_VERSION_SUB2 << 8U )\
  60:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                          |(__STM32H5XX_HAL_VERSION_RC))
  61:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  62:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined(VREFBUF)
  63:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define VREFBUF_TIMEOUT_VALUE           10U   /* 10 ms */
  64:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* VREFBUF */
  65:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  66:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Value used to increment hide protection level */
  67:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define SBS_HDPL_INCREMENT_VALUE  (uint8_t)0x6A
  68:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  69:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Value used to lock/unlock debug functionalities */
  70:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define SBS_DEBUG_LOCK_VALUE      (uint8_t)0xC3
  71:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define SBS_DEBUG_UNLOCK_VALUE    (uint8_t)0xB4
  72:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  73:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Private macro ----------------------------------------------------------------------------------
  74:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Private variables ------------------------------------------------------------------------------
  75:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Exported variables -----------------------------------------------------------------------------
  76:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  77:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Variables HAL Exported Variables
  78:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
  79:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
  80:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __IO uint32_t uwTick;
  81:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  82:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  83:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
  84:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
  85:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
  86:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
ARM GAS  /tmp/ccPzREru.s 			page 3


  87:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Private function prototypes --------------------------------------------------------------------
  88:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Exported functions -----------------------------------------------------------------------------
  89:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  90:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  91:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
  92:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
  93:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  94:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions
  95:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief    Initialization and de-initialization functions
  96:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
  97:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
  98:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
  99:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****               ##### Initialization and de-initialization functions #####
 100:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 101:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]  This section provides functions allowing to:
 102:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock
 103:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
 104:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****           and the backup domain when enabled.
 105:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) De-Initializes common part of the HAL.
 106:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
 107:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****           Tick interrupt priority.
 108:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 109:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              handled in milliseconds basis.
 113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 114:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 115:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 116:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 117:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 118:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 119:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 120:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****             ISR process will be blocked.
 121:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 123:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
 124:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
 125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 126:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 128:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Configure the Flash prefetch, the time base source, NVIC and any required global low
 129:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         level hardware by calling the HAL_MspInit() callback function to be optionally defined
 130:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         in user file stm32h5xx_hal_msp.c.
 131:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   HAL_Init() function is called at the beginning of program after reset and before
 133:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         the clock configuration.
 134:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 135:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   In the default implementation the System Timer (SysTick) is used as source of time base
 136:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         The SysTick configuration is based on HSI clock, as HSI is the clock
 137:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         used after a system Reset and the NVIC configuration is set to Priority group 4.
 138:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         Once done, time base tick starts incrementing: the tick variable counter is incremented
 139:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         each 1ms in the SysTick_Handler() interrupt handler.
 140:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval HAL status
 142:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 143:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
ARM GAS  /tmp/ccPzREru.s 			page 4


 144:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 145:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Configure Flash prefetch */
 146:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 147:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 148:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* PREFETCH_ENABLE */
 149:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 150:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Set Interrupt Group Priority */
 151:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 152:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 153:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Update the SystemCoreClock global variable */
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC
 155:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 156:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Select HCLK as SysTick clock source */
 157:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 158:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 159:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 161:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 162:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     return HAL_ERROR;
 163:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 164:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 165:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Init the low level hardware */
 166:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   HAL_MspInit();
 167:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 168:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Return function status */
 169:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return HAL_OK;
 170:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 171:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 172:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 173:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 174:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This function is optional.
 175:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval HAL status
 176:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 177:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 178:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 179:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Reset of all peripherals */
 180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 182:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 183:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 184:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 185:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB3_FORCE_RESET();
 187:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB3_RELEASE_RESET();
 188:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 189:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 191:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 192:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 193:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 194:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 195:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined(AHB4PERIPH_BASE)
 196:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_AHB4_FORCE_RESET();
 197:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_AHB4_RELEASE_RESET();
 198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* AHB4PERIPH_BASE */
 199:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 200:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* De-Init the low level hardware */
ARM GAS  /tmp/ccPzREru.s 			page 5


 201:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   HAL_MspDeInit();
 202:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 203:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Return function status */
 204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return HAL_OK;
 205:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 206:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 208:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Initializes the MSP.
 209:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 210:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __weak void HAL_MspInit(void)
 212:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
  30              		.loc 1 212 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 213:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 214:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 215:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****    */
 216:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
  35              		.loc 1 216 1 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE363:
  40              		.section	.text.HAL_MspDeInit,"ax",%progbits
  41              		.align	1
  42              		.weak	HAL_MspDeInit
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	HAL_MspDeInit:
  49              	.LFB364:
 217:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 219:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  DeInitializes the MSP.
 220:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 221:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 222:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __weak void HAL_MspDeInit(void)
 223:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
  50              		.loc 1 223 1 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
 224:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 225:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 226:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****    */
 227:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
  55              		.loc 1 227 1 view .LVU3
  56 0000 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE364:
  60              		.section	.text.HAL_DeInit,"ax",%progbits
  61              		.align	1
  62              		.global	HAL_DeInit
ARM GAS  /tmp/ccPzREru.s 			page 6


  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv4-sp-d16
  68              	HAL_DeInit:
  69              	.LFB362:
 178:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Reset of all peripherals */
  70              		.loc 1 178 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74 0000 10B5     		push	{r4, lr}
  75              	.LCFI0:
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 4, -8
  78              		.cfi_offset 14, -4
 180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  79              		.loc 1 180 3 view .LVU5
 180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  80              		.loc 1 180 3 view .LVU6
  81 0002 0E4B     		ldr	r3, .L5
  82 0004 0E4A     		ldr	r2, .L5+4
  83 0006 5A67     		str	r2, [r3, #116]
 180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  84              		.loc 1 180 3 view .LVU7
  85 0008 0E4A     		ldr	r2, .L5+8
  86 000a 9A67     		str	r2, [r3, #120]
 180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  87              		.loc 1 180 3 view .LVU8
 181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  88              		.loc 1 181 3 view .LVU9
 181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  89              		.loc 1 181 3 view .LVU10
  90 000c 0024     		movs	r4, #0
  91 000e 5C67     		str	r4, [r3, #116]
 181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  92              		.loc 1 181 3 view .LVU11
  93 0010 9C67     		str	r4, [r3, #120]
 181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  94              		.loc 1 181 3 view .LVU12
 183:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  95              		.loc 1 183 3 view .LVU13
  96 0012 0D4A     		ldr	r2, .L5+12
  97 0014 DA67     		str	r2, [r3, #124]
 184:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  98              		.loc 1 184 3 view .LVU14
  99 0016 DC67     		str	r4, [r3, #124]
 186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB3_RELEASE_RESET();
 100              		.loc 1 186 3 view .LVU15
 101 0018 0C4A     		ldr	r2, .L5+16
 102 001a C3F88020 		str	r2, [r3, #128]
 187:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 103              		.loc 1 187 3 view .LVU16
 104 001e C3F88040 		str	r4, [r3, #128]
 189:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 105              		.loc 1 189 3 view .LVU17
 106 0022 0B4A     		ldr	r2, .L5+20
ARM GAS  /tmp/ccPzREru.s 			page 7


 107 0024 1A66     		str	r2, [r3, #96]
 190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 108              		.loc 1 190 3 view .LVU18
 109 0026 1C66     		str	r4, [r3, #96]
 192:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 110              		.loc 1 192 3 view .LVU19
 111 0028 0A4A     		ldr	r2, .L5+24
 112 002a 5A66     		str	r2, [r3, #100]
 193:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 113              		.loc 1 193 3 view .LVU20
 114 002c 5C66     		str	r4, [r3, #100]
 196:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_AHB4_RELEASE_RESET();
 115              		.loc 1 196 3 view .LVU21
 116 002e 0A4A     		ldr	r2, .L5+28
 117 0030 DA66     		str	r2, [r3, #108]
 197:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* AHB4PERIPH_BASE */
 118              		.loc 1 197 3 view .LVU22
 119 0032 DC66     		str	r4, [r3, #108]
 201:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 120              		.loc 1 201 3 view .LVU23
 121 0034 FFF7FEFF 		bl	HAL_MspDeInit
 122              	.LVL0:
 204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 123              		.loc 1 204 3 view .LVU24
 205:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 124              		.loc 1 205 1 is_stmt 0 view .LVU25
 125 0038 2046     		mov	r0, r4
 126 003a 10BD     		pop	{r4, pc}
 127              	.L6:
 128              		.align	2
 129              	.L5:
 130 003c 000C0244 		.word	1140984832
 131 0040 FFC1FEDF 		.word	-536952321
 132 0044 2B068040 		.word	1082132011
 133 0048 00787F01 		.word	25131008
 134 004c E0081000 		.word	1050848
 135 0050 03D00A01 		.word	17485827
 136 0054 FF1D1F00 		.word	2039295
 137 0058 80181100 		.word	1120384
 138              		.cfi_endproc
 139              	.LFE362:
 141              		.section	.text.HAL_InitTick,"ax",%progbits
 142              		.align	1
 143              		.weak	HAL_InitTick
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu fpv4-sp-d16
 149              	HAL_InitTick:
 150              	.LVL1:
 151              	.LFB365:
 228:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 229:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 230:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief This function configures the source of the time base.
 231:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *        The time source is configured to have 1ms time base with a dedicated
 232:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *        Tick interrupt priority.
 233:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
ARM GAS  /tmp/ccPzREru.s 			page 8


 234:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 235:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 236:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 237:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 238:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 239:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 240:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 241:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       implementation  in user file.
 242:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param TickPriority: Tick interrupt priority.
 243:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval HAL status
 244:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 245:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 246:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 152              		.loc 1 246 1 is_stmt 1 view -0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		.loc 1 246 1 is_stmt 0 view .LVU27
 157 0000 38B5     		push	{r3, r4, r5, lr}
 158              	.LCFI1:
 159              		.cfi_def_cfa_offset 16
 160              		.cfi_offset 3, -16
 161              		.cfi_offset 4, -12
 162              		.cfi_offset 5, -8
 163              		.cfi_offset 14, -4
 247:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   uint32_t ticknumber = 0U;
 164              		.loc 1 247 3 is_stmt 1 view .LVU28
 165              	.LVL2:
 248:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   uint32_t systicksel;
 166              		.loc 1 248 3 view .LVU29
 249:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 250:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value 
 251:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   if ((uint32_t)uwTickFreq == 0UL)
 167              		.loc 1 251 3 view .LVU30
 168              		.loc 1 251 28 is_stmt 0 view .LVU31
 169 0002 274B     		ldr	r3, .L17
 170 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 171              		.loc 1 251 6 view .LVU32
 172 0006 002A     		cmp	r2, #0
 173 0008 47D0     		beq	.L13
 174 000a 0546     		mov	r5, r0
 252:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 253:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     return HAL_ERROR;
 254:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 255:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 256:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check Clock source to calculate the tickNumber */
 257:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   if (READ_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk) == SysTick_CTRL_CLKSOURCE_Msk)
 175              		.loc 1 257 3 is_stmt 1 view .LVU33
 176              		.loc 1 257 7 is_stmt 0 view .LVU34
 177 000c 4FF0E023 		mov	r3, #-536813568
 178 0010 1C69     		ldr	r4, [r3, #16]
 179              		.loc 1 257 6 view .LVU35
 180 0012 14F00404 		ands	r4, r4, #4
 181 0016 0DD0     		beq	.L9
 258:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 259:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     /* HCLK selected as SysTick clock source */
 260:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     ticknumber = SystemCoreClock / (1000UL / (uint32_t)uwTickFreq);
ARM GAS  /tmp/ccPzREru.s 			page 9


 182              		.loc 1 260 5 is_stmt 1 view .LVU36
 183              		.loc 1 260 34 is_stmt 0 view .LVU37
 184 0018 224B     		ldr	r3, .L17+4
 185 001a 1B68     		ldr	r3, [r3]
 186              		.loc 1 260 44 view .LVU38
 187 001c 4FF47A74 		mov	r4, #1000
 188 0020 B4FBF2F2 		udiv	r2, r4, r2
 189              		.loc 1 260 16 view .LVU39
 190 0024 B3FBF2F4 		udiv	r4, r3, r2
 191              	.LVL3:
 192              	.L10:
 261:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 262:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   else
 263:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 264:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     systicksel = HAL_SYSTICK_GetCLKSourceConfig();
 265:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     switch (systicksel)
 266:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     {
 267:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       /* HCLK_DIV8 selected as SysTick clock source */
 268:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       case SYSTICK_CLKSOURCE_HCLK_DIV8:
 269:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         /* Calculate tick value */
 270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         ticknumber = (SystemCoreClock / (8000UL / (uint32_t)uwTickFreq));
 271:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 272:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       /* LSI selected as SysTick clock source */
 273:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       case SYSTICK_CLKSOURCE_LSI:
 274:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         /* Calculate tick value */
 275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         ticknumber = (LSI_VALUE / (1000UL / (uint32_t)uwTickFreq));
 276:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 277:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       /* LSE selected as SysTick clock source */
 278:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       case SYSTICK_CLKSOURCE_LSE:
 279:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         /* Calculate tick value */
 280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         ticknumber = (LSE_VALUE / (1000UL / (uint32_t)uwTickFreq));
 281:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 282:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       default:
 283:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         /* Nothing to do */
 284:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 285:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     }
 286:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 287:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 288:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 289:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   if (HAL_SYSTICK_Config(ticknumber) > 0U)
 193              		.loc 1 289 3 is_stmt 1 view .LVU40
 194              		.loc 1 289 7 is_stmt 0 view .LVU41
 195 0028 2046     		mov	r0, r4
 196 002a FFF7FEFF 		bl	HAL_SYSTICK_Config
 197              	.LVL4:
 198              		.loc 1 289 6 view .LVU42
 199 002e 50B3     		cbz	r0, .L16
 290:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 291:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     return HAL_ERROR;
 200              		.loc 1 291 12 view .LVU43
 201 0030 0120     		movs	r0, #1
 202 0032 33E0     		b	.L8
 203              	.LVL5:
 204              	.L9:
 264:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     switch (systicksel)
 205              		.loc 1 264 5 is_stmt 1 view .LVU44
 264:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     switch (systicksel)
ARM GAS  /tmp/ccPzREru.s 			page 10


 206              		.loc 1 264 18 is_stmt 0 view .LVU45
 207 0034 FFF7FEFF 		bl	HAL_SYSTICK_GetCLKSourceConfig
 208              	.LVL6:
 265:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     {
 209              		.loc 1 265 5 is_stmt 1 view .LVU46
 210 0038 0128     		cmp	r0, #1
 211 003a 0ED0     		beq	.L11
 212 003c 0228     		cmp	r0, #2
 213 003e 17D0     		beq	.L12
 214 0040 0028     		cmp	r0, #0
 215 0042 F1D1     		bne	.L10
 270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 216              		.loc 1 270 9 view .LVU47
 270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 217              		.loc 1 270 39 is_stmt 0 view .LVU48
 218 0044 174B     		ldr	r3, .L17+4
 219 0046 1B68     		ldr	r3, [r3]
 270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 220              		.loc 1 270 51 view .LVU49
 221 0048 154A     		ldr	r2, .L17
 222 004a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 223              		.loc 1 270 49 view .LVU50
 224 004c 4FF4FA54 		mov	r4, #8000
 225 0050 B4FBF2F4 		udiv	r4, r4, r2
 270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 226              		.loc 1 270 20 view .LVU51
 227 0054 B3FBF4F4 		udiv	r4, r3, r4
 228              	.LVL7:
 271:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       /* LSI selected as SysTick clock source */
 229              		.loc 1 271 9 is_stmt 1 view .LVU52
 230 0058 E6E7     		b	.L10
 231              	.LVL8:
 232              	.L11:
 275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 233              		.loc 1 275 9 view .LVU53
 275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 234              		.loc 1 275 45 is_stmt 0 view .LVU54
 235 005a 114B     		ldr	r3, .L17
 236 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 237              		.loc 1 275 43 view .LVU55
 238 005e 4FF47A74 		mov	r4, #1000
 239 0062 B4FBF3F4 		udiv	r4, r4, r3
 275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 240              		.loc 1 275 20 view .LVU56
 241 0066 4FF4FA43 		mov	r3, #32000
 242 006a B3FBF4F4 		udiv	r4, r3, r4
 243              	.LVL9:
 276:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       /* LSE selected as SysTick clock source */
 244              		.loc 1 276 9 is_stmt 1 view .LVU57
 245 006e DBE7     		b	.L10
 246              	.LVL10:
 247              	.L12:
 280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 248              		.loc 1 280 9 view .LVU58
 280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
ARM GAS  /tmp/ccPzREru.s 			page 11


 249              		.loc 1 280 45 is_stmt 0 view .LVU59
 250 0070 0B4B     		ldr	r3, .L17
 251 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 252              		.loc 1 280 43 view .LVU60
 253 0074 4FF47A74 		mov	r4, #1000
 254 0078 B4FBF3F4 		udiv	r4, r4, r3
 280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 255              		.loc 1 280 20 view .LVU61
 256 007c 4FF40043 		mov	r3, #32768
 257 0080 B3FBF4F4 		udiv	r4, r3, r4
 258              	.LVL11:
 281:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       default:
 259              		.loc 1 281 9 is_stmt 1 view .LVU62
 260 0084 D0E7     		b	.L10
 261              	.LVL12:
 262              	.L16:
 292:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 293:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 294:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Configure the SysTick IRQ priority */
 295:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 263              		.loc 1 295 3 view .LVU63
 264 0086 0022     		movs	r2, #0
 265 0088 2946     		mov	r1, r5
 266 008a 4FF0FF30 		mov	r0, #-1
 267 008e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 268              	.LVL13:
 296:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   uwTickPrio = TickPriority;
 269              		.loc 1 296 3 view .LVU64
 270              		.loc 1 296 14 is_stmt 0 view .LVU65
 271 0092 054B     		ldr	r3, .L17+8
 272 0094 1D60     		str	r5, [r3]
 297:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 298:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Return function status */
 299:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return HAL_OK;
 273              		.loc 1 299 3 is_stmt 1 view .LVU66
 274              		.loc 1 299 10 is_stmt 0 view .LVU67
 275 0096 0020     		movs	r0, #0
 276 0098 00E0     		b	.L8
 277              	.LVL14:
 278              	.L13:
 253:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 279              		.loc 1 253 12 view .LVU68
 280 009a 0120     		movs	r0, #1
 281              	.LVL15:
 282              	.L8:
 300:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 283              		.loc 1 300 1 view .LVU69
 284 009c 38BD     		pop	{r3, r4, r5, pc}
 285              	.L18:
 286 009e 00BF     		.align	2
 287              	.L17:
 288 00a0 00000000 		.word	.LANCHOR0
 289 00a4 00000000 		.word	SystemCoreClock
 290 00a8 00000000 		.word	.LANCHOR1
 291              		.cfi_endproc
 292              	.LFE365:
ARM GAS  /tmp/ccPzREru.s 			page 12


 294              		.section	.text.HAL_Init,"ax",%progbits
 295              		.align	1
 296              		.global	HAL_Init
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu fpv4-sp-d16
 302              	HAL_Init:
 303              	.LFB361:
 144:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Configure Flash prefetch */
 304              		.loc 1 144 1 is_stmt 1 view -0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308 0000 10B5     		push	{r4, lr}
 309              	.LCFI2:
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 4, -8
 312              		.cfi_offset 14, -4
 151:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 313              		.loc 1 151 3 view .LVU71
 314 0002 0320     		movs	r0, #3
 315 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 316              	.LVL16:
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 317              		.loc 1 154 3 view .LVU72
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 318              		.loc 1 154 21 is_stmt 0 view .LVU73
 319 0008 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 320              	.LVL17:
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 321              		.loc 1 154 68 view .LVU74
 322 000c 0B4B     		ldr	r3, .L24
 323 000e 1B6A     		ldr	r3, [r3, #32]
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 324              		.loc 1 154 94 view .LVU75
 325 0010 03F00F03 		and	r3, r3, #15
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 326              		.loc 1 154 63 view .LVU76
 327 0014 0A4A     		ldr	r2, .L24+4
 328 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 329              		.loc 1 154 47 view .LVU77
 330 0018 D840     		lsrs	r0, r0, r3
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 331              		.loc 1 154 19 view .LVU78
 332 001a 0A4B     		ldr	r3, .L24+8
 333 001c 1860     		str	r0, [r3]
 157:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 334              		.loc 1 157 3 is_stmt 1 view .LVU79
 335 001e 0420     		movs	r0, #4
 336 0020 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 337              	.LVL18:
 160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 338              		.loc 1 160 3 view .LVU80
 160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 339              		.loc 1 160 7 is_stmt 0 view .LVU81
ARM GAS  /tmp/ccPzREru.s 			page 13


 340 0024 0F20     		movs	r0, #15
 341 0026 FFF7FEFF 		bl	HAL_InitTick
 342              	.LVL19:
 160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 343              		.loc 1 160 6 view .LVU82
 344 002a 10B1     		cbz	r0, .L23
 162:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 345              		.loc 1 162 12 view .LVU83
 346 002c 0124     		movs	r4, #1
 347              	.L20:
 170:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 348              		.loc 1 170 1 view .LVU84
 349 002e 2046     		mov	r0, r4
 350 0030 10BD     		pop	{r4, pc}
 351              	.L23:
 352 0032 0446     		mov	r4, r0
 166:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 353              		.loc 1 166 3 is_stmt 1 view .LVU85
 354 0034 FFF7FEFF 		bl	HAL_MspInit
 355              	.LVL20:
 169:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 356              		.loc 1 169 3 view .LVU86
 169:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 357              		.loc 1 169 10 is_stmt 0 view .LVU87
 358 0038 F9E7     		b	.L20
 359              	.L25:
 360 003a 00BF     		.align	2
 361              	.L24:
 362 003c 000C0244 		.word	1140984832
 363 0040 00000000 		.word	AHBPrescTable
 364 0044 00000000 		.word	SystemCoreClock
 365              		.cfi_endproc
 366              	.LFE361:
 368              		.section	.text.HAL_IncTick,"ax",%progbits
 369              		.align	1
 370              		.weak	HAL_IncTick
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 374              		.fpu fpv4-sp-d16
 376              	HAL_IncTick:
 377              	.LFB366:
 301:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 302:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 303:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
 304:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 305:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 306:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Group2 HAL Control functions
 307:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief    HAL Control functions
 308:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 309:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
 310:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 311:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                        ##### HAL Control functions #####
 312:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 313:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]  This section provides functions allowing to:
 314:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Provide a tick value in millisecond
 315:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Provide a blocking delay in millisecond
ARM GAS  /tmp/ccPzREru.s 			page 14


 316:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Suspend the time base source interrupt
 317:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Resume the time base source interrupt
 318:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Get the HAL API driver version
 319:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Get the device identifier
 320:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Get the device revision identifier
 321:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 322:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
 323:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
 324:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 325:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 326:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 327:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief This function is called to increment a global variable "uwTick"
 328:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *        used as application time base.
 329:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 330:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       in SysTick ISR.
 331:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 332:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *      implementations in user file.
 333:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 334:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 335:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __weak void HAL_IncTick(void)
 336:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 378              		.loc 1 336 1 is_stmt 1 view -0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 337:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   uwTick += (uint32_t)uwTickFreq;
 383              		.loc 1 337 3 view .LVU89
 384              		.loc 1 337 13 is_stmt 0 view .LVU90
 385 0000 034B     		ldr	r3, .L27
 386 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 387              		.loc 1 337 10 view .LVU91
 388 0004 034A     		ldr	r2, .L27+4
 389 0006 1168     		ldr	r1, [r2]
 390 0008 0B44     		add	r3, r3, r1
 391 000a 1360     		str	r3, [r2]
 338:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 392              		.loc 1 338 1 view .LVU92
 393 000c 7047     		bx	lr
 394              	.L28:
 395 000e 00BF     		.align	2
 396              	.L27:
 397 0010 00000000 		.word	.LANCHOR0
 398 0014 00000000 		.word	.LANCHOR2
 399              		.cfi_endproc
 400              	.LFE366:
 402              		.section	.text.HAL_GetTick,"ax",%progbits
 403              		.align	1
 404              		.weak	HAL_GetTick
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv4-sp-d16
 410              	HAL_GetTick:
 411              	.LFB367:
 339:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 340:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
ARM GAS  /tmp/ccPzREru.s 			page 15


 341:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief Provides a tick value in millisecond.
 342:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 343:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       implementations in user file.
 344:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval tick value
 345:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 346:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 347:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 412              		.loc 1 347 1 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 348:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return uwTick;
 417              		.loc 1 348 3 view .LVU94
 418              		.loc 1 348 10 is_stmt 0 view .LVU95
 419 0000 014B     		ldr	r3, .L30
 420 0002 1868     		ldr	r0, [r3]
 349:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 421              		.loc 1 349 1 view .LVU96
 422 0004 7047     		bx	lr
 423              	.L31:
 424 0006 00BF     		.align	2
 425              	.L30:
 426 0008 00000000 		.word	.LANCHOR2
 427              		.cfi_endproc
 428              	.LFE367:
 430              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 431              		.align	1
 432              		.global	HAL_GetTickPrio
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 436              		.fpu fpv4-sp-d16
 438              	HAL_GetTickPrio:
 439              	.LFB368:
 350:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 351:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 352:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief This function returns a tick priority.
 353:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval tick priority
 354:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 355:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 356:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 440              		.loc 1 356 1 is_stmt 1 view -0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 357:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return uwTickPrio;
 445              		.loc 1 357 3 view .LVU98
 358:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 446              		.loc 1 358 1 is_stmt 0 view .LVU99
 447 0000 014B     		ldr	r3, .L33
 448 0002 1868     		ldr	r0, [r3]
 449 0004 7047     		bx	lr
 450              	.L34:
 451 0006 00BF     		.align	2
 452              	.L33:
ARM GAS  /tmp/ccPzREru.s 			page 16


 453 0008 00000000 		.word	.LANCHOR1
 454              		.cfi_endproc
 455              	.LFE368:
 457              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 458              		.align	1
 459              		.global	HAL_SetTickFreq
 460              		.syntax unified
 461              		.thumb
 462              		.thumb_func
 463              		.fpu fpv4-sp-d16
 465              	HAL_SetTickFreq:
 466              	.LVL21:
 467              	.LFB369:
 359:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 360:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 361:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief Set new tick Freq.
 362:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval HAL status
 363:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 364:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 365:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 468              		.loc 1 365 1 is_stmt 1 view -0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472              		.loc 1 365 1 is_stmt 0 view .LVU101
 473 0000 10B5     		push	{r4, lr}
 474              	.LCFI3:
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 4, -8
 477              		.cfi_offset 14, -4
 366:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 478              		.loc 1 366 3 is_stmt 1 view .LVU102
 479              	.LVL22:
 367:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 480              		.loc 1 367 3 view .LVU103
 368:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 369:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 481              		.loc 1 369 3 view .LVU104
 370:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 371:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   if (uwTickFreq != Freq)
 482              		.loc 1 371 3 view .LVU105
 483              		.loc 1 371 18 is_stmt 0 view .LVU106
 484 0002 084B     		ldr	r3, .L40
 485 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 486              		.loc 1 371 6 view .LVU107
 487 0006 8442     		cmp	r4, r0
 488 0008 01D1     		bne	.L39
 366:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 489              		.loc 1 366 21 view .LVU108
 490 000a 0020     		movs	r0, #0
 491              	.LVL23:
 492              	.L36:
 372:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 373:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 374:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     /* Back up uwTickFreq frequency */
 375:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     prevTickFreq = uwTickFreq;
 376:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
ARM GAS  /tmp/ccPzREru.s 			page 17


 377:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     uwTickFreq = Freq;
 379:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 380:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     /* Apply the new tick Freq  */
 381:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 382:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     if (status != HAL_OK)
 383:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     {
 384:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       /* Restore previous tick frequency */
 385:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       uwTickFreq = prevTickFreq;
 386:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     }
 387:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 388:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 389:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return status;
 493              		.loc 1 389 3 is_stmt 1 view .LVU109
 390:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 494              		.loc 1 390 1 is_stmt 0 view .LVU110
 495 000c 10BD     		pop	{r4, pc}
 496              	.LVL24:
 497              	.L39:
 375:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 498              		.loc 1 375 5 is_stmt 1 view .LVU111
 378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 499              		.loc 1 378 5 view .LVU112
 378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 500              		.loc 1 378 16 is_stmt 0 view .LVU113
 501 000e 1870     		strb	r0, [r3]
 381:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     if (status != HAL_OK)
 502              		.loc 1 381 5 is_stmt 1 view .LVU114
 381:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     if (status != HAL_OK)
 503              		.loc 1 381 14 is_stmt 0 view .LVU115
 504 0010 054B     		ldr	r3, .L40+4
 505 0012 1868     		ldr	r0, [r3]
 506              	.LVL25:
 381:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     if (status != HAL_OK)
 507              		.loc 1 381 14 view .LVU116
 508 0014 FFF7FEFF 		bl	HAL_InitTick
 509              	.LVL26:
 382:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     {
 510              		.loc 1 382 5 is_stmt 1 view .LVU117
 382:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     {
 511              		.loc 1 382 8 is_stmt 0 view .LVU118
 512 0018 0028     		cmp	r0, #0
 513 001a F7D0     		beq	.L36
 385:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     }
 514              		.loc 1 385 7 is_stmt 1 view .LVU119
 385:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     }
 515              		.loc 1 385 18 is_stmt 0 view .LVU120
 516 001c 014B     		ldr	r3, .L40
 517 001e 1C70     		strb	r4, [r3]
 518 0020 F4E7     		b	.L36
 519              	.L41:
 520 0022 00BF     		.align	2
 521              	.L40:
 522 0024 00000000 		.word	.LANCHOR0
 523 0028 00000000 		.word	.LANCHOR1
 524              		.cfi_endproc
 525              	.LFE369:
ARM GAS  /tmp/ccPzREru.s 			page 18


 527              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 528              		.align	1
 529              		.global	HAL_GetTickFreq
 530              		.syntax unified
 531              		.thumb
 532              		.thumb_func
 533              		.fpu fpv4-sp-d16
 535              	HAL_GetTickFreq:
 536              	.LFB370:
 391:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 392:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 393:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief Return tick frequency.
 394:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Tick frequency.
 395:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         Value of @ref HAL_TickFreqTypeDef.
 396:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 397:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 398:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 537              		.loc 1 398 1 is_stmt 1 view -0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 399:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return uwTickFreq;
 542              		.loc 1 399 3 view .LVU122
 400:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 543              		.loc 1 400 1 is_stmt 0 view .LVU123
 544 0000 014B     		ldr	r3, .L43
 545 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 546 0004 7047     		bx	lr
 547              	.L44:
 548 0006 00BF     		.align	2
 549              	.L43:
 550 0008 00000000 		.word	.LANCHOR0
 551              		.cfi_endproc
 552              	.LFE370:
 554              		.section	.text.HAL_Delay,"ax",%progbits
 555              		.align	1
 556              		.weak	HAL_Delay
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
 560              		.fpu fpv4-sp-d16
 562              	HAL_Delay:
 563              	.LVL27:
 564              	.LFB371:
 401:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 402:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 403:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 404:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *        on variable incremented.
 405:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 406:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 407:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       is incremented.
 408:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 409:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       implementations in user file.
 410:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 411:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 412:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
ARM GAS  /tmp/ccPzREru.s 			page 19


 413:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 414:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 565              		.loc 1 414 1 is_stmt 1 view -0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		.loc 1 414 1 is_stmt 0 view .LVU125
 570 0000 38B5     		push	{r3, r4, r5, lr}
 571              	.LCFI4:
 572              		.cfi_def_cfa_offset 16
 573              		.cfi_offset 3, -16
 574              		.cfi_offset 4, -12
 575              		.cfi_offset 5, -8
 576              		.cfi_offset 14, -4
 577 0002 0446     		mov	r4, r0
 415:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 578              		.loc 1 415 3 is_stmt 1 view .LVU126
 579              		.loc 1 415 24 is_stmt 0 view .LVU127
 580 0004 FFF7FEFF 		bl	HAL_GetTick
 581              	.LVL28:
 582              		.loc 1 415 24 view .LVU128
 583 0008 0546     		mov	r5, r0
 584              	.LVL29:
 416:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   uint32_t wait = Delay;
 585              		.loc 1 416 3 is_stmt 1 view .LVU129
 417:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 418:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 419:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 586              		.loc 1 419 3 view .LVU130
 587              		.loc 1 419 6 is_stmt 0 view .LVU131
 588 000a B4F1FF3F 		cmp	r4, #-1
 589 000e 02D0     		beq	.L47
 420:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 421:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 590              		.loc 1 421 5 is_stmt 1 view .LVU132
 591              		.loc 1 421 13 is_stmt 0 view .LVU133
 592 0010 044B     		ldr	r3, .L49
 593 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 594              		.loc 1 421 10 view .LVU134
 595 0014 1C44     		add	r4, r4, r3
 596              	.LVL30:
 597              	.L47:
 422:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 423:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 425:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 426:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 598              		.loc 1 426 3 is_stmt 1 discriminator 1 view .LVU135
 424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 599              		.loc 1 424 9 discriminator 1 view .LVU136
 424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 600              		.loc 1 424 11 is_stmt 0 discriminator 1 view .LVU137
 601 0016 FFF7FEFF 		bl	HAL_GetTick
 602              	.LVL31:
 424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 603              		.loc 1 424 25 discriminator 1 view .LVU138
 604 001a 401B     		subs	r0, r0, r5
ARM GAS  /tmp/ccPzREru.s 			page 20


 424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 605              		.loc 1 424 9 discriminator 1 view .LVU139
 606 001c A042     		cmp	r0, r4
 607 001e FAD3     		bcc	.L47
 427:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 608              		.loc 1 427 1 view .LVU140
 609 0020 38BD     		pop	{r3, r4, r5, pc}
 610              	.LVL32:
 611              	.L50:
 612              		.loc 1 427 1 view .LVU141
 613 0022 00BF     		.align	2
 614              	.L49:
 615 0024 00000000 		.word	.LANCHOR0
 616              		.cfi_endproc
 617              	.LFE371:
 619              		.section	.text.HAL_SuspendTick,"ax",%progbits
 620              		.align	1
 621              		.weak	HAL_SuspendTick
 622              		.syntax unified
 623              		.thumb
 624              		.thumb_func
 625              		.fpu fpv4-sp-d16
 627              	HAL_SuspendTick:
 628              	.LFB372:
 428:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 429:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 430:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief Suspend Tick increment.
 431:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 432:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 433:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 434:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       is suspended.
 435:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 436:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       implementations in user file.
 437:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 438:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 439:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __weak void HAL_SuspendTick(void)
 440:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 629              		.loc 1 440 1 is_stmt 1 view -0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 633              		@ link register save eliminated.
 441:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Disable SysTick Interrupt */
 442:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 634              		.loc 1 442 3 view .LVU143
 635              		.loc 1 442 17 is_stmt 0 view .LVU144
 636 0000 4FF0E022 		mov	r2, #-536813568
 637 0004 1369     		ldr	r3, [r2, #16]
 638 0006 23F00203 		bic	r3, r3, #2
 639 000a 1361     		str	r3, [r2, #16]
 443:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 640              		.loc 1 443 1 view .LVU145
 641 000c 7047     		bx	lr
 642              		.cfi_endproc
 643              	.LFE372:
 645              		.section	.text.HAL_ResumeTick,"ax",%progbits
 646              		.align	1
ARM GAS  /tmp/ccPzREru.s 			page 21


 647              		.weak	HAL_ResumeTick
 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
 651              		.fpu fpv4-sp-d16
 653              	HAL_ResumeTick:
 654              	.LFB373:
 444:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 445:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 446:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief Resume Tick increment.
 447:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 448:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 449:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 450:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       is resumed.
 451:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 452:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       implementations in user file.
 453:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 454:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 455:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __weak void HAL_ResumeTick(void)
 456:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 655              		.loc 1 456 1 is_stmt 1 view -0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 0, uses_anonymous_args = 0
 659              		@ link register save eliminated.
 457:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Enable SysTick Interrupt */
 458:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 660              		.loc 1 458 3 view .LVU147
 661              		.loc 1 458 18 is_stmt 0 view .LVU148
 662 0000 4FF0E022 		mov	r2, #-536813568
 663 0004 1369     		ldr	r3, [r2, #16]
 664 0006 43F00203 		orr	r3, r3, #2
 665 000a 1361     		str	r3, [r2, #16]
 459:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 666              		.loc 1 459 1 view .LVU149
 667 000c 7047     		bx	lr
 668              		.cfi_endproc
 669              	.LFE373:
 671              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 672              		.align	1
 673              		.global	HAL_GetHalVersion
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 677              		.fpu fpv4-sp-d16
 679              	HAL_GetHalVersion:
 680              	.LFB374:
 460:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 461:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 462:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Returns the HAL revision
 463:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 464:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 465:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 466:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 681              		.loc 1 466 1 is_stmt 1 view -0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccPzREru.s 			page 22


 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685              		@ link register save eliminated.
 467:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return __STM32H5XX_HAL_VERSION;
 686              		.loc 1 467 3 view .LVU151
 468:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 687              		.loc 1 468 1 is_stmt 0 view .LVU152
 688 0000 0048     		ldr	r0, .L54
 689 0002 7047     		bx	lr
 690              	.L55:
 691              		.align	2
 692              	.L54:
 693 0004 00000301 		.word	16973824
 694              		.cfi_endproc
 695              	.LFE374:
 697              		.section	.text.HAL_GetREVID,"ax",%progbits
 698              		.align	1
 699              		.global	HAL_GetREVID
 700              		.syntax unified
 701              		.thumb
 702              		.thumb_func
 703              		.fpu fpv4-sp-d16
 705              	HAL_GetREVID:
 706              	.LFB375:
 469:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 470:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 471:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Returns the device revision identifier.
 472:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Device revision identifier
 473:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 474:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_GetREVID(void)
 475:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 707              		.loc 1 475 1 is_stmt 1 view -0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 476:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return ((DBGMCU->IDCODE & DBGMCU_IDCODE_REV_ID) >> 16);
 712              		.loc 1 476 3 view .LVU154
 713              		.loc 1 476 18 is_stmt 0 view .LVU155
 714 0000 014B     		ldr	r3, .L57
 715 0002 1868     		ldr	r0, [r3]
 477:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 716              		.loc 1 477 1 view .LVU156
 717 0004 000C     		lsrs	r0, r0, #16
 718 0006 7047     		bx	lr
 719              	.L58:
 720              		.align	2
 721              	.L57:
 722 0008 00400244 		.word	1140998144
 723              		.cfi_endproc
 724              	.LFE375:
 726              		.section	.text.HAL_GetDEVID,"ax",%progbits
 727              		.align	1
 728              		.global	HAL_GetDEVID
 729              		.syntax unified
 730              		.thumb
 731              		.thumb_func
 732              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccPzREru.s 			page 23


 734              	HAL_GetDEVID:
 735              	.LFB376:
 478:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 479:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 480:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Returns the device identifier.
 481:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Device identifier
 482:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 483:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_GetDEVID(void)
 484:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 736              		.loc 1 484 1 is_stmt 1 view -0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740              		@ link register save eliminated.
 485:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (DBGMCU->IDCODE & DBGMCU_IDCODE_DEV_ID);
 741              		.loc 1 485 3 view .LVU158
 742              		.loc 1 485 17 is_stmt 0 view .LVU159
 743 0000 024B     		ldr	r3, .L60
 744 0002 1868     		ldr	r0, [r3]
 486:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 745              		.loc 1 486 1 view .LVU160
 746 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 747 0008 7047     		bx	lr
 748              	.L61:
 749 000a 00BF     		.align	2
 750              	.L60:
 751 000c 00400244 		.word	1140998144
 752              		.cfi_endproc
 753              	.LFE376:
 755              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 756              		.align	1
 757              		.global	HAL_GetUIDw0
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 761              		.fpu fpv4-sp-d16
 763              	HAL_GetUIDw0:
 764              	.LFB377:
 487:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 488:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 489:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Return the first word of the unique device identifier (UID based on 96 bits)
 490:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Device identifier
 491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 492:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 493:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 765              		.loc 1 493 1 is_stmt 1 view -0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              		@ link register save eliminated.
 494:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (READ_REG(*((uint32_t *)UID_BASE)));
 770              		.loc 1 494 3 view .LVU162
 495:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 771              		.loc 1 495 1 is_stmt 0 view .LVU163
 772 0000 014B     		ldr	r3, .L63
 773 0002 D3F80008 		ldr	r0, [r3, #2048]
 774 0006 7047     		bx	lr
ARM GAS  /tmp/ccPzREru.s 			page 24


 775              	.L64:
 776              		.align	2
 777              	.L63:
 778 0008 00F0FF08 		.word	150990848
 779              		.cfi_endproc
 780              	.LFE377:
 782              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 783              		.align	1
 784              		.global	HAL_GetUIDw1
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 788              		.fpu fpv4-sp-d16
 790              	HAL_GetUIDw1:
 791              	.LFB378:
 496:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 497:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 498:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Return the second word of the unique device identifier (UID based on 96 bits)
 499:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Device identifier
 500:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 501:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 502:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 792              		.loc 1 502 1 is_stmt 1 view -0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 0
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796              		@ link register save eliminated.
 503:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 797              		.loc 1 503 3 view .LVU165
 504:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 798              		.loc 1 504 1 is_stmt 0 view .LVU166
 799 0000 014B     		ldr	r3, .L66
 800 0002 D3F80408 		ldr	r0, [r3, #2052]
 801 0006 7047     		bx	lr
 802              	.L67:
 803              		.align	2
 804              	.L66:
 805 0008 00F0FF08 		.word	150990848
 806              		.cfi_endproc
 807              	.LFE378:
 809              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 810              		.align	1
 811              		.global	HAL_GetUIDw2
 812              		.syntax unified
 813              		.thumb
 814              		.thumb_func
 815              		.fpu fpv4-sp-d16
 817              	HAL_GetUIDw2:
 818              	.LFB379:
 505:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 506:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 507:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Return the third word of the unique device identifier (UID based on 96 bits)
 508:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Device identifier
 509:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 510:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 511:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 819              		.loc 1 511 1 is_stmt 1 view -0
ARM GAS  /tmp/ccPzREru.s 			page 25


 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 0, uses_anonymous_args = 0
 823              		@ link register save eliminated.
 512:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 824              		.loc 1 512 3 view .LVU168
 513:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 825              		.loc 1 513 1 is_stmt 0 view .LVU169
 826 0000 014B     		ldr	r3, .L69
 827 0002 D3F80808 		ldr	r0, [r3, #2056]
 828 0006 7047     		bx	lr
 829              	.L70:
 830              		.align	2
 831              	.L69:
 832 0008 00F0FF08 		.word	150990848
 833              		.cfi_endproc
 834              	.LFE379:
 836              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 837              		.align	1
 838              		.global	HAL_DBGMCU_EnableDBGStopMode
 839              		.syntax unified
 840              		.thumb
 841              		.thumb_func
 842              		.fpu fpv4-sp-d16
 844              	HAL_DBGMCU_EnableDBGStopMode:
 845              	.LFB380:
 514:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 515:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 516:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
 517:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 518:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 519:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 520:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group3 HAL Debug functions
 521:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief    HAL Debug functions
 522:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 523:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
 524:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 525:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                        ##### HAL Debug functions #####
 526:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 527:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]  This section provides functions allowing to:
 528:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 529:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 530:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 531:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
 532:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
 533:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 534:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 535:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 536:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode.
 537:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 538:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 539:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 540:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 846              		.loc 1 540 1 is_stmt 1 view -0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccPzREru.s 			page 26


 850              		@ link register save eliminated.
 541:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 851              		.loc 1 541 3 view .LVU171
 852 0000 024A     		ldr	r2, .L72
 853 0002 5368     		ldr	r3, [r2, #4]
 854 0004 43F00203 		orr	r3, r3, #2
 855 0008 5360     		str	r3, [r2, #4]
 542:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 856              		.loc 1 542 1 is_stmt 0 view .LVU172
 857 000a 7047     		bx	lr
 858              	.L73:
 859              		.align	2
 860              	.L72:
 861 000c 00400244 		.word	1140998144
 862              		.cfi_endproc
 863              	.LFE380:
 865              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 866              		.align	1
 867              		.global	HAL_DBGMCU_DisableDBGStopMode
 868              		.syntax unified
 869              		.thumb
 870              		.thumb_func
 871              		.fpu fpv4-sp-d16
 873              	HAL_DBGMCU_DisableDBGStopMode:
 874              	.LFB381:
 543:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 544:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 545:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode.
 546:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 547:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 548:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 549:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 875              		.loc 1 549 1 is_stmt 1 view -0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879              		@ link register save eliminated.
 550:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 880              		.loc 1 550 3 view .LVU174
 881 0000 024A     		ldr	r2, .L75
 882 0002 5368     		ldr	r3, [r2, #4]
 883 0004 23F00203 		bic	r3, r3, #2
 884 0008 5360     		str	r3, [r2, #4]
 551:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 885              		.loc 1 551 1 is_stmt 0 view .LVU175
 886 000a 7047     		bx	lr
 887              	.L76:
 888              		.align	2
 889              	.L75:
 890 000c 00400244 		.word	1140998144
 891              		.cfi_endproc
 892              	.LFE381:
 894              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 895              		.align	1
 896              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 897              		.syntax unified
 898              		.thumb
ARM GAS  /tmp/ccPzREru.s 			page 27


 899              		.thumb_func
 900              		.fpu fpv4-sp-d16
 902              	HAL_DBGMCU_EnableDBGStandbyMode:
 903              	.LFB382:
 552:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 553:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 554:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode.
 555:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 556:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 557:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 558:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 904              		.loc 1 558 1 is_stmt 1 view -0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              		@ link register save eliminated.
 559:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 909              		.loc 1 559 3 view .LVU177
 910 0000 024A     		ldr	r2, .L78
 911 0002 5368     		ldr	r3, [r2, #4]
 912 0004 43F00403 		orr	r3, r3, #4
 913 0008 5360     		str	r3, [r2, #4]
 560:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 914              		.loc 1 560 1 is_stmt 0 view .LVU178
 915 000a 7047     		bx	lr
 916              	.L79:
 917              		.align	2
 918              	.L78:
 919 000c 00400244 		.word	1140998144
 920              		.cfi_endproc
 921              	.LFE382:
 923              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 924              		.align	1
 925              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 926              		.syntax unified
 927              		.thumb
 928              		.thumb_func
 929              		.fpu fpv4-sp-d16
 931              	HAL_DBGMCU_DisableDBGStandbyMode:
 932              	.LFB383:
 561:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 562:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 563:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode.
 564:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 565:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 566:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 567:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 933              		.loc 1 567 1 is_stmt 1 view -0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937              		@ link register save eliminated.
 568:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 938              		.loc 1 568 3 view .LVU180
 939 0000 024A     		ldr	r2, .L81
 940 0002 5368     		ldr	r3, [r2, #4]
 941 0004 23F00403 		bic	r3, r3, #4
ARM GAS  /tmp/ccPzREru.s 			page 28


 942 0008 5360     		str	r3, [r2, #4]
 569:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 943              		.loc 1 569 1 is_stmt 0 view .LVU181
 944 000a 7047     		bx	lr
 945              	.L82:
 946              		.align	2
 947              	.L81:
 948 000c 00400244 		.word	1140998144
 949              		.cfi_endproc
 950              	.LFE383:
 952              		.section	.text.HAL_VREFBUF_VoltageScalingConfig,"ax",%progbits
 953              		.align	1
 954              		.global	HAL_VREFBUF_VoltageScalingConfig
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 958              		.fpu fpv4-sp-d16
 960              	HAL_VREFBUF_VoltageScalingConfig:
 961              	.LVL33:
 962              	.LFB384:
 570:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 571:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 572:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
 573:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 574:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 575:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group4 HAL VREFBUF Control functions
 576:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief    HAL VREFBUF Control functions
 577:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 578:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
 579:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 580:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                        ##### HAL VREFBUF Control functions #####
 581:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 582:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]  This section provides functions allowing to:
 583:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Configure the Voltage reference buffer
 584:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Enable/Disable the Voltage reference buffer
 585:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 586:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
 587:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
 588:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 589:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 590:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined(VREFBUF)
 591:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 592:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief Configure the internal voltage reference buffer voltage scale.
 593:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  VoltageScaling: specifies the output voltage to achieve
 594:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          This parameter can be one of the following values:
 595:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg VREFBUF_VOLTAGE_SCALE0: VREF_OUT1 around 2.5 V.
 596:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.8 V
 597:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg VREFBUF_VOLTAGE_SCALE1: VREF_OUT2 around 2.048 V.
 598:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.4 V
 599:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg VREFBUF_VOLTAGE_SCALE2: VREF_OUT3 around 1.8 V.
 600:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.1 V
 601:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg VREFBUF_VOLTAGE_SCALE3: VREF_OUT4 around 1.5 V.
 602:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *                                                This requires VDDA equal to or higher than 1.8 V
 603:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 604:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 605:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_VREFBUF_VoltageScalingConfig(uint32_t VoltageScaling)
 606:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
ARM GAS  /tmp/ccPzREru.s 			page 29


 963              		.loc 1 606 1 is_stmt 1 view -0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967              		@ link register save eliminated.
 607:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameters */
 608:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_VREFBUF_VOLTAGE_SCALE(VoltageScaling));
 968              		.loc 1 608 3 view .LVU183
 609:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 610:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_VRS, VoltageScaling);
 969              		.loc 1 610 3 view .LVU184
 970 0000 034A     		ldr	r2, .L84
 971 0002 1368     		ldr	r3, [r2]
 972 0004 23F07003 		bic	r3, r3, #112
 973 0008 0343     		orrs	r3, r3, r0
 974 000a 1360     		str	r3, [r2]
 611:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 975              		.loc 1 611 1 is_stmt 0 view .LVU185
 976 000c 7047     		bx	lr
 977              	.L85:
 978 000e 00BF     		.align	2
 979              	.L84:
 980 0010 00740044 		.word	1140880384
 981              		.cfi_endproc
 982              	.LFE384:
 984              		.section	.text.HAL_VREFBUF_HighImpedanceConfig,"ax",%progbits
 985              		.align	1
 986              		.global	HAL_VREFBUF_HighImpedanceConfig
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 990              		.fpu fpv4-sp-d16
 992              	HAL_VREFBUF_HighImpedanceConfig:
 993              	.LVL34:
 994              	.LFB385:
 612:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 613:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 614:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief Configure the internal voltage reference buffer high impedance mode.
 615:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  Mode: specifies the high impedance mode
 616:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          This parameter can be one of the following values:
 617:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg VREFBUF_HIGH_IMPEDANCE_DISABLE: VREF+ pin is internally connect to VREFINT outp
 618:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg VREFBUF_HIGH_IMPEDANCE_ENABLE: VREF+ pin is high impedance.
 619:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 620:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 621:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_VREFBUF_HighImpedanceConfig(uint32_t Mode)
 622:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 995              		.loc 1 622 1 is_stmt 1 view -0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 0
 998              		@ frame_needed = 0, uses_anonymous_args = 0
 999              		@ link register save eliminated.
 623:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameters */
 624:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_VREFBUF_HIGH_IMPEDANCE(Mode));
 1000              		.loc 1 624 3 view .LVU187
 625:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 626:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_HIZ, Mode);
 1001              		.loc 1 626 3 view .LVU188
ARM GAS  /tmp/ccPzREru.s 			page 30


 1002 0000 034A     		ldr	r2, .L87
 1003 0002 1368     		ldr	r3, [r2]
 1004 0004 23F00203 		bic	r3, r3, #2
 1005 0008 0343     		orrs	r3, r3, r0
 1006 000a 1360     		str	r3, [r2]
 627:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1007              		.loc 1 627 1 is_stmt 0 view .LVU189
 1008 000c 7047     		bx	lr
 1009              	.L88:
 1010 000e 00BF     		.align	2
 1011              	.L87:
 1012 0010 00740044 		.word	1140880384
 1013              		.cfi_endproc
 1014              	.LFE385:
 1016              		.section	.text.HAL_VREFBUF_TrimmingConfig,"ax",%progbits
 1017              		.align	1
 1018              		.global	HAL_VREFBUF_TrimmingConfig
 1019              		.syntax unified
 1020              		.thumb
 1021              		.thumb_func
 1022              		.fpu fpv4-sp-d16
 1024              	HAL_VREFBUF_TrimmingConfig:
 1025              	.LVL35:
 1026              	.LFB386:
 628:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 629:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 630:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Tune the Internal Voltage Reference buffer (VREFBUF).
 631:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 632:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 633:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_VREFBUF_TrimmingConfig(uint32_t TrimmingValue)
 634:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1027              		.loc 1 634 1 is_stmt 1 view -0
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 0
 1030              		@ frame_needed = 0, uses_anonymous_args = 0
 1031              		@ link register save eliminated.
 635:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameters */
 636:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_VREFBUF_TRIMMING(TrimmingValue));
 1032              		.loc 1 636 3 view .LVU191
 637:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 638:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(VREFBUF->CCR, VREFBUF_CCR_TRIM, TrimmingValue);
 1033              		.loc 1 638 3 view .LVU192
 1034 0000 034A     		ldr	r2, .L90
 1035 0002 5368     		ldr	r3, [r2, #4]
 1036 0004 23F03F03 		bic	r3, r3, #63
 1037 0008 0343     		orrs	r3, r3, r0
 1038 000a 5360     		str	r3, [r2, #4]
 639:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1039              		.loc 1 639 1 is_stmt 0 view .LVU193
 1040 000c 7047     		bx	lr
 1041              	.L91:
 1042 000e 00BF     		.align	2
 1043              	.L90:
 1044 0010 00740044 		.word	1140880384
 1045              		.cfi_endproc
 1046              	.LFE386:
 1048              		.section	.text.HAL_EnableVREFBUF,"ax",%progbits
ARM GAS  /tmp/ccPzREru.s 			page 31


 1049              		.align	1
 1050              		.global	HAL_EnableVREFBUF
 1051              		.syntax unified
 1052              		.thumb
 1053              		.thumb_func
 1054              		.fpu fpv4-sp-d16
 1056              	HAL_EnableVREFBUF:
 1057              	.LFB387:
 640:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 641:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 642:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Enable the Internal Voltage Reference buffer (VREFBUF).
 643:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval HAL_OK/HAL_TIMEOUT
 644:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 645:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** HAL_StatusTypeDef HAL_EnableVREFBUF(void)
 646:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1058              		.loc 1 646 1 is_stmt 1 view -0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 0
 1061              		@ frame_needed = 0, uses_anonymous_args = 0
 1062 0000 10B5     		push	{r4, lr}
 1063              	.LCFI5:
 1064              		.cfi_def_cfa_offset 8
 1065              		.cfi_offset 4, -8
 1066              		.cfi_offset 14, -4
 647:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   uint32_t  tickstart;
 1067              		.loc 1 647 3 view .LVU195
 648:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 649:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SET_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 1068              		.loc 1 649 3 view .LVU196
 1069 0002 0B4A     		ldr	r2, .L99
 1070 0004 1368     		ldr	r3, [r2]
 1071 0006 43F00103 		orr	r3, r3, #1
 1072 000a 1360     		str	r3, [r2]
 650:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 651:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Get Start Tick*/
 652:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   tickstart = HAL_GetTick();
 1073              		.loc 1 652 3 view .LVU197
 1074              		.loc 1 652 15 is_stmt 0 view .LVU198
 1075 000c FFF7FEFF 		bl	HAL_GetTick
 1076              	.LVL36:
 1077 0010 0446     		mov	r4, r0
 1078              	.LVL37:
 653:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 654:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Wait for VRR bit  */
 655:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   while (READ_BIT(VREFBUF->CSR, VREFBUF_CSR_VRR) == 0UL)
 1079              		.loc 1 655 3 is_stmt 1 view .LVU199
 1080              	.L93:
 1081              		.loc 1 655 9 view .LVU200
 1082              		.loc 1 655 10 is_stmt 0 view .LVU201
 1083 0012 074B     		ldr	r3, .L99
 1084 0014 1B68     		ldr	r3, [r3]
 1085              		.loc 1 655 9 view .LVU202
 1086 0016 13F0080F 		tst	r3, #8
 1087 001a 06D1     		bne	.L98
 656:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 657:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     if ((HAL_GetTick() - tickstart) > VREFBUF_TIMEOUT_VALUE)
 1088              		.loc 1 657 5 is_stmt 1 view .LVU203
ARM GAS  /tmp/ccPzREru.s 			page 32


 1089              		.loc 1 657 10 is_stmt 0 view .LVU204
 1090 001c FFF7FEFF 		bl	HAL_GetTick
 1091              	.LVL38:
 1092              		.loc 1 657 24 view .LVU205
 1093 0020 001B     		subs	r0, r0, r4
 1094              		.loc 1 657 8 view .LVU206
 1095 0022 0A28     		cmp	r0, #10
 1096 0024 F5D9     		bls	.L93
 658:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     {
 659:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       return HAL_TIMEOUT;
 1097              		.loc 1 659 14 view .LVU207
 1098 0026 0320     		movs	r0, #3
 1099 0028 00E0     		b	.L94
 1100              	.L98:
 660:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     }
 661:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 662:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 663:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return HAL_OK;
 1101              		.loc 1 663 10 view .LVU208
 1102 002a 0020     		movs	r0, #0
 1103              	.L94:
 664:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1104              		.loc 1 664 1 view .LVU209
 1105 002c 10BD     		pop	{r4, pc}
 1106              	.LVL39:
 1107              	.L100:
 1108              		.loc 1 664 1 view .LVU210
 1109 002e 00BF     		.align	2
 1110              	.L99:
 1111 0030 00740044 		.word	1140880384
 1112              		.cfi_endproc
 1113              	.LFE387:
 1115              		.section	.text.HAL_DisableVREFBUF,"ax",%progbits
 1116              		.align	1
 1117              		.global	HAL_DisableVREFBUF
 1118              		.syntax unified
 1119              		.thumb
 1120              		.thumb_func
 1121              		.fpu fpv4-sp-d16
 1123              	HAL_DisableVREFBUF:
 1124              	.LFB388:
 665:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 666:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 667:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Disable the Internal Voltage Reference buffer (VREFBUF).
 668:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 669:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 670:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 671:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_DisableVREFBUF(void)
 672:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1125              		.loc 1 672 1 is_stmt 1 view -0
 1126              		.cfi_startproc
 1127              		@ args = 0, pretend = 0, frame = 0
 1128              		@ frame_needed = 0, uses_anonymous_args = 0
 1129              		@ link register save eliminated.
 673:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   CLEAR_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 1130              		.loc 1 673 3 view .LVU212
 1131 0000 024A     		ldr	r2, .L102
ARM GAS  /tmp/ccPzREru.s 			page 33


 1132 0002 1368     		ldr	r3, [r2]
 1133 0004 23F00103 		bic	r3, r3, #1
 1134 0008 1360     		str	r3, [r2]
 674:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1135              		.loc 1 674 1 is_stmt 0 view .LVU213
 1136 000a 7047     		bx	lr
 1137              	.L103:
 1138              		.align	2
 1139              	.L102:
 1140 000c 00740044 		.word	1140880384
 1141              		.cfi_endproc
 1142              	.LFE388:
 1144              		.section	.text.HAL_SBS_EnableVddIO1CompensationCell,"ax",%progbits
 1145              		.align	1
 1146              		.global	HAL_SBS_EnableVddIO1CompensationCell
 1147              		.syntax unified
 1148              		.thumb
 1149              		.thumb_func
 1150              		.fpu fpv4-sp-d16
 1152              	HAL_SBS_EnableVddIO1CompensationCell:
 1153              	.LFB389:
 675:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* VREFBUF */
 676:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 677:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 678:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
 679:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 680:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 681:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group5 HAL SBS configuration functions
 682:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief    HAL SBS configuration functions
 683:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 684:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
 685:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 686:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                        ##### HAL SBS configuration functions #####
 687:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 688:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]  This section provides functions allowing to:
 689:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Select the Ethernet PHY Interface
 690:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Enable/Disable the VDD I/Os Compensation Cell
 691:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Code selection/configuration for the VDD I/O Compensation cell
 692:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Get ready flag status of VDD I/Os Compensation cell
 693:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Get PMOS/NMOS compensation value of the I/Os supplied by VDD
 694:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Enable/Disable the NMI in case of double ECC error in FLASH Interface
 695:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 696:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
 697:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
 698:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 699:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 700:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined(SBS_PMCR_ETH_SEL_PHY)
 701:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 702:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Ethernet PHY Interface Selection either MII or RMII
 703:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  SBS_ETHInterface: Selects the Ethernet PHY interface
 704:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *   This parameter can be one of the following values:
 705:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *   @arg SBS_ETH_MII : Select the Media Independent Interface
 706:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *   @arg SBS_ETH_RMII: Select the Reduced Media Independent Interface
 707:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 708:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 709:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_ETHInterfaceSelect(uint32_t SBS_ETHInterface)
 710:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
ARM GAS  /tmp/ccPzREru.s 			page 34


 711:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameter */
 712:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_ETHERNET_CONFIG(SBS_ETHInterface));
 713:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 714:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->PMCR, SBS_PMCR_ETH_SEL_PHY, (uint32_t)(SBS_ETHInterface));
 715:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 716:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* SBS_PMCR_ETH_SEL_PHY */
 717:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 718:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 719:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Enables the VDD I/Os Compensation Cell.
 720:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 721:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.
 722:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 723:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 724:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_EnableVddIO1CompensationCell(void)
 725:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1154              		.loc 1 725 1 is_stmt 1 view -0
 1155              		.cfi_startproc
 1156              		@ args = 0, pretend = 0, frame = 0
 1157              		@ frame_needed = 0, uses_anonymous_args = 0
 1158              		@ link register save eliminated.
 726:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SET_BIT(SBS->CCCSR, SBS_CCCSR_EN1) ;
 1159              		.loc 1 726 3 view .LVU215
 1160 0000 034A     		ldr	r2, .L105
 1161 0002 D2F81031 		ldr	r3, [r2, #272]
 1162 0006 43F00103 		orr	r3, r3, #1
 1163 000a C2F81031 		str	r3, [r2, #272]
 727:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1164              		.loc 1 727 1 is_stmt 0 view .LVU216
 1165 000e 7047     		bx	lr
 1166              	.L106:
 1167              		.align	2
 1168              	.L105:
 1169 0010 00040044 		.word	1140851712
 1170              		.cfi_endproc
 1171              	.LFE389:
 1173              		.section	.text.HAL_SBS_DisableVddIO1CompensationCell,"ax",%progbits
 1174              		.align	1
 1175              		.global	HAL_SBS_DisableVddIO1CompensationCell
 1176              		.syntax unified
 1177              		.thumb
 1178              		.thumb_func
 1179              		.fpu fpv4-sp-d16
 1181              	HAL_SBS_DisableVddIO1CompensationCell:
 1182              	.LFB390:
 728:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 729:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 730:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Power-down the VDD I/Os Compensation Cell.
 731:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 732:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.
 733:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 734:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 735:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_DisableVddIO1CompensationCell(void)
 736:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1183              		.loc 1 736 1 is_stmt 1 view -0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 0
 1186              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccPzREru.s 			page 35


 1187              		@ link register save eliminated.
 737:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   CLEAR_BIT(SBS->CCCSR, SBS_CCCSR_EN1);
 1188              		.loc 1 737 3 view .LVU218
 1189 0000 034A     		ldr	r2, .L108
 1190 0002 D2F81031 		ldr	r3, [r2, #272]
 1191 0006 23F00103 		bic	r3, r3, #1
 1192 000a C2F81031 		str	r3, [r2, #272]
 738:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1193              		.loc 1 738 1 is_stmt 0 view .LVU219
 1194 000e 7047     		bx	lr
 1195              	.L109:
 1196              		.align	2
 1197              	.L108:
 1198 0010 00040044 		.word	1140851712
 1199              		.cfi_endproc
 1200              	.LFE390:
 1202              		.section	.text.HAL_SBS_EnableVddIO2CompensationCell,"ax",%progbits
 1203              		.align	1
 1204              		.global	HAL_SBS_EnableVddIO2CompensationCell
 1205              		.syntax unified
 1206              		.thumb
 1207              		.thumb_func
 1208              		.fpu fpv4-sp-d16
 1210              	HAL_SBS_EnableVddIO2CompensationCell:
 1211              	.LFB391:
 739:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 740:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 741:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Enables the VDDIO2 I/Os Compensation Cell.
 742:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 743:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.
 744:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 745:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 746:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_EnableVddIO2CompensationCell(void)
 747:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1212              		.loc 1 747 1 is_stmt 1 view -0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 0
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 1216              		@ link register save eliminated.
 748:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SET_BIT(SBS->CCCSR, SBS_CCCSR_EN2) ;
 1217              		.loc 1 748 3 view .LVU221
 1218 0000 034A     		ldr	r2, .L111
 1219 0002 D2F81031 		ldr	r3, [r2, #272]
 1220 0006 43F00403 		orr	r3, r3, #4
 1221 000a C2F81031 		str	r3, [r2, #272]
 749:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1222              		.loc 1 749 1 is_stmt 0 view .LVU222
 1223 000e 7047     		bx	lr
 1224              	.L112:
 1225              		.align	2
 1226              	.L111:
 1227 0010 00040044 		.word	1140851712
 1228              		.cfi_endproc
 1229              	.LFE391:
 1231              		.section	.text.HAL_SBS_DisableVddIO2CompensationCell,"ax",%progbits
 1232              		.align	1
 1233              		.global	HAL_SBS_DisableVddIO2CompensationCell
ARM GAS  /tmp/ccPzREru.s 			page 36


 1234              		.syntax unified
 1235              		.thumb
 1236              		.thumb_func
 1237              		.fpu fpv4-sp-d16
 1239              	HAL_SBS_DisableVddIO2CompensationCell:
 1240              	.LFB392:
 750:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 751:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 752:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Power-down the VDDIO2 I/Os Compensation Cell.
 753:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 754:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.
 755:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 756:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 757:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_DisableVddIO2CompensationCell(void)
 758:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1241              		.loc 1 758 1 is_stmt 1 view -0
 1242              		.cfi_startproc
 1243              		@ args = 0, pretend = 0, frame = 0
 1244              		@ frame_needed = 0, uses_anonymous_args = 0
 1245              		@ link register save eliminated.
 759:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   CLEAR_BIT(SBS->CCCSR, SBS_CCCSR_EN2);
 1246              		.loc 1 759 3 view .LVU224
 1247 0000 034A     		ldr	r2, .L114
 1248 0002 D2F81031 		ldr	r3, [r2, #272]
 1249 0006 23F00403 		bic	r3, r3, #4
 1250 000a C2F81031 		str	r3, [r2, #272]
 760:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1251              		.loc 1 760 1 is_stmt 0 view .LVU225
 1252 000e 7047     		bx	lr
 1253              	.L115:
 1254              		.align	2
 1255              	.L114:
 1256 0010 00040044 		.word	1140851712
 1257              		.cfi_endproc
 1258              	.LFE392:
 1260              		.section	.text.HAL_SBS_VDDCompensationCodeSelect,"ax",%progbits
 1261              		.align	1
 1262              		.global	HAL_SBS_VDDCompensationCodeSelect
 1263              		.syntax unified
 1264              		.thumb
 1265              		.thumb_func
 1266              		.fpu fpv4-sp-d16
 1268              	HAL_SBS_VDDCompensationCodeSelect:
 1269              	.LVL40:
 1270              	.LFB393:
 761:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 762:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 763:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Code selection for the VDD I/O Compensation cell
 764:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  SBS_CompCode: Selects the code to be applied for the I/O compensation cell
 765:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This parameter can be one of the following values:
 766:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_VDD_CELL_CODE : Select Code from the cell (available in the SBS_CCVALR)
 767:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_VDD_REGISTER_CODE: Select Code from the SBS compensation cell code register 
 768:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 769:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 770:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_VDDCompensationCodeSelect(uint32_t SBS_CompCode)
 771:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1271              		.loc 1 771 1 is_stmt 1 view -0
ARM GAS  /tmp/ccPzREru.s 			page 37


 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 0
 1274              		@ frame_needed = 0, uses_anonymous_args = 0
 1275              		@ link register save eliminated.
 772:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameter */
 773:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_VDD_CODE_SELECT(SBS_CompCode));
 1276              		.loc 1 773 3 view .LVU227
 774:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->CCCSR, SBS_CCCSR_CS1, (uint32_t)(SBS_CompCode));
 1277              		.loc 1 774 3 view .LVU228
 1278 0000 044A     		ldr	r2, .L117
 1279 0002 D2F81031 		ldr	r3, [r2, #272]
 1280 0006 23F00203 		bic	r3, r3, #2
 1281 000a 0343     		orrs	r3, r3, r0
 1282 000c C2F81031 		str	r3, [r2, #272]
 775:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1283              		.loc 1 775 1 is_stmt 0 view .LVU229
 1284 0010 7047     		bx	lr
 1285              	.L118:
 1286 0012 00BF     		.align	2
 1287              	.L117:
 1288 0014 00040044 		.word	1140851712
 1289              		.cfi_endproc
 1290              	.LFE393:
 1292              		.section	.text.HAL_SBS_VDDIOCompensationCodeSelect,"ax",%progbits
 1293              		.align	1
 1294              		.global	HAL_SBS_VDDIOCompensationCodeSelect
 1295              		.syntax unified
 1296              		.thumb
 1297              		.thumb_func
 1298              		.fpu fpv4-sp-d16
 1300              	HAL_SBS_VDDIOCompensationCodeSelect:
 1301              	.LVL41:
 1302              	.LFB394:
 776:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 777:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 778:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Code selection for the VDDIO I/O Compensation cell
 779:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  SBS_CompCode: Selects the code to be applied for the I/O compensation cell
 780:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This parameter can be one of the following values:
 781:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_VDDIO_CELL_CODE : Select Code from the cell (available in the SBS_CCVALR)
 782:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_VDDIO_REGISTER_CODE: Select Code from the SBS compensation cell code registe
 783:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 784:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 785:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_VDDIOCompensationCodeSelect(uint32_t SBS_CompCode)
 786:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1303              		.loc 1 786 1 is_stmt 1 view -0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 0
 1306              		@ frame_needed = 0, uses_anonymous_args = 0
 1307              		@ link register save eliminated.
 787:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameter */
 788:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_VDDIO_CODE_SELECT(SBS_CompCode));
 1308              		.loc 1 788 3 view .LVU231
 789:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->CCCSR, SBS_CCCSR_CS2, (uint32_t)(SBS_CompCode));
 1309              		.loc 1 789 3 view .LVU232
 1310 0000 044A     		ldr	r2, .L120
 1311 0002 D2F81031 		ldr	r3, [r2, #272]
 1312 0006 23F00803 		bic	r3, r3, #8
ARM GAS  /tmp/ccPzREru.s 			page 38


 1313 000a 0343     		orrs	r3, r3, r0
 1314 000c C2F81031 		str	r3, [r2, #272]
 790:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1315              		.loc 1 790 1 is_stmt 0 view .LVU233
 1316 0010 7047     		bx	lr
 1317              	.L121:
 1318 0012 00BF     		.align	2
 1319              	.L120:
 1320 0014 00040044 		.word	1140851712
 1321              		.cfi_endproc
 1322              	.LFE394:
 1324              		.section	.text.HAL_SBS_GetVddIO1CompensationCellReadyFlag,"ax",%progbits
 1325              		.align	1
 1326              		.global	HAL_SBS_GetVddIO1CompensationCellReadyFlag
 1327              		.syntax unified
 1328              		.thumb
 1329              		.thumb_func
 1330              		.fpu fpv4-sp-d16
 1332              	HAL_SBS_GetVddIO1CompensationCellReadyFlag:
 1333              	.LFB395:
 791:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 792:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 793:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  VDDIO1 I/O Compensation cell get ready flag status
 794:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval State of bit (1 or 0).
 795:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 796:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetVddIO1CompensationCellReadyFlag(void)
 797:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1334              		.loc 1 797 1 is_stmt 1 view -0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 0
 1337              		@ frame_needed = 0, uses_anonymous_args = 0
 1338              		@ link register save eliminated.
 798:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return ((READ_BIT(SBS->CCCSR, SBS_CCCSR_RDY1) == SBS_CCCSR_RDY1) ? 1UL : 0UL);
 1339              		.loc 1 798 3 view .LVU235
 1340              		.loc 1 798 12 is_stmt 0 view .LVU236
 1341 0000 034B     		ldr	r3, .L124
 1342 0002 D3F81001 		ldr	r0, [r3, #272]
 1343              		.loc 1 798 74 view .LVU237
 1344 0006 10F48070 		ands	r0, r0, #256
 1345 000a 00D0     		beq	.L122
 1346 000c 0120     		movs	r0, #1
 1347              	.L122:
 799:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1348              		.loc 1 799 1 view .LVU238
 1349 000e 7047     		bx	lr
 1350              	.L125:
 1351              		.align	2
 1352              	.L124:
 1353 0010 00040044 		.word	1140851712
 1354              		.cfi_endproc
 1355              	.LFE395:
 1357              		.section	.text.HAL_SBS_GetVddIO2CompensationCellReadyFlag,"ax",%progbits
 1358              		.align	1
 1359              		.global	HAL_SBS_GetVddIO2CompensationCellReadyFlag
 1360              		.syntax unified
 1361              		.thumb
 1362              		.thumb_func
ARM GAS  /tmp/ccPzREru.s 			page 39


 1363              		.fpu fpv4-sp-d16
 1365              	HAL_SBS_GetVddIO2CompensationCellReadyFlag:
 1366              	.LFB396:
 800:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 801:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 802:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  VDDIO2 I/O Compensation cell get ready flag status
 803:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval State of bit (1 or 0).
 804:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 805:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetVddIO2CompensationCellReadyFlag(void)
 806:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1367              		.loc 1 806 1 is_stmt 1 view -0
 1368              		.cfi_startproc
 1369              		@ args = 0, pretend = 0, frame = 0
 1370              		@ frame_needed = 0, uses_anonymous_args = 0
 1371              		@ link register save eliminated.
 807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return ((READ_BIT(SBS->CCCSR, SBS_CCCSR_RDY2) == SBS_CCCSR_RDY2) ? 1UL : 0UL);
 1372              		.loc 1 807 3 view .LVU240
 1373              		.loc 1 807 12 is_stmt 0 view .LVU241
 1374 0000 034B     		ldr	r3, .L128
 1375 0002 D3F81001 		ldr	r0, [r3, #272]
 1376              		.loc 1 807 74 view .LVU242
 1377 0006 10F40070 		ands	r0, r0, #512
 1378 000a 00D0     		beq	.L126
 1379 000c 0120     		movs	r0, #1
 1380              	.L126:
 808:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1381              		.loc 1 808 1 view .LVU243
 1382 000e 7047     		bx	lr
 1383              	.L129:
 1384              		.align	2
 1385              	.L128:
 1386 0010 00040044 		.word	1140851712
 1387              		.cfi_endproc
 1388              	.LFE396:
 1390              		.section	.text.HAL_SBS_VDDCompensationCodeConfig,"ax",%progbits
 1391              		.align	1
 1392              		.global	HAL_SBS_VDDCompensationCodeConfig
 1393              		.syntax unified
 1394              		.thumb
 1395              		.thumb_func
 1396              		.fpu fpv4-sp-d16
 1398              	HAL_SBS_VDDCompensationCodeConfig:
 1399              	.LVL42:
 1400              	.LFB397:
 809:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 810:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 811:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Code configuration for the VDD I/O Compensation cell
 812:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  SBS_PMOSCode: PMOS compensation code
 813:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This code is applied to the VDD I/O compensation cell when the CS1 bit of the
 814:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          SBS_CCSR is set
 815:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  SBS_NMOSCode: NMOS compensation code
 816:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This code is applied to the VDD I/O compensation cell when the CS1 bit of the
 817:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          SBS_CCSR is set
 818:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 819:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 820:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_VDDCompensationCodeConfig(uint32_t SBS_PMOSCode, uint32_t SBS_NMOSCode)
 821:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
ARM GAS  /tmp/ccPzREru.s 			page 40


 1401              		.loc 1 821 1 is_stmt 1 view -0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 0
 1404              		@ frame_needed = 0, uses_anonymous_args = 0
 1405              		@ link register save eliminated.
 822:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameter */
 823:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_CODE_CONFIG(SBS_PMOSCode));
 1406              		.loc 1 823 3 view .LVU245
 824:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_CODE_CONFIG(SBS_NMOSCode));
 1407              		.loc 1 824 3 view .LVU246
 825:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->CCSWCR, SBS_CCSWCR_SW_ANSRC1 | SBS_CCSWCR_SW_APSRC1, (((uint32_t)(SBS_PMOSCode) <
 1408              		.loc 1 825 3 view .LVU247
 1409 0000 054A     		ldr	r2, .L131
 1410 0002 D2F81831 		ldr	r3, [r2, #280]
 1411 0006 23F0FF03 		bic	r3, r3, #255
 1412 000a 41EA0011 		orr	r1, r1, r0, lsl #4
 1413              	.LVL43:
 1414              		.loc 1 825 3 is_stmt 0 view .LVU248
 1415 000e 0B43     		orrs	r3, r3, r1
 1416 0010 C2F81831 		str	r3, [r2, #280]
 826:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                                                         (uint32_t)(SBS_NMOSCode)));
 827:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1417              		.loc 1 827 1 view .LVU249
 1418 0014 7047     		bx	lr
 1419              	.L132:
 1420 0016 00BF     		.align	2
 1421              	.L131:
 1422 0018 00040044 		.word	1140851712
 1423              		.cfi_endproc
 1424              	.LFE397:
 1426              		.section	.text.HAL_SBS_VDDIOCompensationCodeConfig,"ax",%progbits
 1427              		.align	1
 1428              		.global	HAL_SBS_VDDIOCompensationCodeConfig
 1429              		.syntax unified
 1430              		.thumb
 1431              		.thumb_func
 1432              		.fpu fpv4-sp-d16
 1434              	HAL_SBS_VDDIOCompensationCodeConfig:
 1435              	.LVL44:
 1436              	.LFB398:
 828:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 829:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 830:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Code configuration for the VDDIO I/O Compensation cell
 831:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  SBS_PMOSCode: PMOS compensation code
 832:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This code is applied to the VDDIO I/O compensation cell when the CS2 bit of the
 833:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          SBS_CCSR is set
 834:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  SBS_NMOSCode: NMOS compensation code
 835:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This code is applied to the VDDIO I/O compensation cell when the CS2 bit of the
 836:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          SBS_CCSR is set
 837:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 838:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 839:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_VDDIOCompensationCodeConfig(uint32_t SBS_PMOSCode, uint32_t SBS_NMOSCode)
 840:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1437              		.loc 1 840 1 is_stmt 1 view -0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 0
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccPzREru.s 			page 41


 1441              		@ link register save eliminated.
 841:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameter */
 842:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_CODE_CONFIG(SBS_PMOSCode));
 1442              		.loc 1 842 3 view .LVU251
 843:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_CODE_CONFIG(SBS_NMOSCode));
 1443              		.loc 1 843 3 view .LVU252
 844:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->CCSWCR, SBS_CCSWCR_SW_ANSRC2 | SBS_CCSWCR_SW_APSRC2, (((uint32_t)(SBS_PMOSCode) <
 1444              		.loc 1 844 3 view .LVU253
 1445 0000 054A     		ldr	r2, .L134
 1446 0002 D2F81831 		ldr	r3, [r2, #280]
 1447 0006 23F47F43 		bic	r3, r3, #65280
 1448 000a 0902     		lsls	r1, r1, #8
 1449              	.LVL45:
 1450              		.loc 1 844 3 is_stmt 0 view .LVU254
 1451 000c 41EA0031 		orr	r1, r1, r0, lsl #12
 1452 0010 0B43     		orrs	r3, r3, r1
 1453 0012 C2F81831 		str	r3, [r2, #280]
 845:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                                                         ((uint32_t)(SBS_NMOSCode) <
 846:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1454              		.loc 1 846 1 view .LVU255
 1455 0016 7047     		bx	lr
 1456              	.L135:
 1457              		.align	2
 1458              	.L134:
 1459 0018 00040044 		.word	1140851712
 1460              		.cfi_endproc
 1461              	.LFE398:
 1463              		.section	.text.HAL_SBS_GetNMOSVddCompensationValue,"ax",%progbits
 1464              		.align	1
 1465              		.global	HAL_SBS_GetNMOSVddCompensationValue
 1466              		.syntax unified
 1467              		.thumb
 1468              		.thumb_func
 1469              		.fpu fpv4-sp-d16
 1471              	HAL_SBS_GetNMOSVddCompensationValue:
 1472              	.LFB399:
 847:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 848:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 849:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get NMOS compensation value of the I/Os supplied by VDD
 850:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 851:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 852:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetNMOSVddCompensationValue(void)
 853:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1473              		.loc 1 853 1 is_stmt 1 view -0
 1474              		.cfi_startproc
 1475              		@ args = 0, pretend = 0, frame = 0
 1476              		@ frame_needed = 0, uses_anonymous_args = 0
 1477              		@ link register save eliminated.
 854:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (uint32_t)(READ_BIT(SBS->CCVALR, SBS_CCVALR_ANSRC1));
 1478              		.loc 1 854 3 view .LVU257
 1479              		.loc 1 854 21 is_stmt 0 view .LVU258
 1480 0000 024B     		ldr	r3, .L137
 1481 0002 D3F81401 		ldr	r0, [r3, #276]
 855:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1482              		.loc 1 855 1 view .LVU259
 1483 0006 00F00F00 		and	r0, r0, #15
 1484 000a 7047     		bx	lr
ARM GAS  /tmp/ccPzREru.s 			page 42


 1485              	.L138:
 1486              		.align	2
 1487              	.L137:
 1488 000c 00040044 		.word	1140851712
 1489              		.cfi_endproc
 1490              	.LFE399:
 1492              		.section	.text.HAL_SBS_GetPMOSVddCompensationValue,"ax",%progbits
 1493              		.align	1
 1494              		.global	HAL_SBS_GetPMOSVddCompensationValue
 1495              		.syntax unified
 1496              		.thumb
 1497              		.thumb_func
 1498              		.fpu fpv4-sp-d16
 1500              	HAL_SBS_GetPMOSVddCompensationValue:
 1501              	.LFB400:
 856:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 857:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 858:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get PMOS compensation value of the I/Os supplied by VDD
 859:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 860:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 861:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetPMOSVddCompensationValue(void)
 862:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1502              		.loc 1 862 1 is_stmt 1 view -0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 0
 1505              		@ frame_needed = 0, uses_anonymous_args = 0
 1506              		@ link register save eliminated.
 863:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (uint32_t)(READ_BIT(SBS->CCVALR, SBS_CCVALR_APSRC1) >>  SBS_CCVALR_APSRC1_Pos);
 1507              		.loc 1 863 3 view .LVU261
 1508              		.loc 1 863 21 is_stmt 0 view .LVU262
 1509 0000 024B     		ldr	r3, .L140
 1510 0002 D3F81401 		ldr	r0, [r3, #276]
 864:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1511              		.loc 1 864 1 view .LVU263
 1512 0006 C0F30310 		ubfx	r0, r0, #4, #4
 1513 000a 7047     		bx	lr
 1514              	.L141:
 1515              		.align	2
 1516              	.L140:
 1517 000c 00040044 		.word	1140851712
 1518              		.cfi_endproc
 1519              	.LFE400:
 1521              		.section	.text.HAL_SBS_GetNMOSVddIO2CompensationValue,"ax",%progbits
 1522              		.align	1
 1523              		.global	HAL_SBS_GetNMOSVddIO2CompensationValue
 1524              		.syntax unified
 1525              		.thumb
 1526              		.thumb_func
 1527              		.fpu fpv4-sp-d16
 1529              	HAL_SBS_GetNMOSVddIO2CompensationValue:
 1530              	.LFB401:
 865:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 866:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 867:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get NMOS compensation value of the I/Os supplied by VDDIO2
 868:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 869:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 870:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetNMOSVddIO2CompensationValue(void)
ARM GAS  /tmp/ccPzREru.s 			page 43


 871:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1531              		.loc 1 871 1 is_stmt 1 view -0
 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 0
 1534              		@ frame_needed = 0, uses_anonymous_args = 0
 1535              		@ link register save eliminated.
 872:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (uint32_t)(READ_BIT(SBS->CCVALR, SBS_CCVALR_ANSRC2) >>  SBS_CCVALR_ANSRC2_Pos);
 1536              		.loc 1 872 3 view .LVU265
 1537              		.loc 1 872 21 is_stmt 0 view .LVU266
 1538 0000 024B     		ldr	r3, .L143
 1539 0002 D3F81401 		ldr	r0, [r3, #276]
 873:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1540              		.loc 1 873 1 view .LVU267
 1541 0006 C0F30320 		ubfx	r0, r0, #8, #4
 1542 000a 7047     		bx	lr
 1543              	.L144:
 1544              		.align	2
 1545              	.L143:
 1546 000c 00040044 		.word	1140851712
 1547              		.cfi_endproc
 1548              	.LFE401:
 1550              		.section	.text.HAL_SBS_GetPMOSVddIO2CompensationValue,"ax",%progbits
 1551              		.align	1
 1552              		.global	HAL_SBS_GetPMOSVddIO2CompensationValue
 1553              		.syntax unified
 1554              		.thumb
 1555              		.thumb_func
 1556              		.fpu fpv4-sp-d16
 1558              	HAL_SBS_GetPMOSVddIO2CompensationValue:
 1559              	.LFB402:
 874:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 875:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 876:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 877:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get PMOS compensation value of the I/Os supplied by VDDIO2
 878:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 879:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 880:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetPMOSVddIO2CompensationValue(void)
 881:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1560              		.loc 1 881 1 is_stmt 1 view -0
 1561              		.cfi_startproc
 1562              		@ args = 0, pretend = 0, frame = 0
 1563              		@ frame_needed = 0, uses_anonymous_args = 0
 1564              		@ link register save eliminated.
 882:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (uint32_t)(READ_BIT(SBS->CCVALR, SBS_CCVALR_APSRC2) >>  SBS_CCVALR_APSRC2_Pos);
 1565              		.loc 1 882 3 view .LVU269
 1566              		.loc 1 882 21 is_stmt 0 view .LVU270
 1567 0000 024B     		ldr	r3, .L146
 1568 0002 D3F81401 		ldr	r0, [r3, #276]
 883:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1569              		.loc 1 883 1 view .LVU271
 1570 0006 C0F30330 		ubfx	r0, r0, #12, #4
 1571 000a 7047     		bx	lr
 1572              	.L147:
 1573              		.align	2
 1574              	.L146:
 1575 000c 00040044 		.word	1140851712
 1576              		.cfi_endproc
ARM GAS  /tmp/ccPzREru.s 			page 44


 1577              	.LFE402:
 1579              		.section	.text.HAL_SBS_FLASH_DisableECCNMI,"ax",%progbits
 1580              		.align	1
 1581              		.global	HAL_SBS_FLASH_DisableECCNMI
 1582              		.syntax unified
 1583              		.thumb
 1584              		.thumb_func
 1585              		.fpu fpv4-sp-d16
 1587              	HAL_SBS_FLASH_DisableECCNMI:
 1588              	.LFB403:
 884:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 885:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 886:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Disable the NMI in case of double ECC error in FLASH Interface.
 887:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 888:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 889:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 890:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_FLASH_DisableECCNMI(void)
 891:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1589              		.loc 1 891 1 is_stmt 1 view -0
 1590              		.cfi_startproc
 1591              		@ args = 0, pretend = 0, frame = 0
 1592              		@ frame_needed = 0, uses_anonymous_args = 0
 1593              		@ link register save eliminated.
 892:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SET_BIT(SBS->ECCNMIR, SBS_ECCNMIR_ECCNMI_MASK_EN);
 1594              		.loc 1 892 3 view .LVU273
 1595 0000 034A     		ldr	r2, .L149
 1596 0002 D2F84C31 		ldr	r3, [r2, #332]
 1597 0006 43F00103 		orr	r3, r3, #1
 1598 000a C2F84C31 		str	r3, [r2, #332]
 893:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1599              		.loc 1 893 1 is_stmt 0 view .LVU274
 1600 000e 7047     		bx	lr
 1601              	.L150:
 1602              		.align	2
 1603              	.L149:
 1604 0010 00040044 		.word	1140851712
 1605              		.cfi_endproc
 1606              	.LFE403:
 1608              		.section	.text.HAL_SBS_FLASH_EnableECCNMI,"ax",%progbits
 1609              		.align	1
 1610              		.global	HAL_SBS_FLASH_EnableECCNMI
 1611              		.syntax unified
 1612              		.thumb
 1613              		.thumb_func
 1614              		.fpu fpv4-sp-d16
 1616              	HAL_SBS_FLASH_EnableECCNMI:
 1617              	.LFB404:
 894:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 895:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 896:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Enable the NMI in case of double ECC error in FLASH Interface.
 897:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 898:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 899:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 900:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_FLASH_EnableECCNMI(void)
 901:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1618              		.loc 1 901 1 is_stmt 1 view -0
 1619              		.cfi_startproc
ARM GAS  /tmp/ccPzREru.s 			page 45


 1620              		@ args = 0, pretend = 0, frame = 0
 1621              		@ frame_needed = 0, uses_anonymous_args = 0
 1622              		@ link register save eliminated.
 902:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   CLEAR_BIT(SBS->ECCNMIR, SBS_ECCNMIR_ECCNMI_MASK_EN);
 1623              		.loc 1 902 3 view .LVU276
 1624 0000 034A     		ldr	r2, .L152
 1625 0002 D2F84C31 		ldr	r3, [r2, #332]
 1626 0006 23F00103 		bic	r3, r3, #1
 1627 000a C2F84C31 		str	r3, [r2, #332]
 903:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1628              		.loc 1 903 1 is_stmt 0 view .LVU277
 1629 000e 7047     		bx	lr
 1630              	.L153:
 1631              		.align	2
 1632              	.L152:
 1633 0010 00040044 		.word	1140851712
 1634              		.cfi_endproc
 1635              	.LFE404:
 1637              		.section	.text.HAL_SBS_FLASH_ECCNMI_IsDisabled,"ax",%progbits
 1638              		.align	1
 1639              		.global	HAL_SBS_FLASH_ECCNMI_IsDisabled
 1640              		.syntax unified
 1641              		.thumb
 1642              		.thumb_func
 1643              		.fpu fpv4-sp-d16
 1645              	HAL_SBS_FLASH_ECCNMI_IsDisabled:
 1646              	.LFB405:
 904:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 905:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 906:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Check if the NMI is Enabled in case of double ECC error in FLASH Interface.
 907:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 908:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval State of bit (1 or 0).
 909:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 910:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_FLASH_ECCNMI_IsDisabled(void)
 911:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1647              		.loc 1 911 1 is_stmt 1 view -0
 1648              		.cfi_startproc
 1649              		@ args = 0, pretend = 0, frame = 0
 1650              		@ frame_needed = 0, uses_anonymous_args = 0
 1651              		@ link register save eliminated.
 912:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return ((READ_BIT(SBS->ECCNMIR, SBS_ECCNMIR_ECCNMI_MASK_EN) == SBS_ECCNMIR_ECCNMI_MASK_EN) ? 1UL 
 1652              		.loc 1 912 3 view .LVU279
 1653              		.loc 1 912 12 is_stmt 0 view .LVU280
 1654 0000 034B     		ldr	r3, .L156
 1655 0002 D3F84C01 		ldr	r0, [r3, #332]
 1656              		.loc 1 912 100 view .LVU281
 1657 0006 10F00100 		ands	r0, r0, #1
 1658 000a 00D0     		beq	.L154
 1659 000c 0120     		movs	r0, #1
 1660              	.L154:
 913:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1661              		.loc 1 913 1 view .LVU282
 1662 000e 7047     		bx	lr
 1663              	.L157:
 1664              		.align	2
 1665              	.L156:
 1666 0010 00040044 		.word	1140851712
ARM GAS  /tmp/ccPzREru.s 			page 46


 1667              		.cfi_endproc
 1668              	.LFE405:
 1670              		.section	.text.HAL_SBS_IncrementHDPLValue,"ax",%progbits
 1671              		.align	1
 1672              		.global	HAL_SBS_IncrementHDPLValue
 1673              		.syntax unified
 1674              		.thumb
 1675              		.thumb_func
 1676              		.fpu fpv4-sp-d16
 1678              	HAL_SBS_IncrementHDPLValue:
 1679              	.LFB406:
 914:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 915:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 916:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
 917:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 918:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 919:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group6 HAL SBS Boot control functions
 920:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief    HAL SBS Boot functions
 921:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 922:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
 923:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 924:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                        ##### HAL SBS Boot control functions #####
 925:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 926:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]  This section provides functions allowing to:
 927:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Increment the HDPL value
 928:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Get the HDPL value
 929:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 930:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
 931:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
 932:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 933:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 934:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 935:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Increment by 1 the HDPL value
 936:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 937:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 938:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_IncrementHDPLValue(void)
 939:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1680              		.loc 1 939 1 is_stmt 1 view -0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 0
 1683              		@ frame_needed = 0, uses_anonymous_args = 0
 1684              		@ link register save eliminated.
 940:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->HDPLCR, SBS_HDPLCR_INCR_HDPL, SBS_HDPL_INCREMENT_VALUE);
 1685              		.loc 1 940 3 view .LVU284
 1686 0000 034A     		ldr	r2, .L159
 1687 0002 1369     		ldr	r3, [r2, #16]
 1688 0004 23F0FF03 		bic	r3, r3, #255
 1689 0008 43F06A03 		orr	r3, r3, #106
 1690 000c 1361     		str	r3, [r2, #16]
 941:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1691              		.loc 1 941 1 is_stmt 0 view .LVU285
 1692 000e 7047     		bx	lr
 1693              	.L160:
 1694              		.align	2
 1695              	.L159:
 1696 0010 00040044 		.word	1140851712
 1697              		.cfi_endproc
ARM GAS  /tmp/ccPzREru.s 			page 47


 1698              	.LFE406:
 1700              		.section	.text.HAL_SBS_GetHDPLValue,"ax",%progbits
 1701              		.align	1
 1702              		.global	HAL_SBS_GetHDPLValue
 1703              		.syntax unified
 1704              		.thumb
 1705              		.thumb_func
 1706              		.fpu fpv4-sp-d16
 1708              	HAL_SBS_GetHDPLValue:
 1709              	.LFB407:
 942:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 944:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get the HDPL Value.
 945:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 946:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval  Returns the HDPL value
 947:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          This return value can be one of the following values:
 948:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_HDPL_VALUE_0: HDPL0
 949:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_HDPL_VALUE_1: HDPL1
 950:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_HDPL_VALUE_2: HDPL2
 951:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_HDPL_VALUE_3: HDPL3
 952:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 953:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetHDPLValue(void)
 954:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1710              		.loc 1 954 1 is_stmt 1 view -0
 1711              		.cfi_startproc
 1712              		@ args = 0, pretend = 0, frame = 0
 1713              		@ frame_needed = 0, uses_anonymous_args = 0
 1714              		@ link register save eliminated.
 955:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (uint32_t)(READ_BIT(SBS->HDPLSR, SBS_HDPLSR_HDPL));
 1715              		.loc 1 955 3 view .LVU287
 1716              		.loc 1 955 21 is_stmt 0 view .LVU288
 1717 0000 014B     		ldr	r3, .L162
 1718 0002 5869     		ldr	r0, [r3, #20]
 956:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1719              		.loc 1 956 1 view .LVU289
 1720 0004 C0B2     		uxtb	r0, r0
 1721 0006 7047     		bx	lr
 1722              	.L163:
 1723              		.align	2
 1724              	.L162:
 1725 0008 00040044 		.word	1140851712
 1726              		.cfi_endproc
 1727              	.LFE407:
 1729              		.section	.text.HAL_SBS_EPOCHSelection,"ax",%progbits
 1730              		.align	1
 1731              		.global	HAL_SBS_EPOCHSelection
 1732              		.syntax unified
 1733              		.thumb
 1734              		.thumb_func
 1735              		.fpu fpv4-sp-d16
 1737              	HAL_SBS_EPOCHSelection:
 1738              	.LVL46:
 1739              	.LFB408:
 957:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 958:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 959:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
 960:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
ARM GAS  /tmp/ccPzREru.s 			page 48


 961:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 962:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group7 HAL SBS Hardware secure storage control functions
 963:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief    HAL SBS Hardware secure storage functions
 964:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 965:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
 966:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 967:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                        ##### HAL SBS Hardware secure storage control functions ####
 968:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 969:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]  This section provides functions allowing to:
 970:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Select EPOCH security sent to SAES IP
 971:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Set/Get EPOCH security selection
 972:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Set/Get the OBK-HDPL Value
 973:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 974:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
 975:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
 976:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 977:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 978:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined(SBS_EPOCHSELCR_EPOCH_SEL)
 979:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 980:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Select EPOCH security sent to SAES IP to encrypt/decrypt keys
 981:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  Epoch_Selection: Select EPOCH security
 982:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This parameter can be one of the following values:
 983:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_EPOCH_SEL_SECURE    : EPOCH secure selected.
 984:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_EPOCH_SEL_NONSECURE : EPOCH non secure selected.
 985:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_EPOCH_SEL_PUFCHECK  : EPOCH all zeros for PUF integrity check.
 986:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 987:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 988:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_EPOCHSelection(uint32_t Epoch_Selection)
 989:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1740              		.loc 1 989 1 is_stmt 1 view -0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 0
 1743              		@ frame_needed = 0, uses_anonymous_args = 0
 1744              		@ link register save eliminated.
 990:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameter */
 991:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_EPOCH_SELECTION(Epoch_Selection));
 1745              		.loc 1 991 3 view .LVU291
 992:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 993:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->EPOCHSELCR, SBS_EPOCHSELCR_EPOCH_SEL, (uint32_t)(Epoch_Selection));
 1746              		.loc 1 993 3 view .LVU292
 1747 0000 044A     		ldr	r2, .L165
 1748 0002 D2F8A030 		ldr	r3, [r2, #160]
 1749 0006 23F00303 		bic	r3, r3, #3
 1750 000a 0343     		orrs	r3, r3, r0
 1751 000c C2F8A030 		str	r3, [r2, #160]
 994:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1752              		.loc 1 994 1 is_stmt 0 view .LVU293
 1753 0010 7047     		bx	lr
 1754              	.L166:
 1755 0012 00BF     		.align	2
 1756              	.L165:
 1757 0014 00040044 		.word	1140851712
 1758              		.cfi_endproc
 1759              	.LFE408:
 1761              		.section	.text.HAL_SBS_GetEPOCHSelection,"ax",%progbits
 1762              		.align	1
 1763              		.global	HAL_SBS_GetEPOCHSelection
ARM GAS  /tmp/ccPzREru.s 			page 49


 1764              		.syntax unified
 1765              		.thumb
 1766              		.thumb_func
 1767              		.fpu fpv4-sp-d16
 1769              	HAL_SBS_GetEPOCHSelection:
 1770              	.LFB409:
 995:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 996:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 997:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get EPOCH security selection
 998:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Returned value can be one of the following values:
 999:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_EPOCH_SEL_SECURE    : EPOCH secure selected.
1000:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_EPOCH_SEL_NONSECURE : EPOCH non secure selected.
1001:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_EPOCH_SEL_PUFCHECK  : EPOCH all zeros for PUF integrity check.
1002:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1003:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetEPOCHSelection(void)
1004:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1771              		.loc 1 1004 1 is_stmt 1 view -0
 1772              		.cfi_startproc
 1773              		@ args = 0, pretend = 0, frame = 0
 1774              		@ frame_needed = 0, uses_anonymous_args = 0
 1775              		@ link register save eliminated.
1005:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (uint32_t)(READ_BIT(SBS->EPOCHSELCR, SBS_EPOCHSELCR_EPOCH_SEL));
 1776              		.loc 1 1005 3 view .LVU295
 1777              		.loc 1 1005 21 is_stmt 0 view .LVU296
 1778 0000 024B     		ldr	r3, .L168
 1779 0002 D3F8A000 		ldr	r0, [r3, #160]
1006:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1780              		.loc 1 1006 1 view .LVU297
 1781 0006 00F00300 		and	r0, r0, #3
 1782 000a 7047     		bx	lr
 1783              	.L169:
 1784              		.align	2
 1785              	.L168:
 1786 000c 00040044 		.word	1140851712
 1787              		.cfi_endproc
 1788              	.LFE409:
 1790              		.section	.text.HAL_SBS_SetOBKHDPL,"ax",%progbits
 1791              		.align	1
 1792              		.global	HAL_SBS_SetOBKHDPL
 1793              		.syntax unified
 1794              		.thumb
 1795              		.thumb_func
 1796              		.fpu fpv4-sp-d16
 1798              	HAL_SBS_SetOBKHDPL:
 1799              	.LVL47:
 1800              	.LFB410:
1007:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* SBS_EPOCHSELCR_EPOCH_SEL */
1008:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1009:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined(SBS_NEXTHDPLCR_NEXTHDPL)
1010:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1011:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Set the OBK-HDPL Value.
1012:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  OBKHDPL_Value Value of the increment to add to HDPL value to generate the OBK-HDPL.
1013:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This parameter can be one of the following values:
1014:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_OBKHDPL_INCR_0 : HDPL
1015:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_OBKHDPL_INCR_1 : HDPL + 1
1016:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_OBKHDPL_INCR_2 : HDPL + 2
1017:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_OBKHDPL_INCR_3 : HDPL + 3
ARM GAS  /tmp/ccPzREru.s 			page 50


1018:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
1019:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1020:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_SetOBKHDPL(uint32_t OBKHDPL_Value)
1021:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1801              		.loc 1 1021 1 is_stmt 1 view -0
 1802              		.cfi_startproc
 1803              		@ args = 0, pretend = 0, frame = 0
 1804              		@ frame_needed = 0, uses_anonymous_args = 0
 1805              		@ link register save eliminated.
1022:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameter */
1023:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_OBKHDPL_SELECTION(OBKHDPL_Value));
 1806              		.loc 1 1023 3 view .LVU299
1024:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1025:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->NEXTHDPLCR, SBS_NEXTHDPLCR_NEXTHDPL, (uint32_t)(OBKHDPL_Value));
 1807              		.loc 1 1025 3 view .LVU300
 1808 0000 034A     		ldr	r2, .L171
 1809 0002 9369     		ldr	r3, [r2, #24]
 1810 0004 23F00303 		bic	r3, r3, #3
 1811 0008 0343     		orrs	r3, r3, r0
 1812 000a 9361     		str	r3, [r2, #24]
1026:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1813              		.loc 1 1026 1 is_stmt 0 view .LVU301
 1814 000c 7047     		bx	lr
 1815              	.L172:
 1816 000e 00BF     		.align	2
 1817              	.L171:
 1818 0010 00040044 		.word	1140851712
 1819              		.cfi_endproc
 1820              	.LFE410:
 1822              		.section	.text.HAL_SBS_GetOBKHDPL,"ax",%progbits
 1823              		.align	1
 1824              		.global	HAL_SBS_GetOBKHDPL
 1825              		.syntax unified
 1826              		.thumb
 1827              		.thumb_func
 1828              		.fpu fpv4-sp-d16
 1830              	HAL_SBS_GetOBKHDPL:
 1831              	.LFB411:
1027:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1028:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1029:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get the OBK-HDPL Value.
1030:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval  Returns the incremement to add to HDPL value to generate OBK-HDPL
1031:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          This return value can be one of the following values:
1032:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_OBKHDPL_INCR_0: HDPL
1033:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_OBKHDPL_INCR_1: HDPL + 1
1034:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_OBKHDPL_INCR_2: HDPL + 2
1035:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_OBKHDPL_INCR_3: HDPL + 3
1036:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1037:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetOBKHDPL(void)
1038:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1832              		.loc 1 1038 1 is_stmt 1 view -0
 1833              		.cfi_startproc
 1834              		@ args = 0, pretend = 0, frame = 0
 1835              		@ frame_needed = 0, uses_anonymous_args = 0
 1836              		@ link register save eliminated.
1039:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (uint32_t)(READ_BIT(SBS->NEXTHDPLCR, SBS_NEXTHDPLCR_NEXTHDPL));
 1837              		.loc 1 1039 3 view .LVU303
ARM GAS  /tmp/ccPzREru.s 			page 51


 1838              		.loc 1 1039 21 is_stmt 0 view .LVU304
 1839 0000 024B     		ldr	r3, .L174
 1840 0002 9869     		ldr	r0, [r3, #24]
1040:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1841              		.loc 1 1040 1 view .LVU305
 1842 0004 00F00300 		and	r0, r0, #3
 1843 0008 7047     		bx	lr
 1844              	.L175:
 1845 000a 00BF     		.align	2
 1846              	.L174:
 1847 000c 00040044 		.word	1140851712
 1848              		.cfi_endproc
 1849              	.LFE411:
 1851              		.section	.text.HAL_SBS_OpenAccessPort,"ax",%progbits
 1852              		.align	1
 1853              		.global	HAL_SBS_OpenAccessPort
 1854              		.syntax unified
 1855              		.thumb
 1856              		.thumb_func
 1857              		.fpu fpv4-sp-d16
 1859              	HAL_SBS_OpenAccessPort:
 1860              	.LFB412:
1041:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* SBS_NEXTHDPLCR_NEXTHDPL */
1042:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1043:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1044:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
1045:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1046:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1047:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group8 HAL SBS Debug control functions
1048:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief    HAL SBS Debug functions
1049:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
1050:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
1051:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
1052:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                        ##### SBS Debug control functions #####
1053:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
1054:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]  This section provides functions allowing to:
1055:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Open the device access port
1056:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Open the debug
1057:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Configure the authenticated debug HDPL
1058:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Get the current value of the hide protection level
1059:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Lock the access to the debug control register
1060:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Configure/Get the authenticated debug security access
1061:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1062:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
1063:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
1064:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1065:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1066:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1067:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Open the device access port.
1068:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   This function can be only used when device state is Closed.
1069:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
1070:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1071:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_OpenAccessPort(void)
1072:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1861              		.loc 1 1072 1 is_stmt 1 view -0
 1862              		.cfi_startproc
 1863              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccPzREru.s 			page 52


 1864              		@ frame_needed = 0, uses_anonymous_args = 0
 1865              		@ link register save eliminated.
1073:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->DBGCR, SBS_DBGCR_AP_UNLOCK, SBS_DEBUG_UNLOCK_VALUE);
 1866              		.loc 1 1073 3 view .LVU307
 1867 0000 034A     		ldr	r2, .L177
 1868 0002 136A     		ldr	r3, [r2, #32]
 1869 0004 23F0FF03 		bic	r3, r3, #255
 1870 0008 43F0B403 		orr	r3, r3, #180
 1871 000c 1362     		str	r3, [r2, #32]
1074:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1872              		.loc 1 1074 1 is_stmt 0 view .LVU308
 1873 000e 7047     		bx	lr
 1874              	.L178:
 1875              		.align	2
 1876              	.L177:
 1877 0010 00040044 		.word	1140851712
 1878              		.cfi_endproc
 1879              	.LFE412:
 1881              		.section	.text.HAL_SBS_OpenDebug,"ax",%progbits
 1882              		.align	1
 1883              		.global	HAL_SBS_OpenDebug
 1884              		.syntax unified
 1885              		.thumb
 1886              		.thumb_func
 1887              		.fpu fpv4-sp-d16
 1889              	HAL_SBS_OpenDebug:
 1890              	.LFB413:
1075:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1076:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1077:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Open the debug when the hide protection level is authorized.
1078:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   This function can be only used when device state is Closed.
1079:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
1080:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1081:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_OpenDebug(void)
1082:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1891              		.loc 1 1082 1 is_stmt 1 view -0
 1892              		.cfi_startproc
 1893              		@ args = 0, pretend = 0, frame = 0
 1894              		@ frame_needed = 0, uses_anonymous_args = 0
 1895              		@ link register save eliminated.
1083:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->DBGCR, SBS_DBGCR_DBG_UNLOCK, (SBS_DEBUG_UNLOCK_VALUE << SBS_DBGCR_DBG_UNLOCK_Pos)
 1896              		.loc 1 1083 3 view .LVU310
 1897 0000 034A     		ldr	r2, .L180
 1898 0002 136A     		ldr	r3, [r2, #32]
 1899 0004 23F47F43 		bic	r3, r3, #65280
 1900 0008 43F43443 		orr	r3, r3, #46080
 1901 000c 1362     		str	r3, [r2, #32]
1084:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1902              		.loc 1 1084 1 is_stmt 0 view .LVU311
 1903 000e 7047     		bx	lr
 1904              	.L181:
 1905              		.align	2
 1906              	.L180:
 1907 0010 00040044 		.word	1140851712
 1908              		.cfi_endproc
 1909              	.LFE413:
 1911              		.section	.text.HAL_SBS_ConfigDebugLevel,"ax",%progbits
ARM GAS  /tmp/ccPzREru.s 			page 53


 1912              		.align	1
 1913              		.global	HAL_SBS_ConfigDebugLevel
 1914              		.syntax unified
 1915              		.thumb
 1916              		.thumb_func
 1917              		.fpu fpv4-sp-d16
 1919              	HAL_SBS_ConfigDebugLevel:
 1920              	.LVL48:
 1921              	.LFB414:
1085:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1086:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Configure the authenticated debug hide protection level.
1088:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   This function can be only used when device state is Closed.
1089:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  Level Hide protection level where the authenticated debug opens
1090:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            This value is one of @ref SBS_HDPL_Value (except SBS_HDPL_VALUE_0)
1091:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval HAL_OK if parameter is correct
1092:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         HAL_ERROR otherwise
1093:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1094:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** HAL_StatusTypeDef HAL_SBS_ConfigDebugLevel(uint32_t Level)
1095:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1922              		.loc 1 1095 1 is_stmt 1 view -0
 1923              		.cfi_startproc
 1924              		@ args = 0, pretend = 0, frame = 0
 1925              		@ frame_needed = 0, uses_anonymous_args = 0
 1926              		@ link register save eliminated.
1096:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameter */
1097:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_HDPL(Level));
 1927              		.loc 1 1097 3 view .LVU313
1098:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1099:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   if (Level != SBS_HDPL_VALUE_0)
 1928              		.loc 1 1099 3 view .LVU314
 1929              		.loc 1 1099 6 is_stmt 0 view .LVU315
 1930 0000 B428     		cmp	r0, #180
 1931 0002 08D0     		beq	.L184
1100:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
1101:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     MODIFY_REG(SBS->DBGCR, SBS_DBGCR_DBG_AUTH_HDPL, (Level << SBS_DBGCR_DBG_AUTH_HDPL_Pos));
 1932              		.loc 1 1101 5 is_stmt 1 view .LVU316
 1933 0004 054A     		ldr	r2, .L185
 1934 0006 136A     		ldr	r3, [r2, #32]
 1935 0008 23F47F03 		bic	r3, r3, #16711680
 1936 000c 43EA0040 		orr	r0, r3, r0, lsl #16
 1937              	.LVL49:
 1938              		.loc 1 1101 5 is_stmt 0 view .LVU317
 1939 0010 1062     		str	r0, [r2, #32]
1102:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     return HAL_OK;
 1940              		.loc 1 1102 5 is_stmt 1 view .LVU318
 1941              		.loc 1 1102 12 is_stmt 0 view .LVU319
 1942 0012 0020     		movs	r0, #0
 1943 0014 7047     		bx	lr
 1944              	.LVL50:
 1945              	.L184:
1103:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
1104:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   else
1105:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
1106:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     return HAL_ERROR;
 1946              		.loc 1 1106 12 view .LVU320
 1947 0016 0120     		movs	r0, #1
ARM GAS  /tmp/ccPzREru.s 			page 54


 1948              	.LVL51:
1107:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
1108:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1949              		.loc 1 1108 1 view .LVU321
 1950 0018 7047     		bx	lr
 1951              	.L186:
 1952 001a 00BF     		.align	2
 1953              	.L185:
 1954 001c 00040044 		.word	1140851712
 1955              		.cfi_endproc
 1956              	.LFE414:
 1958              		.section	.text.HAL_SBS_GetDebugLevel,"ax",%progbits
 1959              		.align	1
 1960              		.global	HAL_SBS_GetDebugLevel
 1961              		.syntax unified
 1962              		.thumb
 1963              		.thumb_func
 1964              		.fpu fpv4-sp-d16
 1966              	HAL_SBS_GetDebugLevel:
 1967              	.LFB415:
1109:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get the current value of the hide protection level.
1112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   This function can be only used when device state is Closed.
1113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Current hide protection level
1114:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            This value is one of @ref SBS_HDPL_Value
1115:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1116:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetDebugLevel(void)
1117:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1968              		.loc 1 1117 1 is_stmt 1 view -0
 1969              		.cfi_startproc
 1970              		@ args = 0, pretend = 0, frame = 0
 1971              		@ frame_needed = 0, uses_anonymous_args = 0
 1972              		@ link register save eliminated.
1118:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return ((SBS->DBGCR & SBS_DBGCR_DBG_AUTH_HDPL) >> SBS_DBGCR_DBG_AUTH_HDPL_Pos);
 1973              		.loc 1 1118 3 view .LVU323
 1974              		.loc 1 1118 15 is_stmt 0 view .LVU324
 1975 0000 024B     		ldr	r3, .L188
 1976 0002 186A     		ldr	r0, [r3, #32]
1119:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1977              		.loc 1 1119 1 view .LVU325
 1978 0004 C0F30740 		ubfx	r0, r0, #16, #8
 1979 0008 7047     		bx	lr
 1980              	.L189:
 1981 000a 00BF     		.align	2
 1982              	.L188:
 1983 000c 00040044 		.word	1140851712
 1984              		.cfi_endproc
 1985              	.LFE415:
 1987              		.section	.text.HAL_SBS_LockDebugConfig,"ax",%progbits
 1988              		.align	1
 1989              		.global	HAL_SBS_LockDebugConfig
 1990              		.syntax unified
 1991              		.thumb
 1992              		.thumb_func
 1993              		.fpu fpv4-sp-d16
 1995              	HAL_SBS_LockDebugConfig:
ARM GAS  /tmp/ccPzREru.s 			page 55


 1996              	.LFB416:
1120:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1121:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Lock the access to the debug control register.
1123:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   This function can be only used when device state is Closed.
1124:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   locking the current debug configuration is released only by a reset.
1125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
1126:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_LockDebugConfig(void)
1128:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1997              		.loc 1 1128 1 is_stmt 1 view -0
 1998              		.cfi_startproc
 1999              		@ args = 0, pretend = 0, frame = 0
 2000              		@ frame_needed = 0, uses_anonymous_args = 0
 2001              		@ link register save eliminated.
1129:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->DBGLOCKR, SBS_DBGLOCKR_DBGCFG_LOCK, SBS_DEBUG_LOCK_VALUE);
 2002              		.loc 1 1129 3 view .LVU327
 2003 0000 034A     		ldr	r2, .L191
 2004 0002 536A     		ldr	r3, [r2, #36]
 2005 0004 23F0FF03 		bic	r3, r3, #255
 2006 0008 43F0C303 		orr	r3, r3, #195
 2007 000c 5362     		str	r3, [r2, #36]
1130:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 2008              		.loc 1 1130 1 is_stmt 0 view .LVU328
 2009 000e 7047     		bx	lr
 2010              	.L192:
 2011              		.align	2
 2012              	.L191:
 2013 0010 00040044 		.word	1140851712
 2014              		.cfi_endproc
 2015              	.LFE416:
 2017              		.section	.text.HAL_SBS_ConfigDebugSecurity,"ax",%progbits
 2018              		.align	1
 2019              		.global	HAL_SBS_ConfigDebugSecurity
 2020              		.syntax unified
 2021              		.thumb
 2022              		.thumb_func
 2023              		.fpu fpv4-sp-d16
 2025              	HAL_SBS_ConfigDebugSecurity:
 2026              	.LVL52:
 2027              	.LFB417:
1131:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined(SBS_DBGCR_DBG_AUTH_SEC)
1133:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1134:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Configure the authenticated debug security access.
1135:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  Control debug opening secure/non-secure or non-secure only
1136:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This parameter can be one of the following values:
1137:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_DEBUG_SEC_NSEC: debug opening for secure and non-secure.
1138:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_DEBUG_NSEC: debug opening for non-secure only.
1139:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
1140:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_ConfigDebugSecurity(uint32_t Security)
1142:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 2028              		.loc 1 1142 1 is_stmt 1 view -0
 2029              		.cfi_startproc
 2030              		@ args = 0, pretend = 0, frame = 0
 2031              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccPzREru.s 			page 56


 2032              		@ link register save eliminated.
1143:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->DBGCR, SBS_DBGCR_DBG_AUTH_SEC, (Security << SBS_DBGCR_DBG_AUTH_SEC_Pos));
 2033              		.loc 1 1143 3 view .LVU330
 2034 0000 034A     		ldr	r2, .L194
 2035 0002 136A     		ldr	r3, [r2, #32]
 2036 0004 23F07F43 		bic	r3, r3, #-16777216
 2037 0008 43EA0063 		orr	r3, r3, r0, lsl #24
 2038 000c 1362     		str	r3, [r2, #32]
1144:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 2039              		.loc 1 1144 1 is_stmt 0 view .LVU331
 2040 000e 7047     		bx	lr
 2041              	.L195:
 2042              		.align	2
 2043              	.L194:
 2044 0010 00040044 		.word	1140851712
 2045              		.cfi_endproc
 2046              	.LFE417:
 2048              		.section	.text.HAL_SBS_GetDebugSecurity,"ax",%progbits
 2049              		.align	1
 2050              		.global	HAL_SBS_GetDebugSecurity
 2051              		.syntax unified
 2052              		.thumb
 2053              		.thumb_func
 2054              		.fpu fpv4-sp-d16
 2056              	HAL_SBS_GetDebugSecurity:
 2057              	.LFB418:
1145:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1146:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1147:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get the current value of the hide protection level.
1148:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   This function can be only used when device state is Closed.
1149:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Returned value can be one of the following values:
1150:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_DEBUG_SEC_NSEC: debug opening for secure and non-secure.
1151:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_DEBUG_NSEC: debug opening for non-secure only.
1152:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1153:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetDebugSecurity(void)
1154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 2058              		.loc 1 1154 1 is_stmt 1 view -0
 2059              		.cfi_startproc
 2060              		@ args = 0, pretend = 0, frame = 0
 2061              		@ frame_needed = 0, uses_anonymous_args = 0
 2062              		@ link register save eliminated.
1155:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return ((SBS->DBGCR & SBS_DBGCR_DBG_AUTH_SEC) >> SBS_DBGCR_DBG_AUTH_SEC_Pos);
 2063              		.loc 1 1155 3 view .LVU333
 2064              		.loc 1 1155 15 is_stmt 0 view .LVU334
 2065 0000 014B     		ldr	r3, .L197
 2066 0002 186A     		ldr	r0, [r3, #32]
1156:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 2067              		.loc 1 1156 1 view .LVU335
 2068 0004 000E     		lsrs	r0, r0, #24
 2069 0006 7047     		bx	lr
 2070              	.L198:
 2071              		.align	2
 2072              	.L197:
 2073 0008 00040044 		.word	1140851712
 2074              		.cfi_endproc
 2075              	.LFE418:
 2077              		.section	.text.HAL_SBS_Lock,"ax",%progbits
ARM GAS  /tmp/ccPzREru.s 			page 57


 2078              		.align	1
 2079              		.global	HAL_SBS_Lock
 2080              		.syntax unified
 2081              		.thumb
 2082              		.thumb_func
 2083              		.fpu fpv4-sp-d16
 2085              	HAL_SBS_Lock:
 2086              	.LVL53:
 2087              	.LFB419:
1157:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* SBS_DBGCR_DBG_AUTH_SEC */
1158:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1159:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
1161:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1162:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1163:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group9 HAL SBS lock management functions
1164:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief SBS lock management functions.
1165:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
1166:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
1167:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
1168:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                         ##### SBS lock functions #####
1169:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
1170:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1171:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
1172:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
1173:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1174:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1175:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1176:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Lock the SBS item(s).
1177:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   Setting lock(s) depends on privilege mode in secure/non-secure code
1178:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         Lock(s) cleared only at system reset
1179:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  Item Item(s) to set lock on.
1180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This parameter can be a combination of @ref SBS_Lock_items
1181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
1182:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1183:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_Lock(uint32_t Item)
1184:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 2088              		.loc 1 1184 1 is_stmt 1 view -0
 2089              		.cfi_startproc
 2090              		@ args = 0, pretend = 0, frame = 0
 2091              		@ frame_needed = 0, uses_anonymous_args = 0
 2092              		@ link register save eliminated.
1185:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameters */
1186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_LOCK_ITEMS(Item));
 2093              		.loc 1 1186 3 view .LVU337
1187:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1188:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Privilege secure/non-secure locks */
1189:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SBS->CNSLCKR = (0xFFFFU & Item);  /* non-secure lock item in 16 lowest bits */
 2094              		.loc 1 1189 3 view .LVU338
 2095              		.loc 1 1189 27 is_stmt 0 view .LVU339
 2096 0000 80B2     		uxth	r0, r0
 2097              	.LVL54:
 2098              		.loc 1 1189 16 view .LVU340
 2099 0002 024B     		ldr	r3, .L200
 2100 0004 C3F84401 		str	r0, [r3, #324]
1190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1191:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
ARM GAS  /tmp/ccPzREru.s 			page 58


1192:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Privilege secure only locks */
1193:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SBS->CSLCKR = ((0xFFFF0000U & Item) >> 16U);  /* Secure-only lock item in 16 highest bits */
1194:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* __ARM_FEATURE_CMSE */
1195:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 2101              		.loc 1 1195 1 view .LVU341
 2102 0008 7047     		bx	lr
 2103              	.L201:
 2104 000a 00BF     		.align	2
 2105              	.L200:
 2106 000c 00040044 		.word	1140851712
 2107              		.cfi_endproc
 2108              	.LFE419:
 2110              		.section	.text.HAL_SBS_GetLock,"ax",%progbits
 2111              		.align	1
 2112              		.global	HAL_SBS_GetLock
 2113              		.syntax unified
 2114              		.thumb
 2115              		.thumb_func
 2116              		.fpu fpv4-sp-d16
 2118              	HAL_SBS_GetLock:
 2119              	.LVL55:
 2120              	.LFB420:
1196:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1197:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get the lock state of SBS items.
1199:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   Getting lock(s) depends on privilege mode in secure/non-secure code
1200:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  pItem pointer to return locked items
1201:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         the return value can be a combination of @ref SBS_Lock_items
1202:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval HAL status
1203:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** HAL_StatusTypeDef HAL_SBS_GetLock(uint32_t *pItem)
1205:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 2121              		.loc 1 1205 1 is_stmt 1 view -0
 2122              		.cfi_startproc
 2123              		@ args = 0, pretend = 0, frame = 0
 2124              		@ frame_needed = 0, uses_anonymous_args = 0
 2125              		@ link register save eliminated.
1206:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   uint32_t tmp_lock;
 2126              		.loc 1 1206 3 view .LVU343
1207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1208:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check null pointer */
1209:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   if (pItem == NULL)
 2127              		.loc 1 1209 3 view .LVU344
 2128              		.loc 1 1209 6 is_stmt 0 view .LVU345
 2129 0000 28B1     		cbz	r0, .L204
1210:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
1211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     return HAL_ERROR;
1212:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
1213:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1214:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Get the non-secure lock state */
1215:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   tmp_lock = SBS->CNSLCKR;
 2130              		.loc 1 1215 3 is_stmt 1 view .LVU346
 2131              		.loc 1 1215 12 is_stmt 0 view .LVU347
 2132 0002 044A     		ldr	r2, .L205
 2133 0004 D2F84421 		ldr	r2, [r2, #324]
 2134              	.LVL56:
1216:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
ARM GAS  /tmp/ccPzREru.s 			page 59


1217:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Get the secure lock state in secure code */
1218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
1219:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   tmp_lock |= (SBS->CSLCKR << 16U);
1220:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* __ARM_FEATURE_CMSE */
1221:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1222:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Return overall lock status */
1223:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *pItem = tmp_lock;
 2135              		.loc 1 1223 3 is_stmt 1 view .LVU348
 2136              		.loc 1 1223 10 is_stmt 0 view .LVU349
 2137 0008 0260     		str	r2, [r0]
1224:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1225:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return HAL_OK;
 2138              		.loc 1 1225 3 is_stmt 1 view .LVU350
 2139              		.loc 1 1225 10 is_stmt 0 view .LVU351
 2140 000a 0020     		movs	r0, #0
 2141              	.LVL57:
 2142              		.loc 1 1225 10 view .LVU352
 2143 000c 7047     		bx	lr
 2144              	.LVL58:
 2145              	.L204:
1211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 2146              		.loc 1 1211 12 view .LVU353
 2147 000e 0120     		movs	r0, #1
 2148              	.LVL59:
1226:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 2149              		.loc 1 1226 1 view .LVU354
 2150 0010 7047     		bx	lr
 2151              	.L206:
 2152 0012 00BF     		.align	2
 2153              	.L205:
 2154 0014 00040044 		.word	1140851712
 2155              		.cfi_endproc
 2156              	.LFE420:
 2158              		.global	uwTickFreq
 2159              		.global	uwTickPrio
 2160              		.global	uwTick
 2161              		.section	.bss.uwTick,"aw",%nobits
 2162              		.align	2
 2163              		.set	.LANCHOR2,. + 0
 2166              	uwTick:
 2167 0000 00000000 		.space	4
 2168              		.section	.data.uwTickFreq,"aw"
 2169              		.set	.LANCHOR0,. + 0
 2172              	uwTickFreq:
 2173 0000 01       		.byte	1
 2174              		.section	.data.uwTickPrio,"aw"
 2175              		.align	2
 2176              		.set	.LANCHOR1,. + 0
 2179              	uwTickPrio:
 2180 0000 10000000 		.word	16
 2181              		.text
 2182              	.Letext0:
 2183              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 2184              		.file 3 "Drivers/CMSIS/Include/core_cm33.h"
 2185              		.file 4 "Drivers/CMSIS/Device/ST/STM32H5xx/Include/system_stm32h5xx.h"
 2186              		.file 5 "Drivers/CMSIS/Device/ST/STM32H5xx/Include/stm32h533xx.h"
 2187              		.file 6 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_def.h"
ARM GAS  /tmp/ccPzREru.s 			page 60


 2188              		.file 7 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal.h"
 2189              		.file 8 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_cortex.h"
 2190              		.file 9 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_rcc.h"
ARM GAS  /tmp/ccPzREru.s 			page 61


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h5xx_hal.c
     /tmp/ccPzREru.s:18     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccPzREru.s:27     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccPzREru.s:41     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccPzREru.s:48     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccPzREru.s:61     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccPzREru.s:68     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccPzREru.s:130    .text.HAL_DeInit:000000000000003c $d
     /tmp/ccPzREru.s:142    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccPzREru.s:149    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccPzREru.s:288    .text.HAL_InitTick:00000000000000a0 $d
     /tmp/ccPzREru.s:295    .text.HAL_Init:0000000000000000 $t
     /tmp/ccPzREru.s:302    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccPzREru.s:362    .text.HAL_Init:000000000000003c $d
     /tmp/ccPzREru.s:369    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccPzREru.s:376    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccPzREru.s:397    .text.HAL_IncTick:0000000000000010 $d
     /tmp/ccPzREru.s:403    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccPzREru.s:410    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccPzREru.s:426    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccPzREru.s:431    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccPzREru.s:438    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccPzREru.s:453    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/ccPzREru.s:458    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccPzREru.s:465    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccPzREru.s:522    .text.HAL_SetTickFreq:0000000000000024 $d
     /tmp/ccPzREru.s:528    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccPzREru.s:535    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccPzREru.s:550    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/ccPzREru.s:555    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccPzREru.s:562    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccPzREru.s:615    .text.HAL_Delay:0000000000000024 $d
     /tmp/ccPzREru.s:620    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccPzREru.s:627    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccPzREru.s:646    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccPzREru.s:653    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccPzREru.s:672    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccPzREru.s:679    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccPzREru.s:693    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccPzREru.s:698    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccPzREru.s:705    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccPzREru.s:722    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccPzREru.s:727    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccPzREru.s:734    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccPzREru.s:751    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccPzREru.s:756    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccPzREru.s:763    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccPzREru.s:778    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/ccPzREru.s:783    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccPzREru.s:790    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccPzREru.s:805    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/ccPzREru.s:810    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccPzREru.s:817    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/ccPzREru.s:832    .text.HAL_GetUIDw2:0000000000000008 $d
     /tmp/ccPzREru.s:837    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccPzREru.s:844    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
ARM GAS  /tmp/ccPzREru.s 			page 62


     /tmp/ccPzREru.s:861    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccPzREru.s:866    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccPzREru.s:873    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccPzREru.s:890    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccPzREru.s:895    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccPzREru.s:902    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccPzREru.s:919    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccPzREru.s:924    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccPzREru.s:931    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccPzREru.s:948    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/ccPzREru.s:953    .text.HAL_VREFBUF_VoltageScalingConfig:0000000000000000 $t
     /tmp/ccPzREru.s:960    .text.HAL_VREFBUF_VoltageScalingConfig:0000000000000000 HAL_VREFBUF_VoltageScalingConfig
     /tmp/ccPzREru.s:980    .text.HAL_VREFBUF_VoltageScalingConfig:0000000000000010 $d
     /tmp/ccPzREru.s:985    .text.HAL_VREFBUF_HighImpedanceConfig:0000000000000000 $t
     /tmp/ccPzREru.s:992    .text.HAL_VREFBUF_HighImpedanceConfig:0000000000000000 HAL_VREFBUF_HighImpedanceConfig
     /tmp/ccPzREru.s:1012   .text.HAL_VREFBUF_HighImpedanceConfig:0000000000000010 $d
     /tmp/ccPzREru.s:1017   .text.HAL_VREFBUF_TrimmingConfig:0000000000000000 $t
     /tmp/ccPzREru.s:1024   .text.HAL_VREFBUF_TrimmingConfig:0000000000000000 HAL_VREFBUF_TrimmingConfig
     /tmp/ccPzREru.s:1044   .text.HAL_VREFBUF_TrimmingConfig:0000000000000010 $d
     /tmp/ccPzREru.s:1049   .text.HAL_EnableVREFBUF:0000000000000000 $t
     /tmp/ccPzREru.s:1056   .text.HAL_EnableVREFBUF:0000000000000000 HAL_EnableVREFBUF
     /tmp/ccPzREru.s:1111   .text.HAL_EnableVREFBUF:0000000000000030 $d
     /tmp/ccPzREru.s:1116   .text.HAL_DisableVREFBUF:0000000000000000 $t
     /tmp/ccPzREru.s:1123   .text.HAL_DisableVREFBUF:0000000000000000 HAL_DisableVREFBUF
     /tmp/ccPzREru.s:1140   .text.HAL_DisableVREFBUF:000000000000000c $d
     /tmp/ccPzREru.s:1145   .text.HAL_SBS_EnableVddIO1CompensationCell:0000000000000000 $t
     /tmp/ccPzREru.s:1152   .text.HAL_SBS_EnableVddIO1CompensationCell:0000000000000000 HAL_SBS_EnableVddIO1CompensationCell
     /tmp/ccPzREru.s:1169   .text.HAL_SBS_EnableVddIO1CompensationCell:0000000000000010 $d
     /tmp/ccPzREru.s:1174   .text.HAL_SBS_DisableVddIO1CompensationCell:0000000000000000 $t
     /tmp/ccPzREru.s:1181   .text.HAL_SBS_DisableVddIO1CompensationCell:0000000000000000 HAL_SBS_DisableVddIO1CompensationCell
     /tmp/ccPzREru.s:1198   .text.HAL_SBS_DisableVddIO1CompensationCell:0000000000000010 $d
     /tmp/ccPzREru.s:1203   .text.HAL_SBS_EnableVddIO2CompensationCell:0000000000000000 $t
     /tmp/ccPzREru.s:1210   .text.HAL_SBS_EnableVddIO2CompensationCell:0000000000000000 HAL_SBS_EnableVddIO2CompensationCell
     /tmp/ccPzREru.s:1227   .text.HAL_SBS_EnableVddIO2CompensationCell:0000000000000010 $d
     /tmp/ccPzREru.s:1232   .text.HAL_SBS_DisableVddIO2CompensationCell:0000000000000000 $t
     /tmp/ccPzREru.s:1239   .text.HAL_SBS_DisableVddIO2CompensationCell:0000000000000000 HAL_SBS_DisableVddIO2CompensationCell
     /tmp/ccPzREru.s:1256   .text.HAL_SBS_DisableVddIO2CompensationCell:0000000000000010 $d
     /tmp/ccPzREru.s:1261   .text.HAL_SBS_VDDCompensationCodeSelect:0000000000000000 $t
     /tmp/ccPzREru.s:1268   .text.HAL_SBS_VDDCompensationCodeSelect:0000000000000000 HAL_SBS_VDDCompensationCodeSelect
     /tmp/ccPzREru.s:1288   .text.HAL_SBS_VDDCompensationCodeSelect:0000000000000014 $d
     /tmp/ccPzREru.s:1293   .text.HAL_SBS_VDDIOCompensationCodeSelect:0000000000000000 $t
     /tmp/ccPzREru.s:1300   .text.HAL_SBS_VDDIOCompensationCodeSelect:0000000000000000 HAL_SBS_VDDIOCompensationCodeSelect
     /tmp/ccPzREru.s:1320   .text.HAL_SBS_VDDIOCompensationCodeSelect:0000000000000014 $d
     /tmp/ccPzREru.s:1325   .text.HAL_SBS_GetVddIO1CompensationCellReadyFlag:0000000000000000 $t
     /tmp/ccPzREru.s:1332   .text.HAL_SBS_GetVddIO1CompensationCellReadyFlag:0000000000000000 HAL_SBS_GetVddIO1CompensationCellReadyFlag
     /tmp/ccPzREru.s:1353   .text.HAL_SBS_GetVddIO1CompensationCellReadyFlag:0000000000000010 $d
     /tmp/ccPzREru.s:1358   .text.HAL_SBS_GetVddIO2CompensationCellReadyFlag:0000000000000000 $t
     /tmp/ccPzREru.s:1365   .text.HAL_SBS_GetVddIO2CompensationCellReadyFlag:0000000000000000 HAL_SBS_GetVddIO2CompensationCellReadyFlag
     /tmp/ccPzREru.s:1386   .text.HAL_SBS_GetVddIO2CompensationCellReadyFlag:0000000000000010 $d
     /tmp/ccPzREru.s:1391   .text.HAL_SBS_VDDCompensationCodeConfig:0000000000000000 $t
     /tmp/ccPzREru.s:1398   .text.HAL_SBS_VDDCompensationCodeConfig:0000000000000000 HAL_SBS_VDDCompensationCodeConfig
     /tmp/ccPzREru.s:1422   .text.HAL_SBS_VDDCompensationCodeConfig:0000000000000018 $d
     /tmp/ccPzREru.s:1427   .text.HAL_SBS_VDDIOCompensationCodeConfig:0000000000000000 $t
     /tmp/ccPzREru.s:1434   .text.HAL_SBS_VDDIOCompensationCodeConfig:0000000000000000 HAL_SBS_VDDIOCompensationCodeConfig
     /tmp/ccPzREru.s:1459   .text.HAL_SBS_VDDIOCompensationCodeConfig:0000000000000018 $d
     /tmp/ccPzREru.s:1464   .text.HAL_SBS_GetNMOSVddCompensationValue:0000000000000000 $t
     /tmp/ccPzREru.s:1471   .text.HAL_SBS_GetNMOSVddCompensationValue:0000000000000000 HAL_SBS_GetNMOSVddCompensationValue
ARM GAS  /tmp/ccPzREru.s 			page 63


     /tmp/ccPzREru.s:1488   .text.HAL_SBS_GetNMOSVddCompensationValue:000000000000000c $d
     /tmp/ccPzREru.s:1493   .text.HAL_SBS_GetPMOSVddCompensationValue:0000000000000000 $t
     /tmp/ccPzREru.s:1500   .text.HAL_SBS_GetPMOSVddCompensationValue:0000000000000000 HAL_SBS_GetPMOSVddCompensationValue
     /tmp/ccPzREru.s:1517   .text.HAL_SBS_GetPMOSVddCompensationValue:000000000000000c $d
     /tmp/ccPzREru.s:1522   .text.HAL_SBS_GetNMOSVddIO2CompensationValue:0000000000000000 $t
     /tmp/ccPzREru.s:1529   .text.HAL_SBS_GetNMOSVddIO2CompensationValue:0000000000000000 HAL_SBS_GetNMOSVddIO2CompensationValue
     /tmp/ccPzREru.s:1546   .text.HAL_SBS_GetNMOSVddIO2CompensationValue:000000000000000c $d
     /tmp/ccPzREru.s:1551   .text.HAL_SBS_GetPMOSVddIO2CompensationValue:0000000000000000 $t
     /tmp/ccPzREru.s:1558   .text.HAL_SBS_GetPMOSVddIO2CompensationValue:0000000000000000 HAL_SBS_GetPMOSVddIO2CompensationValue
     /tmp/ccPzREru.s:1575   .text.HAL_SBS_GetPMOSVddIO2CompensationValue:000000000000000c $d
     /tmp/ccPzREru.s:1580   .text.HAL_SBS_FLASH_DisableECCNMI:0000000000000000 $t
     /tmp/ccPzREru.s:1587   .text.HAL_SBS_FLASH_DisableECCNMI:0000000000000000 HAL_SBS_FLASH_DisableECCNMI
     /tmp/ccPzREru.s:1604   .text.HAL_SBS_FLASH_DisableECCNMI:0000000000000010 $d
     /tmp/ccPzREru.s:1609   .text.HAL_SBS_FLASH_EnableECCNMI:0000000000000000 $t
     /tmp/ccPzREru.s:1616   .text.HAL_SBS_FLASH_EnableECCNMI:0000000000000000 HAL_SBS_FLASH_EnableECCNMI
     /tmp/ccPzREru.s:1633   .text.HAL_SBS_FLASH_EnableECCNMI:0000000000000010 $d
     /tmp/ccPzREru.s:1638   .text.HAL_SBS_FLASH_ECCNMI_IsDisabled:0000000000000000 $t
     /tmp/ccPzREru.s:1645   .text.HAL_SBS_FLASH_ECCNMI_IsDisabled:0000000000000000 HAL_SBS_FLASH_ECCNMI_IsDisabled
     /tmp/ccPzREru.s:1666   .text.HAL_SBS_FLASH_ECCNMI_IsDisabled:0000000000000010 $d
     /tmp/ccPzREru.s:1671   .text.HAL_SBS_IncrementHDPLValue:0000000000000000 $t
     /tmp/ccPzREru.s:1678   .text.HAL_SBS_IncrementHDPLValue:0000000000000000 HAL_SBS_IncrementHDPLValue
     /tmp/ccPzREru.s:1696   .text.HAL_SBS_IncrementHDPLValue:0000000000000010 $d
     /tmp/ccPzREru.s:1701   .text.HAL_SBS_GetHDPLValue:0000000000000000 $t
     /tmp/ccPzREru.s:1708   .text.HAL_SBS_GetHDPLValue:0000000000000000 HAL_SBS_GetHDPLValue
     /tmp/ccPzREru.s:1725   .text.HAL_SBS_GetHDPLValue:0000000000000008 $d
     /tmp/ccPzREru.s:1730   .text.HAL_SBS_EPOCHSelection:0000000000000000 $t
     /tmp/ccPzREru.s:1737   .text.HAL_SBS_EPOCHSelection:0000000000000000 HAL_SBS_EPOCHSelection
     /tmp/ccPzREru.s:1757   .text.HAL_SBS_EPOCHSelection:0000000000000014 $d
     /tmp/ccPzREru.s:1762   .text.HAL_SBS_GetEPOCHSelection:0000000000000000 $t
     /tmp/ccPzREru.s:1769   .text.HAL_SBS_GetEPOCHSelection:0000000000000000 HAL_SBS_GetEPOCHSelection
     /tmp/ccPzREru.s:1786   .text.HAL_SBS_GetEPOCHSelection:000000000000000c $d
     /tmp/ccPzREru.s:1791   .text.HAL_SBS_SetOBKHDPL:0000000000000000 $t
     /tmp/ccPzREru.s:1798   .text.HAL_SBS_SetOBKHDPL:0000000000000000 HAL_SBS_SetOBKHDPL
     /tmp/ccPzREru.s:1818   .text.HAL_SBS_SetOBKHDPL:0000000000000010 $d
     /tmp/ccPzREru.s:1823   .text.HAL_SBS_GetOBKHDPL:0000000000000000 $t
     /tmp/ccPzREru.s:1830   .text.HAL_SBS_GetOBKHDPL:0000000000000000 HAL_SBS_GetOBKHDPL
     /tmp/ccPzREru.s:1847   .text.HAL_SBS_GetOBKHDPL:000000000000000c $d
     /tmp/ccPzREru.s:1852   .text.HAL_SBS_OpenAccessPort:0000000000000000 $t
     /tmp/ccPzREru.s:1859   .text.HAL_SBS_OpenAccessPort:0000000000000000 HAL_SBS_OpenAccessPort
     /tmp/ccPzREru.s:1877   .text.HAL_SBS_OpenAccessPort:0000000000000010 $d
     /tmp/ccPzREru.s:1882   .text.HAL_SBS_OpenDebug:0000000000000000 $t
     /tmp/ccPzREru.s:1889   .text.HAL_SBS_OpenDebug:0000000000000000 HAL_SBS_OpenDebug
     /tmp/ccPzREru.s:1907   .text.HAL_SBS_OpenDebug:0000000000000010 $d
     /tmp/ccPzREru.s:1912   .text.HAL_SBS_ConfigDebugLevel:0000000000000000 $t
     /tmp/ccPzREru.s:1919   .text.HAL_SBS_ConfigDebugLevel:0000000000000000 HAL_SBS_ConfigDebugLevel
     /tmp/ccPzREru.s:1954   .text.HAL_SBS_ConfigDebugLevel:000000000000001c $d
     /tmp/ccPzREru.s:1959   .text.HAL_SBS_GetDebugLevel:0000000000000000 $t
     /tmp/ccPzREru.s:1966   .text.HAL_SBS_GetDebugLevel:0000000000000000 HAL_SBS_GetDebugLevel
     /tmp/ccPzREru.s:1983   .text.HAL_SBS_GetDebugLevel:000000000000000c $d
     /tmp/ccPzREru.s:1988   .text.HAL_SBS_LockDebugConfig:0000000000000000 $t
     /tmp/ccPzREru.s:1995   .text.HAL_SBS_LockDebugConfig:0000000000000000 HAL_SBS_LockDebugConfig
     /tmp/ccPzREru.s:2013   .text.HAL_SBS_LockDebugConfig:0000000000000010 $d
     /tmp/ccPzREru.s:2018   .text.HAL_SBS_ConfigDebugSecurity:0000000000000000 $t
     /tmp/ccPzREru.s:2025   .text.HAL_SBS_ConfigDebugSecurity:0000000000000000 HAL_SBS_ConfigDebugSecurity
     /tmp/ccPzREru.s:2044   .text.HAL_SBS_ConfigDebugSecurity:0000000000000010 $d
     /tmp/ccPzREru.s:2049   .text.HAL_SBS_GetDebugSecurity:0000000000000000 $t
     /tmp/ccPzREru.s:2056   .text.HAL_SBS_GetDebugSecurity:0000000000000000 HAL_SBS_GetDebugSecurity
ARM GAS  /tmp/ccPzREru.s 			page 64


     /tmp/ccPzREru.s:2073   .text.HAL_SBS_GetDebugSecurity:0000000000000008 $d
     /tmp/ccPzREru.s:2078   .text.HAL_SBS_Lock:0000000000000000 $t
     /tmp/ccPzREru.s:2085   .text.HAL_SBS_Lock:0000000000000000 HAL_SBS_Lock
     /tmp/ccPzREru.s:2106   .text.HAL_SBS_Lock:000000000000000c $d
     /tmp/ccPzREru.s:2111   .text.HAL_SBS_GetLock:0000000000000000 $t
     /tmp/ccPzREru.s:2118   .text.HAL_SBS_GetLock:0000000000000000 HAL_SBS_GetLock
     /tmp/ccPzREru.s:2154   .text.HAL_SBS_GetLock:0000000000000014 $d
     /tmp/ccPzREru.s:2172   .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccPzREru.s:2179   .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccPzREru.s:2166   .bss.uwTick:0000000000000000 uwTick
     /tmp/ccPzREru.s:2162   .bss.uwTick:0000000000000000 $d
     /tmp/ccPzREru.s:2175   .data.uwTickPrio:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_SYSTICK_GetCLKSourceConfig
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
HAL_RCC_GetSysClockFreq
HAL_SYSTICK_CLKSourceConfig
AHBPrescTable
