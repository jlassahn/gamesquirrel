ARM GAS  /tmp/cc2DBcx1.s 			page 1


   1              		.cpu cortex-m33
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32h5xx_hal_adc_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_ADCEx_Calibration_Start
  20              		.arch armv8-m.main
  21              		.arch_extension dsp
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	HAL_ADCEx_Calibration_Start:
  28              	.LVL0:
  29              	.LFB361:
  30              		.file 1 "Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c"
   1:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
   2:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   ******************************************************************************
   3:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @file    stm32h5xx_hal_adc_ex.c
   4:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *          peripheral:
   8:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *           + Peripheral Control functions
   9:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file
  10:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *          "stm32h5xx_hal_adc.c".
  11:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *
  12:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   ******************************************************************************
  13:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @attention
  14:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *
  15:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * Copyright (c) 2023 STMicroelectronics.
  16:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * All rights reserved.
  17:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *
  18:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * in the root directory of this software component.
  20:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *
  22:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   ******************************************************************************
  23:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   @verbatim
  24:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   [..]
  25:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  26:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       available in file of generic functions "stm32h5xx_hal_adc.c".
  27:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   [..]
  28:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   @endverbatim
ARM GAS  /tmp/cc2DBcx1.s 			page 2


  29:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   ******************************************************************************
  30:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
  31:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
  32:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  33:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #include "stm32h5xx_hal.h"
  34:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
  35:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /** @addtogroup STM32H5xx_HAL_Driver
  36:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @{
  37:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
  38:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
  39:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  40:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief ADC Extended HAL module driver
  41:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @{
  42:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
  43:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
  44:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  45:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
  46:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  47:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  48:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
  49:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADC Extended Private Constants
  50:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @{
  51:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
  52:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
  53:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #define ADC_JSQR_FIELDS      ((ADC_JSQR_JL | ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN |\
  54:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                ADC_JSQR_JSQ1  | ADC_JSQR_JSQ2 |\
  55:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                ADC_JSQR_JSQ3 | ADC_JSQR_JSQ4 ))           /*!< ADC_JSQR fields of p
  56:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                              be updated anytime once the ADC is enabled */
  57:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
  58:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /* Fixed timeout value for ADC calibration.                                   */
  59:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /* Fixed timeout value for ADC calibration.                                     */
  60:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /* Values defined to be higher than worst cases: low clock frequency,           */
  61:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /* maximum prescalers.                                                          */
  62:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /* Ex of profile low frequency : f_ADC at 0.125 Mhz (minimum value              */
  63:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /* according to Data sheet), calibration_time MAX = 165010 / f_ADC              */
  64:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /*           165010 / 125000 = 1.32s                                            */
  65:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /* At maximum CPU speed (480 MHz), this means                                   */
  66:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /*    1.32 * 480 MHz = 633600000 CPU cycles                                     */
  67:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #define ADC_CALIBRATION_TIMEOUT         (633600000UL)   /*!< ADC calibration time-out value */
  68:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
  69:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
  70:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @}
  71:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
  72:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
  73:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
  74:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
  75:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  76:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /* Exported functions --------------------------------------------------------*/
  77:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
  78:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADC Extended Exported Functions
  79:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @{
  80:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
  81:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
  82:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 Extended Input and Output operation functions
  83:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief    Extended IO operation functions
  84:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *
  85:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** @verbatim
ARM GAS  /tmp/cc2DBcx1.s 			page 3


  86:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****  ===============================================================================
  87:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                       ##### IO operation functions #####
  88:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****  ===============================================================================
  89:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
  90:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
  91:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration for single or differential ending.
  92:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (+) Get calibration factors for single or differential ending.
  93:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (+) Set calibration factors for single or differential ending.
  94:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
  95:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (+) Start conversion of ADC group injected.
  96:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (+) Stop conversion of ADC group injected.
  97:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (+) Poll for conversion complete on ADC group injected.
  98:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (+) Get result of ADC group injected channel conversion.
  99:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (+) Start conversion of ADC group injected and enable interruptions.
 100:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (+) Stop conversion of ADC group injected and disable interruptions.
 101:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 102:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (+) When multimode feature is available, start multimode and enable DMA transfer.
 103:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (+) Stop multimode and disable ADC DMA transfer.
 104:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (+) Get result of multimode conversion.
 105:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 106:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** @endverbatim
 107:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @{
 108:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
 109:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
 111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
 112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
 113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
 114:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param  hadc       ADC handle
 115:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param  SingleDiff Selection of single-ended or differential input
 116:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         This parameter can be one of the following values:
 117:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 118:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 119:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status
 120:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
 121:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef *hadc, uint32_t SingleDiff)
 122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
  31              		.loc 1 122 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 8
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		.loc 1 122 1 is_stmt 0 view .LVU1
  36 0000 30B5     		push	{r4, r5, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 12
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
  42 0002 83B0     		sub	sp, sp, #12
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 24
 123:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
  45              		.loc 1 123 3 is_stmt 1 view .LVU2
 124:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0UL;
  46              		.loc 1 124 3 view .LVU3
  47              		.loc 1 124 17 is_stmt 0 view .LVU4
  48 0004 0023     		movs	r3, #0
ARM GAS  /tmp/cc2DBcx1.s 			page 4


  49 0006 0193     		str	r3, [sp, #4]
 125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 126:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
 127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  50              		.loc 1 127 3 is_stmt 1 view .LVU5
 128:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
  51              		.loc 1 128 3 view .LVU6
 129:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 130:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process locked */
 131:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
  52              		.loc 1 131 3 view .LVU7
  53              		.loc 1 131 3 view .LVU8
  54 0008 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
  55 000c 012B     		cmp	r3, #1
  56 000e 41D0     		beq	.L8
  57 0010 0446     		mov	r4, r0
  58 0012 0D46     		mov	r5, r1
  59              		.loc 1 131 3 discriminator 2 view .LVU9
  60 0014 0123     		movs	r3, #1
  61 0016 80F85430 		strb	r3, [r0, #84]
  62              		.loc 1 131 3 discriminator 2 view .LVU10
 132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 133:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Calibration prerequisite: ADC must be disabled. */
 134:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 135:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Disable the ADC (if not already disabled) */
 136:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Disable(hadc);
  63              		.loc 1 136 3 discriminator 2 view .LVU11
  64              		.loc 1 136 20 is_stmt 0 discriminator 2 view .LVU12
  65 001a FFF7FEFF 		bl	ADC_Disable
  66              	.LVL1:
 137:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 138:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
 139:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
  67              		.loc 1 139 3 is_stmt 1 discriminator 2 view .LVU13
  68              		.loc 1 139 6 is_stmt 0 discriminator 2 view .LVU14
  69 001e 80BB     		cbnz	r0, .L3
 140:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Set ADC state */
 142:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
  70              		.loc 1 142 5 is_stmt 1 view .LVU15
  71 0020 A36D     		ldr	r3, [r4, #88]
  72 0022 23F48853 		bic	r3, r3, #4352
  73 0026 23F00203 		bic	r3, r3, #2
  74 002a 43F00203 		orr	r3, r3, #2
  75 002e A365     		str	r3, [r4, #88]
 143:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 144:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 145:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 146:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Start ADC calibration in mode single-ended or differential */
 147:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     LL_ADC_StartCalibration(hadc->Instance, SingleDiff);
  76              		.loc 1 147 5 view .LVU16
  77 0030 2268     		ldr	r2, [r4]
  78              	.LVL2:
  79              	.LBB288:
  80              	.LBI288:
  81              		.file 2 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h"
   1:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
ARM GAS  /tmp/cc2DBcx1.s 			page 5


   2:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @file    stm32h5xx_ll_adc.h
   4:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @attention
   8:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
   9:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * Copyright (c) 2023 STMicroelectronics.
  10:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
  12:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
  16:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
  18:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  19:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #ifndef STM32H5xx_LL_ADC_H
  21:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define STM32H5xx_LL_ADC_H
  22:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  23:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif
  26:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  27:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #include "stm32h5xx.h"
  29:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  30:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @addtogroup STM32H5xx_LL_Driver
  31:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
  32:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
  33:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  34:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2)
  35:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  36:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
  38:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
  39:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  40:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  43:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
  46:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
  47:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  48:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - sequencer register offset                                                */
  51:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  52:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  53:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  54:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  55:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  56:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  57:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  58:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
ARM GAS  /tmp/cc2DBcx1.s 			page 6


  59:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  60:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET \
  61:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SQR3_REGOFFSET | ADC_SQR4_REGOFFSET)
  62:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  63:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  64:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  65:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  66:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  67:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ1_Pos)
  68:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ2_Pos)
  69:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ3_Pos)
  70:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ4_Pos)
  71:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ5_Pos)
  72:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ6_Pos)
  73:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ7_Pos)
  74:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ8_Pos)
  75:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ9_Pos)
  76:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS (ADC_SQR3_SQ10_Pos)
  77:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS (ADC_SQR3_SQ11_Pos)
  78:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (ADC_SQR3_SQ12_Pos)
  79:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (ADC_SQR3_SQ13_Pos)
  80:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (ADC_SQR3_SQ14_Pos)
  81:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS (ADC_SQR4_SQ15_Pos)
  82:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS (ADC_SQR4_SQ16_Pos)
  83:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  84:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
  85:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
  86:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - data register offset                                                     */
  87:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  88:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  89:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  90:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  91:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
  92:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
  93:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
  94:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
  95:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  96:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET \
  97:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_JDR3_REGOFFSET | ADC_JDR4_REGOFFSET)
  98:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  99:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 100:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 102:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ1_Pos)
 104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ2_Pos)
 105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ3_Pos)
 106:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ4_Pos)
 107:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 108:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 109:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 110:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - regular trigger source                                                   */
 111:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - regular trigger edge                                                     */
 112:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT      (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (d
 113:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                  compatibility with some ADC on oth
 114:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                  having this setting set by HW defa
 115:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
ARM GAS  /tmp/cc2DBcx1.s 			page 7


 116:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 117:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 118:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 119:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK           (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U * 
 120:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_CFGR_EXTSEL)                            << (4U * 
 121:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_CFGR_EXTSEL)                            << (4U * 
 122:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_CFGR_EXTSEL)                            << (4U * 
 123:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 124:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 125:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 126:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 127:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK             (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 0
 128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 1
 129:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 2
 130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 3
 131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 132:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 133:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  (ADC_CFGR_EXTSEL_Pos)
 134:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (ADC_CFGR_EXTEN_Pos)
 135:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 136:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 137:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 138:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - injected trigger source                                                  */
 139:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - injected trigger edge                                                    */
 140:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 141:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                   compatibility with some ADC on ot
 142:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                   having this setting set by HW def
 143:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 144:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 145:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 146:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 147:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK           (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U 
 148:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 149:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 150:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 153:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK             (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U * 
 156:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
 157:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
 158:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
 159:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 160:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 161:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  (ADC_JSQR_JEXTSEL_Pos)
 162:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   (ADC_JSQR_JEXTEN_Pos)
 163:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 164:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 165:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 166:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 167:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 168:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 169:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 170:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 171:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 172:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
ARM GAS  /tmp/cc2DBcx1.s 			page 8


 173:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 174:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (ADC_CFGR_AWD1CH_Pos)
 175:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 176:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 177:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 178:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 179:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   >> [Position of bitfield "ADC_CHANNEL_NUMBER_MASK" in register]) */
 180:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 182:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 183:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 184:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                              of different ADC internal channels map
 185:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                              number on different ADC instances */
 186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 187:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 188:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 190:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 191:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 192:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 193:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL)           /* Position of bits ADC_SMPRx_REGOFFSET
 194:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                in ADC_CHANNEL_SMPRX_REGOFFSET_MASK 
 195:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 196:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 197:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Equivalent to bitfield "ADC_CHANNEL_
 198:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                position in register */
 199:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 200:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 201:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* channels literals definition.                                              */
 202:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 203:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR_AWD1CH_0)
 204:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR_AWD1CH_1)
 205:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR_AWD1CH_2)
 207:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_0)
 208:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1)
 209:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 210:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR_AWD1CH_3)
 211:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_0)
 212:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1)
 213:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 214:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2)
 215:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 216:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | \
 218:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4)
 220:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_0)
 221:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_1)
 222:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_19_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 223:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 224:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 225:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* channels literals definition.                                              */
 226:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 227:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 228:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 229:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
ARM GAS  /tmp/cc2DBcx1.s 			page 9


 230:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 231:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 232:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 233:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 235:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 237:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 238:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 239:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 240:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 241:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 242:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 243:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 244:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 245:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_19_BITFIELD            (ADC_AWD2CR_AWD2CH_19)
 246:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 247:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 248:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* channels literals definition.                                              */
 249:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Value shifted are equivalent to bitfield "ADC_SMPRx_SMPy" position         */
 250:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* in register.                                                               */
 251:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 252:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 253:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 254:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 255:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 256:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 257:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 258:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 260:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 261:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 262:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 263:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 264:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 265:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 266:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 267:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 268:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 269:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 270:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_19_SMP                 (ADC_SMPR2_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 271:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 272:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 273:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 274:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 275:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* the relevant bits for:                                                     */
 276:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 277:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 278:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 279:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 280:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 281:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 282:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 283:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to perform of shift when single mode is selected, shift 
 284:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            channels bits range. */
 285:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL) /* Selection of 1 bit to discriminate di
 286:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            mask of bit */
ARM GAS  /tmp/cc2DBcx1.s 			page 10


 287:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)         /* Selection of 1 bit to discriminate di
 288:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            position of bit */
 289:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 290:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            ADC_SINGLEDIFF_CALIB_F_BIT_D to perform a shift of 4 ran
 291:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 292:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 293:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 294:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 295:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 series)).         */
 296:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 297:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 298:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 299:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*   selection on groups.                                                     */
 300:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 301:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 302:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 303:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 304:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 305:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 306:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 307:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 308:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 309:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 310:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 311:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 312:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 315:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 316:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 317:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL)                      /* Position of bits ADC_AWD_
 318:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                           in ADC_AWD_CRX_REGOFFSET_
 319:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 320:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 321:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 322:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 323:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 324:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 325:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)      /* Position of bits ADC
 326:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                                in ADC_AWD_TRX_REGOF
 327:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 328:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                                threshold high: mask
 329:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 330:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                                threshold high: posi
 331:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 332:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                                position to perform 
 333:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 334:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 335:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal register offset for ADC offset instance configuration */
 336:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 337:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 338:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 339:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 340:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET \
 341:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_OFR3_REGOFFSET | ADC_OFR4_REGOFFSET)
 342:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 343:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
ARM GAS  /tmp/cc2DBcx1.s 			page 11


 344:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* ADC registers bits positions */
 345:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         (ADC_CFGR_RES_Pos)
 346:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (ADC_CFGR_AWD1SGL_Pos)
 347:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (ADC_CFGR_AWD1EN_Pos)
 348:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (ADC_CFGR_JAWD1EN_Pos)
 349:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (ADC_TR1_HT1_Pos)
 350:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 351:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 352:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* ADC registers bits groups */
 353:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADEN | ADC_CR_ADDIS \
 354:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CR_JADSTART | ADC_CR_JADSTP \
 355:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CR_ADSTART | ADC_CR_ADSTP)            /* ADC regi
 356:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            HW property "rs": Software can read as well as set this 
 357:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Writing '0' has no effect on the bit value. */
 358:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 359:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 360:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* ADC internal channels related definitions */
 361:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 362:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x08FFF810UL)) /* Internal voltage referen
 363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            parameter VREFINT_CAL: VrefInt ADC raw data acquired at 
 364:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.3 V (tolerance: +-10 mV
 365:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3300UL)                     /* Analog voltage reference
 366:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with which VrefInt has been calibrated in production
 367:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (tolerance: +-10 mV) (unit: mV). */
 368:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Temperature sensor */
 369:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x08FFF814UL)) /* Address of parameter TS_
 370:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            temperature sensor ADC raw data acquired at temperature 
 371:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.3 V (tolerance: +-10 mV
 372:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x08FFF818UL)) /* Address of parameter TS_
 373:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            temperature sensor ADC raw data acquired at temperature 
 374:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.3 V (tolerance: +-10 mV
 375:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30L)                        /* Temperature at which tem
 376:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            has been calibrated in production for data into TEMPSENS
 377:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (tolerance: +-5 DegC) (unit: DegC). */
 378:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130L)                       /* Temperature at which tem
 379:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            has been calibrated in production for data into TEMPSENS
 380:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (tolerance: +-5 DegC) (unit: DegC). */
 381:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3300UL)                     /* Analog voltage reference
 382:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with which temperature sensor has been calibrated in pro
 383:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (tolerance +-10 mV) (unit: mV). */
 384:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 385:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 386:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 387:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 388:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 389:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 390:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 391:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 393:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 395:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 396:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a register from a register basis from which an offset
 397:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is applied.
 398:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 399:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 400:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Pointer to register address
ARM GAS  /tmp/cc2DBcx1.s 			page 12


 401:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 402:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 403:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 404:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 405:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 406:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 407:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 408:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 409:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 410:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 411:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 413:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 414:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 416:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 417:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and multimode
 418:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 419:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 420:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 421:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         sharing the same ADC common instance):
 422:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 423:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         disabled.
 424:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 425:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** typedef struct
 426:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 427:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 428:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 429:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 430:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    constraints between ADC clock and AHB clock must
 431:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    Refer to reference manual.
 432:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 433:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_SetCommonClock(). */
 434:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 435:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 436:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 437:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              (for devices with several ADC instances).
 438:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 439:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 440:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_SetMultimode(). */
 441:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 442:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC multimode conversion data transfer: no transfe
 443:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 444:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 445:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_SetMultiDMATransfer(). */
 446:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 447:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 448:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 449:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 450:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_SetMultiTwoSamplingDelay(). */
 451:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 452:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 453:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 454:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 455:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 456:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 457:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
ARM GAS  /tmp/cc2DBcx1.s 			page 13


 458:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 459:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         of ADC group injected depends on STM32 series).
 460:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 461:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 462:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 463:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is conditioned to ADC state:
 464:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC instance must be disabled.
 465:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 466:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 467:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 468:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 469:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 470:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 471:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 472:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         refer to description of each function for setting
 473:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         conditioned to ADC state.
 474:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 475:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** typedef struct
 476:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 477:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 478:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 479:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 480:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_SetResolution(). */
 481:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 482:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 483:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 484:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 485:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_SetDataAlignment(). */
 486:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 487:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 488:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 489:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 490:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_SetLowPowerMode(). */
 491:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 492:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 493:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 494:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 495:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 496:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 497:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 498:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (functions with prefix "REG").
 500:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 501:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is conditioned to ADC state:
 502:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC instance must be disabled.
 503:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 504:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 506:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 507:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 509:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 510:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         refer to description of each function for setting
 511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         conditioned to ADC state.
 512:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 513:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** typedef struct
 514:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
ARM GAS  /tmp/cc2DBcx1.s 			page 14


 515:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 516:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              from external peripheral (timer event, external interr
 517:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 518:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 519:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    set trigger polarity to rising edge(default sett
 520:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    with some ADC on other STM32 series having this 
 521:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    default value).
 522:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 523:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    @ref LL_ADC_REG_SetTriggerEdge().
 524:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 525:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetTriggerSource(). */
 526:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 527:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 528:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 529:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 530:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerLength(). */
 531:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 533:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              and scan conversions interrupted every selected number
 534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 535:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 536:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                     enabled (scan length of 2 ranks or more).
 537:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 538:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerDiscont(). */
 539:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 540:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 541:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              conversions are performed in single mode (one conversi
 542:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              continuous mode (after the first trigger, following co
 543:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              successively automatically).
 544:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 545:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 546:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    and discontinuous mode.
 547:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 548:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetContinuousMode(). */
 549:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 550:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 551:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              by DMA, and DMA requests mode.
 552:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 553:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 554:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetDMATransfer(). */
 555:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 556:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 557:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              data preserved or overwritten.
 558:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 559:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 560:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetOverrun(). */
 561:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 562:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 563:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 564:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 565:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 566:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 567:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 568:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 569:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (functions with prefix "INJ").
 570:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 571:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is conditioned to ADC state:
ARM GAS  /tmp/cc2DBcx1.s 			page 15


 572:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC instance must be disabled.
 573:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 574:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 575:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 576:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 577:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 578:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 579:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 580:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         refer to description of each function for setting
 581:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         conditioned to ADC state.
 582:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 583:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** typedef struct
 584:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 585:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 586:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              or from external peripheral (timer event, external int
 587:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 588:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 589:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    set trigger polarity to rising edge (default set
 590:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    compatibility with some ADC on other STM32 serie
 591:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    setting set by HW default value).
 592:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 593:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    @ref LL_ADC_INJ_SetTriggerEdge().
 594:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 595:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetTriggerSource(). */
 596:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 597:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 598:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 599:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 600:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetSequencerLength(). */
 601:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 602:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 603:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              and scan conversions interrupted every selected number
 604:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 605:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 606:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    enabled (scan length of 2 ranks or more).
 607:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 608:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetSequencerDiscont(). */
 609:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 610:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 611:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              regular.
 612:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 613:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 614:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    trigger source is set to an external trigger.
 615:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 616:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetTrigAuto(). */
 617:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 618:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 619:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 620:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 621:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 622:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 623:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 624:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 625:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 626:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 627:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 628:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc2DBcx1.s 			page 16


 629:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 630:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 632:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 633:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 634:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 635:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 636:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion */
 637:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 638:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversions */
 639:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 640:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 642:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    conversion */
 643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 644:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    conversions */
 645:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 646:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    overflow */
 647:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 648:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 649:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 650:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 652:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 653:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 654:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    unitary conversion */
 655:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 656:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    unitary conversion */
 657:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 658:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    sequence conversions */
 659:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 660:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    sequence conversions */
 661:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 662:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    overrun */
 663:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 664:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    overrun */
 665:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 666:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    sampling phase */
 667:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 668:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    sampling phase */
 669:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 670:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    unitary conversion */
 671:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 672:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    unitary conversion */
 673:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 674:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    sequence conversions */
 675:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 676:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    sequence conversions */
 677:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 678:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    contexts queue overflow */
 679:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 680:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    contexts queue overflow */
 681:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 682:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    of the ADC master */
 683:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 684:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    of the ADC slave */
 685:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
ARM GAS  /tmp/cc2DBcx1.s 			page 17


 686:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    of the ADC master */
 687:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 688:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    of the ADC slave */
 689:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 690:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    of the ADC master */
 691:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 692:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    of the ADC slave */
 693:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 694:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 695:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 696:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 697:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 698:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 699:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 700:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 701:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 702:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 703:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 704:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    conversion */
 705:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 706:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    conversions */
 707:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 708:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 709:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    phase */
 710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 711:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    conversion */
 712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 713:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    conversions */
 714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 715:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    overflow */
 716:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 717:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 718:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 719:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 720:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 721:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 722:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 723:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 724:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 725:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 726:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 727:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* DMA transfer.                                                              */
 728:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 729:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA        (0x00000000UL)      /* ADC group regular conversion data
 730:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (corresponding to register DR) to be used with ADC confi
 731:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            mode. Without DMA transfer, register accessed by LL func
 732:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            @ref LL_ADC_REG_ReadConversionData32() and other
 733:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            functions @ref LL_ADC_REG_ReadConversionDatax() */
 734:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 735:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI  (0x00000001UL)      /* ADC group regular conversion data
 736:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (corresponding to register CDR) to be used with ADC conf
 737:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (available on STM32 devices with several ADC instances).
 738:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Without DMA transfer, register accessed by LL function
 739:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            @ref LL_ADC_REG_ReadMultiConversionData32() */
 740:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 741:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 742:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cc2DBcx1.s 			page 18


 743:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 744:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 745:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 746:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 747:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 748:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                    /*!< ADC synchrono
 749:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            AHB clock without prescaler */
 750:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1)                    /*!< ADC synchrono
 751:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            AHB clock with prescaler division by 2 */
 752:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0) /*!< ADC synchrono
 753:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            AHB clock with prescaler division by 4 */
 754:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                      /*!< ADC asynchronou
 755:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler */
 756:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                   /*!< ADC asynchronou
 757:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 2 */
 758:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1)                   /*!< ADC asynchronou
 759:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 4 */
 760:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 761:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 6 */
 762:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2)                   /*!< ADC asynchronou
 763:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 8 */
 764:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 765:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 10 */
 766:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 767:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 12 */
 768:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 \
 769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
 770:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 16  */
 771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                   /*!< ADC asynchronou
 772:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 32 */
 773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 774:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 64 */
 775:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 128 */
 777:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 \
 778:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
 779:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 256 */
 780:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 781:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 782:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 783:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 784:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 785:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 786:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 787:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 788:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 789:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 790:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 791:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 792:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)       /*!< ADC measurement paths all disa
 793:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)     /*!< ADC measurement path to intern
 794:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)       /*!< ADC measurement path to intern
 795:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                      temperature sensor */
 796:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)     /*!< ADC measurement path to intern
 797:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 798:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 799:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc2DBcx1.s 			page 19


 800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 801:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 803:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 804:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 805:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 806:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 807:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 808:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 809:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 810:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 811:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 812:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 813:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 814:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 815:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)     /*!< ADC conversion data alignment: r
 816:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (alignment on data register LSB bit 0)*/
 817:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)   /*!< ADC conversion data alignment: l
 818:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (alignment on data register MSB bit 15)*/
 819:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 820:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 821:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 822:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 823:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 824:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 825:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)     /*!< No ADC low power mode activated 
 827:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)  /*!< ADC low power mode auto delay: D
 828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            mode, ADC conversions are performed only when necessary
 829:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (when previous ADC conversion data is read).
 830:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            See description with function @ref LL_ADC_SetLowPowerMod
 831:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 832:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 833:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 834:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset instance
 836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 837:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 838:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset instance 1: ADC chann
 839:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 840:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 841:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset instance 2: ADC chann
 842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 843:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 844:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset instance 3: ADC chann
 845:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 846:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset instance 4: ADC chann
 848:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 849:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 851:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 852:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 853:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 854:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 855:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 856:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc2DBcx1.s 			page 20


 857:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled
 858:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (setting offset instance wise) */
 859:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled
 860:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (setting offset instance wise) */
 861:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 862:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 863:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 864:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 865:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SIGN ADC instance - Offset sign
 866:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 867:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 868:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_NEGATIVE        (0x00000000UL)       /*!< ADC offset is negative */
 869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_POSITIVE        (ADC_OFR1_OFFSETPOS) /*!< ADC offset is positive */
 870:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 872:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 873:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 874:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SATURATION ADC instance - Offset saturation mode
 875:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 876:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 877:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_DISABLE   (0x00000000UL)     /*!< ADC offset saturation is disable
 878:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            selected offset instance 1, 2, 3 or 4) */
 879:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_ENABLE    (ADC_OFR1_SATEN)   /*!< ADC offset saturation is enabled
 880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            selected offset instance 1, 2, 3 or 4) */
 881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 884:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 885:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 886:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 887:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL)     /*!< ADC group regular (available on 
 888:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL)     /*!< ADC group injected (not availabl
 889:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            devices)*/
 890:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL)     /*!< ADC both groups regular and inje
 891:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 892:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 893:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 894:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 895:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 896:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 897:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 898:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP \
 899:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_0_BITFIELD)                       /*!< AD
 900:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP \
 901:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_1_BITFIELD)                       /*!< AD
 902:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP \
 903:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_2_BITFIELD)                       /*!< AD
 904:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP \
 905:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_3_BITFIELD)                       /*!< AD
 906:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP \
 907:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_4_BITFIELD)                       /*!< AD
 908:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP \
 909:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_5_BITFIELD)                       /*!< AD
 910:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP \
 911:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_6_BITFIELD)                       /*!< AD
 912:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP \
 913:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_7_BITFIELD)                       /*!< AD
ARM GAS  /tmp/cc2DBcx1.s 			page 21


 914:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP \
 915:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_8_BITFIELD)                       /*!< AD
 916:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP \
 917:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_9_BITFIELD)                       /*!< AD
 918:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP \
 919:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_10_BITFIELD)                      /*!< AD
 920:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP \
 921:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_11_BITFIELD)                      /*!< AD
 922:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP \
 923:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_12_BITFIELD)                      /*!< AD
 924:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP \
 925:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_13_BITFIELD)                      /*!< AD
 926:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP \
 927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_14_BITFIELD)                      /*!< AD
 928:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP \
 929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_15_BITFIELD)                      /*!< AD
 930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP \
 931:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_16_BITFIELD) /*!< ADC channel ADCx_IN16 *
 932:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP \
 933:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_17_BITFIELD) /*!< ADC channel ADCx_IN17 *
 934:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP \
 935:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_18_BITFIELD) /*!< ADC channel ADCx_IN18 *
 936:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_19                  (ADC_CHANNEL_19_NUMBER | ADC_CHANNEL_19_SMP \
 937:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_19_BITFIELD) /*!< ADC channel ADCx_IN19 *
 938:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined (ADC2)
 939:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH)   /*!< 
 940:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            connected to VrefInt: Internal voltage reference.
 941:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
 942:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH)   /*!< 
 943:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            connected to internal temperature sensor.
 944:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
 945:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH_2) /*!< 
 946:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            connected to Vbat/4: Vbat voltage through a divider ladd
 947:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to have channel voltage always below Vdda.
 948:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
 949:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_VDDCORE             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH_2) /*!< 
 950:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            connected to Vddcore.
 951:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
 952:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
 953:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 954:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            connected to VrefInt: Internal voltage reference. */
 955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 956:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            connected to internal temperature sensor.*/
 957:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_2  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 958:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            connected to Vbat/4: Vbat voltage through a divider ladd
 959:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to have channel voltage always below Vdda. */
 960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_VDDCORE             (LL_ADC_CHANNEL_6  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 961:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            connected to Vddcore.*/
 962:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC2 */
 963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 964:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definitions for backward compatibility with legacy STM32 series */
 965:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_VCORE               LL_ADC_CHANNEL_VDDCORE
 966:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 967:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 968:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 969:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 970:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
ARM GAS  /tmp/cc2DBcx1.s 			page 22


 971:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 972:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 973:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Triggers common to all devices of STM32H5 series */
 974:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                        /*
 975:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger internal: SW start. */
 976:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                       /*
 977:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
 978:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (capture compare: input capture or output capture).
 979:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 980:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
 981:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
 982:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (capture compare: input capture or output capture).
 983:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 984:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
 985:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
 986:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (capture compare: input capture or output capture).
 987:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 988:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 \
 989:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
 990:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 channe
 991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (capture compare: input capture or output capture).
 992:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
 994:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 TRGO e
 995:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 996:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 \
 997:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
 998:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: external in
 999:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            event. Trigger edge set to rising edge (default setting)
1000:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 \
1001:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
1002:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO e
1003:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1004:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 \
1005:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
1006:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO2 
1007:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1008:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 \
1009:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*
1010:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 TRGO e
1011:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1012:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 \
1013:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*
1014:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM6 TRGO e
1015:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1016:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 \
1017:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 \
1018:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
1019:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1020:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (capture compare: input capture or output capture).
1021:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1022:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE15    (ADC_CFGR_EXTSEL_4 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
1023:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: LPTIM1 OUT 
1024:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1025:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM1_CH1     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 \
1026:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
1027:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: LPTIM2 OUT 
ARM GAS  /tmp/cc2DBcx1.s 			page 23


1028:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1029:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM2_CH1     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 \
1030:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*
1031:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: LPTIM3 even
1032:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1033:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1034:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Triggers specific to some devices of STM32H5 series */
1035:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(TIM8)
1036:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Devices STM32H563/H573xx */
1037:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 \
1038:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
1039:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM4 channe
1040:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (capture compare: input capture or output capture).
1041:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1042:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
1043:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 \
1044:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*
1045:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM12 TRGO 
1046:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1047:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
1048:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
1049:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM8 TRGO e
1050:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1051:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
1052:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 \
1053:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
1054:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM4 TRGO e
1055:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1056:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
1057:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 \
1058:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*
1059:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM15 TRGO 
1060:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1061:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
1062:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
1063:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Devices STM32H503xx */
1064:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM7_TRGO      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_0 \
1065:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
1066:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM7 TRGO e
1067:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1068:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H503xx. */
1069:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* Devices STM32H563/H573xx or STM32H503xx */
1070:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1071:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1072:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1073:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
1075:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1077:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (ADC_CFGR_EXTEN_0)                      /*!< ADC group r
1078:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            trigger polarity set to rising edge */
1079:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1)                      /*!< ADC group r
1080:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            trigger polarity set to falling edge */
1081:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
1082:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            trigger polarity set to both rising and falling edges */
1083:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1084:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cc2DBcx1.s 			page 24


1085:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1086:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1087:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SAMPLING_MODE  ADC group regular - Sampling mode
1088:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1090:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_NORMAL               (0x00000000UL)       /*!< ADC conversions sam
1091:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            is defined using  @ref ADC_LL_EC_CHANNEL_SAMPLINGTIME */
1092:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_BULB                 (ADC_CFGR2_BULB)     /*!< ADC conversions sam
1093:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            immediately after end of conversion, and stops upon trig
1094:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Note: First conversion is using minimal sampling time
1095:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (see @ref ADC_LL_EC_CHANNEL_SAMPLINGTIME) */
1096:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED    (ADC_CFGR2_SMPTRIG)  /*!< ADC conversions sam
1097:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            controlled by trigger events: trigger rising edge for st
1098:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            trigger falling edge for stop sampling and start convers
1099:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1100:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1102:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
1104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1106:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)     /*!< ADC conversions performed in sin
1107:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            one conversion per trigger */
1108:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)    /*!< ADC conversions performed in con
1109:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            after the first trigger, following conversions launched 
1110:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            automatically */
1111:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1112:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1113:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1114:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1115:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
1116:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1117:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1118:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)     /*!< ADC conversions are not transfer
1119:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (ADC_CFGR_DMAEN)   /*!< ADC conversion data are transfer
1120:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            in limited mode (one shot mode): DMA transfer requests a
1121:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            number of DMA data transfers (number of ADC conversions)
1122:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode non-c
1123:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
1124:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            transferred by DMA, in unlimited mode: DMA transfer requ
1125:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            whatever number of DMA data transferred (number of ADC c
1126:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode circu
1127:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1129:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
1132:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON_CONFIG ADC instance - ADC sampling time common configur
1133:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1134:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1135:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_DEFAULT      (0x00000000UL)      /*!< ADC sampling time let to d
1136:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5 (ADC_SMPR1_SMPPLUS) /*!< ADC additional sampling ti
1137:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            cycles replacing 2.5 ADC clock cycles (this applies to a
1138:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with selection sampling time 2.5 ADC clock cycles, whate
1139:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            on ADC groups regular or injected). */
1140:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1141:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cc2DBcx1.s 			page 25


1142:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1143:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
1144:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1145:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
1146:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1147:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1148:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)     /*!< ADC group regular behavior in ca
1149:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    data preserved */
1150:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)  /*!< ADC group regular behavior in ca
1151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    data overwritten */
1152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1153:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1156:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
1157:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1158:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1159:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                 /*!< ADC group regular se
1160:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (equivalent to sequencer of 1 rank: ADC conversion on on
1161:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_SQR1_L_0)                 /*!< ADC group regular se
1162:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 2 ranks in the sequence */
1163:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_SQR1_L_1)                 /*!< ADC group regular se
1164:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 3 ranks in the sequence */
1165:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_SQR1_L_1 | ADC_SQR1_L_0)  /*!< ADC group regular se
1166:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 4 ranks in the sequence */
1167:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_SQR1_L_2)                 /*!< ADC group regular se
1168:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 5 ranks in the sequence */
1169:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_SQR1_L_2 | ADC_SQR1_L_0)  /*!< ADC group regular se
1170:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 6 ranks in the sequence */
1171:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_SQR1_L_2 | ADC_SQR1_L_1) /*!< ADC group regular seq
1172:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 7 ranks in the sequence */
1173:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (ADC_SQR1_L_2 | ADC_SQR1_L_1 \
1174:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SQR1_L_0)                /*!< ADC group regular s
1175:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 8 ranks in the sequence */
1176:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3)                 /*!< ADC group regular se
1177:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 9 ranks in the sequence */
1178:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_0)  /*!< ADC group regular se
1179:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 10 ranks in the sequence */
1180:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_1)  /*!< ADC group regular se
1181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 11 ranks in the sequence */
1182:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_1 \
1183:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SQR1_L_0)                /*!< ADC group regular s
1184:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 12 ranks in the sequence */
1185:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2)  /*!< ADC group regular se
1186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 13 ranks in the sequence */
1187:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 \
1188:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SQR1_L_0)                /*!< ADC group regular s
1189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 14 ranks in the sequence */
1190:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 \
1191:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SQR1_L_1)                /*!< ADC group regular s
1192:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 15 ranks in the sequence */
1193:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 \
1194:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SQR1_L_1 | ADC_SQR1_L_0) /*!< ADC group regular s
1195:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                               with 16 ranks in the 
1196:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1197:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1198:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc2DBcx1.s 			page 26


1199:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1200:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
1201:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1202:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1203:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                          /*!< ADC group r
1204:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode disable */
1205:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR_DISCEN)                       /*!< ADC group r
1206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1207:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (ADC_CFGR_DISCNUM_0 | ADC_CFGR_DISCEN)  /*!< ADC group r
1208:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode enabled with sequence interruption ev
1209:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISCEN)  /*!< ADC group r
1210:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1211:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISCNUM_0 \
1212:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_DISCEN)                       /*!< ADC group
1213:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1214:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCEN)   /*!< ADC group 
1215:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1216:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_0 \
1217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_DISCEN)                       /*!< ADC group
1218:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 \
1220:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_DISCEN)                       /*!< ADC group
1221:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1222:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 \
1223:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_DISCNUM_0 | ADC_CFGR_DISCEN)  /*!< ADC group
1224:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1225:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1226:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1227:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1228:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1229:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
1230:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1231:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1232:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
1233:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 1 */
1234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
1235:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 2 */
1236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
1237:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 3 */
1238:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
1239:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 4 */
1240:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
1241:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 5 */
1242:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
1243:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 6 */
1244:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
1245:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 7 */
1246:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
1247:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 8 */
1248:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
1249:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 9 */
1250:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
1251:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 10 */
1252:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
1253:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 11 */
1254:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
1255:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 12 */
ARM GAS  /tmp/cc2DBcx1.s 			page 27


1256:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
1257:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 13 */
1258:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
1259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 14 */
1260:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
1261:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 15 */
1262:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
1263:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 16 */
1264:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1265:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1266:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1267:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1268:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
1269:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1270:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1271:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Triggers common to all devices of STM32H5 series */
1272:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                        /*
1273:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger internal: SW start. */
1274:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                       /*
1275:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO e
1276:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting). */
1277:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)  /*
1278:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
1279:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1280:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (default setting). */
1281:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)  /*
1282:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 TRGO e
1283:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting). */
1284:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 \
1285:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1286:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 channe
1287:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1288:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (default setting). */
1289:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)  /*
1290:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1291:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1292:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (default setting). */
1293:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 \
1294:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1295:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: external in
1296:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1297:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)  /*
1298:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO2 
1299:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting). */
1300:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 \
1301:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)/*
1302:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1303:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1304:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (default setting). */
1305:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 \
1306:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1307:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 TRGO e
1308:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting). */
1309:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 \
1310:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)/*
1311:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1312:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
ARM GAS  /tmp/cc2DBcx1.s 			page 28


1313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (default setting). */
1314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 \
1315:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)/*
1316:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM6 TRGO e
1317:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting). */
1318:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM1_CH1     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 \
1319:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1320:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: LPTIM1 chan
1321:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            edge set to rising edge (default setting). */
1322:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM2_CH1     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 \
1323:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)/*
1324:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: LPTIM2 chan
1325:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            edge set to rising edge (default setting). */
1326:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1327:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Triggers specific to some devices of STM32H5 series */
1328:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(TIM8)
1329:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Devices STM32H563/H573xx */
1330:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 \
1331:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1332:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM4 TRGO e
1333:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting).
1334:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
1335:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 \
1336:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)/*
1337:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM9 channe
1338:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1339:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (default setting).
1340:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
1341:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 \
1342:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1343:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM12 TRGO 
1344:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting).
1345:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
1346:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 \
1347:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1348:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM9 TRGO e
1349:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting).
1350:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
1351:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 \
1352:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 \
1353:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1354:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM15 TRGO 
1355:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting). */
1356:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
1357:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Devices STM32H503xx */
1358:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM7_TRGO      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_0 \
1359:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1360:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM7 TRGO e
1361:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting). */
1362:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* Devices STM32H563/H573xx or STM32H503xx */
1363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1364:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1365:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1366:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1367:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
1368:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1369:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc2DBcx1.s 			page 29


1370:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
1371:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            trigger polarity set to rising edge */
1372:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
1373:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            trigger polarity set to falling edge */
1374:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
1375:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            trigger polarity set to both rising and falling edges */
1376:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1377:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1378:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1379:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1380:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
1381:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1382:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1383:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)     /*!< ADC group injected conversion tr
1384:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Setting mandatory if ADC group injected injected trigger
1385:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            an external trigger. */
1386:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)   /*!< ADC group injected conversion tr
1387:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular. Setting compliant only with group injected trig
1388:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            SW start, without any further action on  ADC group injec
1389:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            or stop: in this case, ADC group injected is controlled 
1390:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular. */
1391:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1393:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1395:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
1396:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1397:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1398:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)   /* Group injected sequence context 
1399:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            and can contain up to 2 contexts. When all contexts have
1400:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            the queue maintains the last context active perpetually.
1401:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)   /* Group injected sequence context 
1402:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            and can contain up to 2 contexts. When all contexts have
1403:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            the queue is empty and injected group triggers are disab
1404:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS) /* Group injected sequence context 
1405:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            only 1 sequence can be configured and is active perpetua
1406:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1407:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1408:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1409:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1410:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1411:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1413:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1414:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (equivalent to sequencer of 1 rank: ADC conversion on on
1415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1416:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 2 ranks in the sequence */
1417:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1418:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 3 ranks in the sequence */
1419:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1420:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 4 ranks in the sequence */
1421:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1422:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1423:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1424:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1425:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1426:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
ARM GAS  /tmp/cc2DBcx1.s 			page 30


1427:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1428:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)     /*!< ADC group injected sequencer dis
1429:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            disable */
1430:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN) /*!< ADC group injected sequencer dis
1431:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            enable with sequence interruption every rank */
1432:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1433:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1434:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1435:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1436:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1437:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1438:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1439:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET \
1440:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS) /*!< ADC group inj
1441:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET \
1442:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS) /*!< ADC group inj
1443:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET \
1444:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS) /*!< ADC group inj
1445:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET \
1446:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS) /*!< ADC group inj
1447:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1448:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1449:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1450:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1451:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1452:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1453:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1454:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)       /*!< Sampling time 2.5 ADC clock cy
1455:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (ADC_SMPR2_SMP10_0)  /*!< Sampling time 6.5 ADC clock cy
1456:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR2_SMP10_1)  /*!< Sampling time 12.5 ADC clock c
1457:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (ADC_SMPR2_SMP10_1 \
1458:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_0) /*!< Sampling time 24.5 ADC clock 
1459:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2)  /*!< Sampling time 47.5 ADC clock c
1460:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2 \
1461:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_0) /*!< Sampling time 92.5 ADC clock 
1462:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 \
1463:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_1) /*!< Sampling time 247.5 ADC clock
1464:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 \
1465:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_1 \
1466:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_0) /*!< Sampling time 640.5 ADC clock
1467:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1468:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1469:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1470:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1471:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1472:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1473:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1474:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1475:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to single ended (literal also used to set calibratio
1476:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1477:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to differential (literal also used to set calibratio
1478:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1479:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to both single ended and differential (literal used 
1480:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            calibration factors) */
1481:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1482:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1483:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc2DBcx1.s 			page 31


1484:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1485:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1486:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1487:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1488:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK \
1489:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_AWD_CR1_REGOFFSET) /*!< ADC analog watchdog numbe
1490:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK \
1491:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_AWD_CR2_REGOFFSET) /*!< ADC analog watchdog numbe
1492:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK \
1493:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_AWD_CR3_REGOFFSET) /*!< ADC analog watchdog numbe
1494:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1495:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1496:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1497:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1498:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1500:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1501:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                           /*!< ADC analog
1502:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            disabled */
1503:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK \
1504:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN)                       /*!< ADC analo
1505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of all channels, converted by group regular only */
1506:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK \
1507:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN)                      /*!< ADC analo
1508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of all channels, converted by group injected only */
1509:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK \
1510:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN)    /*!< ADC analo
1511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of all channels, converted by either group regular or in
1512:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
1513:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1514:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by group regular only
1515:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
1516:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1517:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by group injected onl
1518:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
1519:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1520:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1521:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by either group regul
1522:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
1523:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1524:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by group regular only
1525:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
1526:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1527:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by group injected onl
1528:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
1529:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1530:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1531:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by either group regul
1532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
1533:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by group regular only
1535:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
1536:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1537:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by group injected onl
1538:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
1539:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1540:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
ARM GAS  /tmp/cc2DBcx1.s 			page 32


1541:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by either group regul
1542:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
1543:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1544:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by group regular only
1545:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
1546:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1547:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by group injected onl
1548:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
1549:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1550:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1551:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by either group regul
1552:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
1553:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1554:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by group regular only
1555:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
1556:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1557:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by group injected onl
1558:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
1559:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1560:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1561:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by either group regul
1562:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
1563:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1564:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by group regular only
1565:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
1566:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1567:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by group injected onl
1568:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
1569:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1570:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1571:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by either group regul
1572:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
1573:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1574:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by group regular only
1575:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
1576:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1577:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by group injected onl
1578:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
1579:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1580:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1581:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by either group regul
1582:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
1583:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1584:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by group regular only
1585:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
1586:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1587:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by group injected onl
1588:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
1589:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1590:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1591:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by either group regul
1592:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1593:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1594:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by group regular only
1595:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1596:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1597:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by group injected onl
ARM GAS  /tmp/cc2DBcx1.s 			page 33


1598:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1599:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1600:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1601:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by either group regul
1602:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1603:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1604:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by group regular only
1605:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1606:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1607:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by group injected onl
1608:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1609:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1610:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1611:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by either group regul
1612:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) \
1613:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1614:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by group regular onl
1615:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) \
1616:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1617:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by group injected on
1618:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)\
1619:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1620:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1621:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by either group regu
1622:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
1623:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1624:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by group regular onl
1625:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
1626:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1627:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by group injected on
1628:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
1629:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1630:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by either group regu
1632:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
1633:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1634:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by group regular onl
1635:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
1636:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1637:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by group injected on
1638:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
1639:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1640:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by either group regu
1642:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1644:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by group regular onl
1645:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1646:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1647:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by group injected on
1648:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1649:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1650:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by either group regu
1652:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1653:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1654:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by group regular onl
ARM GAS  /tmp/cc2DBcx1.s 			page 34


1655:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1656:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1657:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by group only */
1658:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1659:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1660:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1661:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by either group regu
1662:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1663:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1664:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            monitoring of ADC channel ADCx_IN15, converted by group 
1665:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1666:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1667:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN15, converted by group injected on
1668:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1669:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1670:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1671:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN15, converted by either group
1672:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular or injected */
1673:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1674:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1675:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by group regular onl
1676:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1677:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1678:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by group injected on
1679:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1680:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1681:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1682:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by either group regu
1683:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1684:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1685:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by group regular onl
1686:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1687:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1688:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by group injected on
1689:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1690:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1691:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1692:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by either group regu
1693:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1694:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1695:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by group regular onl
1696:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1697:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1698:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by group injected on
1699:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1700:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1701:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1702:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by either group regu
1703:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_REG          ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK) \
1704:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1705:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN19, converted by group regular onl
1706:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_INJ          ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK) \
1707:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1708:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN19, converted by group injected on
1709:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_REG_INJ      ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK) \
1710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1711:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
ARM GAS  /tmp/cc2DBcx1.s 			page 35


1712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN19, converted by either group regu
1713:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) \
1714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1715:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to VrefInt: Internal v
1716:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by group regular only.
1717:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1718:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) \
1719:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1720:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             of ADC internal channel connected to VrefInt: Internal 
1721:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             converted by group injected only.
1722:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             On STM32H563xx/573xx, ADC channel available only on ADC
1723:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) \
1724:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1725:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1726:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to VrefInt: Internal v
1727:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by either group regular or injected.
1728:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1729:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) \
1730:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1731:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to internal temperatur
1732:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by group regular only.
1733:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1734:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) \
1735:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1736:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to internal temperatur
1737:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by group injected only.
1738:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1739:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) \
1740:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1741:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1742:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to internal temperatur
1743:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by either group regular or injected.
1744:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1745:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) \
1746:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1747:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to Vbat/4: Vbat voltag
1748:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            a divider ladder of factor 1/4 to have channel voltage a
1749:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by group regular only.
1750:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1751:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) \
1752:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1753:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to Vbat/4: Vbat voltag
1754:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            a divider ladder of factor 1/4 to have channel voltage a
1755:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by group injected only.
1756:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1757:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) \
1758:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1759:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1760:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to Vbat/4: Vbat voltag
1761:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            a divider ladder of factor 1/4 to have channel voltage a
1762:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1763:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VDDCORE_REG          ((LL_ADC_CHANNEL_VDDCORE    & ADC_CHANNEL_ID_MASK) \
1764:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1765:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to Vddcore, converted 
1766:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1767:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VDDCORE_INJ          ((LL_ADC_CHANNEL_VDDCORE    & ADC_CHANNEL_ID_MASK) \
1768:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
ARM GAS  /tmp/cc2DBcx1.s 			page 36


1769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to Vddcore,
1770:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by group injected only.
1771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1772:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VDDCORE_REG_INJ      ((LL_ADC_CHANNEL_VDDCORE    & ADC_CHANNEL_ID_MASK) \
1773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1774:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1775:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to Vddcore,
1776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by either group regular or injected.
1777:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1778:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1779:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definitions for backward compatibility with legacy STM32 series */
1780:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VCORE_REG            LL_ADC_AWD_CH_VDDCORE_REG
1781:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VCORE_INJ            LL_ADC_AWD_CH_VDDCORE_INJ
1782:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VCORE_REG_INJ        LL_ADC_AWD_CH_VDDCORE_REG_INJ
1783:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1784:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1785:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1786:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1787:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1788:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1789:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1790:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1)      /*!< ADC analog watchdog threshold hi
1791:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (ADC_TR1_LT1)      /*!< ADC analog watchdog threshold lo
1792:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 \
1793:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_TR1_LT1)     /*!< ADC analog watchdog both thresh
1794:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            concatenated into the same data */
1795:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1796:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1797:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1798:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1799:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_FILTERING_CONFIG  Analog watchdog - filtering config
1800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1801:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_NONE          (0x00000000UL)                          /*!< ADC analog 
1803:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            one out-of-window sample is needed to raise flag or inte
1804:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_2SAMPLES      (ADC_TR1_AWDFILT_0)                     /*!< ADC analog 
1805:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            out-of-window samples are needed to raise flag or interr
1806:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_3SAMPLES      (ADC_TR1_AWDFILT_1)                     /*!< ADC analog 
1807:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
1808:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_4SAMPLES      (ADC_TR1_AWDFILT_1 | ADC_TR1_AWDFILT_0) /*!< ADC analog 
1809:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
1810:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_5SAMPLES      (ADC_TR1_AWDFILT_2)                     /*!< ADC analog 
1811:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
1812:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_6SAMPLES      (ADC_TR1_AWDFILT_2 | ADC_TR1_AWDFILT_0) /*!< ADC analog 
1813:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
1814:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_7SAMPLES      (ADC_TR1_AWDFILT_2 | ADC_TR1_AWDFILT_1) /*!< ADC analog 
1815:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
1816:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_8SAMPLES      (ADC_TR1_AWDFILT_2 | ADC_TR1_AWDFILT_1 \
1817:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_TR1_AWDFILT_0)                    /*!< ADC analog
1818:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
1819:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1820:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1821:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1822:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1823:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1824:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1825:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc2DBcx1.s 			page 37


1826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                      /*!< ADC oversamplin
1827:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (ADC_CFGR2_ROVSE)                   /*!< ADC oversamplin
1828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            ADC group regular. If group injected interrupts group re
1829:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            when ADC group injected is triggered, the oversampling o
1830:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            is temporary stopped and continued afterwards. */
1831:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM | ADC_CFGR2_ROVSE) /*!< ADC oversamplin
1832:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            ADC group regular. If group injected interrupts group re
1833:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            when ADC group injected is triggered, the oversampling o
1834:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            is resumed from start (oversampler buffer reset). */
1835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (ADC_CFGR2_JOVSE)                   /*!< ADC oversamplin
1836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            ADC group injected. */
1837:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*!< ADC oversamplin
1838:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            both ADC groups regular and injected. If group injected 
1839:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular: when ADC group injected is triggered, the overs
1840:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular is resumed from start (oversampler buffer reset)
1841:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1843:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1844:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1845:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1846:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1848:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)     /*!< ADC oversampling discontinuous m
1849:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** (all conversions of oversampling ratio are done from 1 trigger) */
1850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)  /*!< ADC oversampling discontinuous m
1851:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            mode (each conversion of oversampling ratio needs a trig
1852:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1853:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1854:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1855:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1856:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1857:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1858:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1859:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                        /*!< ADC oversampl
1860:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1861:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (before potential shift) */
1862:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (ADC_CFGR2_OVSR_0)                    /*!< ADC oversampl
1863:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1864:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (before potential shift) */
1865:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (ADC_CFGR2_OVSR_1)                    /*!< ADC oversampl
1866:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1867:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (before potential shift) */
1868:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1870:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (before potential shift) */
1871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2)                    /*!< ADC oversampl
1872:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1873:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (before potential shift) */
1874:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1875:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1876:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (before potential shift) */
1877:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1) /*!< ADC oversampl
1878:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1879:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (before potential shift) */
1880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 \
1881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR2_OVSR_0)                   /*!< ADC oversamp
1882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
ARM GAS  /tmp/cc2DBcx1.s 			page 38


1883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (before potential shift) */
1884:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1885:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1886:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1887:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1888:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data right shift
1889:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1890:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1891:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                        /*!< ADC oversampl
1892:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data is not divided to resul
1893:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion data) */
1894:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (ADC_CFGR2_OVSS_0)                    /*!< ADC oversampl
1895:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1896:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1897:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (ADC_CFGR2_OVSS_1)                    /*!< ADC oversampl
1898:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1899:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1900:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (ADC_CFGR2_OVSS_1 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1901:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1902:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1903:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (ADC_CFGR2_OVSS_2)                    /*!< ADC oversampl
1904:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1905:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1906:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1907:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1908:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1909:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1) /*!< ADC oversampl
1910:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1911:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1912:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 \
1913:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR2_OVSS_0)                   /*!< ADC oversamp
1914:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1915:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1916:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3)                    /*!< ADC oversampl
1917:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1918:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1919:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1920:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1921:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1922:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1923:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1924:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1925:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1926:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                    /*!< ADC dual mode dis
1928:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            independent mode) */
1929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1) /*!< ADC dual mode ena
1930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            simultaneous */
1931:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 \
1932:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CCR_DUAL_0)                  /*!< ADC dual mode e
1933:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular interleaved */
1934:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (ADC_CCR_DUAL_2 | ADC_CCR_DUAL_0) /*!< ADC dual mode ena
1935:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            simultaneous */
1936:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3 | ADC_CCR_DUAL_0) /*!< ADC dual mode ena
1937:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            alternate trigger. Works only with external triggers (no
1938:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (ADC_CCR_DUAL_0)                  /*!< ADC dual mode ena
1939:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular simultaneous + group injected simultaneous */
ARM GAS  /tmp/cc2DBcx1.s 			page 39


1940:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (ADC_CCR_DUAL_1)                  /*!< ADC dual mode ena
1941:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular simultaneous + group injected alternate trigger 
1942:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (ADC_CCR_DUAL_1 | ADC_CCR_DUAL_0) /*!< ADC dual mode ena
1943:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular interleaved + group injected simultaneous */
1944:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1945:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1946:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1947:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1948:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1949:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1950:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1951:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                    /*!< ADC multimode g
1952:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              conversions are transferred by DMA: each ADC uses its 
1953:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              with its individual DMA transfer settings */
1954:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B (ADC_CCR_MDMA_1)                  /*!< ADC multimode g
1955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
1956:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ADC master), in limited mode (one shot mode): DMA tran
1957:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              are stopped when number of DMA data transfers (number 
1958:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              is reached. This ADC mode is intended to be used with 
1959:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              non-circular. Setting for ADC resolution of 12 and 10 
1960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B   (ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!< ADC multimode g
1961:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
1962:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ADC master), in limited mode (one shot mode): DMA tran
1963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              are stopped when number of DMA data transfers (number 
1964:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              is reached. This ADC mode is intended to be used with 
1965:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              non-circular. Setting for ADC resolution of 8 and 6 bi
1966:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B (ADC_CCR_DMACFG | ADC_CCR_MDMA_1) /*!< ADC multimode g
1967:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
1968:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ADC master), in unlimited mode: DMA transfer requests 
1969:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              whatever number of DMA data transferred (number of ADC
1970:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This ADC mode is intended to be used with DMA mode cir
1971:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              Setting for ADC resolution of 12 and 10 bits */
1972:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B   (ADC_CCR_DMACFG | ADC_CCR_MDMA_1 \
1973:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                               | ADC_CCR_MDMA_0)                 /*!< ADC multimode 
1974:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
1975:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ADC master), in unlimited mode: DMA transfer requests 
1976:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              whatever number of DMA data transferred (number of ADC
1977:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This ADC mode is intended to be used with DMA mode cir
1978:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              Setting for ADC resolution of 8 and 6 bits */
1979:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1980:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1981:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1982:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1983:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1984:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1985:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1986:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE   (0x00000000UL)                      /*!< ADC multimode d
1987:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 1 ADC clock cycle */
1988:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES  (ADC_CCR_DELAY_0)                   /*!< ADC multimode d
1989:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 2 ADC clock cycles */
1990:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES  (ADC_CCR_DELAY_1)                   /*!< ADC multimode d
1991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 3 ADC clock cycles */
1992:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES  (ADC_CCR_DELAY_1 | ADC_CCR_DELAY_0) /*!< ADC multimode d
1993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 4 ADC clock cycles */
1994:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES  (ADC_CCR_DELAY_2)                   /*!< ADC multimode d
1995:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 5 ADC clock cycles */
1996:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (ADC_CCR_DELAY_2 | ADC_CCR_DELAY_0) /*!< ADC multimode d
ARM GAS  /tmp/cc2DBcx1.s 			page 40


1997:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 6 ADC clock cycles */
1998:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1) /*!< ADC multimode d
1999:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 7 ADC clock cycles */
2000:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1 \
2001:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CCR_DELAY_0)                  /*!< ADC multimode 
2002:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 8 ADC clock cycles */
2003:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (ADC_CCR_DELAY_3)                   /*!< ADC multimode d
2004:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 9 ADC clock cycles */
2005:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (ADC_CCR_DELAY_3 | ADC_CCR_DELAY_0) /*!< ADC multimode d
2006:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 10 ADC clock cycles */
2007:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (ADC_CCR_DELAY_3 | ADC_CCR_DELAY_1) /*!< ADC multimode d
2008:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 11 ADC clock cycles */
2009:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (ADC_CCR_DELAY_3 | ADC_CCR_DELAY_1 \
2010:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CCR_DELAY_0)                  /*!< ADC multimode 
2011:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 12 ADC clock cycles */
2012:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2013:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
2014:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2015:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2016:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
2017:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
2018:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2019:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (ADC_CDR_RDATA_MST) /*!< In multimode, selection among s
2020:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            instances: ADC master */
2021:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV) /*!< In multimode, selection among s
2022:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            instances: ADC slave */
2023:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV \
2024:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CDR_RDATA_MST) /*!< In multimode, selection among
2025:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            instances: both ADC master and ADC slave */
2026:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2027:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
2028:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2029:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2030:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2031:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2032:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HELPER_MACRO  Definitions of constants used by helper macro
2033:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
2034:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2035:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_TEMPERATURE_CALC_ERROR      ((int16_t)0x7FFF)  /* Temperature calculation error usin
2036:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                  @ref __LL_ADC_CALC_TEMPERATURE(), 
2037:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                  calibration parameters. This value
2038:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                  (to fit on signed word or double w
2039:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                  to an inconsistent temperature val
2040:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2041:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
2042:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2043:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2044:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
2045:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
2046:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         not timeout values.
2047:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
2048:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         above each literal definition.
2049:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
2050:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2051:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2052:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
2053:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       not timeout values.                                                  */
ARM GAS  /tmp/cc2DBcx1.s 			page 41


2054:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
2055:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
2056:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
2057:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
2058:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       STM32 series:                                                        */
2059:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
2060:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
2061:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
2062:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
2063:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
2064:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
2065:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*         cycles                                                             */
2066:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
2067:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*         configuration.                                                     */
2068:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
2069:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2070:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
2071:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
2072:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
2073:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Unit: us                                                                   */
2074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)           /*!< Delay for ADC stabilization time
2075:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                               regulator start-up time) */
2076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2077:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
2078:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
2079:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
2080:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Unit: us                                                                   */
2081:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)        /*!< Delay for internal voltage refer
2082:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    time */
2083:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2084:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
2085:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
2086:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* parameter "tSTART").                                                       */
2087:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Unit: us                                                                   */
2088:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        ( 26UL)        /*!< Delay for temperature sensor sta
2089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 26UL)        /*!< Delay for temperature sensor buf
2090:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    time (starting from ADC enable, 
2091:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    @ref LL_ADC_Enable()) */
2092:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2093:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
2094:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
2095:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
2096:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
2097:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
2098:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
2099:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
2100:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  4UL)        /*!< Delay required between ADC end o
2101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    and ADC enable */
2102:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
2105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2106:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2107:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2108:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
2109:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2110:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
ARM GAS  /tmp/cc2DBcx1.s 			page 42


2111:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2112:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
2113:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
2114:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
2115:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2116:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2117:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
2118:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
2119:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2120:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2121:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2122:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Write a value in ADC register
2123:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
2124:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __REG__ Register to be written
2125:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
2126:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
2127:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
2129:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Read a value in ADC register
2132:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
2133:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __REG__ Register to be read
2134:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Register value
2135:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2136:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
2137:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2138:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
2139:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2140:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2141:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
2142:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
2143:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2144:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2145:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2146:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
2147:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
2148:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Example:
2149:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
2150:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           will return decimal number "4".
2151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
2152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         number is returned, either defined with number
2153:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
2154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
2156:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
2157:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
2158:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
2159:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
2160:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
2161:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2162:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2163:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2164:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2165:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2166:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2167:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
ARM GAS  /tmp/cc2DBcx1.s 			page 43


2168:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2169:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2170:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2171:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2172:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2173:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2174:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
2175:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2176:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2177:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
2178:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
2179:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
2180:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
2181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
2182:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
2183:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
2184:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
2185:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
2187:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
2188:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    (                                                                                       \
2189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
2190:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    )                                                                                       \
2191:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    :                                                                                       \
2192:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    (                                                                                       \
2193:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
2194:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    )                                                                                       \
2195:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   )
2196:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2197:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2198:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
2199:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         from number in decimal format.
2200:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Example:
2201:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
2202:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
2203:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
2204:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2205:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
2206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
2207:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
2208:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
2209:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
2210:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
2211:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2212:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2213:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2214:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2215:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2216:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2218:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2220:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2221:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2222:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2223:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2224:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
ARM GAS  /tmp/cc2DBcx1.s 			page 44


2225:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)(4)
2226:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)(4)
2227:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)(4)
2228:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)(4)
2229:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
2230:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
2231:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
2232:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
2233:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
2234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
2235:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
2236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2237:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2238:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
2239:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL) ?                                                                     
2240:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    (                                                                                               
2241:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
2242:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                              |    
2243:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
2244:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    )                                                                                               
2245:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    :                                                                                               
2246:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    (                                                                                               
2247:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
2248:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
2249:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
2250:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    )                                                                                               
2251:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   )
2252:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2253:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2254:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
2255:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
2256:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
2257:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC internal channel:
2258:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
2259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
2260:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
2261:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
2262:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
2263:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
2264:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
2265:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
2266:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         returned from ADC registers,
2267:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         because internal and external channels share the same channel
2268:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
2269:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         parameters definitions of driver.
2270:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2271:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
2272:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
2273:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
2274:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
2275:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
2276:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
2277:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2278:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2279:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2280:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2281:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
ARM GAS  /tmp/cc2DBcx1.s 			page 45


2282:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2283:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2284:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2285:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2286:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2287:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2288:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2289:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2290:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
2291:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2292:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2293:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
2294:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
2295:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
2296:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
2297:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
2298:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
2299:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
2300:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
2301:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                       connected to a GPIO pin).
2302:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
2303:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2304:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
2305:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
2306:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2307:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2308:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
2309:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
2310:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
2311:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
2312:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
2313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
2314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
2315:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
2316:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a value defined from parameter definition of
2317:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
2318:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
2319:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         from ADC registers.
2320:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2321:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
2322:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
2323:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
2324:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
2325:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
2326:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
2327:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2328:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2329:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2330:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2331:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2332:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2333:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2334:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2335:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2336:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2337:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2338:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
ARM GAS  /tmp/cc2DBcx1.s 			page 46


2339:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2340:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
2341:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2342:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2343:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
2344:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
2345:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
2346:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
2347:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
2348:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
2349:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
2350:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2351:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2352:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2353:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2354:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2355:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2356:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2357:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2358:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2359:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2360:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2361:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2362:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2364:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2365:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2366:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2367:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2368:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2369:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2370:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
2371:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2372:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
2373:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
2374:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2375:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2376:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
2377:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
2378:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
2379:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
2380:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
2381:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
2382:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
2383:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or a value from functions where a channel number is
2384:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         returned from ADC registers,
2385:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         because internal and external channels share the same channel
2386:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
2387:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         parameters definitions of driver.
2388:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
2389:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2390:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2391:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
2393:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
2394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
2395:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.
ARM GAS  /tmp/cc2DBcx1.s 			page 47


2396:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.
2397:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
2398:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
2399:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2400:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC2)
2401:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
2402:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
2403:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     &&(((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR     ) ||                    \
2404:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT))                              \
2405:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    )                                                                           \
2406:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    ||                                                                          \
2407:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
2408:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     &&(((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
2409:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VDDCORE))                              \
2410:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    )                                                                           \
2411:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   )
2412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
2413:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
2414:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                             \
2415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                             \
2416:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_VDDCORE)    ||                             \
2417:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                      \
2418:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   )
2419:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC2 */
2420:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2421:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2422:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
2423:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
2424:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         from sequencer channel and groups definition.
2425:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
2426:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example:
2427:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
2428:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
2429:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
2430:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2431:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
2432:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
2433:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
2434:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
2435:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
2436:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
2437:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2438:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2439:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2440:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2441:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2442:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2443:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2444:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2445:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2446:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2447:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2448:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2449:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2450:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
2451:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)(4)
2452:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)(4)
ARM GAS  /tmp/cc2DBcx1.s 			page 48


2453:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)(4)
2454:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)(4)
2455:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
2456:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
2457:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
2458:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
2459:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
2460:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
2461:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
2462:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2463:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
2464:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
2465:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
2466:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
2467:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2468:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2469:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
2470:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
2471:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
2472:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
2473:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
2474:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
2475:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
2476:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
2477:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
2478:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
2479:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
2480:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
2481:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
2482:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
2483:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
2484:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
2485:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
2486:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
2487:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
2488:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
2489:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
2490:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
2491:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
2492:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
2493:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
2494:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
2495:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
2496:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
2497:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
2498:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
2499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
2500:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
2501:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
2502:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
2503:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
2504:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
2505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
2506:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
2507:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
2508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
2509:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
ARM GAS  /tmp/cc2DBcx1.s 			page 49


2510:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
2511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
2512:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
2513:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
2514:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
2515:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
2516:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
2517:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
2518:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
2519:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
2520:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
2521:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
2522:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
2523:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
2524:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
2525:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
2526:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
2527:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
2528:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
2529:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
2530:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
2531:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
2532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
2533:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
2534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
2535:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(1)
2536:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
2537:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
2538:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(2)
2539:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(2)
2540:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (2)
2541:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDCORE_REG          (0)(2)
2542:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDCORE_INJ          (0)(2)
2543:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDCORE_REG_INJ         (2)
2544:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
2545:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (0) On STM32H5, parameter available only on analog watchdog number: AWD1.\n
2546:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.
2547:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.
2548:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2549:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
2550:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
2551:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
2552:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    :                                                                                               
2553:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
2554:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
2555:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    :                                                                                               
2556:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
2557:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   )
2558:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2559:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2560:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
2561:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2562:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         different of 12 bits.
2563:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
2564:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
2565:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
2566:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
ARM GAS  /tmp/cc2DBcx1.s 			page 50


2567:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
2568:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *            (< ADCx param >,
2569:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
2570:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *            );
2571:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2572:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2573:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2574:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2575:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2576:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
2577:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2578:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2579:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
2580:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2581:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2582:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2583:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
2584:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2585:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         different of 12 bits.
2586:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2587:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
2588:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
2589:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
2590:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
2591:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
2592:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *            );
2593:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2594:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2595:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2596:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2597:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2598:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
2599:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2600:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2601:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
2602:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2603:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2604:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2605:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
2606:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
2607:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2608:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
2609:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
2610:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
2611:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
2612:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
2613:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2614:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2615:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2616:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)          
2617:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
2618:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    & LL_ADC_AWD_THRESHOLD_LOW)
2619:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2620:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2621:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
2622:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
2623:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
ARM GAS  /tmp/cc2DBcx1.s 			page 51


2624:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
2625:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and differential ended to 0x2A:
2626:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
2627:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             ADC1,
2628:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
2629:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
2630:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
2631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2632:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2633:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2634:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2635:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2636:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2637:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2638:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2639:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2640:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2642:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2644:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2645:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2646:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2647:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2648:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2649:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2650:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2652:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2653:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2654:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2655:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2656:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2657:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2658:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC common instance).
2659:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2660:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2661:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
2662:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         considered as master instances (do not depend to
2663:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         any other ADC instance).
2664:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2665:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2666:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2667:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2668:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ( ( ((__ADCx__) == ADC2)                                                     \
2669:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     )?                                                                         \
2670:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     (ADC1)                                                                     \
2671:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     :                                                                          \
2672:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     (__ADCx__)                                                                 \
2673:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   )
2674:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2675:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2676:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2677:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2678:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2679:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2680:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
ARM GAS  /tmp/cc2DBcx1.s 			page 52


2681:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2682:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2683:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2684:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval ADC common register instance
2685:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2686:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)  (ADC12_COMMON)
2687:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2688:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2689:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC common instance are disabled.
2690:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2691:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
2692:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2693:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2694:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2695:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2696:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2697:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2698:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2699:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2700:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         are disabled.
2701:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2702:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is enabled.
2703:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2704:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC2)
2705:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2706:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) | LL_ADC_IsEnabled(ADC2))
2707:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
2708:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)  (LL_ADC_IsEnabled(ADC1))
2709:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC2 */
2710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2711:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2713:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2715:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2716:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (refer to reference manual).
2717:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2718:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2719:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2720:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2721:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2722:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2723:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2724:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2725:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2726:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2727:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2728:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2729:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a resolution to another resolution.
2730:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2731:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2732:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This parameter can be one of the following values:
2733:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2734:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2735:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2736:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2737:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
ARM GAS  /tmp/cc2DBcx1.s 			page 53


2738:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This parameter can be one of the following values:
2739:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2740:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2741:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2742:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2743:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2744:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2745:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2746:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2747:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
2748:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** (((__DATA__)                                                                 \
2749:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2750:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2751:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** )
2752:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2753:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2754:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2755:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2756:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2757:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2758:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2759:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2760:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2761:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                       (unit: digital value).
2762:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2763:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2764:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2765:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2766:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2767:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2768:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2770:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                       __ADC_DATA__,\
2771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
2772:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2774:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** )
2775:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2777:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2778:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value) in
2779:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         differential ended mode.
2780:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   ADC data from ADC data register is unsigned and centered around
2781:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         middle code in. Converted voltage can be positive or negative
2782:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         depending on differential input voltages.
2783:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2784:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2785:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2786:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2787:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (unit: digital value).
2788:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2789:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2790:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2791:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2792:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2793:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2794:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc2DBcx1.s 			page 54


2795:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CALC_DIFF_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2796:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            __ADC_DATA__,\
2797:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            __ADC_RESOLUTION__)\
2798:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** ((int32_t)((__ADC_DATA__) << 1U) * (int32_t)(__VREFANALOG_VOLTAGE__)\
2799:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  / (int32_t)(__LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))\
2800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  - (int32_t)(__VREFANALOG_VOLTAGE__))
2801:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2803:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2804:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2805:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         reference VrefInt.
2806:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2807:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         stored in system memory for each device during production.
2808:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2809:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         connected to pin Vref+.
2810:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2811:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2812:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2813:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2814:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2815:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2816:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2817:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2818:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2819:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2820:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2821:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2822:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2823:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2824:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2825:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2827:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
2829:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2830:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2831:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
2832:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
2833:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** )
2834:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2837:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2838:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2839:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         stored in system memory for each device during production.
2840:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Calculation formula:
2841:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2843:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2844:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2845:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2846:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2848:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2849:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2851:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
ARM GAS  /tmp/cc2DBcx1.s 			page 55


2852:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  parameters are correct (address and data).
2853:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2854:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2855:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  less accurate than calibrated values),
2856:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2857:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2858:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2859:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2860:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2861:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2862:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2863:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
2864:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2865:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         temperature sensor.
2866:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2867:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2868:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2870:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2872:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2873:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This parameter can be one of the following values:
2874:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2875:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2876:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2877:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2878:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2879:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         In case or error, value LL_ADC_TEMPERATURE_CALC_ERROR is returned (inconsistent tempera
2880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                   __ADC_RESOLUTION__)\
2884:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** ((((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) != 0) ?       \
2885:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2886:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    (__ADC_RESOLUTION__),          \
2887:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    LL_ADC_RESOLUTION_12B)         \
2888:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                   * (__VREFANALOG_VOLTAGE__))                                     \
2889:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                  / TEMPSENSOR_CAL_VREFANALOG)                                     \
2890:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2891:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2892:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2893:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ) + TEMPSENSOR_CAL1_TEMP                                                        \
2894:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  )                                                                                \
2895:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  :                                                                                \
2896:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  ((int32_t)LL_ADC_TEMPERATURE_CALC_ERROR)                                         \
2897:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** )
2898:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2899:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2900:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2901:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2902:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2903:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (refer to device datasheet).
2904:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Calculation formula:
2905:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2906:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2907:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2908:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                   (unit: digital value)
ARM GAS  /tmp/cc2DBcx1.s 			page 56


2909:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2910:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2911:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2912:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2913:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2914:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  of the current device has characteristics in line with
2915:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  datasheet typical values.
2916:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2917:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2918:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2919:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2920:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2921:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2922:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2923:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2924:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2925:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
2926:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
2928:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                       (unit: uV/DegCelsius).
2930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                       On STM32H5, refer to device datasheet parameter "Avg_Slop
2931:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2932:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                       (at temperature and Vref+ defined in parameters below) (u
2933:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                       On this STM32 series, refer to datasheet parameter "V30" 
2934:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                       to TS_CAL1).
2935:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2936:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                       (see parameter above) is corresponding (unit: mV)
2937:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) value (unit: mV)
2938:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2939:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2940:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This parameter can be one of the following values:
2941:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2942:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2943:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2944:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2945:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2946:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2947:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2948:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2949:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2950:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2951:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2952:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
2953:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2954:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****               * 1000UL)                                                     \
2956:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     -                                                                       \
2957:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2958:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****               * 1000UL)                                                     \
2959:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    )                                                                        \
2960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
2961:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
2962:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** )
2963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2964:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2965:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cc2DBcx1.s 			page 57


2966:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2967:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2968:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2969:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
2970:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2971:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2972:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2973:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2974:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2975:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
2976:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2977:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2978:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2979:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
2980:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2981:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
2982:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
2983:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
2984:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2985:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2986:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2987:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2988:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2989:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   These ADC registers are data registers:
2990:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2992:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2994:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example:
2995:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2996:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2997:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2998:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2999:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
3000:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
3001:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
3002:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
3003:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
3004:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
3005:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
3006:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
3007:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3008:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
3009:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
3010:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
3011:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
3012:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
3013:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval ADC register address
3014:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3015:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
3016:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(const ADC_TypeDef *ADCx, uint32_t Register)
3017:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3018:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t data_reg_addr;
3019:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3020:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
3021:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   {
3022:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     /* Retrieve address of register DR */
ARM GAS  /tmp/cc2DBcx1.s 			page 58


3023:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     data_reg_addr = (uint32_t) &(ADCx->DR);
3024:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   }
3025:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
3026:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   {
3027:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     /* Retrieve address of register CDR */
3028:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     data_reg_addr = (uint32_t) &((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
3029:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   }
3030:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3031:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return data_reg_addr;
3032:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3033:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
3034:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(const ADC_TypeDef *ADCx, uint32_t Register)
3035:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3036:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
3037:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (void)(Register);
3038:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3039:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Retrieve address of register DR */
3040:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
3041:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3042:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
3043:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3044:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3045:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
3046:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3047:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3048:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
3049:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC instances
3050:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
3051:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3052:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3053:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3054:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
3055:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
3056:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
3057:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         must be respected.
3058:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to reference manual.
3059:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3060:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3061:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
3062:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
3063:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
3064:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
3065:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
3066:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
3067:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3068:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3069:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
3070:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
3071:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
3072:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
3073:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
3074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
3075:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
3076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
3077:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
3078:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
3079:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
ARM GAS  /tmp/cc2DBcx1.s 			page 59


3080:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
3081:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
3082:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
3083:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
3084:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
3085:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3086:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3087:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
3088:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
3090:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3091:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3092:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3093:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
3094:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
3095:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
3096:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3097:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3098:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3099:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
3100:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
3101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
3102:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
3103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
3104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
3105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
3106:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
3107:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
3108:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
3109:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
3110:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
3111:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
3112:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
3113:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
3114:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3115:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(const ADC_Common_TypeDef *ADCxy_COMMON)
3116:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3117:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
3118:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3119:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3120:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3121:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
3122:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
3123:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
3124:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   One or several values can be selected.
3125:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3126:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3127:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         The values not selected are removed from configuration.
3128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
3129:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
3130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
3131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         temperature sensor stabilization time.
3132:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet.
3133:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
3134:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
3135:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
3136:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
ARM GAS  /tmp/cc2DBcx1.s 			page 60


3137:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         For ADC conversion of internal channels,
3138:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a sampling time minimum value is required.
3139:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet.
3140:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
3141:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
3142:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
3143:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3144:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3145:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
3146:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3147:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3148:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3149:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3150:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
3153:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
3155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3156:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3157:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3158:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
3159:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
3160:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Add paths to the current configuration.
3161:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   One or several values can be selected.
3162:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3163:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3164:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
3165:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
3166:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
3167:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         temperature sensor stabilization time.
3168:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet.
3169:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
3170:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
3171:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
3172:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
3173:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         For ADC conversion of internal channels,
3174:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a sampling time minimum value is required.
3175:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet.
3176:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
3177:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
3178:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
3179:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3180:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
3182:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3183:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3184:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3185:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3187:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3188:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
3189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3190:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
3191:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3192:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3193:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
ARM GAS  /tmp/cc2DBcx1.s 			page 61


3194:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
3195:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
3196:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Remove paths to the current configuration.
3197:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   One or several values can be selected.
3198:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3199:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3200:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
3201:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
3202:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
3203:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3204:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3205:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
3206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3207:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3208:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3209:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3210:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3211:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3212:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
3213:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3214:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
3215:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3216:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3218:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
3219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
3220:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   One or several values can be selected.
3221:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3222:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3223:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
3224:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
3225:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
3226:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3227:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3228:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
3229:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3230:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3231:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3232:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3233:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(const ADC_Common_TypeDef *ADCxy_COMMON)
3235:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
3237:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3238:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3239:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3240:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
3241:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3242:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3243:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
3244:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
3245:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3246:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3247:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined (ADC2)
3248:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3249:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable VddCore (internal digital core voltage) channel.
3250:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, VddCore channel is controlled via a specific register.
ARM GAS  /tmp/cc2DBcx1.s 			page 62


3251:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, VddCore channel is on ADC2 instance only.
3252:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OR       OP0       LL_ADC_EnableChannelVDDcore
3253:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3254:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3255:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3256:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableChannelVDDcore(ADC_TypeDef *ADCx)
3257:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3258:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCx->OR, ADC_OR_OP0);
3259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3260:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
3261:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3262:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable VddCore (internal digital core voltage) channel.
3263:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, VddCore channel is controlled via a specific register.
3264:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OR       OP1       LL_ADC_EnableChannelVDDcore
3265:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3266:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3267:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3268:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableChannelVDDcore(ADC_TypeDef *ADCx)
3269:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3270:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCx->OR, ADC_OR_OP1);
3271:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3272:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC2 */
3273:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3274:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined (ADC2)
3275:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3276:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable VddCore (internal digital core voltage) channel.
3277:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, VddCore channel is controlled via a specific register.
3278:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, VddCore channel is on ADC2 instance only.
3279:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OR       OP0       LL_ADC_DisableChannelVDDcore
3280:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3281:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3282:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3283:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableChannelVDDcore(ADC_TypeDef *ADCx)
3284:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3285:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->OR, ADC_OR_OP0);
3286:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3287:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
3288:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3289:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable VddCore (internal digital core voltage) channel.
3290:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, VddCore channel is controlled via a specific register.
3291:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OR       OP1       LL_ADC_DisableChannelVDDcore
3292:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3293:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3294:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3295:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableChannelVDDcore(ADC_TypeDef *ADCx)
3296:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3297:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->OR, ADC_OR_OP1);
3298:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3299:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC2 */
3300:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3301:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3302:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable Channel 0 GPIO switch control.
3303:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, Channel 0 channel connection to GPIO is controlled via specific r
3304:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, Channel 0 GPIO switch control must be enabled when INP0 is used.
3305:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OR       OP0       LL_ADC_EnableChannel0_GPIO
3306:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3307:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/cc2DBcx1.s 			page 63


3308:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3309:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableChannel0_GPIO(const ADC_TypeDef *ADCx)
3310:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3311:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
3312:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (void)(ADCx);
3313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADC1->OR, ADC_OR_OP0);
3314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3315:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3316:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3317:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable Channel 0 GPIO switch control.
3318:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, Channel 0 connection to GPIO is controlled via specific register.
3319:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OR       OP0       LL_ADC_DisableChannel0_GPIO
3320:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3321:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3322:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3323:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableChannel0_GPIO(const ADC_TypeDef *ADCx)
3324:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3325:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
3326:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (void)(ADCx);
3327:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADC1->OR, ADC_OR_OP0);
3328:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3329:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3330:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3331:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
3332:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
3333:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
3334:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without having to perform a new calibration using
3335:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
3336:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with differential mode available:
3337:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Calibration of offset is specific to each of
3338:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         single-ended and differential modes
3339:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
3340:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
3341:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         requires their calibration).
3342:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
3343:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
3344:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         both calibration factors must be concatenated.
3345:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         To perform this processing, use helper macro
3346:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
3347:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3348:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3349:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
3350:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on going on group regular.
3351:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
3352:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
3353:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3354:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
3355:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
3356:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
3357:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
3358:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
3359:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3360:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3361:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
3362:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
3364:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
ARM GAS  /tmp/cc2DBcx1.s 			page 64


3365:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK)
3366:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     >> ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4)
3367:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                    & ~(SingleDiff & ADC_CALFACT_CALFACT_S)));
3368:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3369:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3370:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3371:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
3372:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
3373:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
3374:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
3375:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with differential mode available:
3376:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Calibration of offset is specific to each of
3377:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         single-ended and differential modes
3378:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
3379:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
3380:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3381:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
3382:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
3383:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
3384:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
3385:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3386:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(const ADC_TypeDef *ADCx, uint32_t SingleDiff)
3387:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3388:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
3389:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* "SingleDiff".                                                            */
3390:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
3391:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT,
3393:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK))
3394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                     >> ((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >>
3395:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                         ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4));
3396:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3397:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3398:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3399:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC resolution.
3400:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
3401:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3402:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3403:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3404:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3405:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
3406:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
3407:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3408:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
3409:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3410:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3411:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3413:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3414:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
3416:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3417:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
3418:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3419:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3420:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3421:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC resolution.
ARM GAS  /tmp/cc2DBcx1.s 			page 65


3422:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
3423:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3424:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
3425:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3426:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3427:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3428:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3429:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3430:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3431:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3432:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(const ADC_TypeDef *ADCx)
3433:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3434:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3435:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3436:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3437:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3438:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
3439:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
3440:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3441:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3442:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3443:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3444:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
3445:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
3446:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3447:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
3448:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
3449:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
3450:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3451:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3452:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
3453:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3454:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
3455:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3456:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3457:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3458:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
3459:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
3460:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3461:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
3462:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3463:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3464:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
3465:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
3466:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3467:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(const ADC_TypeDef *ADCx)
3468:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3469:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
3470:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3471:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3472:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3473:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC low power mode.
3474:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3475:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3476:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3477:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           in order to reduce power consumption.
3478:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
ARM GAS  /tmp/cc2DBcx1.s 			page 66


3479:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3480:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3481:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           has been retrieved by user software.
3482:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3483:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           other conversion.
3484:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3485:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3486:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3487:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           applications.
3488:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           How to use this low power mode:
3489:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3490:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3491:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3492:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3493:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3494:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3495:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3496:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3497:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3498:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             ADC conversion start.
3500:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3501:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3502:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         of delay during which ADC was idle.
3503:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3504:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC channel.
3506:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3507:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3509:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
3510:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
3511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3512:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
3513:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3514:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3515:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3516:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3517:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
3518:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3519:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
3520:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3521:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3522:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3523:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC low power mode:
3524:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3525:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3526:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3527:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           in order to reduce power consumption.
3528:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3529:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3530:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3531:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           has been retrieved by user software.
3532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3533:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           other conversion.
3534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3535:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
ARM GAS  /tmp/cc2DBcx1.s 			page 67


3536:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3537:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           applications.
3538:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           How to use this low power mode:
3539:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3540:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3541:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3542:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3543:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3544:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3545:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3546:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3547:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3548:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3549:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             ADC conversion start.
3550:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3551:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3552:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         of delay during which ADC was idle.
3553:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3554:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3555:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC channel.
3556:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
3557:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3558:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3559:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3560:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3561:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3562:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(const ADC_TypeDef *ADCx)
3563:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3564:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
3565:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3566:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3567:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3568:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC selected offset instance 1, 2, 3 or 4.
3569:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
3570:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
3571:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
3572:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           or group injected)
3573:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
3574:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           converted data).
3575:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3576:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3577:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         are set to 0.
3578:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
3579:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
3580:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
3581:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
3582:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3583:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3584:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3585:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
3586:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On STM32H5, some fast channels are available: fast analog inputs
3587:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
3588:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
3589:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
3590:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
3591:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
3592:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
ARM GAS  /tmp/cc2DBcx1.s 			page 68


3593:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
3594:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
3595:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
3596:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
3597:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
3598:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
3599:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
3600:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3601:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3602:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3603:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3604:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3605:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3606:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3607:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
3608:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
3609:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
3610:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
3611:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
3612:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
3613:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3614:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3615:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3616:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3617:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3618:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3619:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3620:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3621:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3622:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3623:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3624:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3625:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3626:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3627:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3628:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
3629:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
3630:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
3631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
3632:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
3633:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
3634:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
3635:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
3636:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
3637:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3638:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3639:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
3640:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3642:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
3644:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3645:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3646:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3647:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3648:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3649:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
ARM GAS  /tmp/cc2DBcx1.s 			page 69


3650:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
3651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
3652:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or group injected)
3653:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3654:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3655:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3656:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3657:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3658:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3659:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3660:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           as parameter for another function.
3661:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3662:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           process the returned value with the helper macro
3663:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3664:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On STM32H5, some fast channels are available: fast analog inputs
3665:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
3666:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
3667:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
3668:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
3669:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
3670:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3671:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3672:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3673:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3674:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3675:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3676:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3677:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
3678:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
3679:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
3680:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
3681:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
3682:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
3683:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3684:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3685:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3686:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3687:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3688:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3689:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3690:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3691:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3692:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3693:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3694:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3695:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3696:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3697:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)(4)
3698:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)(4)
3699:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)(4)
3700:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)(4)
3701:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
3702:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
3703:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
3704:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
3705:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
3706:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
ARM GAS  /tmp/cc2DBcx1.s 			page 70


3707:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3708:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3709:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(const ADC_TypeDef *ADCx, uint32_t Offsety)
3711:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3713:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3715:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3716:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3717:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3718:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
3719:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3720:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         converted data).
3721:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3722:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3723:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         are set to 0.
3724:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3725:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3726:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3727:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3728:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3729:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3730:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3731:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3732:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3733:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3734:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3735:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3736:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(const ADC_TypeDef *ADCx, uint32_t Offsety)
3737:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3738:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3739:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3740:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3741:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3742:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3743:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3744:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set for the ADC selected offset instance 1, 2, 3 or 4:
3745:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         force offset state disable or enable
3746:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without modifying offset channel or offset value.
3747:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3748:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3749:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3750:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3751:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3752:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3753:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
3754:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3755:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3756:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3757:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3758:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3759:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3760:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3761:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3762:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3763:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
ARM GAS  /tmp/cc2DBcx1.s 			page 71


3764:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3765:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3766:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3767:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3768:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3770:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3772:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
3774:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
3775:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              OffsetState);
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3777:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3778:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3779:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
3780:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         offset state disabled or enabled.
3781:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3782:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3783:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3784:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3785:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3786:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3787:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3788:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3789:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3790:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3791:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3792:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3793:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3794:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3795:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(const ADC_TypeDef *ADCx, uint32_t Offsety)
3796:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3797:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3798:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3799:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3801:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3803:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set for the ADC selected offset instance 1, 2, 3 or 4:
3804:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         choose offset sign.
3805:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3806:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3807:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3808:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
3809:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_SetOffsetSign\n
3810:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_SetOffsetSign\n
3811:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_SetOffsetSign\n
3812:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_SetOffsetSign
3813:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3814:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3815:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3816:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3817:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3818:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3819:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  OffsetSign This parameter can be one of the following values:
3820:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
ARM GAS  /tmp/cc2DBcx1.s 			page 72


3821:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3822:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3823:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3824:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSign)
3825:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3827:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
3829:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
3830:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              OffsetSign);
3831:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3832:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3833:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3834:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
3835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         offset sign if positive or negative.
3836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_GetOffsetSign\n
3837:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_GetOffsetSign\n
3838:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_GetOffsetSign\n
3839:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_GetOffsetSign
3840:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3841:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3843:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3844:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3845:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3846:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3848:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3849:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSign(const ADC_TypeDef *ADCx, uint32_t Offsety)
3851:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3852:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3853:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3854:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSETPOS);
3855:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3856:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3857:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3858:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set for the ADC selected offset instance 1, 2, 3 or 4:
3859:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         choose offset saturation mode.
3860:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3861:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3862:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3863:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
3864:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_SetOffsetSaturation\n
3865:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_SetOffsetSaturation\n
3866:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_SetOffsetSaturation\n
3867:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_SetOffsetSaturation
3868:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3870:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3872:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3873:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3874:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  OffsetSaturation This parameter can be one of the following values:
3875:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3876:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3877:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/cc2DBcx1.s 			page 73


3878:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3879:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Offse
3880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
3884:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_SATEN,
3885:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              OffsetSaturation);
3886:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3887:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3888:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3889:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
3890:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         offset saturation if enabled or disabled.
3891:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_GetOffsetSaturation\n
3892:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_GetOffsetSaturation\n
3893:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_GetOffsetSaturation\n
3894:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_GetOffsetSaturation
3895:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3896:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3897:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3898:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3899:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3900:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3901:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3902:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3903:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3904:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3905:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSaturation(const ADC_TypeDef *ADCx, uint32_t Offsety)
3906:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3907:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3908:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3909:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_SATEN);
3910:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3911:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3912:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
3913:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3914:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC sampling time common configuration impacting
3915:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         settings of sampling time channel wise.
3916:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3917:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3918:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3919:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
3920:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_SetSamplingTimeCommonConfig
3921:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3922:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SamplingTimeCommonConfig This parameter can be one of the following values:
3923:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3924:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3925:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3926:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonConfig(ADC_TypeDef *ADCx, uint32_t SamplingTimeCom
3928:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR1, ADC_SMPR1_SMPPLUS, SamplingTimeCommonConfig);
3930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3931:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3932:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3933:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC sampling time common configuration impacting
3934:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         settings of sampling time channel wise.
ARM GAS  /tmp/cc2DBcx1.s 			page 74


3935:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_GetSamplingTimeCommonConfig
3936:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3937:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3938:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3939:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3940:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3941:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonConfig(const ADC_TypeDef *ADCx)
3942:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3943:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR1, ADC_SMPR1_SMPPLUS));
3944:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3945:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
3946:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3947:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3948:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
3949:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3950:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3951:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3952:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
3953:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3954:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3956:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3957:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3958:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         external interrupt line).
3959:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3961:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3962:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         STM32 series having this setting set by HW default value).
3963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3964:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3965:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3966:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3967:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3968:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3969:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3970:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
3971:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3972:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3973:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3974:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3975:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3976:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3977:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3978:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3979:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3980:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3981:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3982:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3983:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3984:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3985:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO        (1)
3986:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4         (1)
3987:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3988:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM7_TRGO        (2)
3989:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO        (1)
3990:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2       (1)
3991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO       (1)
ARM GAS  /tmp/cc2DBcx1.s 			page 75


3992:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM1_CH1
3993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM2_CH1
3994:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3995:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE15
3996:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
3997:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H5 series, parameter specific to devices: STM32H563/H573xx.
3998:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H5 series, parameter specific to devices: STM32H503xx.
3999:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4000:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4001:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4002:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4003:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
4004:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4005:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4006:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4007:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
4008:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4009:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         external interrupt line).
4010:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
4011:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal (SW start) or external, without detail
4012:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4013:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (equivalent to
4014:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
4015:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
4016:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4017:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4018:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
4019:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
4020:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4021:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4022:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
4023:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
4024:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
4025:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
4026:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
4027:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
4028:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
4029:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
4030:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
4031:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
4032:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO        (1)
4033:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4         (1)
4034:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
4035:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM7_TRGO        (2)
4036:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO        (1)
4037:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2       (1)
4038:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO       (1)
4039:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM1_CH1
4040:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM2_CH1
4041:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
4042:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE15
4043:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
4044:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H5 series, parameter specific to devices: STM32H563/H573xx.
4045:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H5 series, parameter specific to devices: STM32H503xx.
4046:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4047:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(const ADC_TypeDef *ADCx)
4048:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
ARM GAS  /tmp/cc2DBcx1.s 			page 76


4049:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t trigger_source = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
4050:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4051:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4052:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
4053:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t shift_exten = ((trigger_source & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 
4054:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4055:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
4056:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
4057:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((trigger_source
4058:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> shift_exten) & ADC_CFGR_EXTSEL)
4059:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> shift_exten) & ADC_CFGR_EXTEN)
4060:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****          );
4061:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4062:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4063:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4064:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
4065:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or external.
4066:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
4067:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4068:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
4069:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
4070:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4071:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4072:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4073:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
4075:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
4077:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4078:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4079:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4080:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
4081:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
4082:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4083:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4084:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4085:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
4086:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
4087:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4088:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
4090:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
4091:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
4092:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4093:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4094:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4095:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4096:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
4097:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4098:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4099:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4100:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
4101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
4102:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
4103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
ARM GAS  /tmp/cc2DBcx1.s 			page 77


4106:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
4107:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
4108:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4109:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(const ADC_TypeDef *ADCx)
4110:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4111:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
4112:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4113:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4114:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4115:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC sampling mode.
4116:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function set the ADC conversion sampling mode
4117:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This mode applies to regular group only.
4118:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Set sampling mode is applied to all conversion of regular group.
4119:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4120:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4121:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4122:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
4123:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_SetSamplingMode\n
4124:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_SetSamplingMode
4125:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4126:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SamplingMode This parameter can be one of the following values:
4127:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
4128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
4129:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
4130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4132:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSamplingMode(ADC_TypeDef *ADCx, uint32_t SamplingMode)
4133:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4134:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG, SamplingMode);
4135:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4136:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4137:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4138:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get the ADC sampling mode
4139:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_GetSamplingMode\n
4140:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_GetSamplingMode
4141:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4142:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4143:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
4144:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
4145:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
4146:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4147:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSamplingMode(const ADC_TypeDef *ADCx)
4148:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4149:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG));
4150:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4153:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
4154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
4155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
4156:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
4157:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4158:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           are configurable.
4159:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This function performs configuration of:
4160:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
4161:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4162:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
ARM GAS  /tmp/cc2DBcx1.s 			page 78


4163:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Sequencer ranks are selected using
4164:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
4165:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
4166:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
4167:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4168:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           are defined by channel number.
4169:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This function performs configuration of:
4170:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
4171:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
4172:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
4173:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4174:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4175:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
4176:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             highest channel number).
4177:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Sequencer ranks are selected using
4178:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
4179:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4180:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4182:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4183:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4184:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
4185:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
4186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4187:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4188:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
4189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
4190:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
4191:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
4192:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
4193:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
4194:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
4195:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
4196:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
4197:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
4198:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
4199:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
4200:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
4201:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
4202:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
4203:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
4204:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4205:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4207:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4208:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
4209:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4210:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4211:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4212:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
4213:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
4214:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
4215:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
4216:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           are configurable.
4218:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This function retrieves:
4219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
ARM GAS  /tmp/cc2DBcx1.s 			page 79


4220:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4221:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
4222:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Sequencer ranks are selected using
4223:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
4224:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
4225:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
4226:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4227:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           are defined by channel number.
4228:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This function retrieves:
4229:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
4230:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
4231:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
4232:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4233:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
4235:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             highest channel number).
4236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Sequencer ranks are selected using
4237:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
4238:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4239:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4240:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
4241:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4242:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4243:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
4244:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
4245:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
4246:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
4247:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
4248:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
4249:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
4250:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
4251:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
4252:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
4253:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
4254:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
4255:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
4256:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
4257:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
4258:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
4259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4260:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(const ADC_TypeDef *ADCx)
4261:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4262:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
4263:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4264:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4265:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4266:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
4267:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4268:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         number of ranks.
4269:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4270:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4271:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
4272:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
4273:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4274:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4275:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4276:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
ARM GAS  /tmp/cc2DBcx1.s 			page 80


4277:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
4278:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
4279:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4280:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4281:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4282:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4283:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4284:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
4285:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4286:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4287:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4288:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
4289:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4290:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4291:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4292:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4293:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4294:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
4295:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4296:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4297:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4298:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
4299:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4300:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         number of ranks.
4301:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
4302:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
4303:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4304:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4305:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4306:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4307:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4308:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
4309:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4310:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4311:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4312:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
4313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4315:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(const ADC_TypeDef *ADCx)
4316:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4317:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
4318:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4319:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4320:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4321:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
4322:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         scan sequence rank.
4323:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function performs configuration of:
4324:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
4325:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
4326:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4327:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4328:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         affectation to a channel are configurable.
4329:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4330:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4331:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4332:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4333:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
ARM GAS  /tmp/cc2DBcx1.s 			page 81


4334:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         enabled separately.
4335:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4336:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4337:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4338:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4339:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
4340:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
4341:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
4342:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
4343:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
4344:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
4345:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
4346:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
4347:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
4348:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
4349:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
4350:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
4351:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
4352:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
4353:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
4354:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
4355:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
4356:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4357:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4358:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4359:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4360:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4361:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4362:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4364:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4365:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4366:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4367:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4368:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4369:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4370:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4371:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4372:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4373:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4374:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4375:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4376:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4377:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4378:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4379:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4380:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4381:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4382:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4383:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4384:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4385:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4386:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4387:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4388:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4389:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4390:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
ARM GAS  /tmp/cc2DBcx1.s 			page 82


4391:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4393:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4395:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4396:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4397:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
4398:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
4399:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
4400:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
4401:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
4402:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
4403:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
4404:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4405:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4406:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4407:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4408:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4409:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
4410:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4411:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1,
4413:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQRX_REGO
4414:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
4416:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
4417:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4418:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
4419:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4420:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4421:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4422:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
4423:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         scan sequence rank.
4424:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4425:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4426:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         affectation to a channel are configurable.
4427:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4428:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4429:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4430:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4431:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4432:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4433:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4434:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4435:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4436:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4437:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           as parameter for another function.
4438:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4439:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           process the returned value with the helper macro
4440:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4441:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
4442:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
4443:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
4444:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
4445:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
4446:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
4447:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
ARM GAS  /tmp/cc2DBcx1.s 			page 83


4448:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
4449:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
4450:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
4451:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
4452:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
4453:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
4454:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
4455:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
4456:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
4457:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4458:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4459:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4460:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4461:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4462:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4463:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4464:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4465:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4466:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4467:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4468:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4469:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4470:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4471:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4472:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4473:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4474:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4475:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4476:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4477:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4478:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4479:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4480:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4481:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4482:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4483:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4484:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4485:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4486:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4487:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4488:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4489:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4490:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4491:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4492:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4493:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4494:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4495:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4496:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)(4)
4497:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)(4)
4498:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)(4)
4499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)(4)
4500:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
4501:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
4502:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
4503:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
4504:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
ARM GAS  /tmp/cc2DBcx1.s 			page 84


4505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
4506:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
4507:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4509:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
4510:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1,
4512:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQR
4513:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4514:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
4515:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
4516:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4517:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                    );
4518:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4519:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4520:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4521:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
4522:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4523:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4524:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4525:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           conversions launched successively automatically.
4526:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4527:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4528:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4529:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4530:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4531:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
4532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
4533:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
4535:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4536:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4537:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4538:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4539:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
4540:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4541:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
4542:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4543:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4544:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4545:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
4546:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4547:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4548:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4549:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           conversions launched successively automatically.
4550:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
4551:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4552:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4553:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4554:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4555:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4556:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(const ADC_TypeDef *ADCx)
4557:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4558:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
4559:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4560:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4561:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
ARM GAS  /tmp/cc2DBcx1.s 			page 85


4562:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
4563:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4564:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4565:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         mode:
4566:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4567:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4568:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions) is reached.
4569:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4570:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4571:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4572:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions).
4573:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4574:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4575:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         mode non-circular:
4576:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4577:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4578:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
4579:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4580:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
4581:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4582:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4583:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4584:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4585:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4586:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
4587:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
4588:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
4589:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4590:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
4591:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4592:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4593:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4594:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4595:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4596:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
4597:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4598:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
4599:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4600:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4601:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4602:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
4603:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4604:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4605:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         mode:
4606:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4607:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4608:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions) is reached.
4609:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4610:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4611:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4612:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions).
4613:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4614:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4615:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         mode non-circular:
4616:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4617:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4618:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
ARM GAS  /tmp/cc2DBcx1.s 			page 86


4619:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4620:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
4621:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4622:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4623:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
4624:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
4625:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4626:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4627:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4628:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4629:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4630:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(const ADC_TypeDef *ADCx)
4632:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4633:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
4634:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4635:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4636:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4637:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
4638:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         data preserved or overwritten.
4639:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
4640:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         other devices without this feature have a behavior
4641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         equivalent to data overwritten.
4642:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
4643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
4644:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         overrun should be set to data overwritten.
4645:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4646:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4647:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4648:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
4649:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
4650:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
4652:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4653:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4654:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4655:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4656:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
4657:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4658:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
4659:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4660:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4661:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4662:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
4663:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         data preserved or overwritten.
4664:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
4665:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4666:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4667:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4668:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4669:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4670:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(const ADC_TypeDef *ADCx)
4671:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4672:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
4673:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4674:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4675:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
ARM GAS  /tmp/cc2DBcx1.s 			page 87


4676:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
4677:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4678:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4679:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
4680:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
4681:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4682:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4683:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4684:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
4685:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4686:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         external interrupt line).
4687:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
4688:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         also set trigger polarity to rising edge
4689:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
4690:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         STM32 series having this setting set by HW default value).
4691:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
4692:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
4693:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4694:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4695:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4696:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4697:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4698:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on going on either groups regular or injected.
4699:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
4700:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
4701:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4702:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4703:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4704:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4705:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4706:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4707:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4708:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4709:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4711:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4713:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO        (1)
4714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4715:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO        (2)
4716:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO        (1)
4717:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2       (1)
4718:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4         (1)
4719:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO       (1)
4720:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_CH1
4721:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_CH1
4722:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4723:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
4724:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H5 series, parameter specific to devices: STM32H563/H573xx.
4725:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H5 series, parameter specific to devices: STM32H503xx.
4726:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4727:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4728:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4729:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4730:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
4731:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4732:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
ARM GAS  /tmp/cc2DBcx1.s 			page 88


4733:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4734:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
4735:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4736:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         external interrupt line).
4737:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
4738:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal (SW start) or external, without detail
4739:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4740:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (equivalent to
4741:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
4742:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
4743:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4744:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4745:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
4746:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
4747:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4748:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4749:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4750:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4751:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4752:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4753:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4754:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4755:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4756:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4757:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4758:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4759:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO        (1)
4760:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4761:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO        (2)
4762:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO        (1)
4763:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2       (1)
4764:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4         (1)
4765:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO       (1)
4766:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_CH1
4767:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_CH1
4768:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
4770:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H5 series, parameter specific to devices: STM32H563/H573xx.
4771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H5 series, parameter specific to devices: STM32H503xx.
4772:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(const ADC_TypeDef *ADCx)
4774:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4775:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t trigger_source = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
4776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4777:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4778:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
4779:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t shift_jexten = ((trigger_source & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS 
4780:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4781:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
4782:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
4783:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((trigger_source
4784:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> shift_jexten) & ADC_JSQR_JEXTSEL)
4785:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> shift_jexten) & ADC_JSQR_JEXTEN)
4786:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****          );
4787:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4788:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4789:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
ARM GAS  /tmp/cc2DBcx1.s 			page 89


4790:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
4791:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****             or external
4792:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
4793:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4794:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
4795:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
4796:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4797:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4798:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4799:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
4801:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
4803:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4804:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4805:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4806:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
4807:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4808:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4809:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4810:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4811:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on going on either groups regular or injected.
4812:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
4813:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4814:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4815:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4816:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4817:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4818:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4819:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4820:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4821:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4822:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
4823:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4824:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4825:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4827:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4829:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4830:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4831:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4832:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4833:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4834:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(const ADC_TypeDef *ADCx)
4836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4837:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4838:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4839:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4840:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4841:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function performs configuration of:
4843:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4844:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4845:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4846:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
ARM GAS  /tmp/cc2DBcx1.s 			page 90


4847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4848:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4849:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4851:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on going on either groups regular or injected.
4852:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4853:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4854:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4855:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4856:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4857:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4858:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4859:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4860:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4861:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4862:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4863:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4864:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4865:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4866:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4867:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4868:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function retrieves:
4869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4870:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4872:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4873:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4874:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4875:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4876:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4877:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4878:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4879:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(const ADC_TypeDef *ADCx)
4883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4884:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4885:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4886:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4887:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4888:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4889:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4890:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         number of ranks.
4891:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4892:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4893:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4894:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4895:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4896:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4897:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4898:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4899:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4900:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4901:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4902:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4903:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
ARM GAS  /tmp/cc2DBcx1.s 			page 91


4904:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4905:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4906:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4907:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4908:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         number of ranks.
4909:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4910:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4911:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4912:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4913:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4914:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4915:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(const ADC_TypeDef *ADCx)
4916:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4917:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4918:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4919:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4920:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4921:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4922:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         sequence rank.
4923:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4924:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4925:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4926:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         enabled separately.
4928:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On STM32H5, some fast channels are available: fast analog inputs
4930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
4931:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4932:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4933:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4934:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on going on either groups regular or injected.
4935:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4936:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4937:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4938:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4939:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4940:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4941:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4942:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4943:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4944:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4945:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4946:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4947:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4948:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4949:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4950:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4951:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4952:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4953:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4954:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4956:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4957:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4958:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4959:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
ARM GAS  /tmp/cc2DBcx1.s 			page 92


4961:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4962:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4964:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4965:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4966:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4967:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4968:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
4969:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
4970:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
4971:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
4972:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
4973:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
4974:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
4975:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4976:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4977:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4978:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4979:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4980:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4981:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4982:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4983:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4984:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4985:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              << (Rank & ADC_INJ_RANK_ID_JSQR_MASK),
4986:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4987:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              << (Rank & ADC_INJ_RANK_ID_JSQR_MASK));
4988:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4989:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4990:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4992:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         sequence rank.
4993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4994:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4995:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4996:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4997:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4998:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4999:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5000:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5001:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5002:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           as parameter for another function.
5003:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5004:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           process the returned value with the helper macro
5005:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5006:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
5007:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
5008:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
5009:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
5010:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5011:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
5012:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
5013:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
5014:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
5015:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
5016:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5017:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
ARM GAS  /tmp/cc2DBcx1.s 			page 93


5018:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5019:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5020:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5021:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5022:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5023:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5024:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5025:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5026:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5027:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5028:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5029:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5030:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5031:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5032:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5033:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5034:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5035:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5036:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5037:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)(4)
5038:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)(4)
5039:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)(4)
5040:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)(4)
5041:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5042:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
5043:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
5044:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
5045:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
5046:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
5047:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
5048:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
5049:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5050:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
5051:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5052:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
5053:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5054:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                               << (Rank & ADC_INJ_RANK_ID_JSQR_MASK))
5055:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
5056:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                    );
5057:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5058:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5059:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5060:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
5061:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         independent or from ADC group regular.
5062:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
5063:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
5064:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
5065:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
5066:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
5067:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on ADC group injected.
5068:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
5069:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
5070:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         independent trigger.
5071:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
5072:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
5073:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
5074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
ARM GAS  /tmp/cc2DBcx1.s 			page 94


5075:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         from ADC group regular.
5076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
5077:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
5078:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5079:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
5080:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5081:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
5082:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
5083:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5084:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
5085:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
5086:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
5087:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
5088:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
5090:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5091:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
5092:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5093:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5094:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5095:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
5096:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         independent or from ADC group regular.
5097:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
5098:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5099:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5100:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
5101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
5102:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(const ADC_TypeDef *ADCx)
5104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
5106:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5107:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5108:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5109:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
5110:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5111:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - group injected trigger
5112:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - sequencer length
5113:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - sequencer ranks
5114:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         If contexts queue is disabled:
5115:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - only 1 sequence can be configured
5116:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           and is active perpetually.
5117:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         If contexts queue is enabled:
5118:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - up to 2 contexts can be queued
5119:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
5120:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
5121:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
5122:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
5123:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
5124:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
5125:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
5126:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
5127:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
5128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           into the queue).
5129:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
5130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
5131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
ARM GAS  /tmp/cc2DBcx1.s 			page 95


5132:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
5133:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
5134:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
5135:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
5136:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5137:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
5138:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5139:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
5140:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
5141:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
5142:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5143:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
5144:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5145:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5146:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5147:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
5148:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5149:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
5150:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
5152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5153:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
5156:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
5157:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
5158:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5159:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5160:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5161:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5162:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5163:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5164:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(const ADC_TypeDef *ADCx)
5165:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5166:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
5167:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5168:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5169:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5170:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
5171:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         contexts queue.
5172:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5173:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - group injected trigger
5174:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - sequencer length
5175:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - sequencer ranks
5176:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
5177:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
5178:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
5179:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         cannot be used):
5180:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
5181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
5182:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
5183:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
5184:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
5185:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
5186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
5187:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
5188:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         enabled separately.
ARM GAS  /tmp/cc2DBcx1.s 			page 96


5189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
5190:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On STM32H5, some fast channels are available: fast analog inputs
5191:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
5192:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5193:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
5194:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
5195:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on going on either groups regular or injected.
5196:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
5197:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
5198:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
5199:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
5200:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
5201:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
5202:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
5203:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5204:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
5205:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
5206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
5207:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
5208:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
5209:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
5210:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
5211:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
5212:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
5213:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
5214:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
5215:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO        (1)
5216:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
5217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO        (2)
5218:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO        (1)
5219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2       (1)
5220:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4         (1)
5221:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO       (1)
5222:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_CH1
5223:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_CH1
5224:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
5225:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5226:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H5 series, parameter specific to devices: STM32H563/H573xx.
5227:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H5 series, parameter specific to devices: STM32H503xx.
5228:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
5229:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
5230:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
5231:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
5232:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5233:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
5234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
5235:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
5236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
5237:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
5238:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
5239:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
5240:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
5241:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5242:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5243:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5244:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5245:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
ARM GAS  /tmp/cc2DBcx1.s 			page 97


5246:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5247:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5248:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5249:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5250:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5251:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5252:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5253:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5254:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5255:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5256:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5257:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5258:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5260:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5261:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5262:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5263:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
5264:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
5265:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5266:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
5267:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
5268:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
5269:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
5270:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
5271:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5272:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5273:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5274:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5275:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5276:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5277:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5278:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5279:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5280:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5281:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5282:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5283:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5284:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5285:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5286:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5287:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5288:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5289:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5290:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5291:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5292:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5293:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
5294:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
5295:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5296:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
5297:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
5298:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
5299:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
5300:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
5301:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5302:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
ARM GAS  /tmp/cc2DBcx1.s 			page 98


5303:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5304:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5305:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5306:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5307:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5308:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5309:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5310:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5311:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5312:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5315:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5316:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5317:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5318:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5319:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5320:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5321:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5322:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5323:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
5324:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
5325:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5326:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
5327:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
5328:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
5329:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
5330:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
5331:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5332:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5333:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5334:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5335:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5336:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5337:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5338:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5339:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5340:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5341:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5342:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5343:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5344:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5345:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5346:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5347:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5348:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5349:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5350:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5351:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5352:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5353:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
5354:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
5355:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5356:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
5357:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
5358:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
5359:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
ARM GAS  /tmp/cc2DBcx1.s 			page 99


5360:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
5361:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5362:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
5363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    uint32_t TriggerSource,
5364:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
5365:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
5366:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
5367:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
5368:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
5369:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
5370:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5371:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
5372:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
5373:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
5374:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
5375:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
5376:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
5377:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
5378:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
5379:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
5380:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
5381:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
5382:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
5383:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
5384:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
5385:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_JSQR_JL,
5386:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
5387:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
5388:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5389:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_4 & ADC_INJ_RANK_ID_JSQR_MASK)) |
5390:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5391:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_3 & ADC_INJ_RANK_ID_JSQR_MASK)) |
5392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5393:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_2 & ADC_INJ_RANK_ID_JSQR_MASK)) |
5394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5395:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_1 & ADC_INJ_RANK_ID_JSQR_MASK)) |
5396:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              SequencerNbRanks
5397:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****             );
5398:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5399:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5400:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5401:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
5402:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5403:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5404:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
5405:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
5406:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5407:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5408:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5409:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5410:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5411:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5413:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5414:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         converted:
5415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
5416:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
ARM GAS  /tmp/cc2DBcx1.s 			page 100


5417:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         setting).
5418:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5419:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TS_temp, ...).
5420:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5421:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5422:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5423:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5424:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5425:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5426:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5427:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5428:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is required.
5429:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet.
5430:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5431:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
5432:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5433:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
5434:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
5435:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5436:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
5437:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5438:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
5439:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
5440:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5441:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5442:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5443:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5444:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5445:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5446:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
5447:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
5448:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5449:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5450:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
5451:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5452:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5453:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5454:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5455:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5456:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5457:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5458:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5459:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5460:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5461:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5462:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5463:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5464:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5465:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5466:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5467:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5468:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5469:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5470:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5471:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5472:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5473:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
ARM GAS  /tmp/cc2DBcx1.s 			page 101


5474:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5475:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5476:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5477:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
5478:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
5479:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5480:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
5481:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
5482:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
5483:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
5484:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
5485:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
5486:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5487:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5488:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5489:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5490:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5491:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5492:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5493:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5494:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
5495:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
5496:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
5497:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
5498:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
5500:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5501:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
5502:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
5503:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5504:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1,
5506:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
5507:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
5509:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5510:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5512:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5513:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5514:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5515:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5516:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5517:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5518:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5519:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5520:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5521:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5522:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5523:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5524:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5525:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5526:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5527:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5528:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
5529:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
5530:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
ARM GAS  /tmp/cc2DBcx1.s 			page 102


5531:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5533:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
5535:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5536:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5537:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5538:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5539:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
5540:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5541:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
5542:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5543:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5544:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5545:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5546:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5547:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5548:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5549:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5550:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5551:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5552:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5553:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5554:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5555:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5556:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5557:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5558:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5559:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5560:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5561:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5562:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5563:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5564:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5565:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5566:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5567:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
5568:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
5569:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5570:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
5571:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
5572:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
5573:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
5574:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5575:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
5576:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5577:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5578:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5579:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5580:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5581:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5582:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5583:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5584:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
5585:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
5586:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
5587:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc2DBcx1.s 			page 103


5588:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(const ADC_TypeDef *ADCx, uint32_t Channel)
5589:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5590:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
5591:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                  >> ADC_SMPRX_REGOFFSET_POS));
5592:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5593:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5594:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                              ADC_SMPR1_SMP0
5595:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                              << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BI
5596:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
5597:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                    );
5598:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5599:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5600:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5601:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
5602:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC channel.
5603:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
5604:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on ADC group regular or injected.
5605:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
5606:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
5607:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
5608:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
5609:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5610:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         available in differential mode.
5611:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5612:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         not available in differential mode.
5613:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5614:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5615:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
5616:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
5617:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
5618:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5619:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
5620:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be ADC disabled.
5621:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   One or several values can be selected.
5622:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5623:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
5624:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5625:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5626:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5627:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5628:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5629:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5630:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5632:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5633:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5634:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5635:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5636:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5637:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5638:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5639:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5640:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
5642:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
5643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
5644:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/cc2DBcx1.s 			page 104


5645:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5646:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
5647:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5648:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5649:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5650:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
5651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
5652:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5653:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)
5654:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK)));
5655:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5656:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5657:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5658:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
5659:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC channel.
5660:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5661:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5662:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
5663:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
5664:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
5665:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
5666:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5667:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         available in differential mode.
5668:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5669:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         not available in differential mode.
5670:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5671:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5672:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
5673:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
5674:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5675:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
5676:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5677:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
5678:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5679:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5680:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5681:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5682:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5683:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5684:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5685:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5686:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5687:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5688:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5689:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5690:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5691:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5692:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5693:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
5694:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5695:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(const ADC_TypeDef *ADCx, uint32_t Channel)
5696:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5697:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5698:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5699:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5700:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5701:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cc2DBcx1.s 			page 105


5702:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5703:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5704:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
5705:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
5706:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5707:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5708:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5709:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
5710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
5711:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
5712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
5713:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is enabled.
5714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
5715:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
5716:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
5717:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5718:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         instance:
5719:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5720:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5721:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5722:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5723:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             ADC resolution configured).
5724:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5725:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5726:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5727:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5728:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             be selected. For example:
5729:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5730:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5731:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             groups regular and injected).
5732:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5733:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5734:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5735:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5736:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5737:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             the 2 LSB are ignored.
5738:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5739:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
5740:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5741:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
5742:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
5743:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
5744:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
5745:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
5746:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
5747:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
5748:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5749:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5750:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5751:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5752:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5753:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
5754:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5755:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5756:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5757:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5758:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
ARM GAS  /tmp/cc2DBcx1.s 			page 106


5759:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5760:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5761:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5762:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5763:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5764:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5765:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5766:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5767:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5768:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5770:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5772:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5774:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5775:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5777:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5778:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5779:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5780:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5781:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5782:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5783:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5784:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5785:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5786:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5787:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5788:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5789:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5790:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5791:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5792:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5793:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5794:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5795:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5796:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5797:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5798:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5799:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5801:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5803:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5804:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5805:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5806:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5807:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5808:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5809:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5810:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5811:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5812:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5813:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5814:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5815:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
ARM GAS  /tmp/cc2DBcx1.s 			page 107


5816:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
5817:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
5818:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
5819:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
5820:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
5821:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(1)
5822:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
5823:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
5824:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(2)
5825:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(2)
5826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (2)
5827:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDCORE_REG          (0)(2)
5828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDCORE_INJ          (0)(2)
5829:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDCORE_REG_INJ         (2)
5830:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5831:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (0) On STM32H5, parameter available only on analog watchdog number: AWD1.\n
5832:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.
5833:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.
5834:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
5835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5837:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5838:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5839:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5840:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5841:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR,
5843:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
5844:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK)
5845:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                 * ADC_AWD_CR12_REGOFFSETGAP_VAL));
5846:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
5848:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5849:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5851:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5852:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5853:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5854:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5855:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5856:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5857:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5858:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5859:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5860:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5861:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           as parameter for another function.
5862:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5863:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           process the returned value with the helper macro
5864:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5865:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5866:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           one channel.
5867:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5868:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         instance:
5869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5870:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5872:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
ARM GAS  /tmp/cc2DBcx1.s 			page 108


5873:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             ADC resolution configured).
5874:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5875:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5876:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5877:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5878:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             be selected. For example:
5879:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             groups regular and injected).
5882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5884:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5885:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5886:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5887:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             the 2 LSB are ignored.
5888:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5889:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
5890:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5891:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
5892:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5893:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5894:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5895:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5896:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5897:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5898:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5899:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5900:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5901:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5902:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5903:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5904:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5905:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5906:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5907:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5908:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             by bitfield.
5909:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5910:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5911:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5912:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5913:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5914:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5915:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5916:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5917:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5918:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5919:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5920:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5921:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5922:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5923:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5924:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5925:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5926:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5928:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
ARM GAS  /tmp/cc2DBcx1.s 			page 109


5930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5931:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5932:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5933:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5934:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5935:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5936:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5937:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5938:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5939:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5940:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5941:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5942:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5943:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5944:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5945:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5946:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5947:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5948:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5949:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5950:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5951:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5952:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5953:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5954:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5956:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5957:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5958:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5959:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5961:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5962:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5964:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5965:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5966:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5967:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5968:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5969:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5970:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5971:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
5972:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
5973:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
5974:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5975:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (0) On STM32H5, parameter available only on analog watchdog number: AWD1.
5976:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5977:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(const ADC_TypeDef *ADCx, uint32_t AWDy)
5978:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5979:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR,
5980:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_
5981:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK)
5982:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                       * ADC_AWD_CR12_REGOFFSETGAP_VAL));
5983:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5984:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t analog_wd_monit_channels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
5985:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5986:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* If "analog_wd_monit_channels" == 0, then the selected AWD is disabled       */
ARM GAS  /tmp/cc2DBcx1.s 			page 110


5987:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5988:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5989:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* or a single channel.                                                     */
5990:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   if (analog_wd_monit_channels != 0UL)
5991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   {
5992:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     {
5994:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_CFGR_AWD1SGL) == 0UL)
5995:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       {
5996:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5997:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         analog_wd_monit_channels = ((analog_wd_monit_channels
5998:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                      | (ADC_AWD_CR23_CHANNEL_MASK)
5999:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     )
6000:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     & (~(ADC_CFGR_AWD1CH))
6001:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                    );
6002:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       }
6003:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       else
6004:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       {
6005:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         /* AWD monitoring a single channel */
6006:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
6007:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     | (ADC_AWD2CR_AWD2CH_0 << (analog_wd_monit_channels >> ADC_CFGR
6008:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                    );
6009:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       }
6010:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     }
6011:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     else
6012:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     {
6013:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
6014:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       {
6015:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         /* AWD monitoring a group of channels */
6016:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         analog_wd_monit_channels = (ADC_AWD_CR23_CHANNEL_MASK
6017:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
6018:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                    );
6019:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       }
6020:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       else
6021:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       {
6022:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         /* AWD monitoring a single channel */
6023:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         /* AWD monitoring a group of channels */
6024:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
6025:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
6026:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(analog_wd_monit_channels) << 
6027:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                    );
6028:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       }
6029:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     }
6030:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   }
6031:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6032:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return analog_wd_monit_channels;
6033:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6034:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6035:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6036:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
6037:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         high and low.
6038:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
6039:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
6040:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6041:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6042:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6043:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
ARM GAS  /tmp/cc2DBcx1.s 			page 111


6044:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         instance:
6045:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6046:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6047:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6048:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6049:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             ADC resolution configured).
6050:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6051:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6052:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6053:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6054:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             be selected. For example:
6055:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6056:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6057:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             groups regular and injected).
6058:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6059:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6060:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6061:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6062:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6063:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             the 2 LSB are ignored.
6064:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
6065:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6066:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6067:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
6068:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Examples:
6069:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6070:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
6071:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
6072:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6073:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
6074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
6075:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
6077:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
6078:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
6079:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
6080:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
6081:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
6082:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
6083:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
6084:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6085:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6086:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6087:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6088:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
6090:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
6091:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6092:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6093:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
6094:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
6095:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6096:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
6097:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
6098:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* "AWDy".                                                                  */
6099:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
6100:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
ARM GAS  /tmp/cc2DBcx1.s 			page 112


6101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6102:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
6103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
6105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
6106:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
6107:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6108:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6109:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6110:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
6111:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         high or low.
6112:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
6113:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
6114:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6115:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6116:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6117:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6118:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         instance:
6119:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6120:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6121:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6122:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6123:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             ADC resolution configured).
6124:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6125:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6126:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6127:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             be selected. For example:
6129:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             groups regular and injected).
6132:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6133:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6134:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6135:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6136:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6137:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             the 2 LSB are ignored.
6138:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
6139:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6140:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6141:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
6142:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Examples:
6143:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6144:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
6145:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
6146:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6147:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
6148:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
6149:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6150:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
6151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
6152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is not conditioned to
6153:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC can be disabled, enabled with or without conversion on going
6155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either ADC groups regular or injected.
6156:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
6157:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
ARM GAS  /tmp/cc2DBcx1.s 			page 113


6158:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
6159:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
6160:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
6161:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
6162:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6163:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6164:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6165:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6166:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6167:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6168:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6169:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6170:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
6171:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6172:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6173:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
6174:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
6175:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6176:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
6177:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
6178:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
6179:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
6180:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6182:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
6183:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6184:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
6185:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              AWDThresholdsHighLow,
6186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
6187:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6188:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6190:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
6191:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
6192:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         concatenated.
6193:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
6194:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
6195:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         using helper macro:
6196:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
6197:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6198:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6199:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
6200:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
6201:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
6202:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
6203:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
6204:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
6205:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
6206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6207:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6208:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6209:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6210:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6211:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6212:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6213:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6214:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
ARM GAS  /tmp/cc2DBcx1.s 			page 114


6215:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6216:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(const ADC_TypeDef *ADCx,
6218:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                       uint32_t AWDy, uint32_t AWDThresholdsHighLow)
6219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6220:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6221:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_
6222:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6223:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
6224:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
6225:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
6226:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_TR1_LT1)));
6227:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6228:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6229:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6230:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC analog watchdog filtering configuration
6231:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6232:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6233:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
6235:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, this feature is only available on first
6236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         analog watchdog (AWD1)
6237:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_SetAWDFilteringConfiguration
6238:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6239:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6240:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6241:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  FilteringConfig This parameter can be one of the following values:
6242:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6243:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6244:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6245:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6246:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6247:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6248:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6249:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6250:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6251:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6252:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t
6253:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6254:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6255:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (void)(AWDy);
6256:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->TR1, ADC_TR1_AWDFILT, FilteringConfig);
6257:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6258:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6260:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC analog watchdog filtering configuration
6261:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, this feature is only available on first
6262:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         analog watchdog (AWD1)
6263:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_GetAWDFilteringConfiguration
6264:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6265:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6266:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6267:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be:
6268:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6269:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6270:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6271:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
ARM GAS  /tmp/cc2DBcx1.s 			page 115


6272:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6273:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6274:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6275:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6276:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6277:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAWDFilteringConfiguration(const ADC_TypeDef *ADCx, uint32_t AWDy
6278:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6279:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6280:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (void)(AWDy);
6281:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->TR1, ADC_TR1_AWDFILT));
6282:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6283:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6284:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6285:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
6286:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6287:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6288:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
6289:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
6290:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6291:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6292:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6293:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
6294:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 series).
6295:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6296:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6297:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6298:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6299:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6300:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (oversampler buffer reset).
6301:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6302:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6303:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6304:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
6305:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
6306:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
6307:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
6308:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6309:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
6310:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6311:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6312:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6315:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6316:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6317:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
6318:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6319:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
6320:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6321:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6322:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6323:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
6324:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 series).
6325:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6326:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6327:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6328:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
ARM GAS  /tmp/cc2DBcx1.s 			page 116


6329:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6330:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (oversampler buffer reset).
6331:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
6332:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
6333:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
6334:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6335:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6336:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6337:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6338:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6339:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6340:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6341:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6342:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(const ADC_TypeDef *ADCx)
6343:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6344:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
6345:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6346:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6347:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6348:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
6349:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on the selected ADC group.
6350:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6351:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6352:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           are done from 1 trigger)
6353:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6354:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           needs a trigger)
6355:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6356:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6357:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6358:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
6359:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
6360:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
6361:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
6362:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
6363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6364:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
6365:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6366:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6367:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6368:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6369:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
6370:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6371:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
6372:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6373:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6374:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6375:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
6376:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on the selected ADC group.
6377:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6378:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6379:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           are done from 1 trigger)
6380:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6381:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           needs a trigger)
6382:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
6383:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6384:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6385:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
ARM GAS  /tmp/cc2DBcx1.s 			page 117


6386:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6387:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6388:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(const ADC_TypeDef *ADCx)
6389:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6390:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
6391:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6393:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC oversampling
6395:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
6396:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
6397:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ratio
6398:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - shift
6399:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6400:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6401:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6402:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
6403:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
6404:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
6405:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6406:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
6407:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6408:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6409:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6410:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6411:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6413:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6414:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
6416:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6417:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6418:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6419:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6420:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6421:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6422:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6423:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6424:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6425:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6426:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6427:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
6428:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6429:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
6430:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6431:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6432:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6433:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
6434:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6435:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
6436:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6437:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
6438:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6439:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6440:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6441:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6442:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
ARM GAS  /tmp/cc2DBcx1.s 			page 118


6443:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6444:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6445:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6446:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6447:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(const ADC_TypeDef *ADCx)
6448:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6449:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
6450:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6451:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6452:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6453:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
6454:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6455:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
6456:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6457:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
6458:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6459:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6460:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6461:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6462:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6463:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6464:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6465:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6466:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6467:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6468:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(const ADC_TypeDef *ADCx)
6469:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6470:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
6471:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6472:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6473:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6474:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
6475:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6476:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6477:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
6478:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
6479:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6480:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6481:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6482:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6483:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
6484:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6485:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6486:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         either master or slave depending on hardware.
6487:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to reference manual.
6488:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6489:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6490:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6491:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6492:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC instance or by using helper macro
6493:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6494:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
6495:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6496:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6497:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
6498:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
ARM GAS  /tmp/cc2DBcx1.s 			page 119


6500:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6501:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6502:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6503:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6504:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6506:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6507:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
6509:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6510:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
6511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6512:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6513:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6514:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
6515:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6516:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6517:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         either master or slave depending on hardware.
6518:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to reference manual.
6519:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
6520:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6521:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6522:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6523:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6524:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6525:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6526:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6527:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6528:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6529:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6530:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6531:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(const ADC_Common_TypeDef *ADCxy_COMMON)
6533:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
6535:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6536:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6537:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6538:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
6539:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or transfer by DMA.
6540:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6541:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6542:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         DMA transfer settings.
6543:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6544:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6545:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6546:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6547:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6548:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions) is reached.
6549:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6550:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6551:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6552:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions).
6553:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6554:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6555:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         mode non-circular:
6556:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
ARM GAS  /tmp/cc2DBcx1.s 			page 120


6557:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6558:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6559:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6560:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6561:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6562:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6563:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6564:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6565:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6566:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6567:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6568:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6569:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
6570:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
6571:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_SetMultiDMATransfer\n
6572:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_SetMultiDMATransfer
6573:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6574:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6575:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
6576:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6577:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
6578:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
6579:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
6580:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
6581:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6582:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6583:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
6584:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6585:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG, MultiDMATransfer);
6586:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6587:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6588:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6589:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
6590:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or transfer by DMA.
6591:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6592:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6593:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         DMA transfer settings.
6594:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6595:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6596:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6597:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6598:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6599:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions) is reached.
6600:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6601:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6602:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6603:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions).
6604:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6605:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6606:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         mode non-circular:
6607:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6608:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6609:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6610:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6611:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6612:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6613:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
ARM GAS  /tmp/cc2DBcx1.s 			page 121


6614:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6615:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6616:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6617:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6618:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_GetMultiDMATransfer\n
6619:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_GetMultiDMATransfer
6620:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6621:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6622:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6623:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6624:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
6625:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
6626:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
6627:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
6628:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6629:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(const ADC_Common_TypeDef *ADCxy_COMMON)
6630:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG));
6632:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6633:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6634:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6635:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
6636:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
6637:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
6638:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
6639:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
6640:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
6641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6642:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6644:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6645:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
6646:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6647:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
6648:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6649:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6650:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
6651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
6652:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
6653:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
6654:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
6655:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
6656:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
6657:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
6658:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
6659:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
6660:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
6661:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
6662:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
6663:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
6664:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
6665:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
6666:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
6667:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6668:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6669:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
6670:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
ARM GAS  /tmp/cc2DBcx1.s 			page 122


6671:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
6672:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6673:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6674:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6675:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
6676:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
6677:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6678:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6679:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6680:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
6681:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
6682:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
6683:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
6684:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
6685:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
6686:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
6687:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
6688:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
6689:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
6690:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
6691:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
6692:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
6693:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
6694:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
6695:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
6696:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6697:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(const ADC_Common_TypeDef *ADCxy_COMMON)
6698:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6699:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
6700:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6701:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
6702:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6703:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6704:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
6705:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6706:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
6707:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
6708:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6709:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6711:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
6712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6713:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6715:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6716:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6717:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6718:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be ADC disabled.
6719:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
6720:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6721:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6722:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6723:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
6724:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6725:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6726:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6727:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
ARM GAS  /tmp/cc2DBcx1.s 			page 123


6728:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6729:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6730:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_DEEPPWD);
6731:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6732:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6733:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6734:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
6735:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6736:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6737:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6738:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6739:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6740:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6741:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be ADC disabled.
6742:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
6743:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6744:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6745:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6746:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
6747:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6748:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6749:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6750:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6751:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
6752:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6753:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6754:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6755:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
6756:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
6757:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6758:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
6759:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6760:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(const ADC_TypeDef *ADCx)
6761:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6762:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
6763:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6764:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6765:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6766:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
6767:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
6768:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
6769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
6770:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
6771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
6772:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6774:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be ADC disabled.
6775:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
6776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6777:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6778:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6779:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
6780:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6781:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6782:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6783:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6784:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
ARM GAS  /tmp/cc2DBcx1.s 			page 124


6785:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6786:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_ADVREGEN);
6787:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6788:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6789:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6790:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
6791:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6792:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6793:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be ADC disabled.
6794:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
6795:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6796:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6797:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6798:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
6799:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
6801:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6803:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6804:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
6805:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
6806:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6807:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
6808:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6809:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(const ADC_TypeDef *ADCx)
6810:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6811:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
6812:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6813:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6814:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6815:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
6816:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
6817:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
6818:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversion start.
6819:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
6820:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6821:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6822:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6823:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6824:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6825:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6827:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6829:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6830:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6831:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6832:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6833:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6834:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6837:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_ADEN);
6838:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6839:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6840:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6841:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
ARM GAS  /tmp/cc2DBcx1.s 			page 125


6842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6843:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6844:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6845:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
6846:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6848:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6849:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6851:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6852:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6853:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6854:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6855:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6856:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6857:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_ADDIS);
6858:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6859:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6860:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6861:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6862:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6863:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6864:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6865:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6866:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6867:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6868:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(const ADC_TypeDef *ADCx)
6870:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
6872:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6873:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6874:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6875:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6876:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6877:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6878:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6879:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(const ADC_TypeDef *ADCx)
6881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6884:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6885:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6886:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6887:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6888:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6889:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6890:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6891:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with differential mode available:
6892:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Calibration of offset is specific to each of
6893:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         single-ended and differential modes
6894:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (calibration run must be performed for each of these
6895:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6896:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         requires their calibration).
6897:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6898:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/cc2DBcx1.s 			page 126


6899:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be ADC disabled.
6900:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6901:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6902:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6903:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6904:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6905:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6906:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6907:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6908:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
  82              		.loc 2 6908 22 view .LVU17
  83              	.LBB289:
6909:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6910:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6911:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6912:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6913:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
  84              		.loc 2 6913 3 view .LVU18
  85 0032 9368     		ldr	r3, [r2, #8]
  86 0034 23F04043 		bic	r3, r3, #-1073741824
  87 0038 23F03F03 		bic	r3, r3, #63
  88 003c 05F08045 		and	r5, r5, #1073741824
  89              	.LVL3:
  90              		.loc 2 6913 3 is_stmt 0 view .LVU19
  91 0040 2B43     		orrs	r3, r3, r5
  92 0042 43F00043 		orr	r3, r3, #-2147483648
  93 0046 9360     		str	r3, [r2, #8]
  94              	.LVL4:
  95              	.L4:
  96              		.loc 2 6913 3 view .LVU20
  97              	.LBE289:
  98              	.LBE288:
 148:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 149:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Wait for calibration completion */
 150:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     while (LL_ADC_IsCalibrationOnGoing(hadc->Instance) != 0UL)
  99              		.loc 1 150 11 is_stmt 1 view .LVU21
 100              		.loc 1 150 44 is_stmt 0 view .LVU22
 101 0048 2368     		ldr	r3, [r4]
 102              	.LVL5:
 103              	.LBB290:
 104              	.LBI290:
6914:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6915:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
6916:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6917:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6918:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6919:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6920:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6921:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6922:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6923:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6924:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(const ADC_TypeDef *ADCx)
 105              		.loc 2 6924 26 is_stmt 1 view .LVU23
 106              	.LBB291:
6925:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6926:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
 107              		.loc 2 6926 3 view .LVU24
ARM GAS  /tmp/cc2DBcx1.s 			page 127


 108              		.loc 2 6926 12 is_stmt 0 view .LVU25
 109 004a 9B68     		ldr	r3, [r3, #8]
 110              	.LVL6:
 111              		.loc 2 6926 70 view .LVU26
 112 004c 002B     		cmp	r3, #0
 113 004e 06DB     		blt	.L10
 114              	.LVL7:
 115              		.loc 2 6926 70 view .LVU27
 116              	.LBE291:
 117              	.LBE290:
 151:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 152:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       wait_loop_index++;
 153:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 155:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 156:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 157:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 158:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
 159:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Process unlocked */
 161:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 162:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 163:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         return HAL_ERROR;
 164:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 165:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 166:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 167:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Set ADC state */
 168:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 118              		.loc 1 168 5 is_stmt 1 view .LVU28
 119 0050 A36D     		ldr	r3, [r4, #88]
 120 0052 23F00303 		bic	r3, r3, #3
 121 0056 43F00103 		orr	r3, r3, #1
 122 005a A365     		str	r3, [r4, #88]
 123 005c 15E0     		b	.L7
 124              	.LVL8:
 125              	.L10:
 152:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 126              		.loc 1 152 7 view .LVU29
 152:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 127              		.loc 1 152 22 is_stmt 0 view .LVU30
 128 005e 019B     		ldr	r3, [sp, #4]
 129 0060 0133     		adds	r3, r3, #1
 130 0062 0193     		str	r3, [sp, #4]
 153:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 131              		.loc 1 153 7 is_stmt 1 view .LVU31
 153:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 132              		.loc 1 153 27 is_stmt 0 view .LVU32
 133 0064 019A     		ldr	r2, [sp, #4]
 153:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 134              		.loc 1 153 10 view .LVU33
 135 0066 0C4B     		ldr	r3, .L11
 136 0068 9A42     		cmp	r2, r3
 137 006a EDD3     		bcc	.L4
 156:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 138              		.loc 1 156 9 is_stmt 1 view .LVU34
 139 006c A36D     		ldr	r3, [r4, #88]
 140 006e 23F01203 		bic	r3, r3, #18
ARM GAS  /tmp/cc2DBcx1.s 			page 128


 141 0072 43F01003 		orr	r3, r3, #16
 142 0076 A365     		str	r3, [r4, #88]
 161:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 143              		.loc 1 161 9 view .LVU35
 161:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 144              		.loc 1 161 9 view .LVU36
 145 0078 0023     		movs	r3, #0
 146 007a 84F85430 		strb	r3, [r4, #84]
 161:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 147              		.loc 1 161 9 view .LVU37
 163:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 148              		.loc 1 163 9 view .LVU38
 163:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 149              		.loc 1 163 16 is_stmt 0 view .LVU39
 150 007e 0120     		movs	r0, #1
 151              	.LVL9:
 163:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 152              		.loc 1 163 16 view .LVU40
 153 0080 06E0     		b	.L2
 154              	.LVL10:
 155              	.L3:
 169:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 170:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 171:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 172:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   else
 173:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 174:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 156              		.loc 1 174 5 is_stmt 1 view .LVU41
 157 0082 A36D     		ldr	r3, [r4, #88]
 158 0084 43F01003 		orr	r3, r3, #16
 159 0088 A365     		str	r3, [r4, #88]
 160              	.LVL11:
 161              	.L7:
 175:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 176:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Note: No need to update variable "tmp_hal_status" here: already set    */
 177:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /*       to state "HAL_ERROR" by function disabling the ADC.              */
 178:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 179:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process unlocked */
 181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 162              		.loc 1 181 3 view .LVU42
 163              		.loc 1 181 3 view .LVU43
 164 008a 0023     		movs	r3, #0
 165 008c 84F85430 		strb	r3, [r4, #84]
 166              		.loc 1 181 3 view .LVU44
 182:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 183:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Return function status */
 184:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return tmp_hal_status;
 167              		.loc 1 184 3 view .LVU45
 168              	.LVL12:
 169              	.L2:
 185:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 170              		.loc 1 185 1 is_stmt 0 view .LVU46
 171 0090 03B0     		add	sp, sp, #12
 172              	.LCFI2:
 173              		.cfi_remember_state
 174              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cc2DBcx1.s 			page 129


 175              		@ sp needed
 176 0092 30BD     		pop	{r4, r5, pc}
 177              	.LVL13:
 178              	.L8:
 179              	.LCFI3:
 180              		.cfi_restore_state
 131:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 181              		.loc 1 131 3 view .LVU47
 182 0094 0220     		movs	r0, #2
 183              	.LVL14:
 131:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 184              		.loc 1 131 3 view .LVU48
 185 0096 FBE7     		b	.L2
 186              	.L12:
 187              		.align	2
 188              	.L11:
 189 0098 00F8C325 		.word	633600000
 190              		.cfi_endproc
 191              	.LFE361:
 193              		.section	.text.HAL_ADCEx_Calibration_GetValue,"ax",%progbits
 194              		.align	1
 195              		.global	HAL_ADCEx_Calibration_GetValue
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 199              		.fpu fpv4-sp-d16
 201              	HAL_ADCEx_Calibration_GetValue:
 202              	.LVL15:
 203              	.LFB362:
 186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 187:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
 188:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Get the calibration factor.
 189:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param SingleDiff This parameter can be only:
 191:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 192:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 193:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval Calibration value.
 194:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
 195:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_Calibration_GetValue(const ADC_HandleTypeDef *hadc, uint32_t SingleDiff)
 196:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 204              		.loc 1 196 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 197:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
 198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 209              		.loc 1 198 3 view .LVU50
 199:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 210              		.loc 1 199 3 view .LVU51
 200:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 201:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Return the selected ADC calibration value */
 202:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return LL_ADC_GetCalibrationFactor(hadc->Instance, SingleDiff);
 211              		.loc 1 202 3 view .LVU52
 212              		.loc 1 202 42 is_stmt 0 view .LVU53
 213 0000 0368     		ldr	r3, [r0]
 214              	.LVL16:
ARM GAS  /tmp/cc2DBcx1.s 			page 130


 215              	.LBB292:
 216              	.LBI292:
3386:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 217              		.loc 2 3386 26 is_stmt 1 view .LVU54
 218              	.LBB293:
3392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK))
 219              		.loc 2 3392 3 view .LVU55
3392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK))
 220              		.loc 2 3392 21 is_stmt 0 view .LVU56
 221 0002 D3F8B400 		ldr	r0, [r3, #180]
 222              	.LVL17:
3392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK))
 223              		.loc 2 3392 21 view .LVU57
 224 0006 0840     		ands	r0, r0, r1
 225 0008 00F07F10 		and	r0, r0, #8323199
3394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                         ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4));
 226              		.loc 2 3394 74 view .LVU58
 227 000c 090B     		lsrs	r1, r1, #12
 228              	.LVL18:
3394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                         ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4));
 229              		.loc 2 3394 74 view .LVU59
 230 000e 01F01001 		and	r1, r1, #16
 231              	.LVL19:
3394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                         ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4));
 232              		.loc 2 3394 74 view .LVU60
 233              	.LBE293:
 234              	.LBE292:
 203:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 235              		.loc 1 203 1 view .LVU61
 236 0012 C840     		lsrs	r0, r0, r1
 237 0014 7047     		bx	lr
 238              		.cfi_endproc
 239              	.LFE362:
 241              		.section	.text.HAL_ADCEx_Calibration_SetValue,"ax",%progbits
 242              		.align	1
 243              		.global	HAL_ADCEx_Calibration_SetValue
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv4-sp-d16
 249              	HAL_ADCEx_Calibration_SetValue:
 250              	.LVL20:
 251              	.LFB363:
 204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 205:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
 206:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Set the calibration factor to overwrite automatic conversion result.
 207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         ADC must be enabled and no conversion is ongoing.
 208:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle
 209:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param SingleDiff This parameter can be only:
 210:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 212:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param CalibrationFactor Calibration factor (coded on 7 bits maximum)
 213:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL state
 214:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
 215:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_SetValue(ADC_HandleTypeDef *hadc, uint32_t SingleDiff,
 216:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  uint32_t CalibrationFactor)
 217:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
ARM GAS  /tmp/cc2DBcx1.s 			page 131


 252              		.loc 1 217 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 257              		.loc 1 217 1 is_stmt 0 view .LVU63
 258 0000 0346     		mov	r3, r0
 218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 259              		.loc 1 218 3 is_stmt 1 view .LVU64
 260              	.LVL21:
 219:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 261              		.loc 1 219 3 view .LVU65
 220:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 262              		.loc 1 220 3 view .LVU66
 221:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 222:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
 223:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 263              		.loc 1 223 3 view .LVU67
 224:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 264              		.loc 1 224 3 view .LVU68
 225:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_CALFACT(CalibrationFactor));
 265              		.loc 1 225 3 view .LVU69
 226:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 227:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process locked */
 228:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 266              		.loc 1 228 3 view .LVU70
 267              		.loc 1 228 3 view .LVU71
 268 0002 90F85400 		ldrb	r0, [r0, #84]	@ zero_extendqisi2
 269              	.LVL22:
 270              		.loc 1 228 3 is_stmt 0 view .LVU72
 271 0006 0128     		cmp	r0, #1
 272 0008 35D0     		beq	.L20
 217:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 273              		.loc 1 217 1 discriminator 2 view .LVU73
 274 000a 70B4     		push	{r4, r5, r6}
 275              	.LCFI4:
 276              		.cfi_def_cfa_offset 12
 277              		.cfi_offset 4, -12
 278              		.cfi_offset 5, -8
 279              		.cfi_offset 6, -4
 280              		.loc 1 228 3 is_stmt 1 discriminator 2 view .LVU74
 281 000c 0120     		movs	r0, #1
 282 000e 83F85400 		strb	r0, [r3, #84]
 283              		.loc 1 228 3 discriminator 2 view .LVU75
 229:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 230:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Verification of hardware constraints before modifying the calibration    */
 231:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* factors register: ADC must be enabled, no conversion on going.           */
 232:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 284              		.loc 1 232 3 discriminator 2 view .LVU76
 285              		.loc 1 232 79 is_stmt 0 discriminator 2 view .LVU77
 286 0012 1D68     		ldr	r5, [r3]
 287              	.LVL23:
 288              	.LBB302:
 289              	.LBI302:
6927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6928:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
ARM GAS  /tmp/cc2DBcx1.s 			page 132


6930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
6931:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6932:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6933:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6934:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
6935:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6936:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6937:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6938:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6939:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6940:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6941:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6942:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           starts immediately.
6943:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6944:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6945:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           following the ADC start conversion command.
6946:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6947:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6948:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6949:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6950:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without ADC disable command on going.
6951:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6952:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6953:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6954:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6956:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6957:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6958:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6959:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6961:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6962:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_ADSTART);
6963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6964:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6965:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6966:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6967:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6968:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6969:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6970:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without ADC disable command on going.
6971:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6972:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6973:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6974:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6975:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6976:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6977:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6978:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6979:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6980:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6981:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6982:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_ADSTP);
6983:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6984:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6985:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6986:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
ARM GAS  /tmp/cc2DBcx1.s 			page 133


6987:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6988:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6989:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6990:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(const ADC_TypeDef *ADCx)
 290              		.loc 2 6991 26 is_stmt 1 discriminator 2 view .LVU78
 291              	.LBB303:
6992:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 292              		.loc 2 6993 3 discriminator 2 view .LVU79
 293              		.loc 2 6993 12 is_stmt 0 discriminator 2 view .LVU80
 294 0014 A868     		ldr	r0, [r5, #8]
 295              		.loc 2 6993 74 discriminator 2 view .LVU81
 296 0016 10F00400 		ands	r0, r0, #4
 297 001a 00D0     		beq	.L16
 298              		.loc 2 6993 74 view .LVU82
 299 001c 0120     		movs	r0, #1
 300              	.L16:
 301              	.LVL24:
 302              		.loc 2 6993 74 view .LVU83
 303              	.LBE303:
 304              	.LBE302:
 233:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 305              		.loc 1 233 3 is_stmt 1 view .LVU84
 306              	.LBB304:
 307              	.LBI304:
6994:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6995:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6996:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6997:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6998:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6999:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7000:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
7001:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7002:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(const ADC_TypeDef *ADCx)
7003:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7004:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
7005:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7006:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7007:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7008:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Start ADC sampling phase for sampling time trigger mode
7009:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function is relevant only when
7010:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED has been set
7011:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           using @ref LL_ADC_REG_SetSamplingMode
7012:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - @ref LL_ADC_REG_TRIG_SOFTWARE is used as trigger source
7013:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7014:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
7015:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
7016:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
7017:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without ADC disable command on going.
7018:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    SWTRIG         LL_ADC_REG_StartSamplingPhase
7019:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7020:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7021:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7022:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartSamplingPhase(ADC_TypeDef *ADCx)
7023:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7024:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCx->CFGR2, ADC_CFGR2_SWTRIG);
ARM GAS  /tmp/cc2DBcx1.s 			page 134


7025:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7026:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7027:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7028:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Stop ADC sampling phase for sampling time trigger mode and start conversion
7029:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function is relevant only when
7030:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED has been set
7031:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           using @ref LL_ADC_REG_SetSamplingMode
7032:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - @ref LL_ADC_REG_TRIG_SOFTWARE is used as trigger source
7033:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - @ref LL_ADC_REG_StartSamplingPhase has been called to start
7034:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           the sampling phase
7035:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7036:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
7037:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
7038:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
7039:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without ADC disable command on going.
7040:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    SWTRIG         LL_ADC_REG_StopSamplingPhase
7041:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7042:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7043:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7044:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopSamplingPhase(ADC_TypeDef *ADCx)
7045:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7046:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->CFGR2, ADC_CFGR2_SWTRIG);
7047:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7048:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7049:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7050:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7051:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
7052:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         all oversampling increased data width (for devices
7053:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         with feature oversampling).
7054:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
7055:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7056:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7057:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7058:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(const ADC_TypeDef *ADCx)
7059:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7060:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7061:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7062:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7063:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7064:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7065:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC resolution 12 bits.
7066:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7067:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         can increase data width, function for extended range
7068:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7069:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
7070:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7071:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
7072:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7073:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(const ADC_TypeDef *ADCx)
7074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7075:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7077:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7078:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7079:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7080:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC resolution 10 bits.
7081:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
ARM GAS  /tmp/cc2DBcx1.s 			page 135


7082:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         can increase data width, function for extended range
7083:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7084:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
7085:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7086:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
7087:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7088:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(const ADC_TypeDef *ADCx)
7089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7090:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7091:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7092:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7093:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7094:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7095:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC resolution 8 bits.
7096:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7097:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         can increase data width, function for extended range
7098:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7099:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
7100:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
7102:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(const ADC_TypeDef *ADCx)
7104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7106:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7107:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7108:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7109:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7110:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC resolution 6 bits.
7111:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7112:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         can increase data width, function for extended range
7113:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7114:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
7115:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7116:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
7117:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7118:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(const ADC_TypeDef *ADCx)
7119:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7120:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7121:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7122:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7123:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
7124:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7125:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
7126:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
7127:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
7128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a macro is available to get the conversion data of
7129:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
7130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
7131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
7132:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
7133:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
7134:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         separately).
7135:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
7136:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
7137:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7138:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
ARM GAS  /tmp/cc2DBcx1.s 			page 136


7139:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
7140:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
7141:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
7142:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
7143:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7144:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7145:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(const ADC_Common_TypeDef *ADCxy_COMMO
7146:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                               uint32_t ConversionData)
7147:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7148:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
7149:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                              ConversionData)
7150:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
7151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                    );
7152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7153:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
7154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7156:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
7157:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7158:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7159:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
7160:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
7161:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7162:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7163:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7164:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
7165:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
7166:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
7167:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
7168:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           starts immediately.
7169:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
7170:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
7171:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           following the ADC start conversion command.
7172:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7173:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
7174:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
7175:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
7176:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without ADC disable command on going.
7177:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
7178:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7179:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7180:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
7182:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7183:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7184:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7185:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7187:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7188:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_JADSTART);
7189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7190:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7191:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7192:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
7193:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7194:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
7195:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
ARM GAS  /tmp/cc2DBcx1.s 			page 137


7196:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without ADC disable command on going.
7197:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
7198:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7199:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7200:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7201:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
7202:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7203:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7204:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7205:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7207:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7208:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_JADSTP);
7209:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7210:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7211:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7212:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
7213:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
7214:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7215:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
7216:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(const ADC_TypeDef *ADCx)
 308              		.loc 2 7217 26 view .LVU85
 309              	.LBB305:
7218:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 310              		.loc 2 7219 3 view .LVU86
 311              		.loc 2 7219 12 is_stmt 0 view .LVU87
 312 001e AC68     		ldr	r4, [r5, #8]
 313              		.loc 2 7219 76 view .LVU88
 314 0020 14F00804 		ands	r4, r4, #8
 315 0024 00D0     		beq	.L17
 316 0026 0124     		movs	r4, #1
 317              	.L17:
 318              	.LVL25:
 319              		.loc 2 7219 76 view .LVU89
 320              	.LBE305:
 321              	.LBE304:
 234:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 235:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 322              		.loc 1 235 3 is_stmt 1 view .LVU90
 323              	.LBB306:
 324              	.LBI306:
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 325              		.loc 2 6869 26 view .LVU91
 326              	.LBB307:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 327              		.loc 2 6871 3 view .LVU92
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 328              		.loc 2 6871 12 is_stmt 0 view .LVU93
 329 0028 AE68     		ldr	r6, [r5, #8]
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 330              		.loc 2 6871 68 view .LVU94
 331 002a 16F0010F 		tst	r6, #1
 332 002e 01D0     		beq	.L18
 333              	.LVL26:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
ARM GAS  /tmp/cc2DBcx1.s 			page 138


 334              		.loc 2 6871 68 view .LVU95
 335              	.LBE307:
 336              	.LBE306:
 236:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_regular == 0UL)
 337              		.loc 1 236 7 view .LVU96
 338 0030 00B9     		cbnz	r0, .L18
 237:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 339              		.loc 1 237 7 view .LVU97
 340 0032 6CB1     		cbz	r4, .L25
 341              	.L18:
 238:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****      )
 239:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 240:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Set the selected ADC calibration value */
 241:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     LL_ADC_SetCalibrationFactor(hadc->Instance, SingleDiff, CalibrationFactor);
 242:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 243:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   else
 244:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 245:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Update ADC state machine */
 246:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 342              		.loc 1 246 5 is_stmt 1 view .LVU98
 343 0034 9A6D     		ldr	r2, [r3, #88]
 344              	.LVL27:
 345              		.loc 1 246 5 is_stmt 0 view .LVU99
 346 0036 42F02002 		orr	r2, r2, #32
 347 003a 9A65     		str	r2, [r3, #88]
 247:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Update ADC error code */
 248:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 348              		.loc 1 248 5 is_stmt 1 view .LVU100
 349 003c DA6D     		ldr	r2, [r3, #92]
 350 003e 42F00102 		orr	r2, r2, #1
 351 0042 DA65     		str	r2, [r3, #92]
 249:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 250:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 251:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 352              		.loc 1 251 5 view .LVU101
 353              	.LVL28:
 354              		.loc 1 251 20 is_stmt 0 view .LVU102
 355 0044 0120     		movs	r0, #1
 356              	.LVL29:
 357              	.L19:
 252:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 253:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 254:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process unlocked */
 255:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 358              		.loc 1 255 3 is_stmt 1 view .LVU103
 359              		.loc 1 255 3 view .LVU104
 360 0046 0022     		movs	r2, #0
 361 0048 83F85420 		strb	r2, [r3, #84]
 362              		.loc 1 255 3 view .LVU105
 256:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 257:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Return function status */
 258:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return tmp_hal_status;
 363              		.loc 1 258 3 view .LVU106
 259:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 364              		.loc 1 259 1 is_stmt 0 view .LVU107
 365 004c 70BC     		pop	{r4, r5, r6}
 366              	.LCFI5:
ARM GAS  /tmp/cc2DBcx1.s 			page 139


 367              		.cfi_remember_state
 368              		.cfi_restore 6
 369              		.cfi_restore 5
 370              		.cfi_restore 4
 371              		.cfi_def_cfa_offset 0
 372 004e 7047     		bx	lr
 373              	.LVL30:
 374              	.L25:
 375              	.LCFI6:
 376              		.cfi_restore_state
 241:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 377              		.loc 1 241 5 is_stmt 1 view .LVU108
 378              	.LBB308:
 379              	.LBI308:
3361:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 380              		.loc 2 3361 22 view .LVU109
 381              	.LBB309:
3363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 382              		.loc 2 3363 3 view .LVU110
 383 0050 D5F8B440 		ldr	r4, [r5, #180]
 384              	.LVL31:
3363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 385              		.loc 2 3363 3 is_stmt 0 view .LVU111
 386 0054 01F07F10 		and	r0, r1, #8323199
 387              	.LVL32:
3363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 388              		.loc 2 3363 3 view .LVU112
 389 0058 24EA0004 		bic	r4, r4, r0
 390 005c 01F07F00 		and	r0, r1, #127
 391 0060 C043     		mvns	r0, r0
 392 0062 00EA1131 		and	r1, r0, r1, lsr #12
 393              	.LVL33:
3363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 394              		.loc 2 3363 3 view .LVU113
 395 0066 01F01001 		and	r1, r1, #16
 396 006a 8A40     		lsls	r2, r2, r1
 397              	.LVL34:
3363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 398              		.loc 2 3363 3 view .LVU114
 399 006c 2243     		orrs	r2, r2, r4
 400 006e C5F8B420 		str	r2, [r5, #180]
 401              	.LBE309:
 402              	.LBE308:
 218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 403              		.loc 1 218 21 view .LVU115
 404 0072 0020     		movs	r0, #0
 405              	.LBB311:
 406              	.LBB310:
3368:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 407              		.loc 2 3368 1 view .LVU116
 408 0074 E7E7     		b	.L19
 409              	.LVL35:
 410              	.L20:
 411              	.LCFI7:
 412              		.cfi_def_cfa_offset 0
 413              		.cfi_restore 4
 414              		.cfi_restore 5
ARM GAS  /tmp/cc2DBcx1.s 			page 140


 415              		.cfi_restore 6
3368:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 416              		.loc 2 3368 1 view .LVU117
 417              	.LBE310:
 418              	.LBE311:
 228:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 419              		.loc 1 228 3 view .LVU118
 420 0076 0220     		movs	r0, #2
 421              		.loc 1 259 1 view .LVU119
 422 0078 7047     		bx	lr
 423              		.cfi_endproc
 424              	.LFE363:
 426              		.section	.text.HAL_ADCEx_InjectedStart,"ax",%progbits
 427              		.align	1
 428              		.global	HAL_ADCEx_InjectedStart
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu fpv4-sp-d16
 434              	HAL_ADCEx_InjectedStart:
 435              	.LVL36:
 436              	.LFB364:
 260:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 261:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
 262:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group.
 263:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function: None.
 264:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   Case of multimode enabled when multimode feature is available:
 265:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStart() API must be called for ADC slave first,
 266:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         then for ADC master.
 267:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).
 268:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 269:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status
 271:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
 272:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef *hadc)
 273:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 437              		.loc 1 273 1 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		.loc 1 273 1 is_stmt 0 view .LVU121
 442 0000 38B5     		push	{r3, r4, r5, lr}
 443              	.LCFI8:
 444              		.cfi_def_cfa_offset 16
 445              		.cfi_offset 3, -16
 446              		.cfi_offset 4, -12
 447              		.cfi_offset 5, -8
 448              		.cfi_offset 14, -4
 274:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 449              		.loc 1 274 3 is_stmt 1 view .LVU122
 275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_config_injected_queue;
 450              		.loc 1 275 3 view .LVU123
 276:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 277:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 451              		.loc 1 277 3 view .LVU124
 452              	.LVL37:
 453              	.LBB312:
ARM GAS  /tmp/cc2DBcx1.s 			page 141


 454              	.LBI312:
6532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 455              		.loc 2 6532 26 view .LVU125
 456              	.LBB313:
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 457              		.loc 2 6534 3 view .LVU126
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 458              		.loc 2 6534 21 is_stmt 0 view .LVU127
 459 0002 394B     		ldr	r3, .L47
 460 0004 9D68     		ldr	r5, [r3, #8]
 461              	.LVL38:
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 462              		.loc 2 6534 21 view .LVU128
 463              	.LBE313:
 464              	.LBE312:
 278:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 279:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
 281:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 465              		.loc 1 281 3 is_stmt 1 view .LVU129
 282:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 283:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 466              		.loc 1 283 3 view .LVU130
 467              		.loc 1 283 42 is_stmt 0 view .LVU131
 468 0006 0368     		ldr	r3, [r0]
 469              	.LVL39:
 470              	.LBB314:
 471              	.LBI314:
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 472              		.loc 2 7217 26 is_stmt 1 view .LVU132
 473              	.LBB315:
 474              		.loc 2 7219 3 view .LVU133
 475              		.loc 2 7219 12 is_stmt 0 view .LVU134
 476 0008 9A68     		ldr	r2, [r3, #8]
 477              		.loc 2 7219 76 view .LVU135
 478 000a 12F0080F 		tst	r2, #8
 479 000e 67D1     		bne	.L39
 480 0010 0446     		mov	r4, r0
 481 0012 05F01F05 		and	r5, r5, #31
 482              	.LVL40:
 483              		.loc 2 7219 76 view .LVU136
 484              	.LBE315:
 485              	.LBE314:
 284:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 285:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     return HAL_BUSY;
 286:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 287:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   else
 288:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 289:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set
 290:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 291:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
 292:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 293:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 294:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
 295:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****          the queue is empty */
 296:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_config_injected_queue = READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 486              		.loc 1 296 5 is_stmt 1 view .LVU137
ARM GAS  /tmp/cc2DBcx1.s 			page 142


 487              		.loc 1 296 33 is_stmt 0 view .LVU138
 488 0016 DA68     		ldr	r2, [r3, #12]
 489              	.LVL41:
 297:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 298:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == 0UL)
 490              		.loc 1 298 5 is_stmt 1 view .LVU139
 491              		.loc 1 298 10 is_stmt 0 view .LVU140
 492 0018 DB6C     		ldr	r3, [r3, #76]
 493              		.loc 1 298 8 view .LVU141
 494 001a 13F4C07F 		tst	r3, #384
 495 001e 01D1     		bne	.L28
 299:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         && (tmp_config_injected_queue == 0UL)
 496              		.loc 1 299 9 view .LVU142
 497 0020 002A     		cmp	r2, #0
 498 0022 3DDA     		bge	.L44
 499              	.L28:
 300:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****        )
 301:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 302:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 303:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       return HAL_ERROR;
 304:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 305:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 306:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Process locked */
 307:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 500              		.loc 1 307 5 is_stmt 1 view .LVU143
 501              		.loc 1 307 5 view .LVU144
 502 0024 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
 503 0028 012B     		cmp	r3, #1
 504 002a 5BD0     		beq	.L40
 505              		.loc 1 307 5 discriminator 2 view .LVU145
 506 002c 0123     		movs	r3, #1
 507 002e 84F85430 		strb	r3, [r4, #84]
 508              		.loc 1 307 5 discriminator 2 view .LVU146
 308:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 309:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 310:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 509              		.loc 1 310 5 discriminator 2 view .LVU147
 510              		.loc 1 310 22 is_stmt 0 discriminator 2 view .LVU148
 511 0032 2046     		mov	r0, r4
 512              	.LVL42:
 513              		.loc 1 310 22 discriminator 2 view .LVU149
 514 0034 FFF7FEFF 		bl	ADC_Enable
 515              	.LVL43:
 311:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 312:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 313:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 516              		.loc 1 313 5 is_stmt 1 discriminator 2 view .LVU150
 517              		.loc 1 313 8 is_stmt 0 discriminator 2 view .LVU151
 518 0038 0028     		cmp	r0, #0
 519 003a 4DD1     		bne	.L29
 314:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 315:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
 316:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if ((hadc->State & HAL_ADC_STATE_REG_BUSY) != 0UL)
 520              		.loc 1 316 7 is_stmt 1 view .LVU152
 521              		.loc 1 316 16 is_stmt 0 view .LVU153
 522 003c A36D     		ldr	r3, [r4, #88]
 523              		.loc 1 316 10 view .LVU154
ARM GAS  /tmp/cc2DBcx1.s 			page 143


 524 003e 13F4807F 		tst	r3, #256
 525 0042 33D0     		beq	.L30
 317:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 318:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
 319:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 526              		.loc 1 319 9 is_stmt 1 view .LVU155
 527 0044 E36D     		ldr	r3, [r4, #92]
 528 0046 23F00803 		bic	r3, r3, #8
 529 004a E365     		str	r3, [r4, #92]
 530              	.L31:
 320:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 321:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       else
 322:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 323:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Set ADC error code to none */
 324:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 325:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 326:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 327:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
 328:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
 329:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
 330:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 531              		.loc 1 330 7 view .LVU156
 532 004c A36D     		ldr	r3, [r4, #88]
 533 004e 23F44053 		bic	r3, r3, #12288
 534 0052 23F00103 		bic	r3, r3, #1
 535 0056 43F48053 		orr	r3, r3, #4096
 536 005a A365     		str	r3, [r4, #88]
 331:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 332:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
 333:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 334:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 335:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 336:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         - if ADC instance is master or if multimode feature is not available
 337:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
 338:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 537              		.loc 1 338 7 view .LVU157
 538              		.loc 1 338 12 is_stmt 0 view .LVU158
 539 005c 2368     		ldr	r3, [r4]
 540 005e 234A     		ldr	r2, .L47+4
 541 0060 9342     		cmp	r3, r2
 542 0062 26D0     		beq	.L45
 543 0064 1A46     		mov	r2, r3
 544              	.L32:
 545              		.loc 1 338 10 discriminator 4 view .LVU159
 546 0066 9342     		cmp	r3, r2
 547 0068 00D0     		beq	.L33
 339:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 548              		.loc 1 339 11 view .LVU160
 549 006a 1DB9     		cbnz	r5, .L34
 550              	.L33:
 340:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****          )
 341:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 342:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 551              		.loc 1 342 9 is_stmt 1 view .LVU161
 552 006c A26D     		ldr	r2, [r4, #88]
 553 006e 22F48012 		bic	r2, r2, #1048576
 554 0072 A265     		str	r2, [r4, #88]
ARM GAS  /tmp/cc2DBcx1.s 			page 144


 555              	.L34:
 343:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 344:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 345:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 346:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Clear ADC group injected group conversion flag */
 347:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 348:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 556              		.loc 1 348 7 view .LVU162
 557 0074 6022     		movs	r2, #96
 558 0076 1A60     		str	r2, [r3]
 349:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 350:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Process unlocked */
 351:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 352:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 353:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 559              		.loc 1 353 7 view .LVU163
 560              		.loc 1 353 7 view .LVU164
 561 0078 0023     		movs	r3, #0
 562 007a 84F85430 		strb	r3, [r4, #84]
 563              		.loc 1 353 7 view .LVU165
 354:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 355:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 356:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* is disabled.                                                           */
 357:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 358:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 359:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 360:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Case of multimode enabled (when multimode feature is available):       */
 361:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* if ADC is slave,                                                       */
 362:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*    - ADC is enabled only (conversion is not started),                  */
 363:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*    - if multimode only concerns regular conversion, ADC is enabled     */
 364:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*     and conversion is started.                                         */
 365:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* If ADC is master or independent,                                       */
 366:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*    - ADC is enabled and conversion is started.                         */
 367:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 368:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 564              		.loc 1 368 7 view .LVU166
 565              		.loc 1 368 12 is_stmt 0 view .LVU167
 566 007e 2368     		ldr	r3, [r4]
 567 0080 1A4A     		ldr	r2, .L47+4
 568 0082 9342     		cmp	r3, r2
 569 0084 18D0     		beq	.L46
 570 0086 1A46     		mov	r2, r3
 571              	.L35:
 572              		.loc 1 368 10 discriminator 4 view .LVU168
 573 0088 9342     		cmp	r3, r2
 574 008a 18D0     		beq	.L36
 369:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 575              		.loc 1 369 11 view .LVU169
 576 008c BDB1     		cbz	r5, .L36
 370:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 577              		.loc 1 370 11 view .LVU170
 578 008e 062D     		cmp	r5, #6
 579 0090 15D0     		beq	.L36
 371:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 580              		.loc 1 371 11 view .LVU171
 581 0092 072D     		cmp	r5, #7
 582 0094 13D0     		beq	.L36
ARM GAS  /tmp/cc2DBcx1.s 			page 145


 372:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****          )
 373:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 374:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 375:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 376:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
 377:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           LL_ADC_INJ_StartConversion(hadc->Instance);
 378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 379:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 380:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       else
 381:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 382:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 383:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 583              		.loc 1 383 9 is_stmt 1 view .LVU172
 584 0096 A36D     		ldr	r3, [r4, #88]
 585 0098 43F48013 		orr	r3, r3, #1048576
 586 009c A365     		str	r3, [r4, #88]
 587 009e 20E0     		b	.L27
 588              	.LVL44:
 589              	.L44:
 302:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       return HAL_ERROR;
 590              		.loc 1 302 7 view .LVU173
 591 00a0 836D     		ldr	r3, [r0, #88]
 592 00a2 43F02003 		orr	r3, r3, #32
 593 00a6 8365     		str	r3, [r0, #88]
 303:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 594              		.loc 1 303 7 view .LVU174
 303:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 595              		.loc 1 303 14 is_stmt 0 view .LVU175
 596 00a8 0120     		movs	r0, #1
 597              	.LVL45:
 303:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 598              		.loc 1 303 14 view .LVU176
 599 00aa 1AE0     		b	.L27
 600              	.LVL46:
 601              	.L30:
 324:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 602              		.loc 1 324 9 is_stmt 1 view .LVU177
 603 00ac 0023     		movs	r3, #0
 604 00ae E365     		str	r3, [r4, #92]
 605 00b0 CCE7     		b	.L31
 606              	.L45:
 338:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 607              		.loc 1 338 12 is_stmt 0 view .LVU178
 608 00b2 A2F58072 		sub	r2, r2, #256
 609 00b6 D6E7     		b	.L32
 610              	.L46:
 368:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 611              		.loc 1 368 12 view .LVU179
 612 00b8 A2F58072 		sub	r2, r2, #256
 613 00bc E4E7     		b	.L35
 614              	.L36:
 375:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
 615              		.loc 1 375 9 is_stmt 1 view .LVU180
 616              	.LVL47:
 617              	.LBB316:
 618              	.LBI316:
5103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
ARM GAS  /tmp/cc2DBcx1.s 			page 146


 619              		.loc 2 5103 26 view .LVU181
 620              	.LBB317:
5105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 621              		.loc 2 5105 3 view .LVU182
5105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 622              		.loc 2 5105 21 is_stmt 0 view .LVU183
 623 00be DA68     		ldr	r2, [r3, #12]
 624              	.LVL48:
5105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 625              		.loc 2 5105 21 view .LVU184
 626              	.LBE317:
 627              	.LBE316:
 375:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
 628              		.loc 1 375 12 view .LVU185
 629 00c0 12F0007F 		tst	r2, #33554432
 630 00c4 0DD1     		bne	.L27
 377:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 631              		.loc 1 377 11 is_stmt 1 view .LVU186
 632              	.LVL49:
 633              	.LBB318:
 634              	.LBI318:
7181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 635              		.loc 2 7181 22 view .LVU187
 636              	.LBB319:
7186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 637              		.loc 2 7186 3 view .LVU188
 638 00c6 9A68     		ldr	r2, [r3, #8]
 639 00c8 22F00042 		bic	r2, r2, #-2147483648
 640 00cc 22F03F02 		bic	r2, r2, #63
 641 00d0 42F00802 		orr	r2, r2, #8
 642 00d4 9A60     		str	r2, [r3, #8]
7189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 643              		.loc 2 7189 1 is_stmt 0 view .LVU189
 644 00d6 04E0     		b	.L27
 645              	.LVL50:
 646              	.L29:
7189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 647              		.loc 2 7189 1 view .LVU190
 648              	.LBE319:
 649              	.LBE318:
 384:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 385:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #else
 386:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 387:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 388:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Start ADC group injected conversion */
 389:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         LL_ADC_INJ_StartConversion(hadc->Instance);
 390:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 391:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 392:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 393:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 394:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else
 395:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 396:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Process unlocked */
 397:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 650              		.loc 1 397 7 is_stmt 1 view .LVU191
 651              		.loc 1 397 7 view .LVU192
 652 00d8 0023     		movs	r3, #0
ARM GAS  /tmp/cc2DBcx1.s 			page 147


 653 00da 84F85430 		strb	r3, [r4, #84]
 654              		.loc 1 397 7 view .LVU193
 398:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 399:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 400:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Return function status */
 401:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     return tmp_hal_status;
 655              		.loc 1 401 5 view .LVU194
 656              		.loc 1 401 12 is_stmt 0 view .LVU195
 657 00de 00E0     		b	.L27
 658              	.LVL51:
 659              	.L39:
 285:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 660              		.loc 1 285 12 view .LVU196
 661 00e0 0220     		movs	r0, #2
 662              	.LVL52:
 663              	.L27:
 402:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 403:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 664              		.loc 1 403 1 view .LVU197
 665 00e2 38BD     		pop	{r3, r4, r5, pc}
 666              	.LVL53:
 667              	.L40:
 307:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 668              		.loc 1 307 5 view .LVU198
 669 00e4 0220     		movs	r0, #2
 670              	.LVL54:
 307:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 671              		.loc 1 307 5 view .LVU199
 672 00e6 FCE7     		b	.L27
 673              	.L48:
 674              		.align	2
 675              	.L47:
 676 00e8 00830242 		.word	1107460864
 677 00ec 00810242 		.word	1107460352
 678              		.cfi_endproc
 679              	.LFE364:
 681              		.section	.text.HAL_ADCEx_InjectedStop,"ax",%progbits
 682              		.align	1
 683              		.global	HAL_ADCEx_InjectedStop
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 687              		.fpu fpv4-sp-d16
 689              	HAL_ADCEx_InjectedStop:
 690              	.LVL55:
 691              	.LFB365:
 404:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 405:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
 406:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels. Disable ADC peripheral if
 407:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         no regular conversion is on going.
 408:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 409:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 410:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 411:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 412:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 413:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   In case of multimode enabled (when multimode feature is available),
 414:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStop() must be called for ADC master first, then for ADC slave.
ARM GAS  /tmp/cc2DBcx1.s 			page 148


 415:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled.
 416:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
 417:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
 418:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 419:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status
 420:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
 421:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef *hadc)
 422:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 692              		.loc 1 422 1 is_stmt 1 view -0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 0
 695              		@ frame_needed = 0, uses_anonymous_args = 0
 423:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 696              		.loc 1 423 3 view .LVU201
 424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 425:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
 426:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 697              		.loc 1 426 3 view .LVU202
 427:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 428:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process locked */
 429:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 698              		.loc 1 429 3 view .LVU203
 699              		.loc 1 429 3 view .LVU204
 700 0000 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 701 0004 012B     		cmp	r3, #1
 702 0006 23D0     		beq	.L53
 422:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 703              		.loc 1 422 1 is_stmt 0 discriminator 2 view .LVU205
 704 0008 10B5     		push	{r4, lr}
 705              	.LCFI9:
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 4, -8
 708              		.cfi_offset 14, -4
 709 000a 0446     		mov	r4, r0
 710              		.loc 1 429 3 is_stmt 1 discriminator 2 view .LVU206
 711 000c 0123     		movs	r3, #1
 712 000e 80F85430 		strb	r3, [r0, #84]
 713              		.loc 1 429 3 discriminator 2 view .LVU207
 430:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 431:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 432:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 714              		.loc 1 432 3 discriminator 2 view .LVU208
 715              		.loc 1 432 20 is_stmt 0 discriminator 2 view .LVU209
 716 0012 0221     		movs	r1, #2
 717 0014 FFF7FEFF 		bl	ADC_ConversionStop
 718              	.LVL56:
 433:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 434:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 435:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* and if no conversion on regular group is on-going                       */
 436:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 719              		.loc 1 436 3 is_stmt 1 discriminator 2 view .LVU210
 720              		.loc 1 436 6 is_stmt 0 discriminator 2 view .LVU211
 721 0018 40B9     		cbnz	r0, .L51
 437:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 438:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 722              		.loc 1 438 5 is_stmt 1 view .LVU212
 723              		.loc 1 438 44 is_stmt 0 view .LVU213
ARM GAS  /tmp/cc2DBcx1.s 			page 149


 724 001a 2368     		ldr	r3, [r4]
 725              	.LVL57:
 726              	.LBB320:
 727              	.LBI320:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 728              		.loc 2 6991 26 is_stmt 1 view .LVU214
 729              	.LBB321:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 730              		.loc 2 6993 3 view .LVU215
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 731              		.loc 2 6993 12 is_stmt 0 view .LVU216
 732 001c 9B68     		ldr	r3, [r3, #8]
 733              	.LVL58:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 734              		.loc 2 6993 74 view .LVU217
 735 001e 13F0040F 		tst	r3, #4
 736 0022 07D0     		beq	.L52
 737              	.LVL59:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 738              		.loc 2 6993 74 view .LVU218
 739              	.LBE321:
 740              	.LBE320:
 439:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 440:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
 441:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 442:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 443:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 444:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 445:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 446:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Set ADC state */
 447:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 448:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 449:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
 450:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 451:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 452:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
 453:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 454:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else
 455:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 456:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Set ADC state */
 457:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 741              		.loc 1 457 7 is_stmt 1 view .LVU219
 742 0024 A36D     		ldr	r3, [r4, #88]
 743 0026 23F48053 		bic	r3, r3, #4096
 744 002a A365     		str	r3, [r4, #88]
 745              	.L51:
 458:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 459:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 460:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 461:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process unlocked */
 462:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 746              		.loc 1 462 3 view .LVU220
 747              		.loc 1 462 3 view .LVU221
 748 002c 0023     		movs	r3, #0
 749 002e 84F85430 		strb	r3, [r4, #84]
 750              		.loc 1 462 3 view .LVU222
 463:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cc2DBcx1.s 			page 150


 464:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Return function status */
 465:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return tmp_hal_status;
 751              		.loc 1 465 3 view .LVU223
 466:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 752              		.loc 1 466 1 is_stmt 0 view .LVU224
 753 0032 10BD     		pop	{r4, pc}
 754              	.LVL60:
 755              	.L52:
 441:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 756              		.loc 1 441 7 is_stmt 1 view .LVU225
 441:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 757              		.loc 1 441 24 is_stmt 0 view .LVU226
 758 0034 2046     		mov	r0, r4
 759              	.LVL61:
 441:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 760              		.loc 1 441 24 view .LVU227
 761 0036 FFF7FEFF 		bl	ADC_Disable
 762              	.LVL62:
 444:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 763              		.loc 1 444 7 is_stmt 1 view .LVU228
 444:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 764              		.loc 1 444 10 is_stmt 0 view .LVU229
 765 003a 0028     		cmp	r0, #0
 766 003c F6D1     		bne	.L51
 447:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 767              		.loc 1 447 9 is_stmt 1 view .LVU230
 768 003e A36D     		ldr	r3, [r4, #88]
 769 0040 23F48853 		bic	r3, r3, #4352
 770 0044 23F00103 		bic	r3, r3, #1
 771 0048 43F00103 		orr	r3, r3, #1
 772 004c A365     		str	r3, [r4, #88]
 773 004e EDE7     		b	.L51
 774              	.LVL63:
 775              	.L53:
 776              	.LCFI10:
 777              		.cfi_def_cfa_offset 0
 778              		.cfi_restore 4
 779              		.cfi_restore 14
 429:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 780              		.loc 1 429 3 is_stmt 0 view .LVU231
 781 0050 0220     		movs	r0, #2
 782              	.LVL64:
 783              		.loc 1 466 1 view .LVU232
 784 0052 7047     		bx	lr
 785              		.cfi_endproc
 786              	.LFE365:
 788              		.section	.text.HAL_ADCEx_InjectedPollForConversion,"ax",%progbits
 789              		.align	1
 790              		.global	HAL_ADCEx_InjectedPollForConversion
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 794              		.fpu fpv4-sp-d16
 796              	HAL_ADCEx_InjectedPollForConversion:
 797              	.LVL65:
 798              	.LFB366:
 467:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cc2DBcx1.s 			page 151


 468:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
 469:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
 470:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle
 471:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param Timeout Timeout value in millisecond.
 472:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   Depending on hadc->Init.EOCSelection, JEOS or JEOC is
 473:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         checked and cleared depending on AUTDLY bit status.
 474:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status
 475:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
 476:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
 477:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 799              		.loc 1 477 1 is_stmt 1 view -0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		.loc 1 477 1 is_stmt 0 view .LVU234
 804 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 805              	.LCFI11:
 806              		.cfi_def_cfa_offset 24
 807              		.cfi_offset 4, -24
 808              		.cfi_offset 5, -20
 809              		.cfi_offset 6, -16
 810              		.cfi_offset 7, -12
 811              		.cfi_offset 8, -8
 812              		.cfi_offset 14, -4
 813 0004 0446     		mov	r4, r0
 814 0006 0D46     		mov	r5, r1
 478:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tickstart;
 815              		.loc 1 478 3 is_stmt 1 view .LVU235
 479:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_flag_end;
 816              		.loc 1 479 3 view .LVU236
 480:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 817              		.loc 1 480 3 view .LVU237
 481:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
 818              		.loc 1 481 3 view .LVU238
 482:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_cfgr;
 819              		.loc 1 482 3 view .LVU239
 483:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 484:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   const ADC_TypeDef *tmpADC_Master;
 820              		.loc 1 484 3 view .LVU240
 485:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 821              		.loc 1 485 3 view .LVU241
 822              	.LVL66:
 823              	.LBB322:
 824              	.LBI322:
6532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 825              		.loc 2 6532 26 view .LVU242
 826              	.LBB323:
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 827              		.loc 2 6534 3 view .LVU243
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 828              		.loc 2 6534 21 is_stmt 0 view .LVU244
 829 0008 3B4B     		ldr	r3, .L84
 830 000a 9F68     		ldr	r7, [r3, #8]
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 831              		.loc 2 6534 10 view .LVU245
 832 000c 07F01F07 		and	r7, r7, #31
 833              	.LVL67:
ARM GAS  /tmp/cc2DBcx1.s 			page 152


6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 834              		.loc 2 6534 10 view .LVU246
 835              	.LBE323:
 836              	.LBE322:
 486:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 487:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 488:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
 489:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 837              		.loc 1 489 3 is_stmt 1 view .LVU247
 490:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* If end of sequence selected */
 492:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 838              		.loc 1 492 3 view .LVU248
 839              		.loc 1 492 17 is_stmt 0 view .LVU249
 840 0010 4369     		ldr	r3, [r0, #20]
 841              		.loc 1 492 6 view .LVU250
 842 0012 082B     		cmp	r3, #8
 843 0014 1FD0     		beq	.L80
 493:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 494:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_flag_end = ADC_FLAG_JEOS;
 495:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 496:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   else /* end of conversion selected */
 497:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 498:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_flag_end = ADC_FLAG_JEOC;
 844              		.loc 1 498 18 view .LVU251
 845 0016 2026     		movs	r6, #32
 846              	.L59:
 847              	.LVL68:
 499:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 500:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 501:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Get timeout */
 502:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();
 848              		.loc 1 502 3 is_stmt 1 view .LVU252
 849              		.loc 1 502 15 is_stmt 0 view .LVU253
 850 0018 FFF7FEFF 		bl	HAL_GetTick
 851              	.LVL69:
 852              		.loc 1 502 15 view .LVU254
 853 001c 8046     		mov	r8, r0
 854              	.LVL70:
 503:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 504:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Wait until End of Conversion or Sequence flag is raised */
 505:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   while ((hadc->Instance->ISR & tmp_flag_end) == 0UL)
 855              		.loc 1 505 3 is_stmt 1 view .LVU255
 856              	.L61:
 857              		.loc 1 505 9 view .LVU256
 858              		.loc 1 505 15 is_stmt 0 view .LVU257
 859 001e 2368     		ldr	r3, [r4]
 860              		.loc 1 505 25 view .LVU258
 861 0020 1A68     		ldr	r2, [r3]
 862              		.loc 1 505 9 view .LVU259
 863 0022 3242     		tst	r2, r6
 864 0024 19D1     		bne	.L81
 506:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 507:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
 508:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 865              		.loc 1 508 5 is_stmt 1 view .LVU260
 866              		.loc 1 508 8 is_stmt 0 view .LVU261
ARM GAS  /tmp/cc2DBcx1.s 			page 153


 867 0026 B5F1FF3F 		cmp	r5, #-1
 868 002a F8D0     		beq	.L61
 509:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 510:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 869              		.loc 1 510 7 is_stmt 1 view .LVU262
 870              		.loc 1 510 13 is_stmt 0 view .LVU263
 871 002c FFF7FEFF 		bl	HAL_GetTick
 872              	.LVL71:
 873              		.loc 1 510 27 view .LVU264
 874 0030 A0EB0800 		sub	r0, r0, r8
 875              		.loc 1 510 10 view .LVU265
 876 0034 A842     		cmp	r0, r5
 877 0036 01D8     		bhi	.L62
 878              		.loc 1 510 51 discriminator 1 view .LVU266
 879 0038 002D     		cmp	r5, #0
 880 003a F0D1     		bne	.L61
 881              	.L62:
 511:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 512:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
 513:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         if ((hadc->Instance->ISR & tmp_flag_end) == 0UL)
 882              		.loc 1 513 9 is_stmt 1 view .LVU267
 883              		.loc 1 513 18 is_stmt 0 view .LVU268
 884 003c 2368     		ldr	r3, [r4]
 885              		.loc 1 513 28 view .LVU269
 886 003e 1B68     		ldr	r3, [r3]
 887              		.loc 1 513 12 view .LVU270
 888 0040 3342     		tst	r3, r6
 889 0042 ECD1     		bne	.L61
 514:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
 515:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
 516:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 890              		.loc 1 516 11 is_stmt 1 view .LVU271
 891 0044 A36D     		ldr	r3, [r4, #88]
 892 0046 43F00403 		orr	r3, r3, #4
 893 004a A365     		str	r3, [r4, #88]
 517:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 518:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           /* Process unlocked */
 519:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
 894              		.loc 1 519 11 view .LVU272
 895              		.loc 1 519 11 view .LVU273
 896 004c 0023     		movs	r3, #0
 897 004e 84F85430 		strb	r3, [r4, #84]
 898              		.loc 1 519 11 view .LVU274
 520:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 521:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
 899              		.loc 1 521 11 view .LVU275
 900              		.loc 1 521 18 is_stmt 0 view .LVU276
 901 0052 0320     		movs	r0, #3
 902 0054 44E0     		b	.L63
 903              	.LVL72:
 904              	.L80:
 494:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 905              		.loc 1 494 18 view .LVU277
 906 0056 4026     		movs	r6, #64
 907 0058 DEE7     		b	.L59
 908              	.LVL73:
 909              	.L81:
ARM GAS  /tmp/cc2DBcx1.s 			page 154


 522:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 523:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 524:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 525:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 526:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 527:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Retrieve ADC configuration */
 528:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
 910              		.loc 1 528 3 is_stmt 1 view .LVU278
 911              	.LBB324:
 912              	.LBI324:
4800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 913              		.loc 2 4800 26 view .LVU279
 914              	.LBB325:
4802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 915              		.loc 2 4802 3 view .LVU280
4802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 916              		.loc 2 4802 12 is_stmt 0 view .LVU281
 917 005a DA6C     		ldr	r2, [r3, #76]
4802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 918              		.loc 2 4802 105 view .LVU282
 919 005c 12F4C07F 		tst	r2, #384
 920 0060 12D1     		bne	.L75
 921 0062 0120     		movs	r0, #1
 922              	.L65:
 923              	.LVL74:
4802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 924              		.loc 2 4802 105 view .LVU283
 925              	.LBE325:
 926              	.LBE324:
 529:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 927              		.loc 1 529 3 is_stmt 1 view .LVU284
 928              	.LBB327:
 929              	.LBI327:
4074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 930              		.loc 2 4074 26 view .LVU285
 931              	.LBB328:
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 932              		.loc 2 4076 3 view .LVU286
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 933              		.loc 2 4076 12 is_stmt 0 view .LVU287
 934 0064 DA68     		ldr	r2, [r3, #12]
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 935              		.loc 2 4076 103 view .LVU288
 936 0066 12F4406F 		tst	r2, #3072
 937 006a 0FD1     		bne	.L76
 938 006c 0125     		movs	r5, #1
 939              	.LVL75:
 940              	.L66:
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 941              		.loc 2 4076 103 view .LVU289
 942              	.LBE328:
 943              	.LBE327:
 530:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave  */
 531:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* in function of multimode state (for devices with multimode         */
 532:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* available).                                                        */
 533:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 534:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
ARM GAS  /tmp/cc2DBcx1.s 			page 155


 944              		.loc 1 534 3 is_stmt 1 view .LVU290
 945              		.loc 1 534 8 is_stmt 0 view .LVU291
 946 006e 234A     		ldr	r2, .L84+4
 947 0070 9342     		cmp	r3, r2
 948 0072 0DD0     		beq	.L82
 949 0074 1A46     		mov	r2, r3
 950              	.L67:
 951              		.loc 1 534 6 discriminator 4 view .LVU292
 952 0076 9342     		cmp	r3, r2
 953 0078 0DD0     		beq	.L68
 535:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 954              		.loc 1 535 7 view .LVU293
 955 007a 67B1     		cbz	r7, .L68
 536:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 956              		.loc 1 536 7 view .LVU294
 957 007c 062F     		cmp	r7, #6
 958 007e 0AD0     		beq	.L68
 537:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 959              		.loc 1 537 7 view .LVU295
 960 0080 072F     		cmp	r7, #7
 961 0082 08D0     		beq	.L68
 538:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****      )
 539:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 540:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 541:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 542:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   else
 543:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 544:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 962              		.loc 1 544 5 is_stmt 1 discriminator 4 view .LVU296
 963              	.LVL76:
 545:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 964              		.loc 1 545 5 discriminator 4 view .LVU297
 965              		.loc 1 545 14 is_stmt 0 discriminator 4 view .LVU298
 966 0084 D168     		ldr	r1, [r2, #12]
 967              	.LVL77:
 968              		.loc 1 545 14 discriminator 4 view .LVU299
 969 0086 07E0     		b	.L70
 970              	.LVL78:
 971              	.L75:
 972              	.LBB330:
 973              	.LBB326:
4802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 974              		.loc 2 4802 105 view .LVU300
 975 0088 0020     		movs	r0, #0
 976 008a EBE7     		b	.L65
 977              	.LVL79:
 978              	.L76:
4802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 979              		.loc 2 4802 105 view .LVU301
 980              	.LBE326:
 981              	.LBE330:
 982              	.LBB331:
 983              	.LBB329:
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 984              		.loc 2 4076 103 view .LVU302
 985 008c 0025     		movs	r5, #0
 986              	.LVL80:
ARM GAS  /tmp/cc2DBcx1.s 			page 156


4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 987              		.loc 2 4076 103 view .LVU303
 988 008e EEE7     		b	.L66
 989              	.LVL81:
 990              	.L82:
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 991              		.loc 2 4076 103 view .LVU304
 992              	.LBE329:
 993              	.LBE331:
 534:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 994              		.loc 1 534 8 view .LVU305
 995 0090 A2F58072 		sub	r2, r2, #256
 996 0094 EFE7     		b	.L67
 997              	.L68:
 540:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 998              		.loc 1 540 5 is_stmt 1 view .LVU306
 540:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 999              		.loc 1 540 14 is_stmt 0 view .LVU307
 1000 0096 D968     		ldr	r1, [r3, #12]
 1001              	.LVL82:
 1002              	.L70:
 546:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 547:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #else
 548:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 549:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 550:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 551:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Update ADC state machine */
 552:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 1003              		.loc 1 552 3 is_stmt 1 view .LVU308
 1004 0098 A26D     		ldr	r2, [r4, #88]
 1005 009a 42F40052 		orr	r2, r2, #8192
 1006 009e A265     		str	r2, [r4, #88]
 553:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 554:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
 555:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* by external trigger or by automatic injected conversion                  */
 556:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* from group regular.                                                      */
 557:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if ((tmp_adc_inj_is_trigger_source_sw_start != 0UL)            ||
 1007              		.loc 1 557 3 view .LVU309
 1008              		.loc 1 557 6 is_stmt 0 view .LVU310
 1009 00a0 30B9     		cbnz	r0, .L71
 1010              		.loc 1 557 66 discriminator 1 view .LVU311
 1011 00a2 11F0007F 		tst	r1, #33554432
 1012 00a6 16D1     		bne	.L72
 558:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
 1013              		.loc 1 558 57 view .LVU312
 1014 00a8 ADB1     		cbz	r5, .L72
 559:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****        ((tmp_adc_reg_is_trigger_source_sw_start != 0UL)  &&
 1015              		.loc 1 559 58 view .LVU313
 1016 00aa 11F4005F 		tst	r1, #8192
 1017 00ae 12D1     		bne	.L72
 1018              	.L71:
 560:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
 561:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 562:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Check whether end of sequence is reached */
 563:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
 1019              		.loc 1 563 5 is_stmt 1 view .LVU314
 1020              		.loc 1 563 9 is_stmt 0 view .LVU315
ARM GAS  /tmp/cc2DBcx1.s 			page 157


 1021 00b0 1A68     		ldr	r2, [r3]
 1022              		.loc 1 563 8 view .LVU316
 1023 00b2 12F0400F 		tst	r2, #64
 1024 00b6 0ED0     		beq	.L72
 564:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 565:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Particular case if injected contexts queue is enabled:             */
 566:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* when the last context has been fully processed, JSQR is reset      */
 567:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* by the hardware. Even if no injected conversion is planned to come */
 568:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* (queue empty, triggers are ignored), it can start again            */
 569:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* immediately after setting a new context (JADSTART is still set).   */
 570:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Therefore, state of HAL ADC injected group is kept to busy.        */
 571:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
 1025              		.loc 1 571 7 is_stmt 1 view .LVU317
 1026              		.loc 1 571 10 is_stmt 0 view .LVU318
 1027 00b8 11F4001F 		tst	r1, #2097152
 1028 00bc 0BD1     		bne	.L72
 572:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 573:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Set ADC state */
 574:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1029              		.loc 1 574 9 is_stmt 1 view .LVU319
 1030 00be A26D     		ldr	r2, [r4, #88]
 1031 00c0 22F48052 		bic	r2, r2, #4096
 1032 00c4 A265     		str	r2, [r4, #88]
 575:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 576:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
 1033              		.loc 1 576 9 view .LVU320
 1034              		.loc 1 576 18 is_stmt 0 view .LVU321
 1035 00c6 A26D     		ldr	r2, [r4, #88]
 1036              		.loc 1 576 12 view .LVU322
 1037 00c8 12F4807F 		tst	r2, #256
 1038 00cc 03D1     		bne	.L72
 577:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
 578:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1039              		.loc 1 578 11 is_stmt 1 view .LVU323
 1040 00ce A26D     		ldr	r2, [r4, #88]
 1041 00d0 42F00102 		orr	r2, r2, #1
 1042 00d4 A265     		str	r2, [r4, #88]
 1043              	.L72:
 579:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 580:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 581:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 582:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 583:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 584:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Clear polled flag */
 585:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (tmp_flag_end == ADC_FLAG_JEOS)
 1044              		.loc 1 585 3 view .LVU324
 1045              		.loc 1 585 6 is_stmt 0 view .LVU325
 1046 00d6 402E     		cmp	r6, #64
 1047 00d8 04D0     		beq	.L83
 586:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 587:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Clear end of sequence JEOS flag of injected group if low power feature */
 588:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature.   */
 589:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* For injected groups, no new conversion will start before JEOS is       */
 590:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* cleared.                                                               */
 591:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
 592:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 593:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
ARM GAS  /tmp/cc2DBcx1.s 			page 158


 594:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 595:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 596:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   else
 597:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 598:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 1048              		.loc 1 598 5 is_stmt 1 view .LVU326
 1049 00da 2022     		movs	r2, #32
 1050 00dc 1A60     		str	r2, [r3]
 599:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 600:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 601:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Return API HAL status */
 602:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return HAL_OK;
 1051              		.loc 1 602 10 is_stmt 0 view .LVU327
 1052 00de 0020     		movs	r0, #0
 1053              	.LVL83:
 1054              	.L63:
 603:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 1055              		.loc 1 603 1 view .LVU328
 1056 00e0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1057              	.LVL84:
 1058              	.L83:
 591:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 1059              		.loc 1 591 5 is_stmt 1 view .LVU329
 591:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 1060              		.loc 1 591 8 is_stmt 0 view .LVU330
 1061 00e4 11F4804F 		tst	r1, #16384
 1062 00e8 03D1     		bne	.L78
 593:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 1063              		.loc 1 593 7 is_stmt 1 view .LVU331
 1064 00ea 6022     		movs	r2, #96
 1065 00ec 1A60     		str	r2, [r3]
 602:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 1066              		.loc 1 602 10 is_stmt 0 view .LVU332
 1067 00ee 0020     		movs	r0, #0
 1068              	.LVL85:
 602:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 1069              		.loc 1 602 10 view .LVU333
 1070 00f0 F6E7     		b	.L63
 1071              	.LVL86:
 1072              	.L78:
 602:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 1073              		.loc 1 602 10 view .LVU334
 1074 00f2 0020     		movs	r0, #0
 1075              	.LVL87:
 602:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 1076              		.loc 1 602 10 view .LVU335
 1077 00f4 F4E7     		b	.L63
 1078              	.L85:
 1079 00f6 00BF     		.align	2
 1080              	.L84:
 1081 00f8 00830242 		.word	1107460864
 1082 00fc 00810242 		.word	1107460352
 1083              		.cfi_endproc
 1084              	.LFE366:
 1086              		.section	.text.HAL_ADCEx_InjectedStart_IT,"ax",%progbits
 1087              		.align	1
 1088              		.global	HAL_ADCEx_InjectedStart_IT
ARM GAS  /tmp/cc2DBcx1.s 			page 159


 1089              		.syntax unified
 1090              		.thumb
 1091              		.thumb_func
 1092              		.fpu fpv4-sp-d16
 1094              	HAL_ADCEx_InjectedStart_IT:
 1095              	.LVL88:
 1096              	.LFB367:
 604:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 605:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
 606:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group with interruption.
 607:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function according to initialization
 608:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         setting : JEOC (end of conversion) or JEOS (end of sequence)
 609:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (when multimode feature is enabled):
 610:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStart_IT() API must be called for ADC slave first,
 611:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         then for ADC master.
 612:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).
 613:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 614:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 615:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status.
 616:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
 617:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef *hadc)
 618:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 1097              		.loc 1 618 1 is_stmt 1 view -0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 0
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 1101              		.loc 1 618 1 is_stmt 0 view .LVU337
 1102 0000 38B5     		push	{r3, r4, r5, lr}
 1103              	.LCFI12:
 1104              		.cfi_def_cfa_offset 16
 1105              		.cfi_offset 3, -16
 1106              		.cfi_offset 4, -12
 1107              		.cfi_offset 5, -8
 1108              		.cfi_offset 14, -4
 619:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1109              		.loc 1 619 3 is_stmt 1 view .LVU338
 620:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_config_injected_queue;
 1110              		.loc 1 620 3 view .LVU339
 621:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 622:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 1111              		.loc 1 622 3 view .LVU340
 1112              	.LVL89:
 1113              	.LBB332:
 1114              	.LBI332:
6532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 1115              		.loc 2 6532 26 view .LVU341
 1116              	.LBB333:
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1117              		.loc 2 6534 3 view .LVU342
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1118              		.loc 2 6534 21 is_stmt 0 view .LVU343
 1119 0002 4A4B     		ldr	r3, .L111
 1120 0004 9D68     		ldr	r5, [r3, #8]
 1121              	.LVL90:
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1122              		.loc 2 6534 21 view .LVU344
 1123              	.LBE333:
ARM GAS  /tmp/cc2DBcx1.s 			page 160


 1124              	.LBE332:
 623:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 624:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 625:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
 626:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1125              		.loc 1 626 3 is_stmt 1 view .LVU345
 627:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 628:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 1126              		.loc 1 628 3 view .LVU346
 1127              		.loc 1 628 42 is_stmt 0 view .LVU347
 1128 0006 0368     		ldr	r3, [r0]
 1129              	.LVL91:
 1130              	.LBB334:
 1131              	.LBI334:
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 1132              		.loc 2 7217 26 is_stmt 1 view .LVU348
 1133              	.LBB335:
 1134              		.loc 2 7219 3 view .LVU349
 1135              		.loc 2 7219 12 is_stmt 0 view .LVU350
 1136 0008 9A68     		ldr	r2, [r3, #8]
 1137              		.loc 2 7219 76 view .LVU351
 1138 000a 12F0080F 		tst	r2, #8
 1139 000e 40F08980 		bne	.L102
 1140 0012 0446     		mov	r4, r0
 1141 0014 05F01F05 		and	r5, r5, #31
 1142              	.LVL92:
 1143              		.loc 2 7219 76 view .LVU352
 1144              	.LBE335:
 1145              	.LBE334:
 629:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 630:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     return HAL_BUSY;
 631:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 632:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   else
 633:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 634:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set
 635:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 636:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
 637:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 638:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 639:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
 640:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****          the queue is empty */
 641:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_config_injected_queue = READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 1146              		.loc 1 641 5 is_stmt 1 view .LVU353
 1147              		.loc 1 641 33 is_stmt 0 view .LVU354
 1148 0018 DA68     		ldr	r2, [r3, #12]
 1149              	.LVL93:
 642:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 643:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == 0UL)
 1150              		.loc 1 643 5 is_stmt 1 view .LVU355
 1151              		.loc 1 643 10 is_stmt 0 view .LVU356
 1152 001a DB6C     		ldr	r3, [r3, #76]
 1153              		.loc 1 643 8 view .LVU357
 1154 001c 13F4C07F 		tst	r3, #384
 1155 0020 01D1     		bne	.L88
 644:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         && (tmp_config_injected_queue == 0UL)
 1156              		.loc 1 644 9 view .LVU358
 1157 0022 002A     		cmp	r2, #0
ARM GAS  /tmp/cc2DBcx1.s 			page 161


 1158 0024 53DA     		bge	.L107
 1159              	.L88:
 645:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****        )
 646:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 647:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 648:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       return HAL_ERROR;
 649:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 650:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 651:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Process locked */
 652:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 1160              		.loc 1 652 5 is_stmt 1 view .LVU359
 1161              		.loc 1 652 5 view .LVU360
 1162 0026 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
 1163 002a 012B     		cmp	r3, #1
 1164 002c 7CD0     		beq	.L103
 1165              		.loc 1 652 5 discriminator 2 view .LVU361
 1166 002e 0123     		movs	r3, #1
 1167 0030 84F85430 		strb	r3, [r4, #84]
 1168              		.loc 1 652 5 discriminator 2 view .LVU362
 653:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 654:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 655:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 1169              		.loc 1 655 5 discriminator 2 view .LVU363
 1170              		.loc 1 655 22 is_stmt 0 discriminator 2 view .LVU364
 1171 0034 2046     		mov	r0, r4
 1172              	.LVL94:
 1173              		.loc 1 655 22 discriminator 2 view .LVU365
 1174 0036 FFF7FEFF 		bl	ADC_Enable
 1175              	.LVL95:
 656:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 657:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 658:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1176              		.loc 1 658 5 is_stmt 1 discriminator 2 view .LVU366
 1177              		.loc 1 658 8 is_stmt 0 discriminator 2 view .LVU367
 1178 003a 0028     		cmp	r0, #0
 1179 003c 6ED1     		bne	.L89
 659:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 660:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
 661:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if ((hadc->State & HAL_ADC_STATE_REG_BUSY) != 0UL)
 1180              		.loc 1 661 7 is_stmt 1 view .LVU368
 1181              		.loc 1 661 16 is_stmt 0 view .LVU369
 1182 003e A36D     		ldr	r3, [r4, #88]
 1183              		.loc 1 661 10 view .LVU370
 1184 0040 13F4807F 		tst	r3, #256
 1185 0044 49D0     		beq	.L90
 662:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 663:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
 664:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 1186              		.loc 1 664 9 is_stmt 1 view .LVU371
 1187 0046 E36D     		ldr	r3, [r4, #92]
 1188 0048 23F00803 		bic	r3, r3, #8
 1189 004c E365     		str	r3, [r4, #92]
 1190              	.L91:
 665:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 666:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       else
 667:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 668:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Set ADC error code to none */
ARM GAS  /tmp/cc2DBcx1.s 			page 162


 669:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 670:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 671:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 672:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
 673:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
 674:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
 675:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 1191              		.loc 1 675 7 view .LVU372
 1192 004e A36D     		ldr	r3, [r4, #88]
 1193 0050 23F44053 		bic	r3, r3, #12288
 1194 0054 23F00103 		bic	r3, r3, #1
 1195 0058 43F48053 		orr	r3, r3, #4096
 1196 005c A365     		str	r3, [r4, #88]
 676:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 677:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
 678:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 679:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 680:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 681:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         - if ADC instance is master or if multimode feature is not available
 682:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
 683:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 1197              		.loc 1 683 7 view .LVU373
 1198              		.loc 1 683 12 is_stmt 0 view .LVU374
 1199 005e 2368     		ldr	r3, [r4]
 1200 0060 334A     		ldr	r2, .L111+4
 1201 0062 9342     		cmp	r3, r2
 1202 0064 3CD0     		beq	.L108
 1203 0066 1A46     		mov	r2, r3
 1204              	.L92:
 1205              		.loc 1 683 10 discriminator 4 view .LVU375
 1206 0068 9342     		cmp	r3, r2
 1207 006a 00D0     		beq	.L93
 684:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1208              		.loc 1 684 11 view .LVU376
 1209 006c 1DB9     		cbnz	r5, .L94
 1210              	.L93:
 685:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****          )
 686:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 687:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 1211              		.loc 1 687 9 is_stmt 1 view .LVU377
 1212 006e A26D     		ldr	r2, [r4, #88]
 1213 0070 22F48012 		bic	r2, r2, #1048576
 1214 0074 A265     		str	r2, [r4, #88]
 1215              	.L94:
 688:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 689:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 690:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 691:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Clear ADC group injected group conversion flag */
 692:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 693:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 1216              		.loc 1 693 7 view .LVU378
 1217 0076 6022     		movs	r2, #96
 1218 0078 1A60     		str	r2, [r3]
 694:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 695:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Process unlocked */
 696:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 697:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
ARM GAS  /tmp/cc2DBcx1.s 			page 163


 698:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1219              		.loc 1 698 7 view .LVU379
 1220              		.loc 1 698 7 view .LVU380
 1221 007a 0023     		movs	r3, #0
 1222 007c 84F85430 		strb	r3, [r4, #84]
 1223              		.loc 1 698 7 view .LVU381
 699:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 700:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Enable ADC Injected context queue overflow interrupt if this feature   */
 701:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* is enabled.                                                            */
 702:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if ((hadc->Instance->CFGR & ADC_CFGR_JQM) != 0UL)
 1224              		.loc 1 702 7 view .LVU382
 1225              		.loc 1 702 16 is_stmt 0 view .LVU383
 1226 0080 2368     		ldr	r3, [r4]
 1227              		.loc 1 702 26 view .LVU384
 1228 0082 DA68     		ldr	r2, [r3, #12]
 1229              		.loc 1 702 10 view .LVU385
 1230 0084 12F4001F 		tst	r2, #2097152
 1231 0088 03D0     		beq	.L95
 703:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 704:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_FLAG_JQOVF);
 1232              		.loc 1 704 9 is_stmt 1 view .LVU386
 1233 008a 5A68     		ldr	r2, [r3, #4]
 1234 008c 42F48062 		orr	r2, r2, #1024
 1235 0090 5A60     		str	r2, [r3, #4]
 1236              	.L95:
 705:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 706:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 707:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Enable ADC end of conversion interrupt */
 708:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       switch (hadc->Init.EOCSelection)
 1237              		.loc 1 708 7 view .LVU387
 1238              		.loc 1 708 25 is_stmt 0 view .LVU388
 1239 0092 6369     		ldr	r3, [r4, #20]
 1240              		.loc 1 708 7 view .LVU389
 1241 0094 082B     		cmp	r3, #8
 1242 0096 26D0     		beq	.L109
 709:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 710:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         case ADC_EOC_SEQ_CONV:
 711:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 712:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 713:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           break;
 714:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 715:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         default:
 716:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
 1243              		.loc 1 716 11 is_stmt 1 view .LVU390
 1244 0098 2268     		ldr	r2, [r4]
 1245 009a 5368     		ldr	r3, [r2, #4]
 1246 009c 23F04003 		bic	r3, r3, #64
 1247 00a0 5360     		str	r3, [r2, #4]
 717:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 1248              		.loc 1 717 11 view .LVU391
 1249 00a2 2268     		ldr	r2, [r4]
 1250 00a4 5368     		ldr	r3, [r2, #4]
 1251 00a6 43F02003 		orr	r3, r3, #32
 1252 00aa 5360     		str	r3, [r2, #4]
 718:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           break;
 1253              		.loc 1 718 11 view .LVU392
 1254              	.L97:
ARM GAS  /tmp/cc2DBcx1.s 			page 164


 719:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 720:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 721:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 722:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* is disabled.                                                           */
 723:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 724:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 725:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 726:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Case of multimode enabled (when multimode feature is available):       */
 727:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* if ADC is slave,                                                       */
 728:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*    - ADC is enabled only (conversion is not started),                  */
 729:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*    - if multimode only concerns regular conversion, ADC is enabled     */
 730:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*     and conversion is started.                                         */
 731:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* If ADC is master or independent,                                       */
 732:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*    - ADC is enabled and conversion is started.                         */
 733:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 734:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 1255              		.loc 1 734 7 view .LVU393
 1256              		.loc 1 734 12 is_stmt 0 view .LVU394
 1257 00ac 2368     		ldr	r3, [r4]
 1258 00ae 204A     		ldr	r2, .L111+4
 1259 00b0 9342     		cmp	r3, r2
 1260 00b2 23D0     		beq	.L110
 1261 00b4 1A46     		mov	r2, r3
 1262              	.L98:
 1263              		.loc 1 734 10 discriminator 4 view .LVU395
 1264 00b6 9342     		cmp	r3, r2
 1265 00b8 23D0     		beq	.L99
 735:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1266              		.loc 1 735 11 view .LVU396
 1267 00ba 15B3     		cbz	r5, .L99
 736:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 1268              		.loc 1 736 11 view .LVU397
 1269 00bc 062D     		cmp	r5, #6
 1270 00be 20D0     		beq	.L99
 737:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 1271              		.loc 1 737 11 view .LVU398
 1272 00c0 072D     		cmp	r5, #7
 1273 00c2 1ED0     		beq	.L99
 738:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****          )
 739:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 740:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 741:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 742:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
 743:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           LL_ADC_INJ_StartConversion(hadc->Instance);
 744:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 745:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 746:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       else
 747:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 748:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 749:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 1274              		.loc 1 749 9 is_stmt 1 view .LVU399
 1275 00c4 A36D     		ldr	r3, [r4, #88]
 1276 00c6 43F48013 		orr	r3, r3, #1048576
 1277 00ca A365     		str	r3, [r4, #88]
 1278 00cc 2BE0     		b	.L87
 1279              	.LVL96:
 1280              	.L107:
ARM GAS  /tmp/cc2DBcx1.s 			page 165


 647:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       return HAL_ERROR;
 1281              		.loc 1 647 7 view .LVU400
 1282 00ce 836D     		ldr	r3, [r0, #88]
 1283 00d0 43F02003 		orr	r3, r3, #32
 1284 00d4 8365     		str	r3, [r0, #88]
 648:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 1285              		.loc 1 648 7 view .LVU401
 648:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 1286              		.loc 1 648 14 is_stmt 0 view .LVU402
 1287 00d6 0120     		movs	r0, #1
 1288              	.LVL97:
 648:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 1289              		.loc 1 648 14 view .LVU403
 1290 00d8 25E0     		b	.L87
 1291              	.LVL98:
 1292              	.L90:
 669:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 1293              		.loc 1 669 9 is_stmt 1 view .LVU404
 1294 00da 0023     		movs	r3, #0
 1295 00dc E365     		str	r3, [r4, #92]
 1296 00de B6E7     		b	.L91
 1297              	.L108:
 683:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1298              		.loc 1 683 12 is_stmt 0 view .LVU405
 1299 00e0 A2F58072 		sub	r2, r2, #256
 1300 00e4 C0E7     		b	.L92
 1301              	.L109:
 711:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 1302              		.loc 1 711 11 is_stmt 1 view .LVU406
 1303 00e6 2268     		ldr	r2, [r4]
 1304 00e8 5368     		ldr	r3, [r2, #4]
 1305 00ea 23F02003 		bic	r3, r3, #32
 1306 00ee 5360     		str	r3, [r2, #4]
 712:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           break;
 1307              		.loc 1 712 11 view .LVU407
 1308 00f0 2268     		ldr	r2, [r4]
 1309 00f2 5368     		ldr	r3, [r2, #4]
 1310 00f4 43F04003 		orr	r3, r3, #64
 1311 00f8 5360     		str	r3, [r2, #4]
 713:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 1312              		.loc 1 713 11 view .LVU408
 1313 00fa D7E7     		b	.L97
 1314              	.L110:
 734:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1315              		.loc 1 734 12 is_stmt 0 view .LVU409
 1316 00fc A2F58072 		sub	r2, r2, #256
 1317 0100 D9E7     		b	.L98
 1318              	.L99:
 741:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
 1319              		.loc 1 741 9 is_stmt 1 view .LVU410
 1320              	.LVL99:
 1321              	.LBB336:
 1322              	.LBI336:
5103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 1323              		.loc 2 5103 26 view .LVU411
 1324              	.LBB337:
5105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
ARM GAS  /tmp/cc2DBcx1.s 			page 166


 1325              		.loc 2 5105 3 view .LVU412
5105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1326              		.loc 2 5105 21 is_stmt 0 view .LVU413
 1327 0102 DA68     		ldr	r2, [r3, #12]
 1328              	.LVL100:
5105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1329              		.loc 2 5105 21 view .LVU414
 1330              	.LBE337:
 1331              	.LBE336:
 741:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
 1332              		.loc 1 741 12 view .LVU415
 1333 0104 12F0007F 		tst	r2, #33554432
 1334 0108 0DD1     		bne	.L87
 743:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 1335              		.loc 1 743 11 is_stmt 1 view .LVU416
 1336              	.LVL101:
 1337              	.LBB338:
 1338              	.LBI338:
7181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 1339              		.loc 2 7181 22 view .LVU417
 1340              	.LBB339:
7186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 1341              		.loc 2 7186 3 view .LVU418
 1342 010a 9A68     		ldr	r2, [r3, #8]
 1343 010c 22F00042 		bic	r2, r2, #-2147483648
 1344 0110 22F03F02 		bic	r2, r2, #63
 1345 0114 42F00802 		orr	r2, r2, #8
 1346 0118 9A60     		str	r2, [r3, #8]
7189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 1347              		.loc 2 7189 1 is_stmt 0 view .LVU419
 1348 011a 04E0     		b	.L87
 1349              	.LVL102:
 1350              	.L89:
7189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 1351              		.loc 2 7189 1 view .LVU420
 1352              	.LBE339:
 1353              	.LBE338:
 750:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 751:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #else
 752:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 753:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 754:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Start ADC group injected conversion */
 755:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         LL_ADC_INJ_StartConversion(hadc->Instance);
 756:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 757:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 758:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 759:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 760:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else
 761:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 762:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Process unlocked */
 763:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1354              		.loc 1 763 7 is_stmt 1 view .LVU421
 1355              		.loc 1 763 7 view .LVU422
 1356 011c 0023     		movs	r3, #0
 1357 011e 84F85430 		strb	r3, [r4, #84]
 1358              		.loc 1 763 7 view .LVU423
 764:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/cc2DBcx1.s 			page 167


 765:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 766:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Return function status */
 767:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     return tmp_hal_status;
 1359              		.loc 1 767 5 view .LVU424
 1360              		.loc 1 767 12 is_stmt 0 view .LVU425
 1361 0122 00E0     		b	.L87
 1362              	.LVL103:
 1363              	.L102:
 630:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 1364              		.loc 1 630 12 view .LVU426
 1365 0124 0220     		movs	r0, #2
 1366              	.LVL104:
 1367              	.L87:
 768:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 769:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 1368              		.loc 1 769 1 view .LVU427
 1369 0126 38BD     		pop	{r3, r4, r5, pc}
 1370              	.LVL105:
 1371              	.L103:
 652:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 1372              		.loc 1 652 5 view .LVU428
 1373 0128 0220     		movs	r0, #2
 1374              	.LVL106:
 652:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 1375              		.loc 1 652 5 view .LVU429
 1376 012a FCE7     		b	.L87
 1377              	.L112:
 1378              		.align	2
 1379              	.L111:
 1380 012c 00830242 		.word	1107460864
 1381 0130 00810242 		.word	1107460352
 1382              		.cfi_endproc
 1383              	.LFE367:
 1385              		.section	.text.HAL_ADCEx_InjectedStop_IT,"ax",%progbits
 1386              		.align	1
 1387              		.global	HAL_ADCEx_InjectedStop_IT
 1388              		.syntax unified
 1389              		.thumb
 1390              		.thumb_func
 1391              		.fpu fpv4-sp-d16
 1393              	HAL_ADCEx_InjectedStop_IT:
 1394              	.LVL107:
 1395              	.LFB368:
 770:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 771:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
 772:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels, disable interruption of
 773:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         end-of-conversion. Disable ADC peripheral if no regular conversion
 774:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         is on going.
 775:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 776:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 777:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 778:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 779:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 780:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (when multimode feature is available):
 781:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStop_IT() API must be called for ADC master first,
 782:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         then for ADC slave.
 783:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled.
ARM GAS  /tmp/cc2DBcx1.s 			page 168


 784:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
 785:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
 786:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop() must be used.
 787:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle
 788:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status
 789:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
 790:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef *hadc)
 791:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 1396              		.loc 1 791 1 is_stmt 1 view -0
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 0
 1399              		@ frame_needed = 0, uses_anonymous_args = 0
 792:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1400              		.loc 1 792 3 view .LVU431
 793:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 794:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
 795:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1401              		.loc 1 795 3 view .LVU432
 796:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 797:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process locked */
 798:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1402              		.loc 1 798 3 view .LVU433
 1403              		.loc 1 798 3 view .LVU434
 1404 0000 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 1405 0004 012B     		cmp	r3, #1
 1406 0006 28D0     		beq	.L117
 791:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1407              		.loc 1 791 1 is_stmt 0 discriminator 2 view .LVU435
 1408 0008 10B5     		push	{r4, lr}
 1409              	.LCFI13:
 1410              		.cfi_def_cfa_offset 8
 1411              		.cfi_offset 4, -8
 1412              		.cfi_offset 14, -4
 1413 000a 0446     		mov	r4, r0
 1414              		.loc 1 798 3 is_stmt 1 discriminator 2 view .LVU436
 1415 000c 0123     		movs	r3, #1
 1416 000e 80F85430 		strb	r3, [r0, #84]
 1417              		.loc 1 798 3 discriminator 2 view .LVU437
 799:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 800:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 801:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 1418              		.loc 1 801 3 discriminator 2 view .LVU438
 1419              		.loc 1 801 20 is_stmt 0 discriminator 2 view .LVU439
 1420 0012 0221     		movs	r1, #2
 1421 0014 FFF7FEFF 		bl	ADC_ConversionStop
 1422              	.LVL108:
 802:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 803:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 804:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* and if no conversion on the other group (regular group) is intended to   */
 805:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* continue.                                                                */
 806:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1423              		.loc 1 806 3 is_stmt 1 discriminator 2 view .LVU440
 1424              		.loc 1 806 6 is_stmt 0 discriminator 2 view .LVU441
 1425 0018 68B9     		cbnz	r0, .L115
 807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 808:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for injected channels */
 809:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_JEOC | ADC_IT_JEOS | ADC_FLAG_JQOVF));
ARM GAS  /tmp/cc2DBcx1.s 			page 169


 1426              		.loc 1 809 5 is_stmt 1 view .LVU442
 1427 001a 2268     		ldr	r2, [r4]
 1428 001c 5368     		ldr	r3, [r2, #4]
 1429 001e 23F48C63 		bic	r3, r3, #1120
 1430 0022 5360     		str	r3, [r2, #4]
 810:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 811:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 1431              		.loc 1 811 5 view .LVU443
 1432              		.loc 1 811 44 is_stmt 0 view .LVU444
 1433 0024 2368     		ldr	r3, [r4]
 1434              	.LVL109:
 1435              	.LBB340:
 1436              	.LBI340:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 1437              		.loc 2 6991 26 is_stmt 1 view .LVU445
 1438              	.LBB341:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1439              		.loc 2 6993 3 view .LVU446
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1440              		.loc 2 6993 12 is_stmt 0 view .LVU447
 1441 0026 9B68     		ldr	r3, [r3, #8]
 1442              	.LVL110:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1443              		.loc 2 6993 74 view .LVU448
 1444 0028 13F0040F 		tst	r3, #4
 1445 002c 07D0     		beq	.L116
 1446              	.LVL111:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1447              		.loc 2 6993 74 view .LVU449
 1448              	.LBE341:
 1449              	.LBE340:
 812:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 813:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
 814:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 815:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 816:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 817:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 818:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 819:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Set ADC state */
 820:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 821:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 822:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
 823:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 824:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 825:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
 826:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 827:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else
 828:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 829:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Set ADC state */
 830:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1450              		.loc 1 830 7 is_stmt 1 view .LVU450
 1451 002e A36D     		ldr	r3, [r4, #88]
 1452 0030 23F48053 		bic	r3, r3, #4096
 1453 0034 A365     		str	r3, [r4, #88]
 1454              	.L115:
 831:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 832:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
ARM GAS  /tmp/cc2DBcx1.s 			page 170


 833:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 834:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process unlocked */
 835:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1455              		.loc 1 835 3 view .LVU451
 1456              		.loc 1 835 3 view .LVU452
 1457 0036 0023     		movs	r3, #0
 1458 0038 84F85430 		strb	r3, [r4, #84]
 1459              		.loc 1 835 3 view .LVU453
 836:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 837:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Return function status */
 838:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return tmp_hal_status;
 1460              		.loc 1 838 3 view .LVU454
 839:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 1461              		.loc 1 839 1 is_stmt 0 view .LVU455
 1462 003c 10BD     		pop	{r4, pc}
 1463              	.LVL112:
 1464              	.L116:
 814:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 1465              		.loc 1 814 7 is_stmt 1 view .LVU456
 814:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 1466              		.loc 1 814 24 is_stmt 0 view .LVU457
 1467 003e 2046     		mov	r0, r4
 1468              	.LVL113:
 814:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 1469              		.loc 1 814 24 view .LVU458
 1470 0040 FFF7FEFF 		bl	ADC_Disable
 1471              	.LVL114:
 817:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 1472              		.loc 1 817 7 is_stmt 1 view .LVU459
 817:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 1473              		.loc 1 817 10 is_stmt 0 view .LVU460
 1474 0044 0028     		cmp	r0, #0
 1475 0046 F6D1     		bne	.L115
 820:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1476              		.loc 1 820 9 is_stmt 1 view .LVU461
 1477 0048 A36D     		ldr	r3, [r4, #88]
 1478 004a 23F48853 		bic	r3, r3, #4352
 1479 004e 23F00103 		bic	r3, r3, #1
 1480 0052 43F00103 		orr	r3, r3, #1
 1481 0056 A365     		str	r3, [r4, #88]
 1482 0058 EDE7     		b	.L115
 1483              	.LVL115:
 1484              	.L117:
 1485              	.LCFI14:
 1486              		.cfi_def_cfa_offset 0
 1487              		.cfi_restore 4
 1488              		.cfi_restore 14
 798:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 1489              		.loc 1 798 3 is_stmt 0 view .LVU462
 1490 005a 0220     		movs	r0, #2
 1491              	.LVL116:
 1492              		.loc 1 839 1 view .LVU463
 1493 005c 7047     		bx	lr
 1494              		.cfi_endproc
 1495              	.LFE368:
 1497              		.section	.text.HAL_ADCEx_MultiModeStart_DMA,"ax",%progbits
 1498              		.align	1
ARM GAS  /tmp/cc2DBcx1.s 			page 171


 1499              		.global	HAL_ADCEx_MultiModeStart_DMA
 1500              		.syntax unified
 1501              		.thumb
 1502              		.thumb_func
 1503              		.fpu fpv4-sp-d16
 1505              	HAL_ADCEx_MultiModeStart_DMA:
 1506              	.LVL117:
 1507              	.LFB369:
 840:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 841:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 842:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
 843:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Enable ADC, start MultiMode conversion and transfer regular results through DMA.
 844:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   Multimode must have been previously configured using
 845:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         HAL_ADCEx_MultiModeConfigChannel() function.
 846:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
 847:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *          overrun, DMA half transfer, DMA transfer complete.
 848:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
 849:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   State field of Slave ADC handle is not updated in this configuration:
 850:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *          user should not rely on it for information related to Slave regular
 851:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         conversions.
 852:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
 853:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param pData Destination Buffer address.
 854:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param Length Length of data to be transferred from ADC peripheral to memory (in bytes).
 855:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status
 856:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
 857:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStart_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t L
 858:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 1508              		.loc 1 858 1 is_stmt 1 view -0
 1509              		.cfi_startproc
 1510              		@ args = 0, pretend = 0, frame = 216
 1511              		@ frame_needed = 0, uses_anonymous_args = 0
 1512              		.loc 1 858 1 is_stmt 0 view .LVU465
 1513 0000 70B5     		push	{r4, r5, r6, lr}
 1514              	.LCFI15:
 1515              		.cfi_def_cfa_offset 16
 1516              		.cfi_offset 4, -16
 1517              		.cfi_offset 5, -12
 1518              		.cfi_offset 6, -8
 1519              		.cfi_offset 14, -4
 1520 0002 B6B0     		sub	sp, sp, #216
 1521              	.LCFI16:
 1522              		.cfi_def_cfa_offset 232
 1523 0004 0446     		mov	r4, r0
 859:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1524              		.loc 1 859 3 is_stmt 1 view .LVU466
 860:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmp_hadc_slave;
 1525              		.loc 1 860 3 view .LVU467
 861:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 1526              		.loc 1 861 3 view .LVU468
 862:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t length_bytes;
 1527              		.loc 1 862 3 view .LVU469
 863:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   DMA_NodeConfTypeDef node_conf;
 1528              		.loc 1 863 3 view .LVU470
 864:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 865:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
 866:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 1529              		.loc 1 866 3 view .LVU471
ARM GAS  /tmp/cc2DBcx1.s 			page 172


 867:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 1530              		.loc 1 867 3 view .LVU472
 868:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 1531              		.loc 1 868 3 view .LVU473
 869:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 1532              		.loc 1 869 3 view .LVU474
 870:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 871:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
 1533              		.loc 1 871 3 view .LVU475
 1534              		.loc 1 871 42 is_stmt 0 view .LVU476
 1535 0006 0068     		ldr	r0, [r0]
 1536              	.LVL118:
 1537              	.LBB342:
 1538              	.LBI342:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 1539              		.loc 2 6991 26 is_stmt 1 view .LVU477
 1540              	.LBB343:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1541              		.loc 2 6993 3 view .LVU478
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1542              		.loc 2 6993 12 is_stmt 0 view .LVU479
 1543 0008 8068     		ldr	r0, [r0, #8]
 1544              	.LVL119:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1545              		.loc 2 6993 74 view .LVU480
 1546 000a 10F0040F 		tst	r0, #4
 1547 000e 40F09180 		bne	.L136
 1548 0012 0E46     		mov	r6, r1
 1549 0014 1546     		mov	r5, r2
 1550              	.LVL120:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1551              		.loc 2 6993 74 view .LVU481
 1552              	.LBE343:
 1553              	.LBE342:
 872:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 873:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     return HAL_BUSY;
 874:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 875:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   else
 876:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
 877:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Process locked */
 878:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 1554              		.loc 1 878 5 is_stmt 1 view .LVU482
 1555              		.loc 1 878 5 view .LVU483
 1556 0016 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
 1557 001a 012B     		cmp	r3, #1
 1558 001c 00F08D80 		beq	.L137
 1559              		.loc 1 878 5 discriminator 2 view .LVU484
 1560 0020 0123     		movs	r3, #1
 1561 0022 84F85430 		strb	r3, [r4, #84]
 1562              		.loc 1 878 5 discriminator 2 view .LVU485
 879:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 880:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Temporary handle minimum initialization */
 881:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     __HAL_ADC_RESET_HANDLE_STATE(&tmp_hadc_slave);
 1563              		.loc 1 881 5 discriminator 2 view .LVU486
 1564 0026 0023     		movs	r3, #0
 1565 0028 3293     		str	r3, [sp, #200]
 882:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(&tmp_hadc_slave);
ARM GAS  /tmp/cc2DBcx1.s 			page 173


 1566              		.loc 1 882 5 discriminator 2 view .LVU487
 1567 002a 3393     		str	r3, [sp, #204]
 883:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 884:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
 885:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmp_hadc_slave);
 1568              		.loc 1 885 5 discriminator 2 view .LVU488
 1569 002c 2268     		ldr	r2, [r4]
 1570              	.LVL121:
 1571              		.loc 1 885 5 is_stmt 0 discriminator 2 view .LVU489
 1572 002e 474B     		ldr	r3, .L149
 1573 0030 9A42     		cmp	r2, r3
 1574 0032 4ED0     		beq	.L142
 1575 0034 0023     		movs	r3, #0
 1576 0036 1C93     		str	r3, [sp, #112]
 1577              	.L125:
 886:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 887:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (tmp_hadc_slave.Instance == NULL)
 1578              		.loc 1 887 5 is_stmt 1 view .LVU490
 1579              		.loc 1 887 23 is_stmt 0 view .LVU491
 1580 0038 1C9B     		ldr	r3, [sp, #112]
 1581              		.loc 1 887 8 view .LVU492
 1582 003a 002B     		cmp	r3, #0
 1583 003c 4DD0     		beq	.L143
 888:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 889:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Set ADC state */
 890:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 891:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 892:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Process unlocked */
 893:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 894:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 895:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       return HAL_ERROR;
 896:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 897:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 898:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Enable the ADC peripherals: master and slave (in case if not already   */
 899:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* enabled previously)                                                    */
 900:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 1584              		.loc 1 900 5 is_stmt 1 view .LVU493
 1585              		.loc 1 900 22 is_stmt 0 view .LVU494
 1586 003e 2046     		mov	r0, r4
 1587 0040 FFF7FEFF 		bl	ADC_Enable
 1588              	.LVL122:
 901:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1589              		.loc 1 901 5 is_stmt 1 view .LVU495
 1590              		.loc 1 901 8 is_stmt 0 view .LVU496
 1591 0044 0028     		cmp	r0, #0
 1592 0046 51D0     		beq	.L144
 1593              	.L127:
 902:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 903:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Enable(&tmp_hadc_slave);
 904:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 905:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 906:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Start multimode conversion of ADCs pair */
 907:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1594              		.loc 1 907 5 is_stmt 1 view .LVU497
 1595              		.loc 1 907 8 is_stmt 0 view .LVU498
 1596 0048 0028     		cmp	r0, #0
 1597 004a 6FD1     		bne	.L128
ARM GAS  /tmp/cc2DBcx1.s 			page 174


 908:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 909:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Set ADC state */
 910:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 1598              		.loc 1 910 7 is_stmt 1 view .LVU499
 1599 004c A36D     		ldr	r3, [r4, #88]
 1600 004e 23F47063 		bic	r3, r3, #3840
 1601 0052 23F00103 		bic	r3, r3, #1
 1602 0056 43F48073 		orr	r3, r3, #256
 1603 005a A365     		str	r3, [r4, #88]
 911:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                         (HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_
 912:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY);
 913:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 914:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Set ADC error code to none */
 915:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 1604              		.loc 1 915 7 view .LVU500
 1605 005c 0023     		movs	r3, #0
 1606 005e E365     		str	r3, [r4, #92]
 916:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 917:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Set the DMA transfer complete callback */
 918:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 1607              		.loc 1 918 7 view .LVU501
 1608              		.loc 1 918 11 is_stmt 0 view .LVU502
 1609 0060 226D     		ldr	r2, [r4, #80]
 1610              		.loc 1 918 42 view .LVU503
 1611 0062 3B49     		ldr	r1, .L149+4
 1612 0064 1166     		str	r1, [r2, #96]
 919:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 920:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Set the DMA half transfer complete callback */
 921:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 1613              		.loc 1 921 7 is_stmt 1 view .LVU504
 1614              		.loc 1 921 11 is_stmt 0 view .LVU505
 1615 0066 226D     		ldr	r2, [r4, #80]
 1616              		.loc 1 921 46 view .LVU506
 1617 0068 3A49     		ldr	r1, .L149+8
 1618 006a 5166     		str	r1, [r2, #100]
 922:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 923:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Set the DMA error callback */
 924:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError ;
 1619              		.loc 1 924 7 is_stmt 1 view .LVU507
 1620              		.loc 1 924 11 is_stmt 0 view .LVU508
 1621 006c 226D     		ldr	r2, [r4, #80]
 1622              		.loc 1 924 43 view .LVU509
 1623 006e 3A49     		ldr	r1, .L149+12
 1624 0070 9166     		str	r1, [r2, #104]
 925:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 926:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Pointer to the common control register  */
 927:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
 1625              		.loc 1 927 7 is_stmt 1 view .LVU510
 1626              	.LVL123:
 928:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 929:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
 930:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* start (in case of SW start):                                           */
 931:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 932:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Clear regular group conversion flag and overrun flag */
 933:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 934:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 1627              		.loc 1 934 7 view .LVU511
ARM GAS  /tmp/cc2DBcx1.s 			page 175


 1628 0072 2268     		ldr	r2, [r4]
 1629 0074 1C21     		movs	r1, #28
 1630 0076 1160     		str	r1, [r2]
 935:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 936:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Process unlocked */
 937:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 938:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 939:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1631              		.loc 1 939 7 view .LVU512
 1632              		.loc 1 939 7 view .LVU513
 1633 0078 84F85430 		strb	r3, [r4, #84]
 1634              		.loc 1 939 7 view .LVU514
 940:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 941:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Enable ADC overrun interrupt */
 942:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 1635              		.loc 1 942 7 view .LVU515
 1636 007c 2268     		ldr	r2, [r4]
 1637 007e 5368     		ldr	r3, [r2, #4]
 1638 0080 43F01003 		orr	r3, r3, #16
 1639 0084 5360     		str	r3, [r2, #4]
 943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 944:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Check linkedlist mode */
 945:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if ((hadc->DMA_Handle->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 1640              		.loc 1 945 7 view .LVU516
 1641              		.loc 1 945 16 is_stmt 0 view .LVU517
 1642 0086 206D     		ldr	r0, [r4, #80]
 1643              	.LVL124:
 1644              		.loc 1 945 28 view .LVU518
 1645 0088 036D     		ldr	r3, [r0, #80]
 1646              		.loc 1 945 10 view .LVU519
 1647 008a 13F0800F 		tst	r3, #128
 1648 008e 35D0     		beq	.L129
 946:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 947:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         if ((hadc->DMA_Handle->LinkedListQueue != NULL) && (hadc->DMA_Handle->LinkedListQueue->Head
 1649              		.loc 1 947 9 is_stmt 1 view .LVU520
 1650              		.loc 1 947 30 is_stmt 0 view .LVU521
 1651 0090 436F     		ldr	r3, [r0, #116]
 1652              		.loc 1 947 12 view .LVU522
 1653 0092 002B     		cmp	r3, #0
 1654 0094 53D0     		beq	.L138
 1655              		.loc 1 947 94 discriminator 1 view .LVU523
 1656 0096 1968     		ldr	r1, [r3]
 1657              		.loc 1 947 57 discriminator 1 view .LVU524
 1658 0098 0029     		cmp	r1, #0
 1659 009a 52D0     		beq	.L139
 948:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
 949:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           /* Length should be converted to number of bytes */
 950:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           if (HAL_DMAEx_List_GetNodeConfig(&node_conf, hadc->DMA_Handle->LinkedListQueue->Head) != 
 1660              		.loc 1 950 11 is_stmt 1 view .LVU525
 1661              		.loc 1 950 15 is_stmt 0 view .LVU526
 1662 009c 01A8     		add	r0, sp, #4
 1663 009e FFF7FEFF 		bl	HAL_DMAEx_List_GetNodeConfig
 1664              	.LVL125:
 1665              		.loc 1 950 14 view .LVU527
 1666 00a2 0028     		cmp	r0, #0
 1667 00a4 4FD1     		bne	.L140
 951:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           {
ARM GAS  /tmp/cc2DBcx1.s 			page 176


 952:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             return HAL_ERROR;
 953:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           }
 954:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 955:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           /* Length should be converted to number of bytes */
 956:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           if (node_conf.Init.SrcDataWidth == DMA_SRC_DATAWIDTH_WORD)
 1668              		.loc 1 956 11 is_stmt 1 view .LVU528
 1669              		.loc 1 956 29 is_stmt 0 view .LVU529
 1670 00a6 079B     		ldr	r3, [sp, #28]
 1671              		.loc 1 956 14 view .LVU530
 1672 00a8 022B     		cmp	r3, #2
 1673 00aa 23D0     		beq	.L145
 957:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           {
 958:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             /* Word -> Bytes */
 959:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             length_bytes = Length * 4U;
 960:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           }
 961:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           else if (node_conf.Init.SrcDataWidth == DMA_SRC_DATAWIDTH_HALFWORD)
 1674              		.loc 1 961 16 is_stmt 1 view .LVU531
 1675              		.loc 1 961 19 is_stmt 0 view .LVU532
 1676 00ac 012B     		cmp	r3, #1
 1677 00ae 23D0     		beq	.L146
 1678              	.LVL126:
 1679              	.L131:
 962:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           {
 963:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             /* Halfword -> Bytes */
 964:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             length_bytes = Length * 2U;
 965:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           }
 966:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           else /* Bytes */
 967:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           {
 968:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             /* Same size already expressed in Bytes */
 969:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             length_bytes = Length;
 970:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           }
 971:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 972:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           hadc->DMA_Handle->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = (uint3
 1680              		.loc 1 972 11 is_stmt 1 view .LVU533
 1681              		.loc 1 972 15 is_stmt 0 view .LVU534
 1682 00b0 236D     		ldr	r3, [r4, #80]
 1683              		.loc 1 972 27 view .LVU535
 1684 00b2 5B6F     		ldr	r3, [r3, #116]
 1685              		.loc 1 972 44 view .LVU536
 1686 00b4 1B68     		ldr	r3, [r3]
 1687              		.loc 1 972 92 view .LVU537
 1688 00b6 9D60     		str	r5, [r3, #8]
 973:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           hadc->DMA_Handle->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] =       
 1689              		.loc 1 973 11 is_stmt 1 view .LVU538
 1690              		.loc 1 973 15 is_stmt 0 view .LVU539
 1691 00b8 236D     		ldr	r3, [r4, #80]
 1692              		.loc 1 973 27 view .LVU540
 1693 00ba 5B6F     		ldr	r3, [r3, #116]
 1694              		.loc 1 973 44 view .LVU541
 1695 00bc 1B68     		ldr	r3, [r3]
 1696              		.loc 1 973 92 view .LVU542
 1697 00be 274A     		ldr	r2, .L149+16
 1698 00c0 DA60     		str	r2, [r3, #12]
 974:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****               (uint32_t)&tmpADC_Common->CDR;
 975:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           hadc->DMA_Handle->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint3
 1699              		.loc 1 975 11 is_stmt 1 view .LVU543
 1700              		.loc 1 975 15 is_stmt 0 view .LVU544
ARM GAS  /tmp/cc2DBcx1.s 			page 177


 1701 00c2 236D     		ldr	r3, [r4, #80]
 1702              		.loc 1 975 27 view .LVU545
 1703 00c4 5B6F     		ldr	r3, [r3, #116]
 1704              		.loc 1 975 44 view .LVU546
 1705 00c6 1B68     		ldr	r3, [r3]
 1706              		.loc 1 975 92 view .LVU547
 1707 00c8 1E61     		str	r6, [r3, #16]
 976:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           tmp_hal_status = HAL_DMAEx_List_Start_IT(hadc->DMA_Handle);
 1708              		.loc 1 976 11 is_stmt 1 view .LVU548
 1709              		.loc 1 976 28 is_stmt 0 view .LVU549
 1710 00ca 206D     		ldr	r0, [r4, #80]
 1711 00cc FFF7FEFF 		bl	HAL_DMAEx_List_Start_IT
 1712              	.LVL127:
 1713              		.loc 1 976 28 view .LVU550
 1714 00d0 1EE0     		b	.L132
 1715              	.LVL128:
 1716              	.L142:
 885:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 1717              		.loc 1 885 5 discriminator 1 view .LVU551
 1718 00d2 03F58073 		add	r3, r3, #256
 1719 00d6 1C93     		str	r3, [sp, #112]
 1720 00d8 AEE7     		b	.L125
 1721              	.L143:
 890:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 1722              		.loc 1 890 7 is_stmt 1 view .LVU552
 1723 00da A36D     		ldr	r3, [r4, #88]
 1724 00dc 43F02003 		orr	r3, r3, #32
 1725 00e0 A365     		str	r3, [r4, #88]
 893:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 1726              		.loc 1 893 7 view .LVU553
 893:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 1727              		.loc 1 893 7 view .LVU554
 1728 00e2 0023     		movs	r3, #0
 1729 00e4 84F85430 		strb	r3, [r4, #84]
 893:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 1730              		.loc 1 893 7 view .LVU555
 895:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 1731              		.loc 1 895 7 view .LVU556
 895:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 1732              		.loc 1 895 14 is_stmt 0 view .LVU557
 1733 00e8 0120     		movs	r0, #1
 1734 00ea 24E0     		b	.L123
 1735              	.LVL129:
 1736              	.L144:
 903:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 1737              		.loc 1 903 7 is_stmt 1 view .LVU558
 903:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 1738              		.loc 1 903 24 is_stmt 0 view .LVU559
 1739 00ec 1CA8     		add	r0, sp, #112
 1740              	.LVL130:
 903:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 1741              		.loc 1 903 24 view .LVU560
 1742 00ee FFF7FEFF 		bl	ADC_Enable
 1743              	.LVL131:
 903:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 1744              		.loc 1 903 24 view .LVU561
 1745 00f2 A9E7     		b	.L127
ARM GAS  /tmp/cc2DBcx1.s 			page 178


 1746              	.LVL132:
 1747              	.L145:
 959:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           }
 1748              		.loc 1 959 13 is_stmt 1 view .LVU562
 959:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           }
 1749              		.loc 1 959 26 is_stmt 0 view .LVU563
 1750 00f4 AD00     		lsls	r5, r5, #2
 1751              	.LVL133:
 959:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           }
 1752              		.loc 1 959 26 view .LVU564
 1753 00f6 DBE7     		b	.L131
 1754              	.LVL134:
 1755              	.L146:
 964:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           }
 1756              		.loc 1 964 13 is_stmt 1 view .LVU565
 964:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           }
 1757              		.loc 1 964 26 is_stmt 0 view .LVU566
 1758 00f8 6D00     		lsls	r5, r5, #1
 1759              	.LVL135:
 964:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           }
 1760              		.loc 1 964 26 view .LVU567
 1761 00fa D9E7     		b	.L131
 1762              	.LVL136:
 1763              	.L129:
 977:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 978:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         else
 979:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
 980:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           return HAL_ERROR;
 981:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 982:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 983:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       else
 984:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 985:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Length should be converted to number of bytes */
 986:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         if (hadc->DMA_Handle->Init.SrcDataWidth == DMA_SRC_DATAWIDTH_WORD)
 1764              		.loc 1 986 9 is_stmt 1 view .LVU568
 1765              		.loc 1 986 35 is_stmt 0 view .LVU569
 1766 00fc 8369     		ldr	r3, [r0, #24]
 1767              		.loc 1 986 12 view .LVU570
 1768 00fe 022B     		cmp	r3, #2
 1769 0100 10D0     		beq	.L147
 987:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
 988:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           /* Word -> Bytes */
 989:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           length_bytes = Length * 4U;
 990:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 991:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         else if (hadc->DMA_Handle->Init.SrcDataWidth == DMA_SRC_DATAWIDTH_HALFWORD)
 1770              		.loc 1 991 14 is_stmt 1 view .LVU571
 1771              		.loc 1 991 17 is_stmt 0 view .LVU572
 1772 0102 012B     		cmp	r3, #1
 1773 0104 10D0     		beq	.L148
 1774              	.LVL137:
 1775              	.L134:
 992:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
 993:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           /* Halfword -> Bytes */
 994:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           length_bytes = Length * 2U;
 995:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 996:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         else /* Bytes */
 997:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
ARM GAS  /tmp/cc2DBcx1.s 			page 179


 998:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           /* Same size already expressed in Bytes */
 999:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           length_bytes = Length;
1000:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
1001:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1002:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Start the DMA channel */
1003:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&tmpADC_Common->CDR, (uint32_
 1776              		.loc 1 1003 9 is_stmt 1 view .LVU573
 1777              		.loc 1 1003 26 is_stmt 0 view .LVU574
 1778 0106 2B46     		mov	r3, r5
 1779 0108 3246     		mov	r2, r6
 1780 010a 1449     		ldr	r1, .L149+16
 1781 010c FFF7FEFF 		bl	HAL_DMA_Start_IT
 1782              	.LVL138:
 1783              	.L132:
1004:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                           length_bytes);
1005:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1006:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1007:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Enable conversion of regular group.                                    */
1008:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
1009:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
1010:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* trigger event.                                                         */
1011:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Start ADC group regular conversion */
1012:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
 1784              		.loc 1 1012 7 is_stmt 1 view .LVU575
 1785 0110 2268     		ldr	r2, [r4]
 1786              	.LVL139:
 1787              	.LBB344:
 1788              	.LBI344:
6955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 1789              		.loc 2 6955 22 view .LVU576
 1790              	.LBB345:
6960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 1791              		.loc 2 6960 3 view .LVU577
 1792 0112 9368     		ldr	r3, [r2, #8]
 1793 0114 23F00043 		bic	r3, r3, #-2147483648
 1794 0118 23F03F03 		bic	r3, r3, #63
 1795 011c 43F00403 		orr	r3, r3, #4
 1796 0120 9360     		str	r3, [r2, #8]
6963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 1797              		.loc 2 6963 1 is_stmt 0 view .LVU578
 1798 0122 08E0     		b	.L123
 1799              	.LVL140:
 1800              	.L147:
6963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 1801              		.loc 2 6963 1 view .LVU579
 1802              	.LBE345:
 1803              	.LBE344:
 989:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 1804              		.loc 1 989 11 is_stmt 1 view .LVU580
 989:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 1805              		.loc 1 989 24 is_stmt 0 view .LVU581
 1806 0124 AD00     		lsls	r5, r5, #2
 1807              	.LVL141:
 989:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 1808              		.loc 1 989 24 view .LVU582
 1809 0126 EEE7     		b	.L134
 1810              	.LVL142:
ARM GAS  /tmp/cc2DBcx1.s 			page 180


 1811              	.L148:
 994:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 1812              		.loc 1 994 11 is_stmt 1 view .LVU583
 994:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 1813              		.loc 1 994 24 is_stmt 0 view .LVU584
 1814 0128 6D00     		lsls	r5, r5, #1
 1815              	.LVL143:
 994:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 1816              		.loc 1 994 24 view .LVU585
 1817 012a ECE7     		b	.L134
 1818              	.LVL144:
 1819              	.L128:
1013:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1014:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else
1015:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1016:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Process unlocked */
1017:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1820              		.loc 1 1017 7 is_stmt 1 view .LVU586
 1821              		.loc 1 1017 7 view .LVU587
 1822 012c 0023     		movs	r3, #0
 1823 012e 84F85430 		strb	r3, [r4, #84]
 1824              		.loc 1 1017 7 view .LVU588
1018:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1019:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1020:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Return function status */
1021:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     return tmp_hal_status;
 1825              		.loc 1 1021 5 view .LVU589
 1826              		.loc 1 1021 12 is_stmt 0 view .LVU590
 1827 0132 00E0     		b	.L123
 1828              	.LVL145:
 1829              	.L136:
 873:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 1830              		.loc 1 873 12 view .LVU591
 1831 0134 0220     		movs	r0, #2
 1832              	.LVL146:
 1833              	.L123:
1022:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
1023:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 1834              		.loc 1 1023 1 view .LVU592
 1835 0136 36B0     		add	sp, sp, #216
 1836              	.LCFI17:
 1837              		.cfi_remember_state
 1838              		.cfi_def_cfa_offset 16
 1839              		@ sp needed
 1840 0138 70BD     		pop	{r4, r5, r6, pc}
 1841              	.LVL147:
 1842              	.L137:
 1843              	.LCFI18:
 1844              		.cfi_restore_state
 878:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 1845              		.loc 1 878 5 view .LVU593
 1846 013a 0220     		movs	r0, #2
 1847 013c FBE7     		b	.L123
 1848              	.LVL148:
 1849              	.L138:
 980:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 1850              		.loc 1 980 18 view .LVU594
ARM GAS  /tmp/cc2DBcx1.s 			page 181


 1851 013e 0120     		movs	r0, #1
 1852 0140 F9E7     		b	.L123
 1853              	.L139:
 1854 0142 0120     		movs	r0, #1
 1855 0144 F7E7     		b	.L123
 1856              	.L140:
 952:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           }
 1857              		.loc 1 952 20 view .LVU595
 1858 0146 0120     		movs	r0, #1
 1859 0148 F5E7     		b	.L123
 1860              	.L150:
 1861 014a 00BF     		.align	2
 1862              	.L149:
 1863 014c 00800242 		.word	1107460096
 1864 0150 00000000 		.word	ADC_DMAConvCplt
 1865 0154 00000000 		.word	ADC_DMAHalfConvCplt
 1866 0158 00000000 		.word	ADC_DMAError
 1867 015c 0C830242 		.word	1107460876
 1868              		.cfi_endproc
 1869              	.LFE369:
 1871              		.section	.text.HAL_ADCEx_MultiModeStop_DMA,"ax",%progbits
 1872              		.align	1
 1873              		.global	HAL_ADCEx_MultiModeStop_DMA
 1874              		.syntax unified
 1875              		.thumb
 1876              		.thumb_func
 1877              		.fpu fpv4-sp-d16
 1879              	HAL_ADCEx_MultiModeStop_DMA:
 1880              	.LVL149:
 1881              	.LFB370:
1024:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1025:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
1026:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Stop multimode ADC conversion, disable ADC DMA transfer, disable ADC peripheral.
1027:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. MultiMode DMA bits
1028:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         (MDMA and DMACFG bits of common CCR register) are maintained. To disable
1029:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         Multimode (set with HAL_ADCEx_MultiModeConfigChannel()), ADC must be
1030:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_DeInit(), or the user can
1031:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         resort to HAL_ADCEx_DisableMultiMode() API.
1032:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function
1033:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         HAL_ADC_Stop_DMA() must be called after this function with handle of
1034:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
1035:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
1036:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status
1037:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1038:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStop_DMA(ADC_HandleTypeDef *hadc)
1039:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 1882              		.loc 1 1039 1 is_stmt 1 view -0
 1883              		.cfi_startproc
 1884              		@ args = 0, pretend = 0, frame = 104
 1885              		@ frame_needed = 0, uses_anonymous_args = 0
 1886              		.loc 1 1039 1 is_stmt 0 view .LVU597
 1887 0000 70B5     		push	{r4, r5, r6, lr}
 1888              	.LCFI19:
 1889              		.cfi_def_cfa_offset 16
 1890              		.cfi_offset 4, -16
 1891              		.cfi_offset 5, -12
 1892              		.cfi_offset 6, -8
ARM GAS  /tmp/cc2DBcx1.s 			page 182


 1893              		.cfi_offset 14, -4
 1894 0002 9AB0     		sub	sp, sp, #104
 1895              	.LCFI20:
 1896              		.cfi_def_cfa_offset 120
1040:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1897              		.loc 1 1040 3 is_stmt 1 view .LVU598
1041:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tickstart;
 1898              		.loc 1 1041 3 view .LVU599
1042:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmp_hadc_slave;
 1899              		.loc 1 1042 3 view .LVU600
1043:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_hadc_slave_conversion_on_going;
 1900              		.loc 1 1043 3 view .LVU601
1044:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hadc_slave_disable_status;
 1901              		.loc 1 1044 3 view .LVU602
1045:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1046:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
1047:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 1902              		.loc 1 1047 3 view .LVU603
1048:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1049:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process locked */
1050:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1903              		.loc 1 1050 3 view .LVU604
 1904              		.loc 1 1050 3 view .LVU605
 1905 0004 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 1906 0008 012B     		cmp	r3, #1
 1907 000a 00F08580 		beq	.L169
 1908 000e 0446     		mov	r4, r0
 1909              		.loc 1 1050 3 discriminator 2 view .LVU606
 1910 0010 0123     		movs	r3, #1
 1911 0012 80F85430 		strb	r3, [r0, #84]
 1912              		.loc 1 1050 3 discriminator 2 view .LVU607
1051:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1052:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular and injected groups */
1053:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 1913              		.loc 1 1053 3 discriminator 2 view .LVU608
 1914              		.loc 1 1053 20 is_stmt 0 discriminator 2 view .LVU609
 1915 0016 0321     		movs	r1, #3
 1916 0018 FFF7FEFF 		bl	ADC_ConversionStop
 1917              	.LVL150:
1054:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1055:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1056:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1918              		.loc 1 1056 3 is_stmt 1 discriminator 2 view .LVU610
 1919              		.loc 1 1056 6 is_stmt 0 discriminator 2 view .LVU611
 1920 001c 0546     		mov	r5, r0
 1921 001e 0028     		cmp	r0, #0
 1922 0020 74D1     		bne	.L153
1057:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
1058:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Temporary handle minimum initialization */
1059:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     __HAL_ADC_RESET_HANDLE_STATE(&tmp_hadc_slave);
 1923              		.loc 1 1059 5 is_stmt 1 view .LVU612
 1924 0022 0023     		movs	r3, #0
 1925 0024 1693     		str	r3, [sp, #88]
1060:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(&tmp_hadc_slave);
 1926              		.loc 1 1060 5 view .LVU613
 1927 0026 1793     		str	r3, [sp, #92]
1061:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cc2DBcx1.s 			page 183


1062:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
1063:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmp_hadc_slave);
 1928              		.loc 1 1063 5 view .LVU614
 1929 0028 2268     		ldr	r2, [r4]
 1930 002a 3C4B     		ldr	r3, .L176
 1931 002c 9A42     		cmp	r2, r3
 1932 002e 0DD0     		beq	.L172
 1933              		.loc 1 1063 5 is_stmt 0 discriminator 2 view .LVU615
 1934 0030 0023     		movs	r3, #0
 1935 0032 0093     		str	r3, [sp]
 1936              	.L155:
1064:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1065:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (tmp_hadc_slave.Instance == NULL)
 1937              		.loc 1 1065 5 is_stmt 1 view .LVU616
 1938              		.loc 1 1065 23 is_stmt 0 view .LVU617
 1939 0034 009B     		ldr	r3, [sp]
 1940              		.loc 1 1065 8 view .LVU618
 1941 0036 6BB1     		cbz	r3, .L173
1066:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1067:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1068:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1069:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1070:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Process unlocked */
1071:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1072:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1073:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       return HAL_ERROR;
1074:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1075:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1076:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
1077:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
1078:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1079:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* 1. Wait for ADC conversion completion for ADC master and ADC slave */
1080:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 1942              		.loc 1 1080 5 is_stmt 1 view .LVU619
 1943              		.loc 1 1080 17 is_stmt 0 view .LVU620
 1944 0038 FFF7FEFF 		bl	HAL_GetTick
 1945              	.LVL151:
 1946              		.loc 1 1080 17 view .LVU621
 1947 003c 0546     		mov	r5, r0
 1948              	.LVL152:
1081:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1082:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hadc_slave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmp_hadc_slave)->Instance
 1949              		.loc 1 1082 5 is_stmt 1 view .LVU622
 1950              		.loc 1 1082 90 is_stmt 0 view .LVU623
 1951 003e 009B     		ldr	r3, [sp]
 1952              	.LVL153:
 1953              	.LBB346:
 1954              	.LBI346:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 1955              		.loc 2 6991 26 is_stmt 1 view .LVU624
 1956              	.LBB347:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1957              		.loc 2 6993 3 view .LVU625
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1958              		.loc 2 6993 12 is_stmt 0 view .LVU626
 1959 0040 9B68     		ldr	r3, [r3, #8]
 1960              	.LVL154:
ARM GAS  /tmp/cc2DBcx1.s 			page 184


6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1961              		.loc 2 6993 74 view .LVU627
 1962 0042 13F00403 		ands	r3, r3, #4
 1963 0046 13D0     		beq	.L164
 1964 0048 0123     		movs	r3, #1
 1965 004a 11E0     		b	.L164
 1966              	.LVL155:
 1967              	.L172:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1968              		.loc 2 6993 74 view .LVU628
 1969              	.LBE347:
 1970              	.LBE346:
1063:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 1971              		.loc 1 1063 5 discriminator 1 view .LVU629
 1972 004c 03F58073 		add	r3, r3, #256
 1973 0050 0093     		str	r3, [sp]
 1974 0052 EFE7     		b	.L155
 1975              	.L173:
1068:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 1976              		.loc 1 1068 7 is_stmt 1 view .LVU630
 1977 0054 A36D     		ldr	r3, [r4, #88]
 1978 0056 43F02003 		orr	r3, r3, #32
 1979 005a A365     		str	r3, [r4, #88]
1071:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 1980              		.loc 1 1071 7 view .LVU631
1071:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 1981              		.loc 1 1071 7 view .LVU632
 1982 005c 0023     		movs	r3, #0
 1983 005e 84F85430 		strb	r3, [r4, #84]
1071:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 1984              		.loc 1 1071 7 view .LVU633
1073:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 1985              		.loc 1 1073 7 view .LVU634
1073:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 1986              		.loc 1 1073 14 is_stmt 0 view .LVU635
 1987 0062 0125     		movs	r5, #1
 1988 0064 55E0     		b	.L152
 1989              	.LVL156:
 1990              	.L159:
1083:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1084:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****            || (tmp_hadc_slave_conversion_on_going == 1UL)
1085:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           )
1086:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
1088:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1089:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
1090:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         tmp_hadc_slave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmp_hadc_slave)->Inst
1091:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1092:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             || (tmp_hadc_slave_conversion_on_going == 1UL)
1093:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****            )
1094:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
1095:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
1096:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1097:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1098:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           /* Process unlocked */
1099:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1100:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cc2DBcx1.s 			page 185


1101:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           return HAL_ERROR;
1102:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
1103:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1104:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1105:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       tmp_hadc_slave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmp_hadc_slave)->Instan
 1991              		.loc 1 1105 7 is_stmt 1 view .LVU636
 1992              		.loc 1 1105 92 is_stmt 0 view .LVU637
 1993 0066 009B     		ldr	r3, [sp]
 1994              	.LVL157:
 1995              	.LBB348:
 1996              	.LBI348:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 1997              		.loc 2 6991 26 is_stmt 1 view .LVU638
 1998              	.LBB349:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1999              		.loc 2 6993 3 view .LVU639
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2000              		.loc 2 6993 12 is_stmt 0 view .LVU640
 2001 0068 9B68     		ldr	r3, [r3, #8]
 2002              	.LVL158:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2003              		.loc 2 6993 74 view .LVU641
 2004 006a 13F00403 		ands	r3, r3, #4
 2005 006e 21D1     		bne	.L162
 2006              	.LVL159:
 2007              	.L164:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2008              		.loc 2 6993 74 view .LVU642
 2009              	.LBE349:
 2010              	.LBE348:
1083:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
 2011              		.loc 1 1083 11 is_stmt 1 view .LVU643
1083:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
 2012              		.loc 1 1083 48 is_stmt 0 view .LVU644
 2013 0070 2268     		ldr	r2, [r4]
 2014              	.LVL160:
 2015              	.LBB351:
 2016              	.LBI351:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2017              		.loc 2 6991 26 is_stmt 1 view .LVU645
 2018              	.LBB352:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2019              		.loc 2 6993 3 view .LVU646
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2020              		.loc 2 6993 12 is_stmt 0 view .LVU647
 2021 0072 9268     		ldr	r2, [r2, #8]
 2022              	.LVL161:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2023              		.loc 2 6993 74 view .LVU648
 2024 0074 12F0040F 		tst	r2, #4
 2025 0078 01D1     		bne	.L165
 2026              	.LVL162:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2027              		.loc 2 6993 74 view .LVU649
 2028              	.LBE352:
 2029              	.LBE351:
1084:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           )
ARM GAS  /tmp/cc2DBcx1.s 			page 186


 2030              		.loc 1 1084 12 view .LVU650
 2031 007a 012B     		cmp	r3, #1
 2032 007c 1CD1     		bne	.L174
 2033              	.L165:
1087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 2034              		.loc 1 1087 7 is_stmt 1 view .LVU651
1087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 2035              		.loc 1 1087 12 is_stmt 0 view .LVU652
 2036 007e FFF7FEFF 		bl	HAL_GetTick
 2037              	.LVL163:
1087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 2038              		.loc 1 1087 26 view .LVU653
 2039 0082 431B     		subs	r3, r0, r5
1087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 2040              		.loc 1 1087 10 view .LVU654
 2041 0084 052B     		cmp	r3, #5
 2042 0086 EED9     		bls	.L159
1090:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
 2043              		.loc 1 1090 9 is_stmt 1 view .LVU655
1090:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
 2044              		.loc 1 1090 94 is_stmt 0 view .LVU656
 2045 0088 009B     		ldr	r3, [sp]
 2046              	.LVL164:
 2047              	.LBB353:
 2048              	.LBI353:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2049              		.loc 2 6991 26 is_stmt 1 view .LVU657
 2050              	.LBB354:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2051              		.loc 2 6993 3 view .LVU658
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2052              		.loc 2 6993 12 is_stmt 0 view .LVU659
 2053 008a 9B68     		ldr	r3, [r3, #8]
 2054              	.LVL165:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2055              		.loc 2 6993 74 view .LVU660
 2056 008c 13F00403 		ands	r3, r3, #4
 2057 0090 00D0     		beq	.L160
 2058 0092 0123     		movs	r3, #1
 2059              	.L160:
 2060              	.LVL166:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2061              		.loc 2 6993 74 view .LVU661
 2062              	.LBE354:
 2063              	.LBE353:
1091:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             || (tmp_hadc_slave_conversion_on_going == 1UL)
 2064              		.loc 1 1091 9 is_stmt 1 view .LVU662
1091:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             || (tmp_hadc_slave_conversion_on_going == 1UL)
 2065              		.loc 1 1091 49 is_stmt 0 view .LVU663
 2066 0094 2268     		ldr	r2, [r4]
 2067              	.LVL167:
 2068              	.LBB355:
 2069              	.LBI355:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2070              		.loc 2 6991 26 is_stmt 1 view .LVU664
 2071              	.LBB356:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
ARM GAS  /tmp/cc2DBcx1.s 			page 187


 2072              		.loc 2 6993 3 view .LVU665
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2073              		.loc 2 6993 12 is_stmt 0 view .LVU666
 2074 0096 9268     		ldr	r2, [r2, #8]
 2075              	.LVL168:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2076              		.loc 2 6993 74 view .LVU667
 2077 0098 12F0040F 		tst	r2, #4
 2078 009c 01D1     		bne	.L161
 2079              	.LVL169:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2080              		.loc 2 6993 74 view .LVU668
 2081              	.LBE356:
 2082              	.LBE355:
1092:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****            )
 2083              		.loc 1 1092 13 view .LVU669
 2084 009e 012B     		cmp	r3, #1
 2085 00a0 E1D1     		bne	.L159
 2086              	.L161:
1096:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2087              		.loc 1 1096 11 is_stmt 1 view .LVU670
 2088 00a2 A36D     		ldr	r3, [r4, #88]
 2089              	.LVL170:
1096:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2090              		.loc 1 1096 11 is_stmt 0 view .LVU671
 2091 00a4 43F01003 		orr	r3, r3, #16
 2092 00a8 A365     		str	r3, [r4, #88]
1099:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2093              		.loc 1 1099 11 is_stmt 1 view .LVU672
1099:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2094              		.loc 1 1099 11 view .LVU673
 2095 00aa 0023     		movs	r3, #0
 2096 00ac 84F85430 		strb	r3, [r4, #84]
1099:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2097              		.loc 1 1099 11 view .LVU674
1101:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 2098              		.loc 1 1101 11 view .LVU675
1101:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 2099              		.loc 1 1101 18 is_stmt 0 view .LVU676
 2100 00b0 0125     		movs	r5, #1
 2101              	.LVL171:
1101:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 2102              		.loc 1 1101 18 view .LVU677
 2103 00b2 2EE0     		b	.L152
 2104              	.LVL172:
 2105              	.L162:
 2106              	.LBB357:
 2107              	.LBB350:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2108              		.loc 2 6993 74 view .LVU678
 2109 00b4 0123     		movs	r3, #1
 2110 00b6 DBE7     		b	.L164
 2111              	.LVL173:
 2112              	.L174:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2113              		.loc 2 6993 74 view .LVU679
 2114              	.LBE350:
ARM GAS  /tmp/cc2DBcx1.s 			page 188


 2115              	.LBE357:
1106:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1107:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1108:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1109:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Note: DMA channel of ADC slave should be stopped after this function   */
1111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /*       with HAL_ADC_Stop_DMA() API.                                     */
1112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 2116              		.loc 1 1112 5 is_stmt 1 view .LVU680
 2117              		.loc 1 1112 22 is_stmt 0 view .LVU681
 2118 00b8 206D     		ldr	r0, [r4, #80]
 2119 00ba FFF7FEFF 		bl	HAL_DMA_Abort
 2120              	.LVL174:
 2121              		.loc 1 1112 22 view .LVU682
 2122 00be 0546     		mov	r5, r0
 2123              	.LVL175:
1113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1114:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1115:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_ERROR)
 2124              		.loc 1 1115 5 is_stmt 1 view .LVU683
 2125              		.loc 1 1115 8 is_stmt 0 view .LVU684
 2126 00c0 0128     		cmp	r0, #1
 2127 00c2 10D0     		beq	.L175
 2128              	.L166:
1116:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1117:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1118:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1119:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1120:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1121:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 2129              		.loc 1 1122 5 is_stmt 1 view .LVU685
 2130 00c4 2268     		ldr	r2, [r4]
 2131 00c6 5368     		ldr	r3, [r2, #4]
 2132 00c8 23F01003 		bic	r3, r3, #16
 2133 00cc 5360     		str	r3, [r2, #4]
1123:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1124:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave */
1125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep in */
1126:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* memory a potential failing status.                                     */
1127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 2134              		.loc 1 1127 5 view .LVU686
 2135              		.loc 1 1127 8 is_stmt 0 view .LVU687
 2136 00ce 7DB9     		cbnz	r5, .L167
1128:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1129:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       tmp_hadc_slave_disable_status = ADC_Disable(&tmp_hadc_slave);
 2137              		.loc 1 1129 7 is_stmt 1 view .LVU688
 2138              		.loc 1 1129 39 is_stmt 0 view .LVU689
 2139 00d0 6846     		mov	r0, sp
 2140              	.LVL176:
 2141              		.loc 1 1129 39 view .LVU690
 2142 00d2 FFF7FEFF 		bl	ADC_Disable
 2143              	.LVL177:
 2144 00d6 0646     		mov	r6, r0
 2145              	.LVL178:
1130:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if ((ADC_Disable(hadc) == HAL_OK)           &&
 2146              		.loc 1 1130 7 is_stmt 1 view .LVU691
ARM GAS  /tmp/cc2DBcx1.s 			page 189


 2147              		.loc 1 1130 12 is_stmt 0 view .LVU692
 2148 00d8 2046     		mov	r0, r4
 2149 00da FFF7FEFF 		bl	ADC_Disable
 2150              	.LVL179:
 2151              		.loc 1 1130 10 view .LVU693
 2152 00de 68B9     		cbnz	r0, .L168
 2153              		.loc 1 1130 51 discriminator 1 view .LVU694
 2154 00e0 66B9     		cbnz	r6, .L168
1131:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           (tmp_hadc_slave_disable_status == HAL_OK))
1132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1133:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         tmp_hal_status = HAL_OK;
 2155              		.loc 1 1133 24 view .LVU695
 2156 00e2 3546     		mov	r5, r6
 2157 00e4 0AE0     		b	.L168
 2158              	.LVL180:
 2159              	.L175:
1118:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 2160              		.loc 1 1118 7 is_stmt 1 view .LVU696
 2161 00e6 A36D     		ldr	r3, [r4, #88]
 2162 00e8 43F04003 		orr	r3, r3, #64
 2163 00ec A365     		str	r3, [r4, #88]
 2164 00ee E9E7     		b	.L166
 2165              	.L167:
1134:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1135:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1136:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else
1137:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1138:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* In case of error, attempt to disable ADC master and slave without status assert */
1139:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (void) ADC_Disable(hadc);
 2166              		.loc 1 1139 7 view .LVU697
 2167              		.loc 1 1139 14 is_stmt 0 view .LVU698
 2168 00f0 2046     		mov	r0, r4
 2169              	.LVL181:
 2170              		.loc 1 1139 14 view .LVU699
 2171 00f2 FFF7FEFF 		bl	ADC_Disable
 2172              	.LVL182:
1140:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (void) ADC_Disable(&tmp_hadc_slave);
 2173              		.loc 1 1140 7 is_stmt 1 view .LVU700
 2174              		.loc 1 1140 14 is_stmt 0 view .LVU701
 2175 00f6 6846     		mov	r0, sp
 2176 00f8 FFF7FEFF 		bl	ADC_Disable
 2177              	.LVL183:
 2178              	.L168:
1141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1142:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1143:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Set ADC state (ADC master) */
1144:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 2179              		.loc 1 1144 5 is_stmt 1 view .LVU702
 2180 00fc A36D     		ldr	r3, [r4, #88]
 2181 00fe 23F48853 		bic	r3, r3, #4352
 2182 0102 23F00103 		bic	r3, r3, #1
 2183 0106 43F00103 		orr	r3, r3, #1
 2184 010a A365     		str	r3, [r4, #88]
 2185              	.LVL184:
 2186              	.L153:
1145:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1146:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
ARM GAS  /tmp/cc2DBcx1.s 			page 190


1147:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
1148:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1149:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process unlocked */
1150:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2187              		.loc 1 1150 3 view .LVU703
 2188              		.loc 1 1150 3 view .LVU704
 2189 010c 0023     		movs	r3, #0
 2190 010e 84F85430 		strb	r3, [r4, #84]
 2191              		.loc 1 1150 3 view .LVU705
1151:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1152:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Return function status */
1153:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return tmp_hal_status;
 2192              		.loc 1 1153 3 view .LVU706
 2193              	.LVL185:
 2194              	.L152:
1154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 2195              		.loc 1 1154 1 is_stmt 0 view .LVU707
 2196 0112 2846     		mov	r0, r5
 2197 0114 1AB0     		add	sp, sp, #104
 2198              	.LCFI21:
 2199              		.cfi_remember_state
 2200              		.cfi_def_cfa_offset 16
 2201              		@ sp needed
 2202 0116 70BD     		pop	{r4, r5, r6, pc}
 2203              	.LVL186:
 2204              	.L169:
 2205              	.LCFI22:
 2206              		.cfi_restore_state
1050:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2207              		.loc 1 1050 3 view .LVU708
 2208 0118 0225     		movs	r5, #2
 2209 011a FAE7     		b	.L152
 2210              	.L177:
 2211              		.align	2
 2212              	.L176:
 2213 011c 00800242 		.word	1107460096
 2214              		.cfi_endproc
 2215              	.LFE370:
 2217              		.section	.text.HAL_ADCEx_MultiModeGetValue,"ax",%progbits
 2218              		.align	1
 2219              		.global	HAL_ADCEx_MultiModeGetValue
 2220              		.syntax unified
 2221              		.thumb
 2222              		.thumb_func
 2223              		.fpu fpv4-sp-d16
 2225              	HAL_ADCEx_MultiModeGetValue:
 2226              	.LVL187:
 2227              	.LFB371:
1155:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1156:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
1157:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Return the last ADC Master and Slave regular conversions results when in multimode conf
1158:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC Master (handle of ADC Slave must not be used)
1159:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval The converted data values.
1160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1161:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_MultiModeGetValue(const ADC_HandleTypeDef *hadc)
1162:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 2228              		.loc 1 1162 1 is_stmt 1 view -0
ARM GAS  /tmp/cc2DBcx1.s 			page 191


 2229              		.cfi_startproc
 2230              		@ args = 0, pretend = 0, frame = 0
 2231              		@ frame_needed = 0, uses_anonymous_args = 0
 2232              		@ link register save eliminated.
1163:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   const ADC_Common_TypeDef *tmpADC_Common;
 2233              		.loc 1 1163 3 view .LVU710
1164:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1165:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
1166:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 2234              		.loc 1 1166 3 view .LVU711
1167:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1168:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
1169:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* and possible no usage in __LL_ADC_COMMON_INSTANCE() below               */
1170:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   UNUSED(hadc);
 2235              		.loc 1 1170 3 view .LVU712
1171:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1172:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Pointer to the common control register  */
1173:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
 2236              		.loc 1 1173 3 view .LVU713
1174:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1175:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Return the multi mode conversion value */
1176:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return tmpADC_Common->CDR;
 2237              		.loc 1 1176 3 view .LVU714
 2238              		.loc 1 1176 23 is_stmt 0 view .LVU715
 2239 0000 014B     		ldr	r3, .L179
 2240 0002 D868     		ldr	r0, [r3, #12]
 2241              	.LVL188:
1177:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 2242              		.loc 1 1177 1 view .LVU716
 2243 0004 7047     		bx	lr
 2244              	.L180:
 2245 0006 00BF     		.align	2
 2246              	.L179:
 2247 0008 00830242 		.word	1107460864
 2248              		.cfi_endproc
 2249              	.LFE371:
 2251              		.section	.text.HAL_ADCEx_InjectedGetValue,"ax",%progbits
 2252              		.align	1
 2253              		.global	HAL_ADCEx_InjectedGetValue
 2254              		.syntax unified
 2255              		.thumb
 2256              		.thumb_func
 2257              		.fpu fpv4-sp-d16
 2259              	HAL_ADCEx_InjectedGetValue:
 2260              	.LVL189:
 2261              	.LFB372:
1178:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1179:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
1181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
1182:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
1183:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
1184:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS
1185:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
1186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
1187:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
1188:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *            to flag JEOC.
ARM GAS  /tmp/cc2DBcx1.s 			page 192


1189:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
1190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
1191:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
1192:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
1193:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
1194:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 series).
1195:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         To clear this flag, either use function:
1196:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1197:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion()
1198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
1199:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle
1200:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param InjectedRank the converted ADC injected rank.
1201:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
1202:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_1 ADC group injected rank 1
1203:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_2 ADC group injected rank 2
1204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_3 ADC group injected rank 3
1205:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_4 ADC group injected rank 4
1206:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
1207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1208:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(const ADC_HandleTypeDef *hadc, uint32_t InjectedRank)
1209:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 2262              		.loc 1 1209 1 is_stmt 1 view -0
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 0
 2265              		@ frame_needed = 0, uses_anonymous_args = 0
 2266              		@ link register save eliminated.
1210:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_jdr;
 2267              		.loc 1 1210 3 view .LVU718
1211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1212:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
1213:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 2268              		.loc 1 1213 3 view .LVU719
1214:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
 2269              		.loc 1 1214 3 view .LVU720
1215:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1216:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Get ADC converted value */
1217:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   switch (InjectedRank)
 2270              		.loc 1 1217 3 view .LVU721
 2271 0000 40F21523 		movw	r3, #533
 2272 0004 9942     		cmp	r1, r3
 2273 0006 0FD0     		beq	.L182
 2274 0008 40F21B33 		movw	r3, #795
 2275 000c 9942     		cmp	r1, r3
 2276 000e 07D0     		beq	.L183
 2277 0010 40F20F13 		movw	r3, #271
 2278 0014 9942     		cmp	r1, r3
 2279 0016 0BD0     		beq	.L188
1218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
1219:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4:
1220:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
1221:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       break;
1222:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3:
1223:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
1224:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       break;
1225:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2:
1226:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
1227:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       break;
ARM GAS  /tmp/cc2DBcx1.s 			page 193


1228:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
1229:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     default:
1230:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
 2280              		.loc 1 1230 7 view .LVU722
 2281              		.loc 1 1230 21 is_stmt 0 view .LVU723
 2282 0018 0368     		ldr	r3, [r0]
 2283              		.loc 1 1230 15 view .LVU724
 2284 001a D3F88000 		ldr	r0, [r3, #128]
 2285              	.LVL190:
1231:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       break;
 2286              		.loc 1 1231 7 is_stmt 1 view .LVU725
1232:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
1233:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1234:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Return ADC converted value */
1235:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return tmp_jdr;
 2287              		.loc 1 1235 3 view .LVU726
1236:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 2288              		.loc 1 1236 1 is_stmt 0 view .LVU727
 2289 001e 7047     		bx	lr
 2290              	.LVL191:
 2291              	.L183:
1220:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       break;
 2292              		.loc 1 1220 7 is_stmt 1 view .LVU728
1220:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       break;
 2293              		.loc 1 1220 21 is_stmt 0 view .LVU729
 2294 0020 0368     		ldr	r3, [r0]
1220:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       break;
 2295              		.loc 1 1220 15 view .LVU730
 2296 0022 D3F88C00 		ldr	r0, [r3, #140]
 2297              	.LVL192:
1221:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3:
 2298              		.loc 1 1221 7 is_stmt 1 view .LVU731
 2299 0026 7047     		bx	lr
 2300              	.LVL193:
 2301              	.L182:
1223:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       break;
 2302              		.loc 1 1223 7 view .LVU732
1223:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       break;
 2303              		.loc 1 1223 21 is_stmt 0 view .LVU733
 2304 0028 0368     		ldr	r3, [r0]
1223:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       break;
 2305              		.loc 1 1223 15 view .LVU734
 2306 002a D3F88800 		ldr	r0, [r3, #136]
 2307              	.LVL194:
1224:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2:
 2308              		.loc 1 1224 7 is_stmt 1 view .LVU735
 2309 002e 7047     		bx	lr
 2310              	.LVL195:
 2311              	.L188:
1226:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       break;
 2312              		.loc 1 1226 7 view .LVU736
1226:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       break;
 2313              		.loc 1 1226 21 is_stmt 0 view .LVU737
 2314 0030 0368     		ldr	r3, [r0]
1226:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       break;
 2315              		.loc 1 1226 15 view .LVU738
 2316 0032 D3F88400 		ldr	r0, [r3, #132]
ARM GAS  /tmp/cc2DBcx1.s 			page 194


 2317              	.LVL196:
1227:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 2318              		.loc 1 1227 7 is_stmt 1 view .LVU739
 2319 0036 7047     		bx	lr
 2320              		.cfi_endproc
 2321              	.LFE372:
 2323              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 2324              		.align	1
 2325              		.weak	HAL_ADCEx_InjectedConvCpltCallback
 2326              		.syntax unified
 2327              		.thumb
 2328              		.thumb_func
 2329              		.fpu fpv4-sp-d16
 2331              	HAL_ADCEx_InjectedConvCpltCallback:
 2332              	.LVL197:
 2333              	.LFB373:
1237:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1238:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
1239:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Injected conversion complete callback in non-blocking mode.
1240:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle
1241:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval None
1242:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1243:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef *hadc)
1244:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 2334              		.loc 1 1244 1 view -0
 2335              		.cfi_startproc
 2336              		@ args = 0, pretend = 0, frame = 0
 2337              		@ frame_needed = 0, uses_anonymous_args = 0
 2338              		@ link register save eliminated.
1245:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1246:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   UNUSED(hadc);
 2339              		.loc 1 1246 3 view .LVU741
1247:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1248:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1249:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedConvCpltCallback must be implemented in the user file.
1250:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1251:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 2340              		.loc 1 1251 1 is_stmt 0 view .LVU742
 2341 0000 7047     		bx	lr
 2342              		.cfi_endproc
 2343              	.LFE373:
 2345              		.section	.text.HAL_ADCEx_InjectedQueueOverflowCallback,"ax",%progbits
 2346              		.align	1
 2347              		.weak	HAL_ADCEx_InjectedQueueOverflowCallback
 2348              		.syntax unified
 2349              		.thumb
 2350              		.thumb_func
 2351              		.fpu fpv4-sp-d16
 2353              	HAL_ADCEx_InjectedQueueOverflowCallback:
 2354              	.LVL198:
 2355              	.LFB374:
1252:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1253:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
1254:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Injected context queue overflow callback.
1255:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   This callback is called if injected context queue is enabled
1256:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             (parameter "QueueInjectedContext" in injected channel configuration)
1257:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             and if a new injected context is set when queue is full (maximum 2
ARM GAS  /tmp/cc2DBcx1.s 			page 195


1258:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             contexts).
1259:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle
1260:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval None
1261:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1262:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedQueueOverflowCallback(ADC_HandleTypeDef *hadc)
1263:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 2356              		.loc 1 1263 1 is_stmt 1 view -0
 2357              		.cfi_startproc
 2358              		@ args = 0, pretend = 0, frame = 0
 2359              		@ frame_needed = 0, uses_anonymous_args = 0
 2360              		@ link register save eliminated.
1264:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1265:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   UNUSED(hadc);
 2361              		.loc 1 1265 3 view .LVU744
1266:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1267:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1268:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedQueueOverflowCallback must be implemented in the user file.
1269:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 2362              		.loc 1 1270 1 is_stmt 0 view .LVU745
 2363 0000 7047     		bx	lr
 2364              		.cfi_endproc
 2365              	.LFE374:
 2367              		.section	.text.HAL_ADCEx_LevelOutOfWindow2Callback,"ax",%progbits
 2368              		.align	1
 2369              		.weak	HAL_ADCEx_LevelOutOfWindow2Callback
 2370              		.syntax unified
 2371              		.thumb
 2372              		.thumb_func
 2373              		.fpu fpv4-sp-d16
 2375              	HAL_ADCEx_LevelOutOfWindow2Callback:
 2376              	.LVL199:
 2377              	.LFB375:
1271:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1272:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
1273:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Analog watchdog 2 callback in non-blocking mode.
1274:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle
1275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval None
1276:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1277:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow2Callback(ADC_HandleTypeDef *hadc)
1278:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 2378              		.loc 1 1278 1 is_stmt 1 view -0
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 0
 2381              		@ frame_needed = 0, uses_anonymous_args = 0
 2382              		@ link register save eliminated.
1279:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   UNUSED(hadc);
 2383              		.loc 1 1280 3 view .LVU747
1281:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1282:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1283:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow2Callback must be implemented in the user file.
1284:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1285:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 2384              		.loc 1 1285 1 is_stmt 0 view .LVU748
 2385 0000 7047     		bx	lr
 2386              		.cfi_endproc
ARM GAS  /tmp/cc2DBcx1.s 			page 196


 2387              	.LFE375:
 2389              		.section	.text.HAL_ADCEx_LevelOutOfWindow3Callback,"ax",%progbits
 2390              		.align	1
 2391              		.weak	HAL_ADCEx_LevelOutOfWindow3Callback
 2392              		.syntax unified
 2393              		.thumb
 2394              		.thumb_func
 2395              		.fpu fpv4-sp-d16
 2397              	HAL_ADCEx_LevelOutOfWindow3Callback:
 2398              	.LVL200:
 2399              	.LFB376:
1286:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1287:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
1288:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Analog watchdog 3 callback in non-blocking mode.
1289:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle
1290:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval None
1291:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1292:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow3Callback(ADC_HandleTypeDef *hadc)
1293:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 2400              		.loc 1 1293 1 is_stmt 1 view -0
 2401              		.cfi_startproc
 2402              		@ args = 0, pretend = 0, frame = 0
 2403              		@ frame_needed = 0, uses_anonymous_args = 0
 2404              		@ link register save eliminated.
1294:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1295:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   UNUSED(hadc);
 2405              		.loc 1 1295 3 view .LVU750
1296:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1297:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1298:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow3Callback must be implemented in the user file.
1299:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1300:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 2406              		.loc 1 1300 1 is_stmt 0 view .LVU751
 2407 0000 7047     		bx	lr
 2408              		.cfi_endproc
 2409              	.LFE376:
 2411              		.section	.text.HAL_ADCEx_EndOfSamplingCallback,"ax",%progbits
 2412              		.align	1
 2413              		.weak	HAL_ADCEx_EndOfSamplingCallback
 2414              		.syntax unified
 2415              		.thumb
 2416              		.thumb_func
 2417              		.fpu fpv4-sp-d16
 2419              	HAL_ADCEx_EndOfSamplingCallback:
 2420              	.LVL201:
 2421              	.LFB377:
1301:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1302:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1303:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
1304:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  End Of Sampling callback in non-blocking mode.
1305:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle
1306:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval None
1307:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1308:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** __weak void HAL_ADCEx_EndOfSamplingCallback(ADC_HandleTypeDef *hadc)
1309:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 2422              		.loc 1 1309 1 is_stmt 1 view -0
 2423              		.cfi_startproc
ARM GAS  /tmp/cc2DBcx1.s 			page 197


 2424              		@ args = 0, pretend = 0, frame = 0
 2425              		@ frame_needed = 0, uses_anonymous_args = 0
 2426              		@ link register save eliminated.
1310:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1311:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   UNUSED(hadc);
 2427              		.loc 1 1311 3 view .LVU753
1312:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1313:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1314:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             function HAL_ADCEx_EndOfSamplingCallback must be implemented in the user file.
1315:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1316:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 2428              		.loc 1 1316 1 is_stmt 0 view .LVU754
 2429 0000 7047     		bx	lr
 2430              		.cfi_endproc
 2431              	.LFE377:
 2433              		.section	.text.HAL_ADCEx_RegularStop,"ax",%progbits
 2434              		.align	1
 2435              		.global	HAL_ADCEx_RegularStop
 2436              		.syntax unified
 2437              		.thumb
 2438              		.thumb_func
 2439              		.fpu fpv4-sp-d16
 2441              	HAL_ADCEx_RegularStop:
 2442              	.LVL202:
 2443              	.LFB378:
1317:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1318:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
1319:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1320:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC peripheral if no
1321:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         conversion is on going on injected group.
1322:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle
1323:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status.
1324:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1325:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop(ADC_HandleTypeDef *hadc)
1326:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 2444              		.loc 1 1326 1 is_stmt 1 view -0
 2445              		.cfi_startproc
 2446              		@ args = 0, pretend = 0, frame = 0
 2447              		@ frame_needed = 0, uses_anonymous_args = 0
1327:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 2448              		.loc 1 1327 3 view .LVU756
1328:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1329:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
1330:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 2449              		.loc 1 1330 3 view .LVU757
1331:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1332:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process locked */
1333:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2450              		.loc 1 1333 3 view .LVU758
 2451              		.loc 1 1333 3 view .LVU759
 2452 0000 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 2453 0004 012B     		cmp	r3, #1
 2454 0006 26D0     		beq	.L198
1326:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 2455              		.loc 1 1326 1 is_stmt 0 discriminator 2 view .LVU760
 2456 0008 10B5     		push	{r4, lr}
 2457              	.LCFI23:
ARM GAS  /tmp/cc2DBcx1.s 			page 198


 2458              		.cfi_def_cfa_offset 8
 2459              		.cfi_offset 4, -8
 2460              		.cfi_offset 14, -4
 2461 000a 0446     		mov	r4, r0
 2462              		.loc 1 1333 3 is_stmt 1 discriminator 2 view .LVU761
 2463 000c 0121     		movs	r1, #1
 2464 000e 80F85410 		strb	r1, [r0, #84]
 2465              		.loc 1 1333 3 discriminator 2 view .LVU762
1334:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1335:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1336:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 2466              		.loc 1 1336 3 discriminator 2 view .LVU763
 2467              		.loc 1 1336 20 is_stmt 0 discriminator 2 view .LVU764
 2468 0012 FFF7FEFF 		bl	ADC_ConversionStop
 2469              	.LVL203:
1337:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1338:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Disable ADC peripheral if regular conversions are effectively stopped
1339:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****      and if no injected conversions are on-going */
1340:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 2470              		.loc 1 1340 3 is_stmt 1 discriminator 2 view .LVU765
 2471              		.loc 1 1340 6 is_stmt 0 discriminator 2 view .LVU766
 2472 0016 60B9     		cbnz	r0, .L196
1341:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
1342:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1343:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 2473              		.loc 1 1343 5 is_stmt 1 view .LVU767
 2474 0018 A36D     		ldr	r3, [r4, #88]
 2475 001a 23F48073 		bic	r3, r3, #256
 2476 001e A365     		str	r3, [r4, #88]
1344:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1345:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 2477              		.loc 1 1345 5 view .LVU768
 2478              		.loc 1 1345 44 is_stmt 0 view .LVU769
 2479 0020 2368     		ldr	r3, [r4]
 2480              	.LVL204:
 2481              	.LBB358:
 2482              	.LBI358:
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2483              		.loc 2 7217 26 is_stmt 1 view .LVU770
 2484              	.LBB359:
 2485              		.loc 2 7219 3 view .LVU771
 2486              		.loc 2 7219 12 is_stmt 0 view .LVU772
 2487 0022 9B68     		ldr	r3, [r3, #8]
 2488              	.LVL205:
 2489              		.loc 2 7219 76 view .LVU773
 2490 0024 13F0080F 		tst	r3, #8
 2491 0028 07D0     		beq	.L197
 2492              	.LVL206:
 2493              		.loc 2 7219 76 view .LVU774
 2494              	.LBE359:
 2495              	.LBE358:
1346:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1347:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
1348:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
1349:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1350:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1351:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
ARM GAS  /tmp/cc2DBcx1.s 			page 199


1352:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1353:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Set ADC state */
1354:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1355:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1356:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1357:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1358:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1359:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
1360:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
1361:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else
1362:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1363:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 2496              		.loc 1 1363 7 is_stmt 1 view .LVU775
 2497 002a A36D     		ldr	r3, [r4, #88]
 2498 002c 43F48053 		orr	r3, r3, #4096
 2499 0030 A365     		str	r3, [r4, #88]
 2500              	.L196:
1364:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1365:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
1366:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1367:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process unlocked */
1368:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2501              		.loc 1 1368 3 view .LVU776
 2502              		.loc 1 1368 3 view .LVU777
 2503 0032 0023     		movs	r3, #0
 2504 0034 84F85430 		strb	r3, [r4, #84]
 2505              		.loc 1 1368 3 view .LVU778
1369:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1370:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Return function status */
1371:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return tmp_hal_status;
 2506              		.loc 1 1371 3 view .LVU779
1372:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 2507              		.loc 1 1372 1 is_stmt 0 view .LVU780
 2508 0038 10BD     		pop	{r4, pc}
 2509              	.LVL207:
 2510              	.L197:
1348:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2511              		.loc 1 1348 7 is_stmt 1 view .LVU781
1348:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2512              		.loc 1 1348 24 is_stmt 0 view .LVU782
 2513 003a 2046     		mov	r0, r4
 2514              	.LVL208:
1348:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2515              		.loc 1 1348 24 view .LVU783
 2516 003c FFF7FEFF 		bl	ADC_Disable
 2517              	.LVL209:
1351:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 2518              		.loc 1 1351 7 is_stmt 1 view .LVU784
1351:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 2519              		.loc 1 1351 10 is_stmt 0 view .LVU785
 2520 0040 0028     		cmp	r0, #0
 2521 0042 F6D1     		bne	.L196
1354:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 2522              		.loc 1 1354 9 is_stmt 1 view .LVU786
 2523 0044 A36D     		ldr	r3, [r4, #88]
 2524 0046 23F48053 		bic	r3, r3, #4096
 2525 004a 23F00103 		bic	r3, r3, #1
ARM GAS  /tmp/cc2DBcx1.s 			page 200


 2526 004e 43F00103 		orr	r3, r3, #1
 2527 0052 A365     		str	r3, [r4, #88]
 2528 0054 EDE7     		b	.L196
 2529              	.LVL210:
 2530              	.L198:
 2531              	.LCFI24:
 2532              		.cfi_def_cfa_offset 0
 2533              		.cfi_restore 4
 2534              		.cfi_restore 14
1333:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2535              		.loc 1 1333 3 is_stmt 0 view .LVU787
 2536 0056 0220     		movs	r0, #2
 2537              	.LVL211:
 2538              		.loc 1 1372 1 view .LVU788
 2539 0058 7047     		bx	lr
 2540              		.cfi_endproc
 2541              	.LFE378:
 2543              		.section	.text.HAL_ADCEx_RegularStop_IT,"ax",%progbits
 2544              		.align	1
 2545              		.global	HAL_ADCEx_RegularStop_IT
 2546              		.syntax unified
 2547              		.thumb
 2548              		.thumb_func
 2549              		.fpu fpv4-sp-d16
 2551              	HAL_ADCEx_RegularStop_IT:
 2552              	.LVL212:
 2553              	.LFB379:
1373:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1374:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1375:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
1376:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of ADC groups regular and injected,
1377:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         disable interrution of end-of-conversion,
1378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         disable ADC peripheral if no conversion is on going
1379:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         on injected group.
1380:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle
1381:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status.
1382:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1383:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_IT(ADC_HandleTypeDef *hadc)
1384:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 2554              		.loc 1 1384 1 is_stmt 1 view -0
 2555              		.cfi_startproc
 2556              		@ args = 0, pretend = 0, frame = 0
 2557              		@ frame_needed = 0, uses_anonymous_args = 0
1385:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 2558              		.loc 1 1385 3 view .LVU790
1386:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1387:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
1388:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 2559              		.loc 1 1388 3 view .LVU791
1389:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1390:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process locked */
1391:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2560              		.loc 1 1391 3 view .LVU792
 2561              		.loc 1 1391 3 view .LVU793
 2562 0000 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 2563 0004 012B     		cmp	r3, #1
 2564 0006 2BD0     		beq	.L207
ARM GAS  /tmp/cc2DBcx1.s 			page 201


1384:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 2565              		.loc 1 1384 1 is_stmt 0 discriminator 2 view .LVU794
 2566 0008 10B5     		push	{r4, lr}
 2567              	.LCFI25:
 2568              		.cfi_def_cfa_offset 8
 2569              		.cfi_offset 4, -8
 2570              		.cfi_offset 14, -4
 2571 000a 0446     		mov	r4, r0
 2572              		.loc 1 1391 3 is_stmt 1 discriminator 2 view .LVU795
 2573 000c 0121     		movs	r1, #1
 2574 000e 80F85410 		strb	r1, [r0, #84]
 2575              		.loc 1 1391 3 discriminator 2 view .LVU796
1392:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1393:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1394:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 2576              		.loc 1 1394 3 discriminator 2 view .LVU797
 2577              		.loc 1 1394 20 is_stmt 0 discriminator 2 view .LVU798
 2578 0012 FFF7FEFF 		bl	ADC_ConversionStop
 2579              	.LVL213:
1395:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1396:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1397:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     and if no injected conversion is on-going */
1398:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 2580              		.loc 1 1398 3 is_stmt 1 discriminator 2 view .LVU799
 2581              		.loc 1 1398 6 is_stmt 0 discriminator 2 view .LVU800
 2582 0016 88B9     		cbnz	r0, .L205
1399:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
1400:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1401:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 2583              		.loc 1 1401 5 is_stmt 1 view .LVU801
 2584 0018 A36D     		ldr	r3, [r4, #88]
 2585 001a 23F48073 		bic	r3, r3, #256
 2586 001e A365     		str	r3, [r4, #88]
1402:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1403:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Disable all regular-related interrupts */
1404:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
 2587              		.loc 1 1404 5 view .LVU802
 2588 0020 2268     		ldr	r2, [r4]
 2589 0022 5368     		ldr	r3, [r2, #4]
 2590 0024 23F01C03 		bic	r3, r3, #28
 2591 0028 5360     		str	r3, [r2, #4]
1405:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1406:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* 2. Disable ADC peripheral if no injected conversions are on-going */
1407:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 2592              		.loc 1 1407 5 view .LVU803
 2593              		.loc 1 1407 44 is_stmt 0 view .LVU804
 2594 002a 2368     		ldr	r3, [r4]
 2595              	.LVL214:
 2596              	.LBB360:
 2597              	.LBI360:
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2598              		.loc 2 7217 26 is_stmt 1 view .LVU805
 2599              	.LBB361:
 2600              		.loc 2 7219 3 view .LVU806
 2601              		.loc 2 7219 12 is_stmt 0 view .LVU807
 2602 002c 9B68     		ldr	r3, [r3, #8]
 2603              	.LVL215:
ARM GAS  /tmp/cc2DBcx1.s 			page 202


 2604              		.loc 2 7219 76 view .LVU808
 2605 002e 13F0080F 		tst	r3, #8
 2606 0032 07D0     		beq	.L206
 2607              	.LVL216:
 2608              		.loc 2 7219 76 view .LVU809
 2609              	.LBE361:
 2610              	.LBE360:
1408:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1409:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
1410:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* if no issue reported */
1411:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1412:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1413:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Set ADC state */
1414:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1415:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1416:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1417:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1418:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1419:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else
1420:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1421:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 2611              		.loc 1 1421 7 is_stmt 1 view .LVU810
 2612 0034 A36D     		ldr	r3, [r4, #88]
 2613 0036 43F48053 		orr	r3, r3, #4096
 2614 003a A365     		str	r3, [r4, #88]
 2615              	.L205:
1422:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1423:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
1424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1425:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process unlocked */
1426:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2616              		.loc 1 1426 3 view .LVU811
 2617              		.loc 1 1426 3 view .LVU812
 2618 003c 0023     		movs	r3, #0
 2619 003e 84F85430 		strb	r3, [r4, #84]
 2620              		.loc 1 1426 3 view .LVU813
1427:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1428:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Return function status */
1429:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return tmp_hal_status;
 2621              		.loc 1 1429 3 view .LVU814
1430:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 2622              		.loc 1 1430 1 is_stmt 0 view .LVU815
 2623 0042 10BD     		pop	{r4, pc}
 2624              	.LVL217:
 2625              	.L206:
1409:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* if no issue reported */
 2626              		.loc 1 1409 7 is_stmt 1 view .LVU816
1409:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* if no issue reported */
 2627              		.loc 1 1409 24 is_stmt 0 view .LVU817
 2628 0044 2046     		mov	r0, r4
 2629              	.LVL218:
1409:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* if no issue reported */
 2630              		.loc 1 1409 24 view .LVU818
 2631 0046 FFF7FEFF 		bl	ADC_Disable
 2632              	.LVL219:
1411:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 2633              		.loc 1 1411 7 is_stmt 1 view .LVU819
ARM GAS  /tmp/cc2DBcx1.s 			page 203


1411:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 2634              		.loc 1 1411 10 is_stmt 0 view .LVU820
 2635 004a 0028     		cmp	r0, #0
 2636 004c F6D1     		bne	.L205
1414:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 2637              		.loc 1 1414 9 is_stmt 1 view .LVU821
 2638 004e A36D     		ldr	r3, [r4, #88]
 2639 0050 23F48053 		bic	r3, r3, #4096
 2640 0054 23F00103 		bic	r3, r3, #1
 2641 0058 43F00103 		orr	r3, r3, #1
 2642 005c A365     		str	r3, [r4, #88]
 2643 005e EDE7     		b	.L205
 2644              	.LVL220:
 2645              	.L207:
 2646              	.LCFI26:
 2647              		.cfi_def_cfa_offset 0
 2648              		.cfi_restore 4
 2649              		.cfi_restore 14
1391:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2650              		.loc 1 1391 3 is_stmt 0 view .LVU822
 2651 0060 0220     		movs	r0, #2
 2652              	.LVL221:
 2653              		.loc 1 1430 1 view .LVU823
 2654 0062 7047     		bx	lr
 2655              		.cfi_endproc
 2656              	.LFE379:
 2658              		.section	.text.HAL_ADCEx_RegularStop_DMA,"ax",%progbits
 2659              		.align	1
 2660              		.global	HAL_ADCEx_RegularStop_DMA
 2661              		.syntax unified
 2662              		.thumb
 2663              		.thumb_func
 2664              		.fpu fpv4-sp-d16
 2666              	HAL_ADCEx_RegularStop_DMA:
 2667              	.LVL222:
 2668              	.LFB380:
1431:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1432:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
1433:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1434:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
1435:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         ADC peripheral if no conversion is on going
1436:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         on injected group.
1437:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   HAL_ADCEx_RegularStop_DMA() function is dedicated to single-ADC mode only.
1438:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         For multimode (when multimode feature is available),
1439:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         HAL_ADCEx_RegularMultiModeStop_DMA() API must be used.
1440:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle
1441:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status.
1442:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1443:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_DMA(ADC_HandleTypeDef *hadc)
1444:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 2669              		.loc 1 1444 1 is_stmt 1 view -0
 2670              		.cfi_startproc
 2671              		@ args = 0, pretend = 0, frame = 0
 2672              		@ frame_needed = 0, uses_anonymous_args = 0
 2673              		.loc 1 1444 1 is_stmt 0 view .LVU825
 2674 0000 38B5     		push	{r3, r4, r5, lr}
 2675              	.LCFI27:
ARM GAS  /tmp/cc2DBcx1.s 			page 204


 2676              		.cfi_def_cfa_offset 16
 2677              		.cfi_offset 3, -16
 2678              		.cfi_offset 4, -12
 2679              		.cfi_offset 5, -8
 2680              		.cfi_offset 14, -4
1445:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 2681              		.loc 1 1445 3 is_stmt 1 view .LVU826
1446:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1447:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
1448:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 2682              		.loc 1 1448 3 view .LVU827
1449:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1450:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process locked */
1451:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2683              		.loc 1 1451 3 view .LVU828
 2684              		.loc 1 1451 3 view .LVU829
 2685 0002 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 2686 0006 012B     		cmp	r3, #1
 2687 0008 41D0     		beq	.L219
 2688 000a 0446     		mov	r4, r0
 2689              		.loc 1 1451 3 discriminator 2 view .LVU830
 2690 000c 0121     		movs	r1, #1
 2691 000e 80F85410 		strb	r1, [r0, #84]
 2692              		.loc 1 1451 3 discriminator 2 view .LVU831
1452:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1453:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1454:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 2693              		.loc 1 1454 3 discriminator 2 view .LVU832
 2694              		.loc 1 1454 20 is_stmt 0 discriminator 2 view .LVU833
 2695 0012 FFF7FEFF 		bl	ADC_ConversionStop
 2696              	.LVL223:
1455:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1456:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1457:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****      and if no injected conversion is on-going */
1458:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 2697              		.loc 1 1458 3 is_stmt 1 discriminator 2 view .LVU834
 2698              		.loc 1 1458 6 is_stmt 0 discriminator 2 view .LVU835
 2699 0016 0546     		mov	r5, r0
 2700 0018 20B1     		cbz	r0, .L221
 2701              	.LVL224:
 2702              	.L214:
1459:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
1460:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1461:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1462:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1463:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Disable ADC DMA (ADC DMA configuration ADC_CFGR_DMACFG is kept) */
1464:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
1465:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1466:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1467:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1468:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1469:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1470:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1471:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
1472:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1473:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1474:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
ARM GAS  /tmp/cc2DBcx1.s 			page 205


1475:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1476:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1477:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1478:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1479:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1480:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
1481:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
1482:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* to keep in memory a potential failing status.                          */
1483:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
1484:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1485:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1486:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1487:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         tmp_hal_status = ADC_Disable(hadc);
1488:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1489:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       else
1490:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         (void)ADC_Disable(hadc);
1492:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1493:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1494:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1495:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1496:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1497:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Set ADC state */
1498:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1499:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1500:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1501:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1502:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1503:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else
1504:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1505:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
1506:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1507:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
1508:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1509:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process unlocked */
1510:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2703              		.loc 1 1510 3 is_stmt 1 view .LVU836
 2704              		.loc 1 1510 3 view .LVU837
 2705 001a 0023     		movs	r3, #0
 2706 001c 84F85430 		strb	r3, [r4, #84]
 2707              		.loc 1 1510 3 view .LVU838
1511:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1512:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Return function status */
1513:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return tmp_hal_status;
 2708              		.loc 1 1513 3 view .LVU839
 2709              	.LVL225:
 2710              	.L213:
1514:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 2711              		.loc 1 1514 1 is_stmt 0 view .LVU840
 2712 0020 2846     		mov	r0, r5
 2713 0022 38BD     		pop	{r3, r4, r5, pc}
 2714              	.LVL226:
 2715              	.L221:
1461:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2716              		.loc 1 1461 5 is_stmt 1 view .LVU841
 2717 0024 A36D     		ldr	r3, [r4, #88]
 2718 0026 23F48073 		bic	r3, r3, #256
ARM GAS  /tmp/cc2DBcx1.s 			page 206


 2719 002a A365     		str	r3, [r4, #88]
1464:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2720              		.loc 1 1464 5 view .LVU842
 2721 002c 2268     		ldr	r2, [r4]
 2722 002e D368     		ldr	r3, [r2, #12]
 2723 0030 23F00103 		bic	r3, r3, #1
 2724 0034 D360     		str	r3, [r2, #12]
1468:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2725              		.loc 1 1468 5 view .LVU843
1468:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2726              		.loc 1 1468 22 is_stmt 0 view .LVU844
 2727 0036 206D     		ldr	r0, [r4, #80]
 2728              	.LVL227:
1468:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2729              		.loc 1 1468 22 view .LVU845
 2730 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 2731              	.LVL228:
1471:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 2732              		.loc 1 1471 5 is_stmt 1 view .LVU846
1471:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 2733              		.loc 1 1471 8 is_stmt 0 view .LVU847
 2734 003c 0546     		mov	r5, r0
 2735 003e 18B1     		cbz	r0, .L215
1474:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 2736              		.loc 1 1474 7 is_stmt 1 view .LVU848
 2737 0040 A36D     		ldr	r3, [r4, #88]
 2738 0042 43F04003 		orr	r3, r3, #64
 2739 0046 A365     		str	r3, [r4, #88]
 2740              	.L215:
1478:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2741              		.loc 1 1478 5 view .LVU849
 2742 0048 2268     		ldr	r2, [r4]
 2743 004a 5368     		ldr	r3, [r2, #4]
 2744 004c 23F01003 		bic	r3, r3, #16
 2745 0050 5360     		str	r3, [r2, #4]
1483:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 2746              		.loc 1 1483 5 view .LVU850
1483:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 2747              		.loc 1 1483 44 is_stmt 0 view .LVU851
 2748 0052 2368     		ldr	r3, [r4]
 2749              	.LVL229:
 2750              	.LBB362:
 2751              	.LBI362:
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2752              		.loc 2 7217 26 is_stmt 1 view .LVU852
 2753              	.LBB363:
 2754              		.loc 2 7219 3 view .LVU853
 2755              		.loc 2 7219 12 is_stmt 0 view .LVU854
 2756 0054 9B68     		ldr	r3, [r3, #8]
 2757              	.LVL230:
 2758              		.loc 2 7219 76 view .LVU855
 2759 0056 13F0080F 		tst	r3, #8
 2760 005a 04D0     		beq	.L216
 2761              	.LVL231:
 2762              		.loc 2 7219 76 view .LVU856
 2763              	.LBE363:
 2764              	.LBE362:
ARM GAS  /tmp/cc2DBcx1.s 			page 207


1505:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 2765              		.loc 1 1505 7 is_stmt 1 view .LVU857
 2766 005c A36D     		ldr	r3, [r4, #88]
 2767 005e 43F48053 		orr	r3, r3, #4096
 2768 0062 A365     		str	r3, [r4, #88]
 2769 0064 D9E7     		b	.L214
 2770              	.LVL232:
 2771              	.L216:
1485:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 2772              		.loc 1 1485 7 view .LVU858
1485:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 2773              		.loc 1 1485 10 is_stmt 0 view .LVU859
 2774 0066 75B9     		cbnz	r5, .L217
1487:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 2775              		.loc 1 1487 9 is_stmt 1 view .LVU860
1487:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 2776              		.loc 1 1487 26 is_stmt 0 view .LVU861
 2777 0068 2046     		mov	r0, r4
 2778              	.LVL233:
1487:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 2779              		.loc 1 1487 26 view .LVU862
 2780 006a FFF7FEFF 		bl	ADC_Disable
 2781              	.LVL234:
 2782 006e 0546     		mov	r5, r0
 2783              	.LVL235:
 2784              	.L218:
1495:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 2785              		.loc 1 1495 7 is_stmt 1 view .LVU863
1495:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 2786              		.loc 1 1495 10 is_stmt 0 view .LVU864
 2787 0070 002D     		cmp	r5, #0
 2788 0072 D2D1     		bne	.L214
1498:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 2789              		.loc 1 1498 9 is_stmt 1 view .LVU865
 2790 0074 A36D     		ldr	r3, [r4, #88]
 2791 0076 23F48053 		bic	r3, r3, #4096
 2792 007a 23F00103 		bic	r3, r3, #1
 2793 007e 43F00103 		orr	r3, r3, #1
 2794 0082 A365     		str	r3, [r4, #88]
 2795 0084 C9E7     		b	.L214
 2796              	.LVL236:
 2797              	.L217:
1491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 2798              		.loc 1 1491 9 view .LVU866
1491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 2799              		.loc 1 1491 15 is_stmt 0 view .LVU867
 2800 0086 2046     		mov	r0, r4
 2801              	.LVL237:
1491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 2802              		.loc 1 1491 15 view .LVU868
 2803 0088 FFF7FEFF 		bl	ADC_Disable
 2804              	.LVL238:
 2805 008c F0E7     		b	.L218
 2806              	.LVL239:
 2807              	.L219:
1451:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2808              		.loc 1 1451 3 view .LVU869
ARM GAS  /tmp/cc2DBcx1.s 			page 208


 2809 008e 0225     		movs	r5, #2
 2810 0090 C6E7     		b	.L213
 2811              		.cfi_endproc
 2812              	.LFE380:
 2814              		.section	.text.HAL_ADCEx_RegularMultiModeStop_DMA,"ax",%progbits
 2815              		.align	1
 2816              		.global	HAL_ADCEx_RegularMultiModeStop_DMA
 2817              		.syntax unified
 2818              		.thumb
 2819              		.thumb_func
 2820              		.fpu fpv4-sp-d16
 2822              	HAL_ADCEx_RegularMultiModeStop_DMA:
 2823              	.LVL240:
 2824              	.LFB381:
1515:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1516:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1517:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
1518:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Stop DMA-based multimode ADC conversion, disable ADC DMA transfer, disable ADC peripher
1519:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         conversion is on-going.
1520:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. Multimode DMA bits
1521:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         (MDMA and DMACFG bits of common CCR register) are maintained. To disable
1522:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         multimode (set with HAL_ADCEx_MultiModeConfigChannel()), ADC must be
1523:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_DeInit(), or the user can
1524:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         resort to HAL_ADCEx_DisableMultiMode() API.
1525:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function
1526:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         HAL_ADCEx_RegularStop_DMA() must be called after this function with handle of
1527:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
1528:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
1529:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status
1530:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1531:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularMultiModeStop_DMA(ADC_HandleTypeDef *hadc)
1532:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 2825              		.loc 1 1532 1 is_stmt 1 view -0
 2826              		.cfi_startproc
 2827              		@ args = 0, pretend = 0, frame = 104
 2828              		@ frame_needed = 0, uses_anonymous_args = 0
1533:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 2829              		.loc 1 1533 3 view .LVU871
1534:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tickstart;
 2830              		.loc 1 1534 3 view .LVU872
1535:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmp_hadc_slave;
 2831              		.loc 1 1535 3 view .LVU873
1536:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_hadc_slave_conversion_on_going;
 2832              		.loc 1 1536 3 view .LVU874
1537:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1538:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
1539:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 2833              		.loc 1 1539 3 view .LVU875
1540:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1541:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process locked */
1542:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2834              		.loc 1 1542 3 view .LVU876
 2835              		.loc 1 1542 3 view .LVU877
 2836 0000 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 2837 0004 012B     		cmp	r3, #1
 2838 0006 00F08680 		beq	.L239
1532:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
ARM GAS  /tmp/cc2DBcx1.s 			page 209


 2839              		.loc 1 1532 1 is_stmt 0 discriminator 2 view .LVU878
 2840 000a 30B5     		push	{r4, r5, lr}
 2841              	.LCFI28:
 2842              		.cfi_def_cfa_offset 12
 2843              		.cfi_offset 4, -12
 2844              		.cfi_offset 5, -8
 2845              		.cfi_offset 14, -4
 2846 000c 9BB0     		sub	sp, sp, #108
 2847              	.LCFI29:
 2848              		.cfi_def_cfa_offset 120
 2849 000e 0446     		mov	r4, r0
 2850              		.loc 1 1542 3 is_stmt 1 discriminator 2 view .LVU879
 2851 0010 0121     		movs	r1, #1
 2852 0012 80F85410 		strb	r1, [r0, #84]
 2853              		.loc 1 1542 3 discriminator 2 view .LVU880
1543:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1544:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1545:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular groups */
1546:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 2854              		.loc 1 1546 3 discriminator 2 view .LVU881
 2855              		.loc 1 1546 20 is_stmt 0 discriminator 2 view .LVU882
 2856 0016 FFF7FEFF 		bl	ADC_ConversionStop
 2857              	.LVL241:
1547:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1548:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1549:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 2858              		.loc 1 1549 3 is_stmt 1 discriminator 2 view .LVU883
 2859              		.loc 1 1549 6 is_stmt 0 discriminator 2 view .LVU884
 2860 001a 0028     		cmp	r0, #0
 2861 001c 76D1     		bne	.L224
1550:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
1551:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1552:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 2862              		.loc 1 1552 5 is_stmt 1 view .LVU885
 2863 001e A36D     		ldr	r3, [r4, #88]
 2864 0020 23F48073 		bic	r3, r3, #256
 2865 0024 A365     		str	r3, [r4, #88]
1553:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1554:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Temporary handle minimum initialization */
1555:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     __HAL_ADC_RESET_HANDLE_STATE(&tmp_hadc_slave);
 2866              		.loc 1 1555 5 view .LVU886
 2867 0026 0023     		movs	r3, #0
 2868 0028 1693     		str	r3, [sp, #88]
1556:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(&tmp_hadc_slave);
 2869              		.loc 1 1556 5 view .LVU887
 2870 002a 1793     		str	r3, [sp, #92]
1557:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1558:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
1559:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmp_hadc_slave);
 2871              		.loc 1 1559 5 view .LVU888
 2872 002c 2268     		ldr	r2, [r4]
 2873 002e 3B4B     		ldr	r3, .L247
 2874 0030 9A42     		cmp	r2, r3
 2875 0032 0DD0     		beq	.L244
 2876              		.loc 1 1559 5 is_stmt 0 discriminator 2 view .LVU889
 2877 0034 0023     		movs	r3, #0
 2878 0036 0093     		str	r3, [sp]
ARM GAS  /tmp/cc2DBcx1.s 			page 210


 2879              	.L226:
1560:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1561:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (tmp_hadc_slave.Instance == NULL)
 2880              		.loc 1 1561 5 is_stmt 1 view .LVU890
 2881              		.loc 1 1561 23 is_stmt 0 view .LVU891
 2882 0038 009B     		ldr	r3, [sp]
 2883              		.loc 1 1561 8 view .LVU892
 2884 003a 6BB1     		cbz	r3, .L245
1562:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1563:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1564:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1565:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1566:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Process unlocked */
1567:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1568:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1569:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       return HAL_ERROR;
1570:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1571:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1572:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
1573:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
1574:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1575:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* 1. Wait for ADC conversion completion for ADC master and ADC slave */
1576:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 2885              		.loc 1 1576 5 is_stmt 1 view .LVU893
 2886              		.loc 1 1576 17 is_stmt 0 view .LVU894
 2887 003c FFF7FEFF 		bl	HAL_GetTick
 2888              	.LVL242:
 2889              		.loc 1 1576 17 view .LVU895
 2890 0040 0546     		mov	r5, r0
 2891              	.LVL243:
1577:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1578:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hadc_slave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmp_hadc_slave)->Instance
 2892              		.loc 1 1578 5 is_stmt 1 view .LVU896
 2893              		.loc 1 1578 90 is_stmt 0 view .LVU897
 2894 0042 009B     		ldr	r3, [sp]
 2895              	.LVL244:
 2896              	.LBB364:
 2897              	.LBI364:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2898              		.loc 2 6991 26 is_stmt 1 view .LVU898
 2899              	.LBB365:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2900              		.loc 2 6993 3 view .LVU899
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2901              		.loc 2 6993 12 is_stmt 0 view .LVU900
 2902 0044 9B68     		ldr	r3, [r3, #8]
 2903              	.LVL245:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2904              		.loc 2 6993 74 view .LVU901
 2905 0046 13F00403 		ands	r3, r3, #4
 2906 004a 13D0     		beq	.L235
 2907 004c 0123     		movs	r3, #1
 2908 004e 11E0     		b	.L235
 2909              	.LVL246:
 2910              	.L244:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2911              		.loc 2 6993 74 view .LVU902
ARM GAS  /tmp/cc2DBcx1.s 			page 211


 2912              	.LBE365:
 2913              	.LBE364:
1559:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2914              		.loc 1 1559 5 discriminator 1 view .LVU903
 2915 0050 03F58073 		add	r3, r3, #256
 2916 0054 0093     		str	r3, [sp]
 2917 0056 EFE7     		b	.L226
 2918              	.L245:
1564:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2919              		.loc 1 1564 7 is_stmt 1 view .LVU904
 2920 0058 A36D     		ldr	r3, [r4, #88]
 2921 005a 43F02003 		orr	r3, r3, #32
 2922 005e A365     		str	r3, [r4, #88]
1567:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2923              		.loc 1 1567 7 view .LVU905
1567:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2924              		.loc 1 1567 7 view .LVU906
 2925 0060 0023     		movs	r3, #0
 2926 0062 84F85430 		strb	r3, [r4, #84]
1567:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 2927              		.loc 1 1567 7 view .LVU907
1569:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 2928              		.loc 1 1569 7 view .LVU908
1569:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 2929              		.loc 1 1569 14 is_stmt 0 view .LVU909
 2930 0066 0120     		movs	r0, #1
 2931              	.LVL247:
1569:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 2932              		.loc 1 1569 14 view .LVU910
 2933 0068 53E0     		b	.L223
 2934              	.LVL248:
 2935              	.L230:
1579:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1580:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****            || (tmp_hadc_slave_conversion_on_going == 1UL)
1581:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           )
1582:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1583:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
1584:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1585:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
1586:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         tmp_hadc_slave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmp_hadc_slave)->Inst
1587:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1588:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             || (tmp_hadc_slave_conversion_on_going == 1UL)
1589:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****            )
1590:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
1591:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
1592:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1593:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1594:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           /* Process unlocked */
1595:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1596:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1597:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           return HAL_ERROR;
1598:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
1599:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1600:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1601:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       tmp_hadc_slave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmp_hadc_slave)->Instan
 2936              		.loc 1 1601 7 is_stmt 1 view .LVU911
 2937              		.loc 1 1601 92 is_stmt 0 view .LVU912
ARM GAS  /tmp/cc2DBcx1.s 			page 212


 2938 006a 009B     		ldr	r3, [sp]
 2939              	.LVL249:
 2940              	.LBB366:
 2941              	.LBI366:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2942              		.loc 2 6991 26 is_stmt 1 view .LVU913
 2943              	.LBB367:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2944              		.loc 2 6993 3 view .LVU914
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2945              		.loc 2 6993 12 is_stmt 0 view .LVU915
 2946 006c 9B68     		ldr	r3, [r3, #8]
 2947              	.LVL250:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2948              		.loc 2 6993 74 view .LVU916
 2949 006e 13F00403 		ands	r3, r3, #4
 2950 0072 21D1     		bne	.L233
 2951              	.LVL251:
 2952              	.L235:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2953              		.loc 2 6993 74 view .LVU917
 2954              	.LBE367:
 2955              	.LBE366:
1579:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
 2956              		.loc 1 1579 11 is_stmt 1 view .LVU918
1579:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
 2957              		.loc 1 1579 48 is_stmt 0 view .LVU919
 2958 0074 2268     		ldr	r2, [r4]
 2959              	.LVL252:
 2960              	.LBB369:
 2961              	.LBI369:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2962              		.loc 2 6991 26 is_stmt 1 view .LVU920
 2963              	.LBB370:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2964              		.loc 2 6993 3 view .LVU921
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2965              		.loc 2 6993 12 is_stmt 0 view .LVU922
 2966 0076 9268     		ldr	r2, [r2, #8]
 2967              	.LVL253:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2968              		.loc 2 6993 74 view .LVU923
 2969 0078 12F0040F 		tst	r2, #4
 2970 007c 01D1     		bne	.L236
 2971              	.LVL254:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2972              		.loc 2 6993 74 view .LVU924
 2973              	.LBE370:
 2974              	.LBE369:
1580:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           )
 2975              		.loc 1 1580 12 view .LVU925
 2976 007e 012B     		cmp	r3, #1
 2977 0080 1CD1     		bne	.L246
 2978              	.L236:
1583:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 2979              		.loc 1 1583 7 is_stmt 1 view .LVU926
1583:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/cc2DBcx1.s 			page 213


 2980              		.loc 1 1583 12 is_stmt 0 view .LVU927
 2981 0082 FFF7FEFF 		bl	HAL_GetTick
 2982              	.LVL255:
1583:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 2983              		.loc 1 1583 26 view .LVU928
 2984 0086 431B     		subs	r3, r0, r5
1583:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 2985              		.loc 1 1583 10 view .LVU929
 2986 0088 052B     		cmp	r3, #5
 2987 008a EED9     		bls	.L230
1586:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
 2988              		.loc 1 1586 9 is_stmt 1 view .LVU930
1586:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
 2989              		.loc 1 1586 94 is_stmt 0 view .LVU931
 2990 008c 009B     		ldr	r3, [sp]
 2991              	.LVL256:
 2992              	.LBB371:
 2993              	.LBI371:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2994              		.loc 2 6991 26 is_stmt 1 view .LVU932
 2995              	.LBB372:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2996              		.loc 2 6993 3 view .LVU933
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2997              		.loc 2 6993 12 is_stmt 0 view .LVU934
 2998 008e 9B68     		ldr	r3, [r3, #8]
 2999              	.LVL257:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3000              		.loc 2 6993 74 view .LVU935
 3001 0090 13F00403 		ands	r3, r3, #4
 3002 0094 00D0     		beq	.L231
 3003 0096 0123     		movs	r3, #1
 3004              	.L231:
 3005              	.LVL258:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3006              		.loc 2 6993 74 view .LVU936
 3007              	.LBE372:
 3008              	.LBE371:
1587:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             || (tmp_hadc_slave_conversion_on_going == 1UL)
 3009              		.loc 1 1587 9 is_stmt 1 view .LVU937
1587:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             || (tmp_hadc_slave_conversion_on_going == 1UL)
 3010              		.loc 1 1587 49 is_stmt 0 view .LVU938
 3011 0098 2268     		ldr	r2, [r4]
 3012              	.LVL259:
 3013              	.LBB373:
 3014              	.LBI373:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3015              		.loc 2 6991 26 is_stmt 1 view .LVU939
 3016              	.LBB374:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3017              		.loc 2 6993 3 view .LVU940
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3018              		.loc 2 6993 12 is_stmt 0 view .LVU941
 3019 009a 9268     		ldr	r2, [r2, #8]
 3020              	.LVL260:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3021              		.loc 2 6993 74 view .LVU942
ARM GAS  /tmp/cc2DBcx1.s 			page 214


 3022 009c 12F0040F 		tst	r2, #4
 3023 00a0 01D1     		bne	.L232
 3024              	.LVL261:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3025              		.loc 2 6993 74 view .LVU943
 3026              	.LBE374:
 3027              	.LBE373:
1588:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****            )
 3028              		.loc 1 1588 13 view .LVU944
 3029 00a2 012B     		cmp	r3, #1
 3030 00a4 E1D1     		bne	.L230
 3031              	.L232:
1592:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3032              		.loc 1 1592 11 is_stmt 1 view .LVU945
 3033 00a6 A36D     		ldr	r3, [r4, #88]
 3034              	.LVL262:
1592:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3035              		.loc 1 1592 11 is_stmt 0 view .LVU946
 3036 00a8 43F01003 		orr	r3, r3, #16
 3037 00ac A365     		str	r3, [r4, #88]
1595:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3038              		.loc 1 1595 11 is_stmt 1 view .LVU947
1595:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3039              		.loc 1 1595 11 view .LVU948
 3040 00ae 0023     		movs	r3, #0
 3041 00b0 84F85430 		strb	r3, [r4, #84]
1595:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3042              		.loc 1 1595 11 view .LVU949
1597:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 3043              		.loc 1 1597 11 view .LVU950
1597:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 3044              		.loc 1 1597 18 is_stmt 0 view .LVU951
 3045 00b4 0120     		movs	r0, #1
 3046 00b6 2CE0     		b	.L223
 3047              	.LVL263:
 3048              	.L233:
 3049              	.LBB375:
 3050              	.LBB368:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3051              		.loc 2 6993 74 view .LVU952
 3052 00b8 0123     		movs	r3, #1
 3053 00ba DBE7     		b	.L235
 3054              	.LVL264:
 3055              	.L246:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3056              		.loc 2 6993 74 view .LVU953
 3057              	.LBE368:
 3058              	.LBE375:
1602:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1603:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1604:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1605:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1606:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Note: DMA channel of ADC slave should be stopped after this function   */
1607:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* with HAL_ADCEx_RegularStop_DMA() API.                                  */
1608:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 3059              		.loc 1 1608 5 is_stmt 1 view .LVU954
 3060              		.loc 1 1608 22 is_stmt 0 view .LVU955
ARM GAS  /tmp/cc2DBcx1.s 			page 215


 3061 00bc 206D     		ldr	r0, [r4, #80]
 3062 00be FFF7FEFF 		bl	HAL_DMA_Abort
 3063              	.LVL265:
1609:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1610:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1611:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
 3064              		.loc 1 1611 5 is_stmt 1 view .LVU956
 3065              		.loc 1 1611 8 is_stmt 0 view .LVU957
 3066 00c2 18B1     		cbz	r0, .L237
1612:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1613:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1614:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 3067              		.loc 1 1614 7 is_stmt 1 view .LVU958
 3068 00c4 A36D     		ldr	r3, [r4, #88]
 3069 00c6 43F04003 		orr	r3, r3, #64
 3070 00ca A365     		str	r3, [r4, #88]
 3071              	.L237:
1615:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1616:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1617:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1618:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 3072              		.loc 1 1618 5 view .LVU959
 3073 00cc 2268     		ldr	r2, [r4]
 3074 00ce 5368     		ldr	r3, [r2, #4]
 3075 00d0 23F01003 		bic	r3, r3, #16
 3076 00d4 5360     		str	r3, [r2, #4]
1619:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1620:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave if no injected        */
1621:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /*   conversion is on-going.                                              */
1622:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep in */
1623:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* memory a potential failing status.                                     */
1624:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 3077              		.loc 1 1624 5 view .LVU960
 3078              		.loc 1 1624 8 is_stmt 0 view .LVU961
 3079 00d6 C8B9     		cbnz	r0, .L224
1625:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1626:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 3080              		.loc 1 1626 7 is_stmt 1 view .LVU962
 3081              		.loc 1 1626 46 is_stmt 0 view .LVU963
 3082 00d8 2368     		ldr	r3, [r4]
 3083              	.LVL266:
 3084              	.LBB376:
 3085              	.LBI376:
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3086              		.loc 2 7217 26 is_stmt 1 view .LVU964
 3087              	.LBB377:
 3088              		.loc 2 7219 3 view .LVU965
 3089              		.loc 2 7219 12 is_stmt 0 view .LVU966
 3090 00da 9B68     		ldr	r3, [r3, #8]
 3091              	.LVL267:
 3092              		.loc 2 7219 76 view .LVU967
 3093 00dc 13F0080F 		tst	r3, #8
 3094 00e0 0BD1     		bne	.L238
 3095              	.LVL268:
 3096              		.loc 2 7219 76 view .LVU968
 3097              	.LBE377:
 3098              	.LBE376:
ARM GAS  /tmp/cc2DBcx1.s 			page 216


1627:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1628:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         tmp_hal_status =  ADC_Disable(hadc);
 3099              		.loc 1 1628 9 is_stmt 1 view .LVU969
 3100              		.loc 1 1628 27 is_stmt 0 view .LVU970
 3101 00e2 2046     		mov	r0, r4
 3102              	.LVL269:
 3103              		.loc 1 1628 27 view .LVU971
 3104 00e4 FFF7FEFF 		bl	ADC_Disable
 3105              	.LVL270:
1629:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         if (tmp_hal_status == HAL_OK)
 3106              		.loc 1 1629 9 is_stmt 1 view .LVU972
 3107              		.loc 1 1629 12 is_stmt 0 view .LVU973
 3108 00e8 38B9     		cbnz	r0, .L238
1630:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
1631:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           if (LL_ADC_INJ_IsConversionOngoing((&tmp_hadc_slave)->Instance) == 0UL)
 3109              		.loc 1 1631 11 is_stmt 1 view .LVU974
 3110              		.loc 1 1631 63 is_stmt 0 view .LVU975
 3111 00ea 009B     		ldr	r3, [sp]
 3112              	.LVL271:
 3113              	.LBB378:
 3114              	.LBI378:
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3115              		.loc 2 7217 26 is_stmt 1 view .LVU976
 3116              	.LBB379:
 3117              		.loc 2 7219 3 view .LVU977
 3118              		.loc 2 7219 12 is_stmt 0 view .LVU978
 3119 00ec 9B68     		ldr	r3, [r3, #8]
 3120              	.LVL272:
 3121              		.loc 2 7219 76 view .LVU979
 3122 00ee 13F0080F 		tst	r3, #8
 3123 00f2 02D1     		bne	.L238
 3124              	.LVL273:
 3125              		.loc 2 7219 76 view .LVU980
 3126              	.LBE379:
 3127              	.LBE378:
1632:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           {
1633:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****             tmp_hal_status =  ADC_Disable(&tmp_hadc_slave);
 3128              		.loc 1 1633 13 is_stmt 1 view .LVU981
 3129              		.loc 1 1633 31 is_stmt 0 view .LVU982
 3130 00f4 6846     		mov	r0, sp
 3131              	.LVL274:
 3132              		.loc 1 1633 31 view .LVU983
 3133 00f6 FFF7FEFF 		bl	ADC_Disable
 3134              	.LVL275:
 3135              	.L238:
1634:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           }
1635:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
1636:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1637:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1638:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 3136              		.loc 1 1638 7 is_stmt 1 view .LVU984
 3137              		.loc 1 1638 10 is_stmt 0 view .LVU985
 3138 00fa 38B9     		cbnz	r0, .L224
1639:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1640:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Both Master and Slave ADC's could be disabled. Update Master State */
1641:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Clear HAL_ADC_STATE_INJ_BUSY bit, set HAL_ADC_STATE_READY bit */
1642:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY, HAL_ADC_STATE_READY);
ARM GAS  /tmp/cc2DBcx1.s 			page 217


 3139              		.loc 1 1642 9 is_stmt 1 view .LVU986
 3140 00fc A36D     		ldr	r3, [r4, #88]
 3141 00fe 23F48053 		bic	r3, r3, #4096
 3142 0102 23F00103 		bic	r3, r3, #1
 3143 0106 43F00103 		orr	r3, r3, #1
 3144 010a A365     		str	r3, [r4, #88]
 3145              	.LVL276:
 3146              	.L224:
1643:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1644:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       else
1645:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1646:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* injected (Master or Slave) conversions are still on-going,
1647:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****            no Master State change */
1648:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 3147              		.loc 1 1648 7 view .LVU987
1649:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1650:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
1651:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1652:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process unlocked */
1653:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 3148              		.loc 1 1653 3 view .LVU988
 3149              		.loc 1 1653 3 view .LVU989
 3150 010c 0023     		movs	r3, #0
 3151 010e 84F85430 		strb	r3, [r4, #84]
 3152              		.loc 1 1653 3 view .LVU990
1654:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1655:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Return function status */
1656:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return tmp_hal_status;
 3153              		.loc 1 1656 3 view .LVU991
 3154              	.LVL277:
 3155              	.L223:
1657:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 3156              		.loc 1 1657 1 is_stmt 0 view .LVU992
 3157 0112 1BB0     		add	sp, sp, #108
 3158              	.LCFI30:
 3159              		.cfi_def_cfa_offset 12
 3160              		@ sp needed
 3161 0114 30BD     		pop	{r4, r5, pc}
 3162              	.LVL278:
 3163              	.L239:
 3164              	.LCFI31:
 3165              		.cfi_def_cfa_offset 0
 3166              		.cfi_restore 4
 3167              		.cfi_restore 5
 3168              		.cfi_restore 14
1542:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3169              		.loc 1 1542 3 view .LVU993
 3170 0116 0220     		movs	r0, #2
 3171              	.LVL279:
 3172              		.loc 1 1657 1 view .LVU994
 3173 0118 7047     		bx	lr
 3174              	.L248:
 3175 011a 00BF     		.align	2
 3176              	.L247:
 3177 011c 00800242 		.word	1107460096
 3178              		.cfi_endproc
 3179              	.LFE381:
ARM GAS  /tmp/cc2DBcx1.s 			page 218


 3181              		.section	.text.HAL_ADCEx_InjectedConfigChannel,"ax",%progbits
 3182              		.align	1
 3183              		.global	HAL_ADCEx_InjectedConfigChannel
 3184              		.syntax unified
 3185              		.thumb
 3186              		.thumb_func
 3187              		.fpu fpv4-sp-d16
 3189              	HAL_ADCEx_InjectedConfigChannel:
 3190              	.LVL280:
 3191              	.LFB382:
1658:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1659:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1660:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
1661:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @}
1662:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1663:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1664:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group2 ADC Extended Peripheral Control functions
1665:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief    ADC Extended Peripheral Control functions
1666:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *
1667:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** @verbatim
1668:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****  ===============================================================================
1669:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****              ##### Peripheral Control functions #####
1670:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****  ===============================================================================
1671:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
1672:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (+) Configure channels on injected group
1673:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (+) Configure multimode when multimode feature is available
1674:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (+) Enable or Disable Injected Queue
1675:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (+) Disable ADC voltage regulator
1676:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (+) Enter ADC deep-power-down mode
1677:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1678:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** @endverbatim
1679:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @{
1680:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1681:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1682:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
1683:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Configure a channel to be assigned to ADC group injected.
1684:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
1685:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this
1686:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
1687:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without resetting the ADC.
1688:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state:
1689:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         Refer to comments of structure "ADC_InjectionConfTypeDef".
1690:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
1691:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
1692:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         These internal paths can be disabled using function
1693:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
1694:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   Caution: For Injected Context Queue use, a context must be fully
1695:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         defined before start of injected conversion. All channels are configured
1696:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         consecutively for the same ADC instance. Therefore, the number of calls to
1697:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedConfigChannel() must be equal to the value of parameter
1698:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         InjectedNbrOfConversion for each context.
1699:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *  - Example 1: If 1 context is intended to be used (or if there is no use of the
1700:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *    Injected Queue Context feature) and if the context contains 3 injected ranks
1701:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *    (InjectedNbrOfConversion = 3), HAL_ADCEx_InjectedConfigChannel() must be
1702:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *    called once for each channel (i.e. 3 times) before starting a conversion.
1703:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *    This function must not be called to configure a 4th injected channel:
1704:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *    it would start a new context into context queue.
ARM GAS  /tmp/cc2DBcx1.s 			page 219


1705:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *  - Example 2: If 2 contexts are intended to be used and each of them contains
1706:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *    3 injected ranks (InjectedNbrOfConversion = 3),
1707:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() must be called once for each channel and
1708:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *    for each context (3 channels x 2 contexts = 6 calls). Conversion can
1709:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *    start once the 1st context is set, that is after the first three
1710:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() calls. The 2nd context can be set on the fly.
1711:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle
1712:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param pConfigInjected Structure of ADC injected group and ADC channel for
1713:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         injected group.
1714:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status
1715:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
1716:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef *hadc,
1717:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                   const ADC_InjectionConfTypeDef *pConfigInjected)
1718:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 3192              		.loc 1 1718 1 is_stmt 1 view -0
 3193              		.cfi_startproc
 3194              		@ args = 0, pretend = 0, frame = 8
 3195              		@ frame_needed = 0, uses_anonymous_args = 0
 3196              		.loc 1 1718 1 is_stmt 0 view .LVU996
 3197 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3198              	.LCFI32:
 3199              		.cfi_def_cfa_offset 20
 3200              		.cfi_offset 4, -20
 3201              		.cfi_offset 5, -16
 3202              		.cfi_offset 6, -12
 3203              		.cfi_offset 7, -8
 3204              		.cfi_offset 14, -4
 3205 0002 83B0     		sub	sp, sp, #12
 3206              	.LCFI33:
 3207              		.cfi_def_cfa_offset 32
 3208 0004 0346     		mov	r3, r0
1719:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3209              		.loc 1 1719 3 is_stmt 1 view .LVU997
 3210              	.LVL281:
1720:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_offset_shifted;
 3211              		.loc 1 1720 3 view .LVU998
1721:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_config_internal_channel;
 3212              		.loc 1 1721 3 view .LVU999
1722:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 3213              		.loc 1 1722 3 view .LVU1000
1723:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3214              		.loc 1 1723 3 view .LVU1001
1724:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0;
 3215              		.loc 1 1724 3 view .LVU1002
 3216              		.loc 1 1724 17 is_stmt 0 view .LVU1003
 3217 0006 0022     		movs	r2, #0
 3218 0008 0192     		str	r2, [sp, #4]
1725:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1726:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_jsqr_context_queue_being_built = 0U;
 3219              		.loc 1 1726 3 is_stmt 1 view .LVU1004
 3220              	.LVL282:
1727:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1728:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
1729:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3221              		.loc 1 1729 3 view .LVU1005
1730:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(pConfigInjected->InjectedSamplingTime));
 3222              		.loc 1 1730 3 view .LVU1006
ARM GAS  /tmp/cc2DBcx1.s 			page 220


1731:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(pConfigInjected->InjectedSingleDiff));
 3223              		.loc 1 1731 3 view .LVU1007
1732:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(pConfigInjected->AutoInjectedConv));
 3224              		.loc 1 1732 3 view .LVU1008
1733:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(pConfigInjected->QueueInjectedContext));
 3225              		.loc 1 1733 3 view .LVU1009
1734:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC_EDGE(pConfigInjected->ExternalTrigInjecConvEdge));
 3226              		.loc 1 1734 3 view .LVU1010
1735:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(pConfigInjected->ExternalTrigInjecConv));
 3227              		.loc 1 1735 3 view .LVU1011
1736:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_OFFSET_NUMBER(pConfigInjected->InjectedOffsetNumber));
 3228              		.loc 1 1736 3 view .LVU1012
1737:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pConfigInjected->InjectedOffset));
 3229              		.loc 1 1737 3 view .LVU1013
1738:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_OFFSET_SIGN(pConfigInjected->InjectedOffsetSign));
 3230              		.loc 1 1738 3 view .LVU1014
1739:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(pConfigInjected->InjectedOffsetSaturation));
 3231              		.loc 1 1739 3 view .LVU1015
1740:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(pConfigInjected->InjecOversamplingMode));
 3232              		.loc 1 1740 3 view .LVU1016
1741:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1742:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 3233              		.loc 1 1742 3 view .LVU1017
 3234              		.loc 1 1742 17 is_stmt 0 view .LVU1018
 3235 000a 0069     		ldr	r0, [r0, #16]
 3236              	.LVL283:
1743:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
1744:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(pConfigInjected->InjectedRank));
 3237              		.loc 1 1744 5 is_stmt 1 view .LVU1019
1745:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(pConfigInjected->InjectedNbrOfConversion));
 3238              		.loc 1 1745 5 view .LVU1020
1746:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(pConfigInjected->InjectedDiscontinuousConvMode));
 3239              		.loc 1 1746 5 view .LVU1021
1747:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
1748:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1749:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1750:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* if JOVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
1751:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****      ignored (considered as reset) */
1752:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(!((pConfigInjected->InjectedOffsetNumber != ADC_OFFSET_NONE)
 3240              		.loc 1 1752 3 view .LVU1022
1753:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                  && (pConfigInjected->InjecOversamplingMode == ENABLE)));
1754:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1755:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* JDISCEN and JAUTO bits can't be set at the same time  */
1756:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(!((pConfigInjected->InjectedDiscontinuousConvMode == ENABLE)
 3241              		.loc 1 1756 3 view .LVU1023
1757:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                  && (pConfigInjected->AutoInjectedConv == ENABLE)));
1758:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1759:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*  DISCEN and JAUTO bits can't be set at the same time */
1760:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (pConfigInjected->AutoInjectedConv
 3242              		.loc 1 1760 3 view .LVU1024
1761:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1762:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Verification of channel number */
1763:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (pConfigInjected->InjectedSingleDiff != ADC_DIFFERENTIAL_ENDED)
 3243              		.loc 1 1763 3 view .LVU1025
1764:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
1765:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(hadc, pConfigInjected->InjectedChannel));
1766:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
ARM GAS  /tmp/cc2DBcx1.s 			page 221


1767:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   else
1768:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
1769:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, pConfigInjected->InjectedChannel));
 3244              		.loc 1 1769 5 view .LVU1026
1770:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
1771:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1772:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process locked */
1773:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 3245              		.loc 1 1773 3 view .LVU1027
 3246              		.loc 1 1773 3 view .LVU1028
 3247 000c 93F85420 		ldrb	r2, [r3, #84]	@ zero_extendqisi2
 3248 0010 012A     		cmp	r2, #1
 3249 0012 00F01483 		beq	.L320
 3250              		.loc 1 1773 3 discriminator 2 view .LVU1029
 3251 0016 0122     		movs	r2, #1
 3252 0018 83F85420 		strb	r2, [r3, #84]
 3253              		.loc 1 1773 3 discriminator 2 view .LVU1030
1774:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1775:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Configuration of injected group sequencer:                               */
1776:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Hardware constraint: Must fully define injected context register JSQR    */
1777:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* before make it entering into injected sequencer queue.                   */
1778:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*                                                                          */
1779:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* - if scan mode is disabled:                                              */
1780:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to 0x00: 1 channel         */
1781:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*      converted (channel on injected rank 1)                              */
1782:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*      Parameter "InjectedNbrOfConversion" is discarded.                   */
1783:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting is simple: register is fully */
1784:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*      defined on one call of this function (for injected rank 1) and can  */
1785:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*      be entered into queue directly.                                     */
1786:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* - if scan mode is enabled:                                               */
1787:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to parameter               */
1788:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*      "InjectedNbrOfConversion".                                          */
1789:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting more complex: register is    */
1790:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*      fully defined over successive calls of this function, for each      */
1791:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*      injected channel rank. It is entered into queue only when all       */
1792:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*      injected ranks have been set.                                       */
1793:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*   Note: Scan mode is not present by hardware on this device, but used    */
1794:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*   by software for alignment over all STM32 devices.                      */
1795:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1796:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if ((hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)  ||
 3254              		.loc 1 1796 3 discriminator 2 view .LVU1031
 3255              		.loc 1 1796 6 is_stmt 0 discriminator 2 view .LVU1032
 3256 001c A8B1     		cbz	r0, .L251
1797:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (pConfigInjected->InjectedNbrOfConversion == 1U))
 3257              		.loc 1 1797 23 discriminator 1 view .LVU1033
 3258 001e 0A6A     		ldr	r2, [r1, #32]
1796:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       (pConfigInjected->InjectedNbrOfConversion == 1U))
 3259              		.loc 1 1796 54 discriminator 1 view .LVU1034
 3260 0020 012A     		cmp	r2, #1
 3261 0022 12D0     		beq	.L251
1798:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
1799:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Configuration of context register JSQR:                                */
1800:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /*  - number of ranks in injected group sequencer: fixed to 1st rank      */
1801:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /*    (scan mode disabled, only rank 1 used)                              */
1802:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
1803:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /*  - external trigger polarity                                           */
1804:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /*  - channel set to rank 1 (scan mode disabled, only rank 1 can be used) */
ARM GAS  /tmp/cc2DBcx1.s 			page 222


1805:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1806:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (pConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
1807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1808:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1809:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* software start.                                                      */
1810:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1811:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1812:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*       software start.                                                */
1813:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (pConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
1814:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1815:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         tmp_jsqr_context_queue_being_built = (ADC_JSQR_RK(pConfigInjected->InjectedChannel, ADC_INJ
1816:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                               | (pConfigInjected->ExternalTrigInjecConv & ADC_JSQR_
1817:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                               | pConfigInjected->ExternalTrigInjecConvEdge
1818:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                              );
1819:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1820:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       else
1821:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1822:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         tmp_jsqr_context_queue_being_built = (ADC_JSQR_RK(pConfigInjected->InjectedChannel, ADC_INJ
1823:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1824:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1825:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, tmp_jsqr_context_queue_being_built);
1826:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
1827:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = tmp_jsqr_context_queue_being_built;
1828:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1829:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1830:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
1831:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   else
1832:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
1833:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Case of scan mode enabled, several channels to set into injected group */
1834:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* sequencer.                                                             */
1835:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /*                                                                        */
1836:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Procedure to define injected context register JSQR over successive     */
1837:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* calls of this function, for each injected channel rank:                */
1838:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* 1. Start new context and set parameters related to all injected        */
1839:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /*    channels: injected sequence length and trigger.                     */
1840:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1841:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* if hadc->InjectionConfig.ChannelCount is equal to 0, this is the first */
1842:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /*   call of the context under setting                                    */
1843:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
 3262              		.loc 1 1843 5 is_stmt 1 view .LVU1035
 3263              		.loc 1 1843 30 is_stmt 0 view .LVU1036
 3264 0024 586E     		ldr	r0, [r3, #100]
 3265              		.loc 1 1843 8 view .LVU1037
 3266 0026 0028     		cmp	r0, #0
 3267 0028 40F0D280 		bne	.L321
1844:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1845:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Initialize number of channels that will be configured on the context */
1846:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*  being built                                                         */
1847:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount = pConfigInjected->InjectedNbrOfConversion;
 3268              		.loc 1 1847 7 is_stmt 1 view .LVU1038
 3269              		.loc 1 1847 42 is_stmt 0 view .LVU1039
 3270 002c 5A66     		str	r2, [r3, #100]
1848:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Handle hadc saves the context under build up over each HAL_ADCEx_InjectedConfigChannel()
1849:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****          call, this context will be written in JSQR register at the last call.
1850:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****          At this point, the context is merely reset  */
1851:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = 0x00000000U;
 3271              		.loc 1 1851 7 is_stmt 1 view .LVU1040
ARM GAS  /tmp/cc2DBcx1.s 			page 223


 3272              		.loc 1 1851 42 is_stmt 0 view .LVU1041
 3273 002e 0022     		movs	r2, #0
 3274 0030 1A66     		str	r2, [r3, #96]
1852:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1853:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Configuration of context register JSQR:                              */
1854:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*  - number of ranks in injected group sequencer                       */
1855:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*  - external trigger to start conversion                              */
1856:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*  - external trigger polarity                                         */
1857:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1858:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1859:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* software start.                                                      */
1860:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1861:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1862:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*       software start.                                                */
1863:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (pConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
 3275              		.loc 1 1863 7 is_stmt 1 view .LVU1042
 3276              		.loc 1 1863 26 is_stmt 0 view .LVU1043
 3277 0032 8C6A     		ldr	r4, [r1, #40]
 3278              		.loc 1 1863 10 view .LVU1044
 3279 0034 002C     		cmp	r4, #0
 3280 0036 00F0C880 		beq	.L257
1864:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1865:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         tmp_jsqr_context_queue_being_built = ((pConfigInjected->InjectedNbrOfConversion - 1U)
 3281              		.loc 1 1865 9 is_stmt 1 view .LVU1045
 3282              		.loc 1 1865 63 is_stmt 0 view .LVU1046
 3283 003a 0A6A     		ldr	r2, [r1, #32]
 3284              		.loc 1 1865 89 view .LVU1047
 3285 003c 013A     		subs	r2, r2, #1
1866:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                               | (pConfigInjected->ExternalTrigInjecConv & ADC_JSQR_
 3286              		.loc 1 1866 89 view .LVU1048
 3287 003e 04F07C04 		and	r4, r4, #124
 3288              		.loc 1 1866 47 view .LVU1049
 3289 0042 2243     		orrs	r2, r2, r4
1867:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                               | pConfigInjected->ExternalTrigInjecConvEdge
 3290              		.loc 1 1867 64 view .LVU1050
 3291 0044 CC6A     		ldr	r4, [r1, #44]
1865:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                               | (pConfigInjected->ExternalTrigInjecConv & ADC_JSQR_
 3292              		.loc 1 1865 44 view .LVU1051
 3293 0046 1443     		orrs	r4, r4, r2
 3294              	.LVL284:
1865:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                               | (pConfigInjected->ExternalTrigInjecConv & ADC_JSQR_
 3295              		.loc 1 1865 44 view .LVU1052
 3296 0048 C3E0     		b	.L256
 3297              	.LVL285:
 3298              	.L251:
1806:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 3299              		.loc 1 1806 5 is_stmt 1 view .LVU1053
1806:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 3300              		.loc 1 1806 24 is_stmt 0 view .LVU1054
 3301 004a 4A68     		ldr	r2, [r1, #4]
1806:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 3302              		.loc 1 1806 8 view .LVU1055
 3303 004c 092A     		cmp	r2, #9
 3304 004e 00F09C80 		beq	.L336
 3305              	.LVL286:
 3306              	.L253:
1868:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                              );
ARM GAS  /tmp/cc2DBcx1.s 			page 224


1869:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1870:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       else
1871:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1872:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         tmp_jsqr_context_queue_being_built = ((pConfigInjected->InjectedNbrOfConversion - 1U));
1873:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1874:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1875:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1876:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1877:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* 2. Continue setting of context under definition with parameter       */
1878:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /*    related to each channel: channel rank sequence                    */
1879:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Clear the old JSQx bits for the selected rank */
1880:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_jsqr_context_queue_being_built &= ~ADC_JSQR_RK(ADC_SQR3_SQ10, pConfigInjected->InjectedRank
1881:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1882:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Set the JSQx bits for the selected rank */
1883:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_jsqr_context_queue_being_built |= ADC_JSQR_RK(pConfigInjected->InjectedChannel, pConfigInje
1884:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1885:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Decrease channel count  */
1886:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     hadc->InjectionConfig.ChannelCount--;
1887:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1888:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* 3. tmp_jsqr_context_queue_being_built is fully built for this HAL_ADCEx_InjectedConfigChanne
1889:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           call, aggregate the setting to those already built during the previous
1890:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           HAL_ADCEx_InjectedConfigChannel() calls (for the same context of course)  */
1891:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     hadc->InjectionConfig.ContextQueue |= tmp_jsqr_context_queue_being_built;
1892:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1893:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* 4. End of context setting: if this is the last channel set, then write context
1894:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         into register JSQR and make it enter into queue                   */
1895:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
1896:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1897:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, hadc->InjectionConfig.ContextQueue);
1898:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1899:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
1900:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1901:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1902:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1903:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* conversion on going on injected group:                                   */
1904:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*  - Injected context queue: Queue disable (active context is kept) or     */
1905:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*    enable (context decremented, up to 2 contexts queued)                 */
1906:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode: can be enabled only if auto-injected     */
1907:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*    mode is disabled.                                                     */
1908:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 3307              		.loc 1 1908 3 is_stmt 1 view .LVU1056
 3308              		.loc 1 1908 42 is_stmt 0 view .LVU1057
 3309 0052 1A68     		ldr	r2, [r3]
 3310              	.LVL287:
 3311              	.LBB486:
 3312              	.LBI486:
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3313              		.loc 2 7217 26 is_stmt 1 view .LVU1058
 3314              	.LBB487:
 3315              		.loc 2 7219 3 view .LVU1059
 3316              		.loc 2 7219 12 is_stmt 0 view .LVU1060
 3317 0054 9268     		ldr	r2, [r2, #8]
 3318              	.LVL288:
 3319              		.loc 2 7219 76 view .LVU1061
 3320 0056 12F0080F 		tst	r2, #8
 3321 005a 15D1     		bne	.L258
 3322              	.LVL289:
ARM GAS  /tmp/cc2DBcx1.s 			page 225


 3323              		.loc 2 7219 76 view .LVU1062
 3324              	.LBE487:
 3325              	.LBE486:
1909:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
1910:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (pConfigInjected->InjectedChannel == ADC_CHANNEL_0)
 3326              		.loc 1 1910 5 is_stmt 1 view .LVU1063
 3327              		.loc 1 1910 24 is_stmt 0 view .LVU1064
 3328 005c 0A68     		ldr	r2, [r1]
 3329              		.loc 1 1910 8 view .LVU1065
 3330 005e 012A     		cmp	r2, #1
 3331 0060 00F0D680 		beq	.L337
 3332              	.L259:
1911:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1912:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       LL_ADC_EnableChannel0_GPIO(hadc->Instance);
1913:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1914:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1915:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* If auto-injected mode is disabled: no constraint                       */
1916:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (pConfigInjected->AutoInjectedConv == DISABLE)
 3333              		.loc 1 1916 5 is_stmt 1 view .LVU1066
 3334              		.loc 1 1916 24 is_stmt 0 view .LVU1067
 3335 0064 91F82520 		ldrb	r2, [r1, #37]	@ zero_extendqisi2
 3336              		.loc 1 1916 8 view .LVU1068
 3337 0068 002A     		cmp	r2, #0
 3338 006a 40F0D980 		bne	.L260
1917:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1918:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR,
 3339              		.loc 1 1918 7 is_stmt 1 view .LVU1069
 3340 006e 1C68     		ldr	r4, [r3]
 3341 0070 E268     		ldr	r2, [r4, #12]
 3342 0072 22F44012 		bic	r2, r2, #3145728
 3343 0076 91F82650 		ldrb	r5, [r1, #38]	@ zero_extendqisi2
 3344 007a 91F82400 		ldrb	r0, [r1, #36]	@ zero_extendqisi2
 3345 007e 0005     		lsls	r0, r0, #20
 3346 0080 40EA4550 		orr	r0, r0, r5, lsl #21
 3347 0084 0243     		orrs	r2, r2, r0
 3348 0086 E260     		str	r2, [r4, #12]
 3349              	.L258:
1919:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
1920:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE((uint32_t)pConfigInjected->QueueInjectedContext)    
1921:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_DISCCONTINUOUS((uint32_t)pConfigInjected->InjectedDiscontinuousCon
1922:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1923:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* If auto-injected mode is enabled: Injected discontinuous setting is    */
1924:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* discarded.                                                             */
1925:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else
1926:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1927:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR,
1928:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
1929:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE((uint32_t)pConfigInjected->QueueInjectedContext));
1930:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1931:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1932:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
1933:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1934:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1935:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1936:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* conversion on going on regular and injected groups:                      */
1937:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*  - Automatic injected conversion: can be enabled if injected group       */
1938:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*    external triggers are disabled.                                       */
ARM GAS  /tmp/cc2DBcx1.s 			page 226


1939:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*  - Channel sampling time                                                 */
1940:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*  - Channel offset                                                        */
1941:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 3350              		.loc 1 1941 3 view .LVU1070
 3351              		.loc 1 1941 79 is_stmt 0 view .LVU1071
 3352 0088 1C68     		ldr	r4, [r3]
 3353              	.LVL290:
 3354              	.LBB488:
 3355              	.LBI488:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3356              		.loc 2 6991 26 is_stmt 1 view .LVU1072
 3357              	.LBB489:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3358              		.loc 2 6993 3 view .LVU1073
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3359              		.loc 2 6993 12 is_stmt 0 view .LVU1074
 3360 008a A268     		ldr	r2, [r4, #8]
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3361              		.loc 2 6993 74 view .LVU1075
 3362 008c 12F00402 		ands	r2, r2, #4
 3363 0090 00D0     		beq	.L261
 3364 0092 0122     		movs	r2, #1
 3365              	.L261:
 3366              	.LVL291:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3367              		.loc 2 6993 74 view .LVU1076
 3368              	.LBE489:
 3369              	.LBE488:
1942:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3370              		.loc 1 1942 3 is_stmt 1 view .LVU1077
 3371              	.LBB490:
 3372              	.LBI490:
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3373              		.loc 2 7217 26 view .LVU1078
 3374              	.LBB491:
 3375              		.loc 2 7219 3 view .LVU1079
 3376              		.loc 2 7219 12 is_stmt 0 view .LVU1080
 3377 0094 A568     		ldr	r5, [r4, #8]
 3378              		.loc 2 7219 76 view .LVU1081
 3379 0096 15F00805 		ands	r5, r5, #8
 3380 009a 00D0     		beq	.L262
 3381 009c 0125     		movs	r5, #1
 3382              	.L262:
 3383              	.LVL292:
 3384              		.loc 2 7219 76 view .LVU1082
 3385              	.LBE491:
 3386              	.LBE490:
1943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1944:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 3387              		.loc 1 1944 3 is_stmt 1 view .LVU1083
 3388              		.loc 1 1944 6 is_stmt 0 view .LVU1084
 3389 009e 002A     		cmp	r2, #0
 3390 00a0 40F06A81 		bne	.L322
1945:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3391              		.loc 1 1945 7 view .LVU1085
 3392 00a4 002D     		cmp	r5, #0
 3393 00a6 40F0A281 		bne	.L323
ARM GAS  /tmp/cc2DBcx1.s 			page 227


1946:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****      )
1947:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
1948:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* If injected group external triggers are disabled (set to injected      */
1949:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* software start): no constraint                                         */
1950:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if ((pConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
 3394              		.loc 1 1950 5 is_stmt 1 view .LVU1086
 3395              		.loc 1 1950 25 is_stmt 0 view .LVU1087
 3396 00aa 8A6A     		ldr	r2, [r1, #40]
 3397              	.LVL293:
 3398              		.loc 1 1950 8 view .LVU1088
 3399 00ac 1AB1     		cbz	r2, .L264
1951:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         || (pConfigInjected->ExternalTrigInjecConvEdge == ADC_EXTERNALTRIGINJECCONV_EDGE_NONE))
 3400              		.loc 1 1951 28 view .LVU1089
 3401 00ae CA6A     		ldr	r2, [r1, #44]
 3402              		.loc 1 1951 9 view .LVU1090
 3403 00b0 002A     		cmp	r2, #0
 3404 00b2 40F0C580 		bne	.L265
 3405              	.L264:
1952:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1953:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (pConfigInjected->AutoInjectedConv == ENABLE)
 3406              		.loc 1 1953 7 is_stmt 1 view .LVU1091
 3407              		.loc 1 1953 26 is_stmt 0 view .LVU1092
 3408 00b6 91F82520 		ldrb	r2, [r1, #37]	@ zero_extendqisi2
 3409              		.loc 1 1953 10 view .LVU1093
 3410 00ba 012A     		cmp	r2, #1
 3411 00bc 00F0BA80 		beq	.L338
1954:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1955:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
1956:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1957:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       else
1958:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1959:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
 3412              		.loc 1 1959 9 is_stmt 1 view .LVU1094
 3413 00c0 E268     		ldr	r2, [r4, #12]
 3414 00c2 22F00072 		bic	r2, r2, #33554432
 3415 00c6 E260     		str	r2, [r4, #12]
1719:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_offset_shifted;
 3416              		.loc 1 1719 21 is_stmt 0 view .LVU1095
 3417 00c8 0020     		movs	r0, #0
 3418              	.LVL294:
 3419              	.L267:
1960:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1961:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1962:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* If Automatic injected conversion was intended to be set and could not  */
1963:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* due to injected group external triggers enabled, error is reported.    */
1964:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else
1965:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1966:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (pConfigInjected->AutoInjectedConv == ENABLE)
1967:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1968:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1969:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1970:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1971:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
1972:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1973:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       else
1974:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
1975:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
ARM GAS  /tmp/cc2DBcx1.s 			page 228


1976:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
1977:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
1978:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1979:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (pConfigInjected->InjecOversamplingMode == ENABLE)
 3420              		.loc 1 1979 5 is_stmt 1 view .LVU1096
 3421              		.loc 1 1979 24 is_stmt 0 view .LVU1097
 3422 00ca 91F83020 		ldrb	r2, [r1, #48]	@ zero_extendqisi2
 3423              		.loc 1 1979 8 view .LVU1098
 3424 00ce 012A     		cmp	r2, #1
 3425 00d0 00F0C580 		beq	.L339
1980:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
1981:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       assert_param(IS_ADC_OVERSAMPLING_RATIO(pConfigInjected->InjecOversampling.Ratio));
1982:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       assert_param(IS_ADC_RIGHT_BIT_SHIFT(pConfigInjected->InjecOversampling.RightBitShift));
1983:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1984:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*  JOVSE must be reset in case of triggered regular mode  */
1985:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       assert_param(!(READ_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_TROVS)
1986:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                      == (ADC_CFGR2_ROVSE | ADC_CFGR2_TROVS)));
1987:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1988:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Configuration of Injected Oversampler:                                 */
1989:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*  - Oversampling Ratio                                                  */
1990:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*  - Right bit shift                                                     */
1991:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
1992:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Enable OverSampling mode */
1993:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR2,
1994:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE |
1995:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                  ADC_CFGR2_OVSR  |
1996:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                  ADC_CFGR2_OVSS,
1997:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE                                  |
1998:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                  pConfigInjected->InjecOversampling.Ratio         |
1999:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                  pConfigInjected->InjecOversampling.RightBitShift
2000:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                 );
2001:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
2002:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else
2003:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
2004:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Disable Regular OverSampling */
2005:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_JOVSE);
 3426              		.loc 1 2005 7 is_stmt 1 view .LVU1099
 3427 00d4 1C68     		ldr	r4, [r3]
 3428 00d6 2269     		ldr	r2, [r4, #16]
 3429 00d8 22F00202 		bic	r2, r2, #2
 3430 00dc 2261     		str	r2, [r4, #16]
 3431              	.L270:
2006:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
2007:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2008:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Manage specific case of sampling time 3.5 cycles replacing 2.5 cyles */
2009:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (pConfigInjected->InjectedSamplingTime == ADC_SAMPLETIME_3CYCLES_5)
 3432              		.loc 1 2009 5 view .LVU1100
 3433              		.loc 1 2009 24 is_stmt 0 view .LVU1101
 3434 00de 8C68     		ldr	r4, [r1, #8]
 3435              		.loc 1 2009 8 view .LVU1102
 3436 00e0 B4F1004F 		cmp	r4, #-2147483648
 3437 00e4 00F0C780 		beq	.L340
2010:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
2011:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
2012:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, pConfigInjected->InjectedChannel, LL_ADC_SAMPLI
2013:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2014:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Set ADC sampling time common configuration */
ARM GAS  /tmp/cc2DBcx1.s 			page 229


2015:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5);
2016:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
2017:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else
2018:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
2019:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
2020:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, pConfigInjected->InjectedChannel,
 3438              		.loc 1 2020 7 is_stmt 1 view .LVU1103
 3439 00e8 1A68     		ldr	r2, [r3]
 3440 00ea 0F68     		ldr	r7, [r1]
 3441              	.LVL295:
 3442              	.LBB492:
 3443              	.LBI492:
5499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3444              		.loc 2 5499 22 view .LVU1104
 3445              	.LBB493:
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 3446              		.loc 2 5505 3 view .LVU1105
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 3447              		.loc 2 5505 25 is_stmt 0 view .LVU1106
 3448 00ec 02F1140C 		add	ip, r2, #20
 3449 00f0 7A0E     		lsrs	r2, r7, #25
 3450              	.LVL296:
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 3451              		.loc 2 5505 25 view .LVU1107
 3452 00f2 9200     		lsls	r2, r2, #2
 3453 00f4 02F00402 		and	r2, r2, #4
 3454              	.LVL297:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 3455              		.loc 2 5508 3 is_stmt 1 view .LVU1108
 3456 00f8 5CF80260 		ldr	r6, [ip, r2]
 3457 00fc C7F30457 		ubfx	r7, r7, #20, #5
 3458              	.LVL298:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 3459              		.loc 2 5508 3 is_stmt 0 view .LVU1109
 3460 0100 4FF0070E 		mov	lr, #7
 3461 0104 0EFA07FE 		lsl	lr, lr, r7
 3462 0108 26EA0E06 		bic	r6, r6, lr
 3463 010c BC40     		lsls	r4, r4, r7
 3464              	.LVL299:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 3465              		.loc 2 5508 3 view .LVU1110
 3466 010e 3443     		orrs	r4, r4, r6
 3467 0110 4CF80240 		str	r4, [ip, r2]
 3468              	.LVL300:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 3469              		.loc 2 5508 3 view .LVU1111
 3470              	.LBE493:
 3471              	.LBE492:
2021:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                     pConfigInjected->InjectedSamplingTime);
2022:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2023:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Set ADC sampling time common configuration */
2024:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_DEFAULT);
 3472              		.loc 1 2024 7 is_stmt 1 view .LVU1112
 3473 0114 1C68     		ldr	r4, [r3]
 3474              	.LVL301:
 3475              	.LBB494:
 3476              	.LBI494:
ARM GAS  /tmp/cc2DBcx1.s 			page 230


3927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3477              		.loc 2 3927 22 view .LVU1113
 3478              	.LBB495:
3929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3479              		.loc 2 3929 3 view .LVU1114
 3480 0116 6269     		ldr	r2, [r4, #20]
 3481 0118 22F00042 		bic	r2, r2, #-2147483648
 3482 011c 6261     		str	r2, [r4, #20]
 3483              	.LVL302:
 3484              	.L272:
3929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3485              		.loc 2 3929 3 is_stmt 0 view .LVU1115
 3486              	.LBE495:
 3487              	.LBE494:
2025:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
2026:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2027:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Configure the offset: offset enable/disable, channel, offset value */
2028:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2029:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Shift the offset with respect to the selected ADC resolution. */
2030:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
2031:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_offset_shifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, pConfigInjected->InjectedOffset);
 3488              		.loc 1 2031 5 is_stmt 1 view .LVU1116
 3489              		.loc 1 2031 26 is_stmt 0 view .LVU1117
 3490 011e 4C69     		ldr	r4, [r1, #20]
 3491 0120 1E68     		ldr	r6, [r3]
 3492 0122 F268     		ldr	r2, [r6, #12]
 3493 0124 C2F3C102 		ubfx	r2, r2, #3, #2
 3494 0128 5200     		lsls	r2, r2, #1
 3495              		.loc 1 2031 24 view .LVU1118
 3496 012a 04FA02F2 		lsl	r2, r4, r2
 3497              	.LVL303:
2032:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2033:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (pConfigInjected->InjectedOffsetNumber != ADC_OFFSET_NONE)
 3498              		.loc 1 2033 5 is_stmt 1 view .LVU1119
 3499              		.loc 1 2033 24 is_stmt 0 view .LVU1120
 3500 012e D1F810C0 		ldr	ip, [r1, #16]
 3501              		.loc 1 2033 8 view .LVU1121
 3502 0132 BCF1040F 		cmp	ip, #4
 3503 0136 00F0B880 		beq	.L273
2034:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
2035:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Set ADC selected offset number */
2036:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       LL_ADC_SetOffset(hadc->Instance, pConfigInjected->InjectedOffsetNumber, pConfigInjected->Inje
 3504              		.loc 1 2036 7 is_stmt 1 view .LVU1122
 3505              	.LVL304:
 3506              	.LBB496:
 3507              	.LBI496:
3639:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3508              		.loc 2 3639 22 view .LVU1123
 3509              	.LBB497:
3641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3510              		.loc 2 3641 3 view .LVU1124
3641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3511              		.loc 2 3641 25 is_stmt 0 view .LVU1125
 3512 013a 6036     		adds	r6, r6, #96
 3513              	.LVL305:
3643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 3514              		.loc 2 3643 3 is_stmt 1 view .LVU1126
ARM GAS  /tmp/cc2DBcx1.s 			page 231


 3515 013c 56F82C40 		ldr	r4, [r6, ip, lsl #2]
 3516 0140 AC4F     		ldr	r7, .L351
 3517 0142 2740     		ands	r7, r7, r4
 3518 0144 0C68     		ldr	r4, [r1]
 3519 0146 04F0F844 		and	r4, r4, #2080374784
 3520 014a 2243     		orrs	r2, r2, r4
 3521              	.LVL306:
3643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 3522              		.loc 2 3643 3 is_stmt 0 view .LVU1127
 3523 014c 1743     		orrs	r7, r7, r2
 3524 014e 47F00047 		orr	r7, r7, #-2147483648
 3525 0152 46F82C70 		str	r7, [r6, ip, lsl #2]
 3526              	.LVL307:
3643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 3527              		.loc 2 3643 3 view .LVU1128
 3528              	.LBE497:
 3529              	.LBE496:
2037:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                        tmp_offset_shifted);
2038:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2039:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Set ADC selected offset sign & saturation */
2040:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       LL_ADC_SetOffsetSign(hadc->Instance, pConfigInjected->InjectedOffsetNumber, pConfigInjected->
 3530              		.loc 1 2040 7 is_stmt 1 view .LVU1129
 3531 0156 1A68     		ldr	r2, [r3]
 3532 0158 0F69     		ldr	r7, [r1, #16]
 3533 015a 8C69     		ldr	r4, [r1, #24]
 3534              	.LVL308:
 3535              	.LBB498:
 3536              	.LBI498:
3824:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3537              		.loc 2 3824 22 view .LVU1130
 3538              	.LBB499:
3826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3539              		.loc 2 3826 3 view .LVU1131
3826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3540              		.loc 2 3826 25 is_stmt 0 view .LVU1132
 3541 015c 6032     		adds	r2, r2, #96
 3542              	.LVL309:
3828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
 3543              		.loc 2 3828 3 is_stmt 1 view .LVU1133
 3544 015e 52F82760 		ldr	r6, [r2, r7, lsl #2]
 3545 0162 26F08076 		bic	r6, r6, #16777216
 3546 0166 3443     		orrs	r4, r4, r6
 3547              	.LVL310:
3828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
 3548              		.loc 2 3828 3 is_stmt 0 view .LVU1134
 3549 0168 42F82740 		str	r4, [r2, r7, lsl #2]
 3550              	.LVL311:
3828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
 3551              		.loc 2 3828 3 view .LVU1135
 3552              	.LBE499:
 3553              	.LBE498:
2041:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       LL_ADC_SetOffsetSaturation(hadc->Instance, pConfigInjected->InjectedOffsetNumber,
 3554              		.loc 1 2041 7 is_stmt 1 view .LVU1136
 3555 016c 1A68     		ldr	r2, [r3]
 3556 016e 0E69     		ldr	r6, [r1, #16]
2042:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                  (pConfigInjected->InjectedOffsetSaturation == ENABLE) ?
 3557              		.loc 1 2042 50 is_stmt 0 view .LVU1137
ARM GAS  /tmp/cc2DBcx1.s 			page 232


 3558 0170 0C7F     		ldrb	r4, [r1, #28]	@ zero_extendqisi2
2041:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       LL_ADC_SetOffsetSaturation(hadc->Instance, pConfigInjected->InjectedOffsetNumber,
 3559              		.loc 1 2041 7 view .LVU1138
 3560 0172 012C     		cmp	r4, #1
 3561 0174 00F09680 		beq	.L341
 3562              	.LVL312:
 3563              	.L274:
 3564              	.LBB500:
 3565              	.LBI500:
3879:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3566              		.loc 2 3879 22 is_stmt 1 discriminator 4 view .LVU1139
 3567              	.LBB501:
3881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3568              		.loc 2 3881 3 discriminator 4 view .LVU1140
3881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3569              		.loc 2 3881 25 is_stmt 0 discriminator 4 view .LVU1141
 3570 0178 6032     		adds	r2, r2, #96
 3571              	.LVL313:
3883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_SATEN,
 3572              		.loc 2 3883 3 is_stmt 1 discriminator 4 view .LVU1142
 3573 017a 52F82640 		ldr	r4, [r2, r6, lsl #2]
 3574 017e 24F00074 		bic	r4, r4, #33554432
 3575 0182 2543     		orrs	r5, r5, r4
 3576              	.LVL314:
3883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_SATEN,
 3577              		.loc 2 3883 3 is_stmt 0 discriminator 4 view .LVU1143
 3578 0184 42F82650 		str	r5, [r2, r6, lsl #2]
 3579              	.LVL315:
3886:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3580              		.loc 2 3886 1 discriminator 4 view .LVU1144
 3581 0188 F7E0     		b	.L263
 3582              	.LVL316:
 3583              	.L336:
3886:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3584              		.loc 2 3886 1 discriminator 4 view .LVU1145
 3585              	.LBE501:
 3586              	.LBE500:
1813:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 3587              		.loc 1 1813 7 is_stmt 1 view .LVU1146
1813:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 3588              		.loc 1 1813 26 is_stmt 0 view .LVU1147
 3589 018a 8C6A     		ldr	r4, [r1, #40]
1813:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 3590              		.loc 1 1813 10 view .LVU1148
 3591 018c BCB1     		cbz	r4, .L254
1815:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                               | (pConfigInjected->ExternalTrigInjecConv & ADC_JSQR_
 3592              		.loc 1 1815 9 is_stmt 1 view .LVU1149
1815:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                               | (pConfigInjected->ExternalTrigInjecConv & ADC_JSQR_
 3593              		.loc 1 1815 47 is_stmt 0 view .LVU1150
 3594 018e 0868     		ldr	r0, [r1]
 3595 0190 820E     		lsrs	r2, r0, #26
 3596 0192 5202     		lsls	r2, r2, #9
 3597 0194 02F47852 		and	r2, r2, #15872
1816:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                               | pConfigInjected->ExternalTrigInjecConvEdge
 3598              		.loc 1 1816 89 view .LVU1151
 3599 0198 04F07C04 		and	r4, r4, #124
1816:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                               | pConfigInjected->ExternalTrigInjecConvEdge
ARM GAS  /tmp/cc2DBcx1.s 			page 233


 3600              		.loc 1 1816 47 view .LVU1152
 3601 019c 2243     		orrs	r2, r2, r4
1817:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                              );
 3602              		.loc 1 1817 64 view .LVU1153
 3603 019e C86A     		ldr	r0, [r1, #44]
1815:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                               | (pConfigInjected->ExternalTrigInjecConv & ADC_JSQR_
 3604              		.loc 1 1815 44 view .LVU1154
 3605 01a0 0243     		orrs	r2, r2, r0
 3606              	.LVL317:
 3607              	.L255:
1825:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
 3608              		.loc 1 1825 7 is_stmt 1 view .LVU1155
 3609 01a2 1C68     		ldr	r4, [r3]
 3610 01a4 E06C     		ldr	r0, [r4, #76]
 3611 01a6 20F07B40 		bic	r0, r0, #-83886080
 3612 01aa 20F46F00 		bic	r0, r0, #15663104
 3613 01ae 20F43F40 		bic	r0, r0, #48896
 3614 01b2 20F0FF00 		bic	r0, r0, #255
 3615 01b6 1043     		orrs	r0, r0, r2
 3616 01b8 E064     		str	r0, [r4, #76]
1827:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3617              		.loc 1 1827 7 view .LVU1156
1827:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3618              		.loc 1 1827 42 is_stmt 0 view .LVU1157
 3619 01ba 1A66     		str	r2, [r3, #96]
 3620 01bc 49E7     		b	.L253
 3621              	.LVL318:
 3622              	.L254:
1822:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 3623              		.loc 1 1822 9 is_stmt 1 view .LVU1158
1822:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 3624              		.loc 1 1822 47 is_stmt 0 view .LVU1159
 3625 01be 0A68     		ldr	r2, [r1]
 3626 01c0 920E     		lsrs	r2, r2, #26
 3627 01c2 5202     		lsls	r2, r2, #9
1822:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 3628              		.loc 1 1822 44 view .LVU1160
 3629 01c4 02F47852 		and	r2, r2, #15872
 3630              	.LVL319:
1822:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 3631              		.loc 1 1822 44 view .LVU1161
 3632 01c8 EBE7     		b	.L255
 3633              	.LVL320:
 3634              	.L257:
1872:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 3635              		.loc 1 1872 9 is_stmt 1 view .LVU1162
1872:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 3636              		.loc 1 1872 63 is_stmt 0 view .LVU1163
 3637 01ca 0A6A     		ldr	r2, [r1, #32]
1872:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 3638              		.loc 1 1872 44 view .LVU1164
 3639 01cc 541E     		subs	r4, r2, #1
 3640              	.LVL321:
1872:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 3641              		.loc 1 1872 44 view .LVU1165
 3642 01ce 00E0     		b	.L256
 3643              	.LVL322:
ARM GAS  /tmp/cc2DBcx1.s 			page 234


 3644              	.L321:
1726:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3645              		.loc 1 1726 12 view .LVU1166
 3646 01d0 0024     		movs	r4, #0
 3647              	.LVL323:
 3648              	.L256:
1880:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3649              		.loc 1 1880 5 is_stmt 1 view .LVU1167
1883:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3650              		.loc 1 1883 5 view .LVU1168
1883:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3651              		.loc 1 1883 43 is_stmt 0 view .LVU1169
 3652 01d2 0868     		ldr	r0, [r1]
 3653 01d4 C0F38460 		ubfx	r0, r0, #26, #5
 3654 01d8 4A68     		ldr	r2, [r1, #4]
 3655 01da 02F01F02 		and	r2, r2, #31
 3656 01de 00FA02F2 		lsl	r2, r0, r2
1883:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3657              		.loc 1 1883 40 view .LVU1170
 3658 01e2 2243     		orrs	r2, r2, r4
 3659              	.LVL324:
1886:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3660              		.loc 1 1886 5 is_stmt 1 view .LVU1171
1886:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3661              		.loc 1 1886 26 is_stmt 0 view .LVU1172
 3662 01e4 586E     		ldr	r0, [r3, #100]
1886:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3663              		.loc 1 1886 39 view .LVU1173
 3664 01e6 0138     		subs	r0, r0, #1
 3665 01e8 5866     		str	r0, [r3, #100]
1891:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3666              		.loc 1 1891 5 is_stmt 1 view .LVU1174
1891:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3667              		.loc 1 1891 40 is_stmt 0 view .LVU1175
 3668 01ea 1C6E     		ldr	r4, [r3, #96]
 3669 01ec 2243     		orrs	r2, r2, r4
 3670              	.LVL325:
1891:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3671              		.loc 1 1891 40 view .LVU1176
 3672 01ee 1A66     		str	r2, [r3, #96]
1895:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 3673              		.loc 1 1895 5 is_stmt 1 view .LVU1177
1895:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 3674              		.loc 1 1895 8 is_stmt 0 view .LVU1178
 3675 01f0 0028     		cmp	r0, #0
 3676 01f2 7FF42EAF 		bne	.L253
1897:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 3677              		.loc 1 1897 7 is_stmt 1 view .LVU1179
 3678 01f6 1C68     		ldr	r4, [r3]
 3679 01f8 E06C     		ldr	r0, [r4, #76]
 3680 01fa 20F07B40 		bic	r0, r0, #-83886080
 3681 01fe 20F46F00 		bic	r0, r0, #15663104
 3682 0202 20F43F40 		bic	r0, r0, #48896
 3683 0206 20F0FF00 		bic	r0, r0, #255
 3684 020a 0243     		orrs	r2, r2, r0
 3685 020c E264     		str	r2, [r4, #76]
 3686 020e 20E7     		b	.L253
ARM GAS  /tmp/cc2DBcx1.s 			page 235


 3687              	.L337:
1912:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 3688              		.loc 1 1912 7 view .LVU1180
 3689              	.LVL326:
 3690              	.LBB502:
 3691              	.LBI502:
3309:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3692              		.loc 2 3309 22 view .LVU1181
 3693              	.LBB503:
3312:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADC1->OR, ADC_OR_OP0);
 3694              		.loc 2 3312 3 view .LVU1182
3313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3695              		.loc 2 3313 3 view .LVU1183
 3696 0210 7948     		ldr	r0, .L351+4
 3697 0212 D0F8C820 		ldr	r2, [r0, #200]
 3698 0216 42F00102 		orr	r2, r2, #1
 3699 021a C0F8C820 		str	r2, [r0, #200]
 3700              	.LVL327:
3314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3701              		.loc 2 3314 1 is_stmt 0 view .LVU1184
 3702 021e 21E7     		b	.L259
 3703              	.L260:
3314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3704              		.loc 2 3314 1 view .LVU1185
 3705              	.LBE503:
 3706              	.LBE502:
1927:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
 3707              		.loc 1 1927 7 is_stmt 1 view .LVU1186
 3708 0220 1868     		ldr	r0, [r3]
 3709 0222 C268     		ldr	r2, [r0, #12]
 3710 0224 22F44012 		bic	r2, r2, #3145728
 3711 0228 91F82640 		ldrb	r4, [r1, #38]	@ zero_extendqisi2
 3712 022c 42EA4452 		orr	r2, r2, r4, lsl #21
 3713 0230 C260     		str	r2, [r0, #12]
 3714 0232 29E7     		b	.L258
 3715              	.LVL328:
 3716              	.L338:
1955:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 3717              		.loc 1 1955 9 view .LVU1187
 3718 0234 E268     		ldr	r2, [r4, #12]
 3719 0236 42F00072 		orr	r2, r2, #33554432
 3720 023a E260     		str	r2, [r4, #12]
1719:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_offset_shifted;
 3721              		.loc 1 1719 21 is_stmt 0 view .LVU1188
 3722 023c 0020     		movs	r0, #0
 3723 023e 44E7     		b	.L267
 3724              	.L265:
1966:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 3725              		.loc 1 1966 7 is_stmt 1 view .LVU1189
1966:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 3726              		.loc 1 1966 26 is_stmt 0 view .LVU1190
 3727 0240 91F82500 		ldrb	r0, [r1, #37]	@ zero_extendqisi2
1966:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 3728              		.loc 1 1966 10 view .LVU1191
 3729 0244 0128     		cmp	r0, #1
 3730 0246 05D0     		beq	.L342
1975:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
ARM GAS  /tmp/cc2DBcx1.s 			page 236


 3731              		.loc 1 1975 9 is_stmt 1 view .LVU1192
 3732 0248 E268     		ldr	r2, [r4, #12]
 3733 024a 22F00072 		bic	r2, r2, #33554432
 3734 024e E260     		str	r2, [r4, #12]
1719:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_offset_shifted;
 3735              		.loc 1 1719 21 is_stmt 0 view .LVU1193
 3736 0250 0020     		movs	r0, #0
 3737 0252 3AE7     		b	.L267
 3738              	.L342:
1969:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3739              		.loc 1 1969 9 is_stmt 1 view .LVU1194
 3740 0254 9A6D     		ldr	r2, [r3, #88]
 3741 0256 42F02002 		orr	r2, r2, #32
 3742 025a 9A65     		str	r2, [r3, #88]
1971:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 3743              		.loc 1 1971 9 view .LVU1195
 3744              	.LVL329:
1971:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 3745              		.loc 1 1971 9 is_stmt 0 view .LVU1196
 3746 025c 35E7     		b	.L267
 3747              	.LVL330:
 3748              	.L339:
1981:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       assert_param(IS_ADC_RIGHT_BIT_SHIFT(pConfigInjected->InjecOversampling.RightBitShift));
 3749              		.loc 1 1981 7 is_stmt 1 view .LVU1197
1982:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3750              		.loc 1 1982 7 view .LVU1198
1985:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                      == (ADC_CFGR2_ROVSE | ADC_CFGR2_TROVS)));
 3751              		.loc 1 1985 7 view .LVU1199
1993:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE |
 3752              		.loc 1 1993 7 view .LVU1200
 3753 025e 1E68     		ldr	r6, [r3]
 3754 0260 3269     		ldr	r2, [r6, #16]
 3755 0262 22F4FF72 		bic	r2, r2, #510
 3756 0266 4C6B     		ldr	r4, [r1, #52]
 3757 0268 8F6B     		ldr	r7, [r1, #56]
 3758 026a 3C43     		orrs	r4, r4, r7
 3759 026c 2243     		orrs	r2, r2, r4
 3760 026e 42F00202 		orr	r2, r2, #2
 3761 0272 3261     		str	r2, [r6, #16]
 3762 0274 33E7     		b	.L270
 3763              	.L340:
2012:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 3764              		.loc 1 2012 7 view .LVU1201
 3765 0276 1C68     		ldr	r4, [r3]
 3766 0278 0E68     		ldr	r6, [r1]
 3767              	.LVL331:
 3768              	.LBB504:
 3769              	.LBI504:
5499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3770              		.loc 2 5499 22 view .LVU1202
 3771              	.LBB505:
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 3772              		.loc 2 5505 3 view .LVU1203
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 3773              		.loc 2 5505 25 is_stmt 0 view .LVU1204
 3774 027a 1434     		adds	r4, r4, #20
 3775              	.LVL332:
ARM GAS  /tmp/cc2DBcx1.s 			page 237


5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 3776              		.loc 2 5505 25 view .LVU1205
 3777 027c 720E     		lsrs	r2, r6, #25
 3778 027e 9200     		lsls	r2, r2, #2
 3779 0280 02F00402 		and	r2, r2, #4
 3780              	.LVL333:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 3781              		.loc 2 5508 3 is_stmt 1 view .LVU1206
 3782 0284 A758     		ldr	r7, [r4, r2]
 3783 0286 C6F30456 		ubfx	r6, r6, #20, #5
 3784              	.LVL334:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 3785              		.loc 2 5508 3 is_stmt 0 view .LVU1207
 3786 028a 4FF0070C 		mov	ip, #7
 3787 028e 0CFA06F6 		lsl	r6, ip, r6
 3788 0292 27EA0606 		bic	r6, r7, r6
 3789 0296 A650     		str	r6, [r4, r2]
 3790              	.LVL335:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 3791              		.loc 2 5508 3 view .LVU1208
 3792              	.LBE505:
 3793              	.LBE504:
2015:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 3794              		.loc 1 2015 7 is_stmt 1 view .LVU1209
 3795 0298 1C68     		ldr	r4, [r3]
 3796              	.LVL336:
 3797              	.LBB506:
 3798              	.LBI506:
3927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3799              		.loc 2 3927 22 view .LVU1210
 3800              	.LBB507:
3929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3801              		.loc 2 3929 3 view .LVU1211
 3802 029a 6269     		ldr	r2, [r4, #20]
 3803 029c 42F00042 		orr	r2, r2, #-2147483648
 3804 02a0 6261     		str	r2, [r4, #20]
3930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3805              		.loc 2 3930 1 is_stmt 0 view .LVU1212
 3806 02a2 3CE7     		b	.L272
 3807              	.LVL337:
 3808              	.L341:
3930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3809              		.loc 2 3930 1 view .LVU1213
 3810              	.LBE507:
 3811              	.LBE506:
2041:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                  (pConfigInjected->InjectedOffsetSaturation == ENABLE) ?
 3812              		.loc 1 2041 7 view .LVU1214
 3813 02a4 4FF00075 		mov	r5, #33554432
 3814              	.LVL338:
2041:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                  (pConfigInjected->InjectedOffsetSaturation == ENABLE) ?
 3815              		.loc 1 2041 7 view .LVU1215
 3816 02a8 66E7     		b	.L274
 3817              	.LVL339:
 3818              	.L273:
2043:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                  LL_ADC_OFFSET_SATURATION_ENABLE : LL_ADC_OFFSET_SATURATION_DISABLE
2044:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
2045:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else
ARM GAS  /tmp/cc2DBcx1.s 			page 238


2046:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
2047:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Scan each offset register to check if the selected channel is targeted. */
2048:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* If this is the case, the corresponding offset number is disabled.       */
2049:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1))
 3819              		.loc 1 2049 7 is_stmt 1 view .LVU1216
 3820              	.LBB508:
 3821              	.LBI508:
3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3822              		.loc 2 3710 26 view .LVU1217
 3823              	.LBB509:
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3824              		.loc 2 3712 3 view .LVU1218
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3825              		.loc 2 3714 3 view .LVU1219
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3826              		.loc 2 3714 10 is_stmt 0 view .LVU1220
 3827 02aa 326E     		ldr	r2, [r6, #96]
 3828              	.LVL340:
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3829              		.loc 2 3714 10 view .LVU1221
 3830              	.LBE509:
 3831              	.LBE508:
 3832              	.LBB510:
 3833              	.LBI510:
3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3834              		.loc 2 3710 26 is_stmt 1 view .LVU1222
 3835              	.LBB511:
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3836              		.loc 2 3712 3 view .LVU1223
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3837              		.loc 2 3714 3 view .LVU1224
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3838              		.loc 2 3714 10 is_stmt 0 view .LVU1225
 3839 02ac 346E     		ldr	r4, [r6, #96]
 3840              	.LVL341:
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3841              		.loc 2 3714 10 view .LVU1226
 3842              	.LBE511:
 3843              	.LBE510:
 3844              		.loc 1 2049 11 view .LVU1227
 3845 02ae C4F38464 		ubfx	r4, r4, #26, #5
2050:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfigInjected->InjectedChannel))
 3846              		.loc 1 2050 14 view .LVU1228
 3847 02b2 0A68     		ldr	r2, [r1]
 3848 02b4 C2F31305 		ubfx	r5, r2, #0, #20
 3849              	.LVL342:
 3850              		.loc 1 2050 14 view .LVU1229
 3851 02b8 7DBB     		cbnz	r5, .L275
 3852              		.loc 1 2050 14 discriminator 1 view .LVU1230
 3853 02ba C2F38462 		ubfx	r2, r2, #26, #5
 3854              	.L276:
2049:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfigInjected->InjectedChannel))
 3855              		.loc 1 2049 10 view .LVU1231
 3856 02be 9442     		cmp	r4, r2
 3857 02c0 33D0     		beq	.L343
 3858              	.L278:
2051:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/cc2DBcx1.s 			page 239


2052:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
2053:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
2054:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2))
 3859              		.loc 1 2054 7 is_stmt 1 view .LVU1232
 3860              		.loc 1 2054 11 is_stmt 0 view .LVU1233
 3861 02c2 1D68     		ldr	r5, [r3]
 3862              	.LVL343:
 3863              	.LBB512:
 3864              	.LBI512:
3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3865              		.loc 2 3710 26 is_stmt 1 view .LVU1234
 3866              	.LBB513:
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3867              		.loc 2 3712 3 view .LVU1235
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3868              		.loc 2 3714 3 view .LVU1236
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3869              		.loc 2 3714 10 is_stmt 0 view .LVU1237
 3870 02c4 6A6E     		ldr	r2, [r5, #100]
 3871              	.LVL344:
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3872              		.loc 2 3714 10 view .LVU1238
 3873              	.LBE513:
 3874              	.LBE512:
 3875              	.LBB514:
 3876              	.LBI514:
3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3877              		.loc 2 3710 26 is_stmt 1 view .LVU1239
 3878              	.LBB515:
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3879              		.loc 2 3712 3 view .LVU1240
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3880              		.loc 2 3714 3 view .LVU1241
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3881              		.loc 2 3714 10 is_stmt 0 view .LVU1242
 3882 02c6 6C6E     		ldr	r4, [r5, #100]
 3883              	.LVL345:
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3884              		.loc 2 3714 10 view .LVU1243
 3885              	.LBE515:
 3886              	.LBE514:
 3887              		.loc 1 2054 11 view .LVU1244
 3888 02c8 C4F38464 		ubfx	r4, r4, #26, #5
2055:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfigInjected->InjectedChannel))
 3889              		.loc 1 2055 14 view .LVU1245
 3890 02cc 0A68     		ldr	r2, [r1]
 3891 02ce C2F31306 		ubfx	r6, r2, #0, #20
 3892 02d2 7EBB     		cbnz	r6, .L279
 3893              		.loc 1 2055 14 discriminator 1 view .LVU1246
 3894 02d4 C2F38462 		ubfx	r2, r2, #26, #5
 3895              	.L280:
2054:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfigInjected->InjectedChannel))
 3896              		.loc 1 2054 10 view .LVU1247
 3897 02d8 9442     		cmp	r4, r2
 3898 02da 33D0     		beq	.L344
 3899              	.L282:
2056:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/cc2DBcx1.s 			page 240


2057:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
2058:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
2059:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3))
 3900              		.loc 1 2059 7 is_stmt 1 view .LVU1248
 3901              		.loc 1 2059 11 is_stmt 0 view .LVU1249
 3902 02dc 1D68     		ldr	r5, [r3]
 3903              	.LVL346:
 3904              	.LBB516:
 3905              	.LBI516:
3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3906              		.loc 2 3710 26 is_stmt 1 view .LVU1250
 3907              	.LBB517:
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3908              		.loc 2 3712 3 view .LVU1251
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3909              		.loc 2 3714 3 view .LVU1252
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3910              		.loc 2 3714 10 is_stmt 0 view .LVU1253
 3911 02de AA6E     		ldr	r2, [r5, #104]
 3912              	.LVL347:
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3913              		.loc 2 3714 10 view .LVU1254
 3914              	.LBE517:
 3915              	.LBE516:
 3916              	.LBB518:
 3917              	.LBI518:
3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3918              		.loc 2 3710 26 is_stmt 1 view .LVU1255
 3919              	.LBB519:
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3920              		.loc 2 3712 3 view .LVU1256
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3921              		.loc 2 3714 3 view .LVU1257
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3922              		.loc 2 3714 10 is_stmt 0 view .LVU1258
 3923 02e0 AC6E     		ldr	r4, [r5, #104]
 3924              	.LVL348:
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3925              		.loc 2 3714 10 view .LVU1259
 3926              	.LBE519:
 3927              	.LBE518:
 3928              		.loc 1 2059 11 view .LVU1260
 3929 02e2 C4F38464 		ubfx	r4, r4, #26, #5
2060:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfigInjected->InjectedChannel))
 3930              		.loc 1 2060 14 view .LVU1261
 3931 02e6 0A68     		ldr	r2, [r1]
 3932 02e8 C2F31306 		ubfx	r6, r2, #0, #20
 3933 02ec 7EBB     		cbnz	r6, .L283
 3934              		.loc 1 2060 14 discriminator 1 view .LVU1262
 3935 02ee C2F38462 		ubfx	r2, r2, #26, #5
 3936              	.L284:
2059:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfigInjected->InjectedChannel))
 3937              		.loc 1 2059 10 view .LVU1263
 3938 02f2 9442     		cmp	r4, r2
 3939 02f4 33D0     		beq	.L345
 3940              	.L286:
2061:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/cc2DBcx1.s 			page 241


2062:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
2063:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
2064:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4))
 3941              		.loc 1 2064 7 is_stmt 1 view .LVU1264
 3942              		.loc 1 2064 11 is_stmt 0 view .LVU1265
 3943 02f6 1D68     		ldr	r5, [r3]
 3944              	.LVL349:
 3945              	.LBB520:
 3946              	.LBI520:
3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3947              		.loc 2 3710 26 is_stmt 1 view .LVU1266
 3948              	.LBB521:
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3949              		.loc 2 3712 3 view .LVU1267
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3950              		.loc 2 3714 3 view .LVU1268
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3951              		.loc 2 3714 10 is_stmt 0 view .LVU1269
 3952 02f8 EA6E     		ldr	r2, [r5, #108]
 3953              	.LVL350:
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3954              		.loc 2 3714 10 view .LVU1270
 3955              	.LBE521:
 3956              	.LBE520:
 3957              	.LBB522:
 3958              	.LBI522:
3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3959              		.loc 2 3710 26 is_stmt 1 view .LVU1271
 3960              	.LBB523:
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3961              		.loc 2 3712 3 view .LVU1272
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3962              		.loc 2 3714 3 view .LVU1273
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3963              		.loc 2 3714 10 is_stmt 0 view .LVU1274
 3964 02fa EC6E     		ldr	r4, [r5, #108]
 3965              	.LVL351:
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3966              		.loc 2 3714 10 view .LVU1275
 3967              	.LBE523:
 3968              	.LBE522:
 3969              		.loc 1 2064 11 view .LVU1276
 3970 02fc C4F38464 		ubfx	r4, r4, #26, #5
2065:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfigInjected->InjectedChannel))
 3971              		.loc 1 2065 14 view .LVU1277
 3972 0300 0A68     		ldr	r2, [r1]
 3973 0302 C2F31306 		ubfx	r6, r2, #0, #20
 3974 0306 7EBB     		cbnz	r6, .L287
 3975              		.loc 1 2065 14 discriminator 1 view .LVU1278
 3976 0308 C2F38462 		ubfx	r2, r2, #26, #5
 3977              	.L288:
2064:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfigInjected->InjectedChannel))
 3978              		.loc 1 2064 10 view .LVU1279
 3979 030c 9442     		cmp	r4, r2
 3980 030e 34D1     		bne	.L263
2066:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
2067:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
ARM GAS  /tmp/cc2DBcx1.s 			page 242


 3981              		.loc 1 2067 9 is_stmt 1 view .LVU1280
 3982              	.LVL352:
 3983              	.LBB524:
 3984              	.LBI524:
3769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3985              		.loc 2 3769 22 view .LVU1281
 3986              	.LBB525:
3771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3987              		.loc 2 3771 3 view .LVU1282
3773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 3988              		.loc 2 3773 3 view .LVU1283
 3989 0310 EA6E     		ldr	r2, [r5, #108]
 3990 0312 22F00042 		bic	r2, r2, #-2147483648
 3991 0316 EA66     		str	r2, [r5, #108]
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3992              		.loc 2 3776 1 is_stmt 0 view .LVU1284
 3993 0318 2FE0     		b	.L263
 3994              	.LVL353:
 3995              	.L275:
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3996              		.loc 2 3776 1 view .LVU1285
 3997              	.LBE525:
 3998              	.LBE524:
 3999              	.LBB526:
 4000              	.LBI526:
 4001              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  /tmp/cc2DBcx1.s 			page 243


  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/cc2DBcx1.s 			page 244


  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc2DBcx1.s 			page 245


 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc2DBcx1.s 			page 246


 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc2DBcx1.s 			page 247


 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  /tmp/cc2DBcx1.s 			page 248


 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
ARM GAS  /tmp/cc2DBcx1.s 			page 249


 4002              		.loc 3 373 31 is_stmt 1 discriminator 2 view .LVU1286
 4003              	.LBB527:
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 4004              		.loc 3 375 3 discriminator 2 view .LVU1287
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 4005              		.loc 3 380 4 discriminator 2 view .LVU1288
 4006              		.syntax unified
 4007              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4008 031a 92FAA2F2 		rbit r2, r2
 4009              	@ 0 "" 2
 4010              	.LVL354:
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 4011              		.loc 3 393 3 discriminator 2 view .LVU1289
 4012              		.loc 3 393 3 is_stmt 0 discriminator 2 view .LVU1290
 4013              		.thumb
 4014              		.syntax unified
 4015              	.LBE527:
 4016              	.LBE526:
 4017              	.LBB528:
 4018              	.LBI528:
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 4019              		.loc 3 403 30 is_stmt 1 discriminator 2 view .LVU1291
 4020              	.LBB529:
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
ARM GAS  /tmp/cc2DBcx1.s 			page 250


 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 4021              		.loc 3 414 3 discriminator 2 view .LVU1292
 4022              		.loc 3 414 6 is_stmt 0 discriminator 2 view .LVU1293
 4023 031e 12B1     		cbz	r2, .L324
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 4024              		.loc 3 418 3 is_stmt 1 view .LVU1294
 4025              		.loc 3 418 10 is_stmt 0 view .LVU1295
 4026 0320 B2FA82F2 		clz	r2, r2
 4027              	.LVL355:
 4028              		.loc 3 418 10 view .LVU1296
 4029 0324 CBE7     		b	.L276
 4030              	.LVL356:
 4031              	.L324:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4032              		.loc 3 416 12 view .LVU1297
 4033 0326 2022     		movs	r2, #32
 4034              	.LVL357:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4035              		.loc 3 416 12 view .LVU1298
 4036 0328 C9E7     		b	.L276
 4037              	.L343:
 4038              	.LBE529:
 4039              	.LBE528:
2052:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 4040              		.loc 1 2052 9 is_stmt 1 view .LVU1299
 4041              	.LVL358:
 4042              	.LBB530:
 4043              	.LBI530:
3769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4044              		.loc 2 3769 22 view .LVU1300
 4045              	.LBB531:
3771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4046              		.loc 2 3771 3 view .LVU1301
3773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 4047              		.loc 2 3773 3 view .LVU1302
 4048 032a 326E     		ldr	r2, [r6, #96]
 4049 032c 22F00042 		bic	r2, r2, #-2147483648
 4050 0330 3266     		str	r2, [r6, #96]
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4051              		.loc 2 3776 1 is_stmt 0 view .LVU1303
 4052 0332 C6E7     		b	.L278
 4053              	.LVL359:
 4054              	.L279:
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4055              		.loc 2 3776 1 view .LVU1304
 4056              	.LBE531:
 4057              	.LBE530:
 4058              	.LBB532:
 4059              	.LBI532:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4060              		.loc 3 373 31 is_stmt 1 discriminator 2 view .LVU1305
 4061              	.LBB533:
ARM GAS  /tmp/cc2DBcx1.s 			page 251


 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4062              		.loc 3 375 3 discriminator 2 view .LVU1306
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4063              		.loc 3 380 4 discriminator 2 view .LVU1307
 4064              		.syntax unified
 4065              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4066 0334 92FAA2F2 		rbit r2, r2
 4067              	@ 0 "" 2
 4068              	.LVL360:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4069              		.loc 3 393 3 discriminator 2 view .LVU1308
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4070              		.loc 3 393 3 is_stmt 0 discriminator 2 view .LVU1309
 4071              		.thumb
 4072              		.syntax unified
 4073              	.LBE533:
 4074              	.LBE532:
 4075              	.LBB534:
 4076              	.LBI534:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4077              		.loc 3 403 30 is_stmt 1 discriminator 2 view .LVU1310
 4078              	.LBB535:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4079              		.loc 3 414 3 discriminator 2 view .LVU1311
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4080              		.loc 3 414 6 is_stmt 0 discriminator 2 view .LVU1312
 4081 0338 12B1     		cbz	r2, .L325
 4082              		.loc 3 418 3 is_stmt 1 view .LVU1313
 4083              		.loc 3 418 10 is_stmt 0 view .LVU1314
 4084 033a B2FA82F2 		clz	r2, r2
 4085              	.LVL361:
 4086              		.loc 3 418 10 view .LVU1315
 4087 033e CBE7     		b	.L280
 4088              	.LVL362:
 4089              	.L325:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4090              		.loc 3 416 12 view .LVU1316
 4091 0340 2022     		movs	r2, #32
 4092              	.LVL363:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4093              		.loc 3 416 12 view .LVU1317
 4094 0342 C9E7     		b	.L280
 4095              	.L344:
 4096              	.LBE535:
 4097              	.LBE534:
2057:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 4098              		.loc 1 2057 9 is_stmt 1 view .LVU1318
 4099              	.LVL364:
 4100              	.LBB536:
 4101              	.LBI536:
3769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4102              		.loc 2 3769 22 view .LVU1319
 4103              	.LBB537:
3771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4104              		.loc 2 3771 3 view .LVU1320
3773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 4105              		.loc 2 3773 3 view .LVU1321
ARM GAS  /tmp/cc2DBcx1.s 			page 252


 4106 0344 6A6E     		ldr	r2, [r5, #100]
 4107 0346 22F00042 		bic	r2, r2, #-2147483648
 4108 034a 6A66     		str	r2, [r5, #100]
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4109              		.loc 2 3776 1 is_stmt 0 view .LVU1322
 4110 034c C6E7     		b	.L282
 4111              	.LVL365:
 4112              	.L283:
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4113              		.loc 2 3776 1 view .LVU1323
 4114              	.LBE537:
 4115              	.LBE536:
 4116              	.LBB538:
 4117              	.LBI538:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4118              		.loc 3 373 31 is_stmt 1 discriminator 2 view .LVU1324
 4119              	.LBB539:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4120              		.loc 3 375 3 discriminator 2 view .LVU1325
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4121              		.loc 3 380 4 discriminator 2 view .LVU1326
 4122              		.syntax unified
 4123              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4124 034e 92FAA2F2 		rbit r2, r2
 4125              	@ 0 "" 2
 4126              	.LVL366:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4127              		.loc 3 393 3 discriminator 2 view .LVU1327
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4128              		.loc 3 393 3 is_stmt 0 discriminator 2 view .LVU1328
 4129              		.thumb
 4130              		.syntax unified
 4131              	.LBE539:
 4132              	.LBE538:
 4133              	.LBB540:
 4134              	.LBI540:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4135              		.loc 3 403 30 is_stmt 1 discriminator 2 view .LVU1329
 4136              	.LBB541:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4137              		.loc 3 414 3 discriminator 2 view .LVU1330
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4138              		.loc 3 414 6 is_stmt 0 discriminator 2 view .LVU1331
 4139 0352 12B1     		cbz	r2, .L326
 4140              		.loc 3 418 3 is_stmt 1 view .LVU1332
 4141              		.loc 3 418 10 is_stmt 0 view .LVU1333
 4142 0354 B2FA82F2 		clz	r2, r2
 4143              	.LVL367:
 4144              		.loc 3 418 10 view .LVU1334
 4145 0358 CBE7     		b	.L284
 4146              	.LVL368:
 4147              	.L326:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4148              		.loc 3 416 12 view .LVU1335
 4149 035a 2022     		movs	r2, #32
 4150              	.LVL369:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  /tmp/cc2DBcx1.s 			page 253


 4151              		.loc 3 416 12 view .LVU1336
 4152 035c C9E7     		b	.L284
 4153              	.L345:
 4154              	.LBE541:
 4155              	.LBE540:
2062:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 4156              		.loc 1 2062 9 is_stmt 1 view .LVU1337
 4157              	.LVL370:
 4158              	.LBB542:
 4159              	.LBI542:
3769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4160              		.loc 2 3769 22 view .LVU1338
 4161              	.LBB543:
3771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4162              		.loc 2 3771 3 view .LVU1339
3773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 4163              		.loc 2 3773 3 view .LVU1340
 4164 035e AA6E     		ldr	r2, [r5, #104]
 4165 0360 22F00042 		bic	r2, r2, #-2147483648
 4166 0364 AA66     		str	r2, [r5, #104]
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4167              		.loc 2 3776 1 is_stmt 0 view .LVU1341
 4168 0366 C6E7     		b	.L286
 4169              	.LVL371:
 4170              	.L287:
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4171              		.loc 2 3776 1 view .LVU1342
 4172              	.LBE543:
 4173              	.LBE542:
 4174              	.LBB544:
 4175              	.LBI544:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4176              		.loc 3 373 31 is_stmt 1 discriminator 2 view .LVU1343
 4177              	.LBB545:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4178              		.loc 3 375 3 discriminator 2 view .LVU1344
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4179              		.loc 3 380 4 discriminator 2 view .LVU1345
 4180              		.syntax unified
 4181              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4182 0368 92FAA2F2 		rbit r2, r2
 4183              	@ 0 "" 2
 4184              	.LVL372:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4185              		.loc 3 393 3 discriminator 2 view .LVU1346
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4186              		.loc 3 393 3 is_stmt 0 discriminator 2 view .LVU1347
 4187              		.thumb
 4188              		.syntax unified
 4189              	.LBE545:
 4190              	.LBE544:
 4191              	.LBB546:
 4192              	.LBI546:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4193              		.loc 3 403 30 is_stmt 1 discriminator 2 view .LVU1348
 4194              	.LBB547:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  /tmp/cc2DBcx1.s 			page 254


 4195              		.loc 3 414 3 discriminator 2 view .LVU1349
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4196              		.loc 3 414 6 is_stmt 0 discriminator 2 view .LVU1350
 4197 036c 12B1     		cbz	r2, .L327
 4198              		.loc 3 418 3 is_stmt 1 view .LVU1351
 4199              		.loc 3 418 10 is_stmt 0 view .LVU1352
 4200 036e B2FA82F2 		clz	r2, r2
 4201              	.LVL373:
 4202              		.loc 3 418 10 view .LVU1353
 4203 0372 CBE7     		b	.L288
 4204              	.LVL374:
 4205              	.L327:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4206              		.loc 3 416 12 view .LVU1354
 4207 0374 2022     		movs	r2, #32
 4208              	.LVL375:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4209              		.loc 3 416 12 view .LVU1355
 4210 0376 C9E7     		b	.L288
 4211              	.LVL376:
 4212              	.L322:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4213              		.loc 3 416 12 view .LVU1356
 4214              	.LBE547:
 4215              	.LBE546:
1719:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_offset_shifted;
 4216              		.loc 1 1719 21 view .LVU1357
 4217 0378 0020     		movs	r0, #0
 4218              	.LVL377:
 4219              	.L263:
2068:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
2069:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
2070:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2071:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
2072:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2073:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2074:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
2075:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*  - Single or differential mode                                           */
2076:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 4220              		.loc 1 2076 3 is_stmt 1 view .LVU1358
 4221              		.loc 1 2076 28 is_stmt 0 view .LVU1359
 4222 037a 1D68     		ldr	r5, [r3]
 4223              	.LVL378:
 4224              	.LBB548:
 4225              	.LBI548:
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4226              		.loc 2 6869 26 is_stmt 1 view .LVU1360
 4227              	.LBB549:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4228              		.loc 2 6871 3 view .LVU1361
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4229              		.loc 2 6871 12 is_stmt 0 view .LVU1362
 4230 037c AA68     		ldr	r2, [r5, #8]
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4231              		.loc 2 6871 68 view .LVU1363
 4232 037e 12F0010F 		tst	r2, #1
 4233 0382 17D1     		bne	.L290
ARM GAS  /tmp/cc2DBcx1.s 			page 255


 4234              	.LVL379:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4235              		.loc 2 6871 68 view .LVU1364
 4236              	.LBE549:
 4237              	.LBE548:
2077:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
2078:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Set mode single-ended or differential input of the selected ADC channel */
2079:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     LL_ADC_SetChannelSingleDiff(hadc->Instance, pConfigInjected->InjectedChannel, pConfigInjected->
 4238              		.loc 1 2079 5 is_stmt 1 view .LVU1365
 4239 0384 0A68     		ldr	r2, [r1]
 4240 0386 CE68     		ldr	r6, [r1, #12]
 4241              	.LVL380:
 4242              	.LBB550:
 4243              	.LBI550:
5646:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4244              		.loc 2 5646 22 view .LVU1366
 4245              	.LBB551:
5651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 4246              		.loc 2 5651 3 view .LVU1367
 4247 0388 D5F8B040 		ldr	r4, [r5, #176]
 4248 038c C2F31307 		ubfx	r7, r2, #0, #20
 4249 0390 24EA0704 		bic	r4, r4, r7
 4250 0394 06F0180C 		and	ip, r6, #24
 4251 0398 184E     		ldr	r6, .L351+8
 4252              	.LVL381:
5651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 4253              		.loc 2 5651 3 is_stmt 0 view .LVU1368
 4254 039a 26FA0CFC 		lsr	ip, r6, ip
 4255 039e 02EA0C02 		and	r2, r2, ip
 4256              	.LVL382:
5651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 4257              		.loc 2 5651 3 view .LVU1369
 4258 03a2 C2F31302 		ubfx	r2, r2, #0, #20
 4259 03a6 2243     		orrs	r2, r2, r4
 4260 03a8 C5F8B020 		str	r2, [r5, #176]
 4261              	.LVL383:
5651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 4262              		.loc 2 5651 3 view .LVU1370
 4263              	.LBE551:
 4264              	.LBE550:
2080:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2081:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Configuration of differential mode */
2082:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits range
2083:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (pConfigInjected->InjectedSingleDiff == ADC_DIFFERENTIAL_ENDED)
 4265              		.loc 1 2083 5 is_stmt 1 view .LVU1371
 4266              		.loc 1 2083 24 is_stmt 0 view .LVU1372
 4267 03ac CC68     		ldr	r4, [r1, #12]
 4268              		.loc 1 2083 8 view .LVU1373
 4269 03ae 144A     		ldr	r2, .L351+12
 4270 03b0 9442     		cmp	r4, r2
 4271 03b2 33D0     		beq	.L346
 4272              	.L290:
2084:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
2085:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
2086:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance,
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
2088:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
ARM GAS  /tmp/cc2DBcx1.s 			page 256


2089:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                     (uint32_t)pConfigInjected->InjectedChannel)
2090:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                   + 1UL) & 0x1FUL)),
2091:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                     pConfigInjected->InjectedSamplingTime);
2092:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
2093:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2094:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
2095:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2096:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Management of internal measurement channels: Vbat/VrefInt/TempSensor   */
2097:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* internal measurement paths enable: If internal channel selected,       */
2098:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* enable dedicated internal buffers and path.                            */
2099:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Note: these internal measurement paths can be disabled using           */
2100:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* HAL_ADC_DeInit().                                                      */
2101:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2102:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (__LL_ADC_IS_CHANNEL_INTERNAL(pConfigInjected->InjectedChannel))
 4273              		.loc 1 2102 3 is_stmt 1 view .LVU1374
 4274              		.loc 1 2102 7 is_stmt 0 view .LVU1375
 4275 03b4 0A68     		ldr	r2, [r1]
 4276              		.loc 1 2102 6 view .LVU1376
 4277 03b6 1349     		ldr	r1, .L351+16
 4278              	.LVL384:
 4279              		.loc 1 2102 6 view .LVU1377
 4280 03b8 0A42     		tst	r2, r1
 4281 03ba 13D0     		beq	.L314
2103:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
2104:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Ins
 4282              		.loc 1 2104 5 is_stmt 1 view .LVU1378
 4283              	.LVL385:
 4284              	.LBB552:
 4285              	.LBI552:
3234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4286              		.loc 2 3234 26 view .LVU1379
 4287              	.LBB553:
3236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4288              		.loc 2 3236 3 view .LVU1380
3236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4289              		.loc 2 3236 21 is_stmt 0 view .LVU1381
 4290 03bc 1249     		ldr	r1, .L351+20
 4291 03be 8968     		ldr	r1, [r1, #8]
3236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4292              		.loc 2 3236 10 view .LVU1382
 4293 03c0 01F0E075 		and	r5, r1, #29360128
 4294              	.LVL386:
3236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4295              		.loc 2 3236 10 view .LVU1383
 4296              	.LBE553:
 4297              	.LBE552:
2105:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2106:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* If the requested internal measurement path has already been enabled,   */
2107:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* bypass the configuration processing.                                   */
2108:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if ((pConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR)
 4298              		.loc 1 2108 5 is_stmt 1 view .LVU1384
 4299              		.loc 1 2108 8 is_stmt 0 view .LVU1385
 4300 03c4 114C     		ldr	r4, .L351+24
 4301 03c6 A242     		cmp	r2, r4
 4302 03c8 00F0E680 		beq	.L347
 4303              	.L315:
2109:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
ARM GAS  /tmp/cc2DBcx1.s 			page 257


2110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
2111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
2112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
2113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2114:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_channe
2115:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2116:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Delay for temperature sensor stabilization time */
2117:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Wait loop initialization and execution */
2118:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /* Note: Variable divided by 2 to compensate partially              */
2119:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /*       CPU processing cycles, scaling in us split to not          */
2120:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         /*       exceed 32 bits register capacity and handle low frequency. */
2121:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL)
2122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                            * (((SystemCoreClock / (100000UL * 2UL)) + 1UL) + 1UL));
2123:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         while (wait_loop_index != 0UL)
2124:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
2125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****           wait_loop_index--;
2126:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
2127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
2128:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
2129:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else if ((pConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT)
 4304              		.loc 1 2129 10 is_stmt 1 view .LVU1386
 4305              		.loc 1 2129 13 is_stmt 0 view .LVU1387
 4306 03cc 104C     		ldr	r4, .L351+28
 4307 03ce A242     		cmp	r2, r4
 4308 03d0 00F00581 		beq	.L348
 4309              	.L318:
2130:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****              && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
2131:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
2132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
2133:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
2134:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2135:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2136:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
2137:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
2138:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else if ((pConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)
 4310              		.loc 1 2138 10 is_stmt 1 view .LVU1388
 4311              		.loc 1 2138 13 is_stmt 0 view .LVU1389
 4312 03d4 0F4C     		ldr	r4, .L351+32
 4313 03d6 A242     		cmp	r2, r4
 4314 03d8 00F01381 		beq	.L349
 4315              	.L319:
2139:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****              && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
2140:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
2141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (ADC_VREFINT_INSTANCE(hadc))
2142:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
2143:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2144:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel);
2145:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
2146:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
2147:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else if (pConfigInjected->InjectedChannel == ADC_CHANNEL_VDDCORE)
 4316              		.loc 1 2147 10 is_stmt 1 view .LVU1390
 4317              		.loc 1 2147 13 is_stmt 0 view .LVU1391
 4318 03dc 0E49     		ldr	r1, .L351+36
 4319 03de 8A42     		cmp	r2, r1
 4320 03e0 00F02181 		beq	.L350
 4321              	.LVL387:
 4322              	.L314:
ARM GAS  /tmp/cc2DBcx1.s 			page 258


2148:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
2149:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (ADC_VDDCORE_INSTANCE(hadc))
2150:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
2151:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         LL_ADC_EnableChannelVDDcore(hadc->Instance);
2152:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
2153:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
2154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else
2155:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
2156:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* nothing to do */
2157:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
 4323              		.loc 1 2157 5 is_stmt 1 view .LVU1392
2158:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
2159:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process unlocked */
2161:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 4324              		.loc 1 2161 3 view .LVU1393
 4325              		.loc 1 2161 3 view .LVU1394
 4326 03e4 0022     		movs	r2, #0
 4327 03e6 83F85420 		strb	r2, [r3, #84]
 4328              		.loc 1 2161 3 view .LVU1395
2162:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2163:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Return function status */
2164:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return tmp_hal_status;
 4329              		.loc 1 2164 3 view .LVU1396
 4330              	.LVL388:
 4331              	.L250:
2165:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 4332              		.loc 1 2165 1 is_stmt 0 view .LVU1397
 4333 03ea 03B0     		add	sp, sp, #12
 4334              	.LCFI34:
 4335              		.cfi_remember_state
 4336              		.cfi_def_cfa_offset 20
 4337              		@ sp needed
 4338 03ec F0BD     		pop	{r4, r5, r6, r7, pc}
 4339              	.LVL389:
 4340              	.L323:
 4341              	.LCFI35:
 4342              		.cfi_restore_state
1719:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_offset_shifted;
 4343              		.loc 1 1719 21 view .LVU1398
 4344 03ee 0020     		movs	r0, #0
 4345 03f0 C3E7     		b	.L263
 4346              	.L352:
 4347 03f2 00BF     		.align	2
 4348              	.L351:
 4349 03f4 00F0FF03 		.word	67104768
 4350 03f8 00800242 		.word	1107460096
 4351 03fc FFFF0F00 		.word	1048575
 4352 0400 00007F40 		.word	1082064896
 4353 0404 00000880 		.word	-2146959360
 4354 0408 00830242 		.word	1107460864
 4355 040c 000021C3 		.word	-1021247488
 4356 0410 00002943 		.word	1126760448
 4357 0414 000052C7 		.word	-950927360
 4358 0418 00005A47 		.word	1197080576
 4359              	.LVL390:
 4360              	.L346:
ARM GAS  /tmp/cc2DBcx1.s 			page 259


2086:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 4361              		.loc 1 2086 7 is_stmt 1 view .LVU1399
 4362 041c 1D68     		ldr	r5, [r3]
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4363              		.loc 1 2087 48 is_stmt 0 view .LVU1400
 4364 041e 0A68     		ldr	r2, [r1]
 4365 0420 C2F31306 		ubfx	r6, r2, #0, #20
 4366 0424 002E     		cmp	r6, #0
 4367 0426 37D1     		bne	.L291
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4368              		.loc 1 2087 48 discriminator 1 view .LVU1401
 4369 0428 940E     		lsrs	r4, r2, #26
 4370 042a 0134     		adds	r4, r4, #1
 4371 042c 04F01F04 		and	r4, r4, #31
 4372 0430 092C     		cmp	r4, #9
 4373 0432 8CBF     		ite	hi
 4374 0434 0024     		movhi	r4, #0
 4375 0436 0124     		movls	r4, #1
 4376              	.L292:
2086:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 4377              		.loc 1 2086 7 view .LVU1402
 4378 0438 002C     		cmp	r4, #0
 4379 043a 65D0     		beq	.L294
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4380              		.loc 1 2087 48 view .LVU1403
 4381 043c 002E     		cmp	r6, #0
 4382 043e 3AD1     		bne	.L295
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4383              		.loc 1 2087 48 discriminator 3 view .LVU1404
 4384 0440 940E     		lsrs	r4, r2, #26
 4385 0442 0134     		adds	r4, r4, #1
 4386 0444 A406     		lsls	r4, r4, #26
 4387 0446 04F0F844 		and	r4, r4, #2080374784
 4388              	.L296:
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4389              		.loc 1 2087 48 discriminator 6 view .LVU1405
 4390 044a 002E     		cmp	r6, #0
 4391 044c 3FD1     		bne	.L298
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4392              		.loc 1 2087 48 discriminator 7 view .LVU1406
 4393 044e 970E     		lsrs	r7, r2, #26
 4394 0450 0137     		adds	r7, r7, #1
 4395 0452 07F01F0C 		and	ip, r7, #31
 4396 0456 0127     		movs	r7, #1
 4397 0458 07FA0CF7 		lsl	r7, r7, ip
 4398              	.L299:
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4399              		.loc 1 2087 48 discriminator 10 view .LVU1407
 4400 045c 3C43     		orrs	r4, r4, r7
 4401 045e 002E     		cmp	r6, #0
 4402 0460 44D1     		bne	.L301
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4403              		.loc 1 2087 48 discriminator 11 view .LVU1408
 4404 0462 920E     		lsrs	r2, r2, #26
 4405 0464 0132     		adds	r2, r2, #1
 4406 0466 02F01F02 		and	r2, r2, #31
 4407 046a 02EB4202 		add	r2, r2, r2, lsl #1
ARM GAS  /tmp/cc2DBcx1.s 			page 260


 4408 046e 1205     		lsls	r2, r2, #20
 4409              	.L302:
2086:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 4410              		.loc 1 2086 7 view .LVU1409
 4411 0470 2243     		orrs	r2, r2, r4
 4412              	.L304:
2086:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 4413              		.loc 1 2086 7 discriminator 1 view .LVU1410
 4414 0472 8C68     		ldr	r4, [r1, #8]
 4415              	.LVL391:
 4416              	.LBB554:
 4417              	.LBI554:
5499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4418              		.loc 2 5499 22 is_stmt 1 discriminator 1 view .LVU1411
 4419              	.LBB555:
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 4420              		.loc 2 5505 3 discriminator 1 view .LVU1412
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 4421              		.loc 2 5505 25 is_stmt 0 discriminator 1 view .LVU1413
 4422 0474 1435     		adds	r5, r5, #20
 4423              	.LVL392:
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 4424              		.loc 2 5505 25 discriminator 1 view .LVU1414
 4425 0476 560E     		lsrs	r6, r2, #25
 4426 0478 B600     		lsls	r6, r6, #2
 4427 047a 06F00406 		and	r6, r6, #4
 4428              	.LVL393:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 4429              		.loc 2 5508 3 is_stmt 1 discriminator 1 view .LVU1415
 4430 047e AF59     		ldr	r7, [r5, r6]
 4431 0480 C2F30452 		ubfx	r2, r2, #20, #5
 4432              	.LVL394:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 4433              		.loc 2 5508 3 is_stmt 0 discriminator 1 view .LVU1416
 4434 0484 4FF0070C 		mov	ip, #7
 4435 0488 0CFA02FC 		lsl	ip, ip, r2
 4436 048c 27EA0C07 		bic	r7, r7, ip
 4437 0490 9440     		lsls	r4, r4, r2
 4438              	.LVL395:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 4439              		.loc 2 5508 3 discriminator 1 view .LVU1417
 4440 0492 3C43     		orrs	r4, r4, r7
 4441 0494 AC51     		str	r4, [r5, r6]
 4442              	.LVL396:
5511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4443              		.loc 2 5511 1 discriminator 1 view .LVU1418
 4444 0496 8DE7     		b	.L290
 4445              	.LVL397:
 4446              	.L291:
5511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4447              		.loc 2 5511 1 discriminator 1 view .LVU1419
 4448              	.LBE555:
 4449              	.LBE554:
 4450              	.LBB556:
 4451              	.LBI556:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4452              		.loc 3 373 31 is_stmt 1 discriminator 2 view .LVU1420
ARM GAS  /tmp/cc2DBcx1.s 			page 261


 4453              	.LBB557:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4454              		.loc 3 375 3 discriminator 2 view .LVU1421
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4455              		.loc 3 380 4 discriminator 2 view .LVU1422
 4456              		.syntax unified
 4457              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4458 0498 92FAA2F4 		rbit r4, r2
 4459              	@ 0 "" 2
 4460              	.LVL398:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4461              		.loc 3 393 3 discriminator 2 view .LVU1423
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4462              		.loc 3 393 3 is_stmt 0 discriminator 2 view .LVU1424
 4463              		.thumb
 4464              		.syntax unified
 4465              	.LBE557:
 4466              	.LBE556:
 4467              	.LBB558:
 4468              	.LBI558:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4469              		.loc 3 403 30 is_stmt 1 discriminator 2 view .LVU1425
 4470              	.LBB559:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4471              		.loc 3 414 3 discriminator 2 view .LVU1426
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4472              		.loc 3 414 6 is_stmt 0 discriminator 2 view .LVU1427
 4473 049c 4CB1     		cbz	r4, .L328
 4474              		.loc 3 418 3 is_stmt 1 view .LVU1428
 4475              		.loc 3 418 10 is_stmt 0 view .LVU1429
 4476 049e B4FA84F4 		clz	r4, r4
 4477              	.LVL399:
 4478              	.L293:
 4479              		.loc 3 418 10 view .LVU1430
 4480              	.LBE559:
 4481              	.LBE558:
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4482              		.loc 1 2087 48 view .LVU1431
 4483 04a2 0134     		adds	r4, r4, #1
 4484 04a4 04F01F04 		and	r4, r4, #31
 4485 04a8 092C     		cmp	r4, #9
 4486 04aa 8CBF     		ite	hi
 4487 04ac 0024     		movhi	r4, #0
 4488 04ae 0124     		movls	r4, #1
 4489 04b0 C2E7     		b	.L292
 4490              	.LVL400:
 4491              	.L328:
 4492              	.LBB561:
 4493              	.LBB560:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4494              		.loc 3 416 12 view .LVU1432
 4495 04b2 2024     		movs	r4, #32
 4496              	.LVL401:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4497              		.loc 3 416 12 view .LVU1433
 4498 04b4 F5E7     		b	.L293
 4499              	.L295:
ARM GAS  /tmp/cc2DBcx1.s 			page 262


 4500              	.LVL402:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4501              		.loc 3 416 12 view .LVU1434
 4502              	.LBE560:
 4503              	.LBE561:
 4504              	.LBB562:
 4505              	.LBI562:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4506              		.loc 3 373 31 is_stmt 1 discriminator 4 view .LVU1435
 4507              	.LBB563:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4508              		.loc 3 375 3 discriminator 4 view .LVU1436
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4509              		.loc 3 380 4 discriminator 4 view .LVU1437
 4510              		.syntax unified
 4511              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4512 04b6 92FAA2F4 		rbit r4, r2
 4513              	@ 0 "" 2
 4514              	.LVL403:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4515              		.loc 3 393 3 discriminator 4 view .LVU1438
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4516              		.loc 3 393 3 is_stmt 0 discriminator 4 view .LVU1439
 4517              		.thumb
 4518              		.syntax unified
 4519              	.LBE563:
 4520              	.LBE562:
 4521              	.LBB564:
 4522              	.LBI564:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4523              		.loc 3 403 30 is_stmt 1 discriminator 4 view .LVU1440
 4524              	.LBB565:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4525              		.loc 3 414 3 discriminator 4 view .LVU1441
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4526              		.loc 3 414 6 is_stmt 0 discriminator 4 view .LVU1442
 4527 04ba 34B1     		cbz	r4, .L329
 4528              		.loc 3 418 3 is_stmt 1 view .LVU1443
 4529              		.loc 3 418 10 is_stmt 0 view .LVU1444
 4530 04bc B4FA84F4 		clz	r4, r4
 4531              	.LVL404:
 4532              	.L297:
 4533              		.loc 3 418 10 view .LVU1445
 4534              	.LBE565:
 4535              	.LBE564:
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4536              		.loc 1 2087 48 view .LVU1446
 4537 04c0 0134     		adds	r4, r4, #1
 4538 04c2 A406     		lsls	r4, r4, #26
 4539 04c4 04F0F844 		and	r4, r4, #2080374784
 4540 04c8 BFE7     		b	.L296
 4541              	.LVL405:
 4542              	.L329:
 4543              	.LBB567:
 4544              	.LBB566:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4545              		.loc 3 416 12 view .LVU1447
ARM GAS  /tmp/cc2DBcx1.s 			page 263


 4546 04ca 2024     		movs	r4, #32
 4547              	.LVL406:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4548              		.loc 3 416 12 view .LVU1448
 4549 04cc F8E7     		b	.L297
 4550              	.L298:
 4551              	.LVL407:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4552              		.loc 3 416 12 view .LVU1449
 4553              	.LBE566:
 4554              	.LBE567:
 4555              	.LBB568:
 4556              	.LBI568:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4557              		.loc 3 373 31 is_stmt 1 discriminator 8 view .LVU1450
 4558              	.LBB569:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4559              		.loc 3 375 3 discriminator 8 view .LVU1451
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4560              		.loc 3 380 4 discriminator 8 view .LVU1452
 4561              		.syntax unified
 4562              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4563 04ce 92FAA2F7 		rbit r7, r2
 4564              	@ 0 "" 2
 4565              	.LVL408:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4566              		.loc 3 393 3 discriminator 8 view .LVU1453
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4567              		.loc 3 393 3 is_stmt 0 discriminator 8 view .LVU1454
 4568              		.thumb
 4569              		.syntax unified
 4570              	.LBE569:
 4571              	.LBE568:
 4572              	.LBB570:
 4573              	.LBI570:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4574              		.loc 3 403 30 is_stmt 1 discriminator 8 view .LVU1455
 4575              	.LBB571:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4576              		.loc 3 414 3 discriminator 8 view .LVU1456
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4577              		.loc 3 414 6 is_stmt 0 discriminator 8 view .LVU1457
 4578 04d2 4FB1     		cbz	r7, .L330
 4579              		.loc 3 418 3 is_stmt 1 view .LVU1458
 4580              		.loc 3 418 10 is_stmt 0 view .LVU1459
 4581 04d4 B7FA87F7 		clz	r7, r7
 4582              	.LVL409:
 4583              	.L300:
 4584              		.loc 3 418 10 view .LVU1460
 4585              	.LBE571:
 4586              	.LBE570:
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4587              		.loc 1 2087 48 view .LVU1461
 4588 04d8 0137     		adds	r7, r7, #1
 4589 04da 07F01F07 		and	r7, r7, #31
 4590 04de 4FF0010C 		mov	ip, #1
 4591 04e2 0CFA07F7 		lsl	r7, ip, r7
ARM GAS  /tmp/cc2DBcx1.s 			page 264


 4592 04e6 B9E7     		b	.L299
 4593              	.LVL410:
 4594              	.L330:
 4595              	.LBB573:
 4596              	.LBB572:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4597              		.loc 3 416 12 view .LVU1462
 4598 04e8 2027     		movs	r7, #32
 4599              	.LVL411:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4600              		.loc 3 416 12 view .LVU1463
 4601 04ea F5E7     		b	.L300
 4602              	.L301:
 4603              	.LVL412:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4604              		.loc 3 416 12 view .LVU1464
 4605              	.LBE572:
 4606              	.LBE573:
 4607              	.LBB574:
 4608              	.LBI574:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4609              		.loc 3 373 31 is_stmt 1 discriminator 12 view .LVU1465
 4610              	.LBB575:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4611              		.loc 3 375 3 discriminator 12 view .LVU1466
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4612              		.loc 3 380 4 discriminator 12 view .LVU1467
 4613              		.syntax unified
 4614              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4615 04ec 92FAA2F2 		rbit r2, r2
 4616              	@ 0 "" 2
 4617              	.LVL413:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4618              		.loc 3 393 3 discriminator 12 view .LVU1468
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4619              		.loc 3 393 3 is_stmt 0 discriminator 12 view .LVU1469
 4620              		.thumb
 4621              		.syntax unified
 4622              	.LBE575:
 4623              	.LBE574:
 4624              	.LBB576:
 4625              	.LBI576:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4626              		.loc 3 403 30 is_stmt 1 discriminator 12 view .LVU1470
 4627              	.LBB577:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4628              		.loc 3 414 3 discriminator 12 view .LVU1471
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4629              		.loc 3 414 6 is_stmt 0 discriminator 12 view .LVU1472
 4630 04f0 42B1     		cbz	r2, .L331
 4631              		.loc 3 418 3 is_stmt 1 view .LVU1473
 4632              		.loc 3 418 10 is_stmt 0 view .LVU1474
 4633 04f2 B2FA82F2 		clz	r2, r2
 4634              	.LVL414:
 4635              	.L303:
 4636              		.loc 3 418 10 view .LVU1475
 4637              	.LBE577:
ARM GAS  /tmp/cc2DBcx1.s 			page 265


 4638              	.LBE576:
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4639              		.loc 1 2087 48 view .LVU1476
 4640 04f6 0132     		adds	r2, r2, #1
 4641 04f8 02F01F02 		and	r2, r2, #31
 4642 04fc 02EB4202 		add	r2, r2, r2, lsl #1
 4643 0500 1205     		lsls	r2, r2, #20
 4644 0502 B5E7     		b	.L302
 4645              	.LVL415:
 4646              	.L331:
 4647              	.LBB579:
 4648              	.LBB578:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4649              		.loc 3 416 12 view .LVU1477
 4650 0504 2022     		movs	r2, #32
 4651              	.LVL416:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4652              		.loc 3 416 12 view .LVU1478
 4653 0506 F6E7     		b	.L303
 4654              	.L294:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4655              		.loc 3 416 12 view .LVU1479
 4656              	.LBE578:
 4657              	.LBE579:
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4658              		.loc 1 2087 48 view .LVU1480
 4659 0508 D6B9     		cbnz	r6, .L305
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4660              		.loc 1 2087 48 discriminator 13 view .LVU1481
 4661 050a 940E     		lsrs	r4, r2, #26
 4662 050c 0134     		adds	r4, r4, #1
 4663 050e A406     		lsls	r4, r4, #26
 4664 0510 04F0F844 		and	r4, r4, #2080374784
 4665              	.L306:
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4666              		.loc 1 2087 48 discriminator 16 view .LVU1482
 4667 0514 06BB     		cbnz	r6, .L308
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4668              		.loc 1 2087 48 discriminator 17 view .LVU1483
 4669 0516 970E     		lsrs	r7, r2, #26
 4670 0518 0137     		adds	r7, r7, #1
 4671 051a 07F01F0C 		and	ip, r7, #31
 4672 051e 0127     		movs	r7, #1
 4673 0520 07FA0CF7 		lsl	r7, r7, ip
 4674              	.L309:
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4675              		.loc 1 2087 48 discriminator 20 view .LVU1484
 4676 0524 3C43     		orrs	r4, r4, r7
 4677 0526 36BB     		cbnz	r6, .L311
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4678              		.loc 1 2087 48 discriminator 21 view .LVU1485
 4679 0528 920E     		lsrs	r2, r2, #26
 4680 052a 0132     		adds	r2, r2, #1
 4681 052c 02F01F02 		and	r2, r2, #31
 4682 0530 02EB4202 		add	r2, r2, r2, lsl #1
 4683 0534 1E3A     		subs	r2, r2, #30
 4684 0536 1205     		lsls	r2, r2, #20
ARM GAS  /tmp/cc2DBcx1.s 			page 266


 4685 0538 42F00072 		orr	r2, r2, #33554432
 4686              	.L312:
2086:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 4687              		.loc 1 2086 7 discriminator 2 view .LVU1486
 4688 053c 2243     		orrs	r2, r2, r4
 4689 053e 98E7     		b	.L304
 4690              	.L305:
 4691              	.LVL417:
 4692              	.LBB580:
 4693              	.LBI580:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4694              		.loc 3 373 31 is_stmt 1 discriminator 14 view .LVU1487
 4695              	.LBB581:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4696              		.loc 3 375 3 discriminator 14 view .LVU1488
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4697              		.loc 3 380 4 discriminator 14 view .LVU1489
 4698              		.syntax unified
 4699              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4700 0540 92FAA2F4 		rbit r4, r2
 4701              	@ 0 "" 2
 4702              	.LVL418:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4703              		.loc 3 393 3 discriminator 14 view .LVU1490
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4704              		.loc 3 393 3 is_stmt 0 discriminator 14 view .LVU1491
 4705              		.thumb
 4706              		.syntax unified
 4707              	.LBE581:
 4708              	.LBE580:
 4709              	.LBB582:
 4710              	.LBI582:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4711              		.loc 3 403 30 is_stmt 1 discriminator 14 view .LVU1492
 4712              	.LBB583:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4713              		.loc 3 414 3 discriminator 14 view .LVU1493
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4714              		.loc 3 414 6 is_stmt 0 discriminator 14 view .LVU1494
 4715 0544 34B1     		cbz	r4, .L332
 4716              		.loc 3 418 3 is_stmt 1 view .LVU1495
 4717              		.loc 3 418 10 is_stmt 0 view .LVU1496
 4718 0546 B4FA84F4 		clz	r4, r4
 4719              	.LVL419:
 4720              	.L307:
 4721              		.loc 3 418 10 view .LVU1497
 4722              	.LBE583:
 4723              	.LBE582:
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4724              		.loc 1 2087 48 view .LVU1498
 4725 054a 0134     		adds	r4, r4, #1
 4726 054c A406     		lsls	r4, r4, #26
 4727 054e 04F0F844 		and	r4, r4, #2080374784
 4728 0552 DFE7     		b	.L306
 4729              	.LVL420:
 4730              	.L332:
 4731              	.LBB585:
ARM GAS  /tmp/cc2DBcx1.s 			page 267


 4732              	.LBB584:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4733              		.loc 3 416 12 view .LVU1499
 4734 0554 2024     		movs	r4, #32
 4735              	.LVL421:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4736              		.loc 3 416 12 view .LVU1500
 4737 0556 F8E7     		b	.L307
 4738              	.L308:
 4739              	.LVL422:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4740              		.loc 3 416 12 view .LVU1501
 4741              	.LBE584:
 4742              	.LBE585:
 4743              	.LBB586:
 4744              	.LBI586:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4745              		.loc 3 373 31 is_stmt 1 discriminator 18 view .LVU1502
 4746              	.LBB587:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4747              		.loc 3 375 3 discriminator 18 view .LVU1503
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4748              		.loc 3 380 4 discriminator 18 view .LVU1504
 4749              		.syntax unified
 4750              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4751 0558 92FAA2F7 		rbit r7, r2
 4752              	@ 0 "" 2
 4753              	.LVL423:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4754              		.loc 3 393 3 discriminator 18 view .LVU1505
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4755              		.loc 3 393 3 is_stmt 0 discriminator 18 view .LVU1506
 4756              		.thumb
 4757              		.syntax unified
 4758              	.LBE587:
 4759              	.LBE586:
 4760              	.LBB588:
 4761              	.LBI588:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4762              		.loc 3 403 30 is_stmt 1 discriminator 18 view .LVU1507
 4763              	.LBB589:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4764              		.loc 3 414 3 discriminator 18 view .LVU1508
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4765              		.loc 3 414 6 is_stmt 0 discriminator 18 view .LVU1509
 4766 055c 4FB1     		cbz	r7, .L333
 4767              		.loc 3 418 3 is_stmt 1 view .LVU1510
 4768              		.loc 3 418 10 is_stmt 0 view .LVU1511
 4769 055e B7FA87F7 		clz	r7, r7
 4770              	.LVL424:
 4771              	.L310:
 4772              		.loc 3 418 10 view .LVU1512
 4773              	.LBE589:
 4774              	.LBE588:
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4775              		.loc 1 2087 48 view .LVU1513
 4776 0562 0137     		adds	r7, r7, #1
ARM GAS  /tmp/cc2DBcx1.s 			page 268


 4777 0564 07F01F07 		and	r7, r7, #31
 4778 0568 4FF0010C 		mov	ip, #1
 4779 056c 0CFA07F7 		lsl	r7, ip, r7
 4780 0570 D8E7     		b	.L309
 4781              	.LVL425:
 4782              	.L333:
 4783              	.LBB591:
 4784              	.LBB590:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4785              		.loc 3 416 12 view .LVU1514
 4786 0572 2027     		movs	r7, #32
 4787              	.LVL426:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4788              		.loc 3 416 12 view .LVU1515
 4789 0574 F5E7     		b	.L310
 4790              	.L311:
 4791              	.LVL427:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4792              		.loc 3 416 12 view .LVU1516
 4793              	.LBE590:
 4794              	.LBE591:
 4795              	.LBB592:
 4796              	.LBI592:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4797              		.loc 3 373 31 is_stmt 1 discriminator 22 view .LVU1517
 4798              	.LBB593:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4799              		.loc 3 375 3 discriminator 22 view .LVU1518
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4800              		.loc 3 380 4 discriminator 22 view .LVU1519
 4801              		.syntax unified
 4802              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4803 0576 92FAA2F2 		rbit r2, r2
 4804              	@ 0 "" 2
 4805              	.LVL428:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4806              		.loc 3 393 3 discriminator 22 view .LVU1520
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4807              		.loc 3 393 3 is_stmt 0 discriminator 22 view .LVU1521
 4808              		.thumb
 4809              		.syntax unified
 4810              	.LBE593:
 4811              	.LBE592:
 4812              	.LBB594:
 4813              	.LBI594:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4814              		.loc 3 403 30 is_stmt 1 discriminator 22 view .LVU1522
 4815              	.LBB595:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4816              		.loc 3 414 3 discriminator 22 view .LVU1523
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4817              		.loc 3 414 6 is_stmt 0 discriminator 22 view .LVU1524
 4818 057a 5AB1     		cbz	r2, .L334
 4819              		.loc 3 418 3 is_stmt 1 view .LVU1525
 4820              		.loc 3 418 10 is_stmt 0 view .LVU1526
 4821 057c B2FA82F2 		clz	r2, r2
 4822              	.LVL429:
ARM GAS  /tmp/cc2DBcx1.s 			page 269


 4823              	.L313:
 4824              		.loc 3 418 10 view .LVU1527
 4825              	.LBE595:
 4826              	.LBE594:
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                                  (__LL_ADC_CHANNEL_TO_DECIMAL_NB(
 4827              		.loc 1 2087 48 view .LVU1528
 4828 0580 0132     		adds	r2, r2, #1
 4829 0582 02F01F02 		and	r2, r2, #31
 4830 0586 02EB4202 		add	r2, r2, r2, lsl #1
 4831 058a 1E3A     		subs	r2, r2, #30
 4832 058c 1205     		lsls	r2, r2, #20
 4833 058e 42F00072 		orr	r2, r2, #33554432
 4834 0592 D3E7     		b	.L312
 4835              	.LVL430:
 4836              	.L334:
 4837              	.LBB597:
 4838              	.LBB596:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4839              		.loc 3 416 12 view .LVU1529
 4840 0594 2022     		movs	r2, #32
 4841              	.LVL431:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4842              		.loc 3 416 12 view .LVU1530
 4843 0596 F3E7     		b	.L313
 4844              	.LVL432:
 4845              	.L347:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4846              		.loc 3 416 12 view .LVU1531
 4847              	.LBE596:
 4848              	.LBE597:
2109:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 4849              		.loc 1 2109 9 view .LVU1532
 4850 0598 11F4000F 		tst	r1, #8388608
 4851 059c 7FF416AF 		bne	.L315
2111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 4852              		.loc 1 2111 7 is_stmt 1 view .LVU1533
2111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 4853              		.loc 1 2111 11 is_stmt 0 view .LVU1534
 4854 05a0 1968     		ldr	r1, [r3]
2111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 4855              		.loc 1 2111 10 view .LVU1535
 4856 05a2 284A     		ldr	r2, .L353
 4857 05a4 9142     		cmp	r1, r2
 4858 05a6 7FF41DAF 		bne	.L314
2113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_channe
 4859              		.loc 1 2113 9 is_stmt 1 view .LVU1536
 4860 05aa 45F40005 		orr	r5, r5, #8388608
 4861              	.LVL433:
 4862              	.LBB598:
 4863              	.LBI598:
3152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4864              		.loc 2 3152 22 view .LVU1537
 4865              	.LBB599:
3154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4866              		.loc 2 3154 3 view .LVU1538
 4867 05ae 2649     		ldr	r1, .L353+4
 4868 05b0 8A68     		ldr	r2, [r1, #8]
ARM GAS  /tmp/cc2DBcx1.s 			page 270


 4869 05b2 22F0E072 		bic	r2, r2, #29360128
 4870 05b6 1543     		orrs	r5, r5, r2
 4871              	.LVL434:
3154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4872              		.loc 2 3154 3 is_stmt 0 view .LVU1539
 4873 05b8 8D60     		str	r5, [r1, #8]
 4874              	.LVL435:
3154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4875              		.loc 2 3154 3 view .LVU1540
 4876              	.LBE599:
 4877              	.LBE598:
2121:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                            * (((SystemCoreClock / (100000UL * 2UL)) + 1UL) + 1UL));
 4878              		.loc 1 2121 9 is_stmt 1 view .LVU1541
2122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         while (wait_loop_index != 0UL)
 4879              		.loc 1 2122 49 is_stmt 0 view .LVU1542
 4880 05ba 244A     		ldr	r2, .L353+8
 4881 05bc 1268     		ldr	r2, [r2]
 4882 05be 9209     		lsrs	r2, r2, #6
 4883 05c0 2349     		ldr	r1, .L353+12
 4884 05c2 A1FB0212 		umull	r1, r2, r1, r2
 4885 05c6 9209     		lsrs	r2, r2, #6
2122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         while (wait_loop_index != 0UL)
 4886              		.loc 1 2122 76 view .LVU1543
 4887 05c8 0232     		adds	r2, r2, #2
2122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         while (wait_loop_index != 0UL)
 4888              		.loc 1 2122 28 view .LVU1544
 4889 05ca 5200     		lsls	r2, r2, #1
2121:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                            * (((SystemCoreClock / (100000UL * 2UL)) + 1UL) + 1UL));
 4890              		.loc 1 2121 25 view .LVU1545
 4891 05cc 0192     		str	r2, [sp, #4]
2123:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
 4892              		.loc 1 2123 9 is_stmt 1 view .LVU1546
 4893              	.L316:
2123:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
 4894              		.loc 1 2123 15 view .LVU1547
2123:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
 4895              		.loc 1 2123 32 is_stmt 0 view .LVU1548
 4896 05ce 019A     		ldr	r2, [sp, #4]
2123:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         {
 4897              		.loc 1 2123 15 view .LVU1549
 4898 05d0 002A     		cmp	r2, #0
 4899 05d2 3FF407AF 		beq	.L314
2125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 4900              		.loc 1 2125 11 is_stmt 1 view .LVU1550
2125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         }
 4901              		.loc 1 2125 26 is_stmt 0 view .LVU1551
 4902 05d6 019A     		ldr	r2, [sp, #4]
 4903 05d8 013A     		subs	r2, r2, #1
 4904 05da 0192     		str	r2, [sp, #4]
 4905 05dc F7E7     		b	.L316
 4906              	.LVL436:
 4907              	.L348:
2130:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 4908              		.loc 1 2130 14 view .LVU1552
 4909 05de 11F0807F 		tst	r1, #16777216
 4910 05e2 7FF4F7AE 		bne	.L318
2132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/cc2DBcx1.s 			page 271


 4911              		.loc 1 2132 7 is_stmt 1 view .LVU1553
2132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 4912              		.loc 1 2132 11 is_stmt 0 view .LVU1554
 4913 05e6 1968     		ldr	r1, [r3]
2132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 4914              		.loc 1 2132 10 view .LVU1555
 4915 05e8 1A4A     		ldr	r2, .L353+16
 4916 05ea 9142     		cmp	r1, r2
 4917 05ec 7FF4FAAE 		bne	.L314
2134:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 4918              		.loc 1 2134 9 is_stmt 1 view .LVU1556
 4919 05f0 45F08075 		orr	r5, r5, #16777216
 4920              	.LVL437:
 4921              	.LBB600:
 4922              	.LBI600:
3152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4923              		.loc 2 3152 22 view .LVU1557
 4924              	.LBB601:
3154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4925              		.loc 2 3154 3 view .LVU1558
 4926 05f4 1449     		ldr	r1, .L353+4
 4927 05f6 8A68     		ldr	r2, [r1, #8]
 4928 05f8 22F0E072 		bic	r2, r2, #29360128
 4929 05fc 1543     		orrs	r5, r5, r2
 4930              	.LVL438:
3154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4931              		.loc 2 3154 3 is_stmt 0 view .LVU1559
 4932 05fe 8D60     		str	r5, [r1, #8]
3155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4933              		.loc 2 3155 1 view .LVU1560
 4934 0600 F0E6     		b	.L314
 4935              	.LVL439:
 4936              	.L349:
3155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4937              		.loc 2 3155 1 view .LVU1561
 4938              	.LBE601:
 4939              	.LBE600:
2139:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
 4940              		.loc 1 2139 14 view .LVU1562
 4941 0602 11F4800F 		tst	r1, #4194304
 4942 0606 7FF4E9AE 		bne	.L319
2141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 4943              		.loc 1 2141 7 is_stmt 1 view .LVU1563
2141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 4944              		.loc 1 2141 11 is_stmt 0 view .LVU1564
 4945 060a 1968     		ldr	r1, [r3]
2141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 4946              		.loc 1 2141 10 view .LVU1565
 4947 060c 0D4A     		ldr	r2, .L353
 4948 060e 9142     		cmp	r1, r2
 4949 0610 7FF4E8AE 		bne	.L314
2143:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel);
 4950              		.loc 1 2143 9 is_stmt 1 view .LVU1566
 4951 0614 45F48002 		orr	r2, r5, #4194304
 4952              	.LVL440:
 4953              	.LBB602:
 4954              	.LBI602:
ARM GAS  /tmp/cc2DBcx1.s 			page 272


3152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4955              		.loc 2 3152 22 view .LVU1567
 4956              	.LBB603:
3154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4957              		.loc 2 3154 3 view .LVU1568
 4958 0618 0B4C     		ldr	r4, .L353+4
 4959 061a A168     		ldr	r1, [r4, #8]
 4960 061c 21F0E071 		bic	r1, r1, #29360128
 4961 0620 0A43     		orrs	r2, r2, r1
 4962              	.LVL441:
3154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4963              		.loc 2 3154 3 is_stmt 0 view .LVU1569
 4964 0622 A260     		str	r2, [r4, #8]
3155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4965              		.loc 2 3155 1 view .LVU1570
 4966 0624 DEE6     		b	.L314
 4967              	.LVL442:
 4968              	.L350:
3155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4969              		.loc 2 3155 1 view .LVU1571
 4970              	.LBE603:
 4971              	.LBE602:
2149:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 4972              		.loc 1 2149 7 is_stmt 1 view .LVU1572
2149:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 4973              		.loc 1 2149 11 is_stmt 0 view .LVU1573
 4974 0626 1A68     		ldr	r2, [r3]
2149:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
 4975              		.loc 1 2149 10 view .LVU1574
 4976 0628 0649     		ldr	r1, .L353
 4977 062a 8A42     		cmp	r2, r1
 4978 062c 3FF4DAAE 		beq	.L314
2151:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
 4979              		.loc 1 2151 9 is_stmt 1 view .LVU1575
 4980              	.LVL443:
 4981              	.LBB604:
 4982              	.LBI604:
3256:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4983              		.loc 2 3256 22 view .LVU1576
 4984              	.LBB605:
3258:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4985              		.loc 2 3258 3 view .LVU1577
 4986 0630 D2F8C810 		ldr	r1, [r2, #200]
 4987 0634 41F00101 		orr	r1, r1, #1
 4988 0638 C2F8C810 		str	r1, [r2, #200]
3259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
 4989              		.loc 2 3259 1 is_stmt 0 view .LVU1578
 4990 063c D2E6     		b	.L314
 4991              	.LVL444:
 4992              	.L320:
3259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
 4993              		.loc 2 3259 1 view .LVU1579
 4994              	.LBE605:
 4995              	.LBE604:
1773:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 4996              		.loc 1 1773 3 view .LVU1580
 4997 063e 0220     		movs	r0, #2
ARM GAS  /tmp/cc2DBcx1.s 			page 273


 4998 0640 D3E6     		b	.L250
 4999              	.L354:
 5000 0642 00BF     		.align	2
 5001              	.L353:
 5002 0644 00800242 		.word	1107460096
 5003 0648 00830242 		.word	1107460864
 5004 064c 00000000 		.word	SystemCoreClock
 5005 0650 632D3E05 		.word	87960931
 5006 0654 00810242 		.word	1107460352
 5007              		.cfi_endproc
 5008              	.LFE382:
 5010              		.section	.text.HAL_ADCEx_MultiModeConfigChannel,"ax",%progbits
 5011              		.align	1
 5012              		.global	HAL_ADCEx_MultiModeConfigChannel
 5013              		.syntax unified
 5014              		.thumb
 5015              		.thumb_func
 5016              		.fpu fpv4-sp-d16
 5018              	HAL_ADCEx_MultiModeConfigChannel:
 5019              	.LVL445:
 5020              	.LFB383:
2166:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2167:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2168:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
2169:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Enable ADC multimode and configure multimode parameters
2170:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
2171:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         This function initializes multimode parameters, following
2172:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters
2173:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         of structure "ADC_MultiModeTypeDef" on the fly, without resetting
2174:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         the ADCs.
2175:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
2176:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure
2177:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         "ADC_MultiModeTypeDef".
2178:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   To move back configuration from multimode to single mode, ADC must
2179:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         be reset (using function HAL_ADC_Init() ).
2180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc Master ADC handle
2181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param pMultimode Structure of ADC multimode configuration
2182:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status
2183:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
2184:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef *hadc, const ADC_MultiModeType
2185:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 5021              		.loc 1 2185 1 is_stmt 1 view -0
 5022              		.cfi_startproc
 5023              		@ args = 0, pretend = 0, frame = 104
 5024              		@ frame_needed = 0, uses_anonymous_args = 0
 5025              		@ link register save eliminated.
2186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 5026              		.loc 1 2186 3 view .LVU1582
2187:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5027              		.loc 1 2187 3 view .LVU1583
2188:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmp_hadc_slave;
 5028              		.loc 1 2188 3 view .LVU1584
2189:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_hadc_slave_conversion_on_going;
 5029              		.loc 1 2189 3 view .LVU1585
2190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2191:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
2192:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
ARM GAS  /tmp/cc2DBcx1.s 			page 274


 5030              		.loc 1 2192 3 view .LVU1586
2193:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE(pMultimode->Mode));
 5031              		.loc 1 2193 3 view .LVU1587
2194:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (pMultimode->Mode != ADC_MODE_INDEPENDENT)
 5032              		.loc 1 2194 3 view .LVU1588
2195:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
2196:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     assert_param(IS_ADC_DMA_ACCESS_MULTIMODE(pMultimode->DMAAccessMode));
 5033              		.loc 1 2196 5 view .LVU1589
2197:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     assert_param(IS_ADC_SAMPLING_DELAY(pMultimode->TwoSamplingDelay));
 5034              		.loc 1 2197 5 view .LVU1590
2198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
2199:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2200:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process locked */
2201:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 5035              		.loc 1 2201 3 view .LVU1591
 5036              		.loc 1 2201 3 view .LVU1592
 5037 0000 90F85420 		ldrb	r2, [r0, #84]	@ zero_extendqisi2
 5038 0004 012A     		cmp	r2, #1
 5039 0006 7ED0     		beq	.L368
2185:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 5040              		.loc 1 2185 1 is_stmt 0 discriminator 2 view .LVU1593
 5041 0008 10B4     		push	{r4}
 5042              	.LCFI36:
 5043              		.cfi_def_cfa_offset 4
 5044              		.cfi_offset 4, -4
 5045 000a 9BB0     		sub	sp, sp, #108
 5046              	.LCFI37:
 5047              		.cfi_def_cfa_offset 112
 5048 000c 0346     		mov	r3, r0
 5049              		.loc 1 2201 3 is_stmt 1 discriminator 2 view .LVU1594
 5050 000e 0122     		movs	r2, #1
 5051 0010 80F85420 		strb	r2, [r0, #84]
 5052              		.loc 1 2201 3 discriminator 2 view .LVU1595
2202:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2203:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Temporary handle minimum initialization */
2204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_ADC_RESET_HANDLE_STATE(&tmp_hadc_slave);
 5053              		.loc 1 2204 3 discriminator 2 view .LVU1596
 5054 0014 0022     		movs	r2, #0
 5055 0016 1692     		str	r2, [sp, #88]
2205:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   ADC_CLEAR_ERRORCODE(&tmp_hadc_slave);
 5056              		.loc 1 2205 3 discriminator 2 view .LVU1597
 5057 0018 1792     		str	r2, [sp, #92]
2206:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   ADC_MULTI_SLAVE(hadc, &tmp_hadc_slave);
 5058              		.loc 1 2207 3 discriminator 2 view .LVU1598
 5059 001a 0068     		ldr	r0, [r0]
 5060              	.LVL446:
 5061              		.loc 1 2207 3 is_stmt 0 discriminator 2 view .LVU1599
 5062 001c 3B4A     		ldr	r2, .L377
 5063 001e 9042     		cmp	r0, r2
 5064 0020 38D0     		beq	.L375
 5065 0022 0022     		movs	r2, #0
 5066 0024 0092     		str	r2, [sp]
 5067              	.L358:
2208:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2209:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (tmp_hadc_slave.Instance == NULL)
 5068              		.loc 1 2209 3 is_stmt 1 view .LVU1600
ARM GAS  /tmp/cc2DBcx1.s 			page 275


 5069              		.loc 1 2209 21 is_stmt 0 view .LVU1601
 5070 0026 009A     		ldr	r2, [sp]
 5071              		.loc 1 2209 6 view .LVU1602
 5072 0028 002A     		cmp	r2, #0
 5073 002a 37D0     		beq	.L376
2210:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
2211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
2212:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2213:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2214:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Process unlocked */
2215:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
2216:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2217:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     return HAL_ERROR;
2218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
2219:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2220:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2221:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2222:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
2223:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*  - Multimode DMA configuration                                           */
2224:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /*  - Multimode DMA mode                                                    */
2225:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_hadc_slave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmp_hadc_slave)->Instance);
 5074              		.loc 1 2225 3 is_stmt 1 view .LVU1603
 5075              	.LVL447:
 5076              	.LBB606:
 5077              	.LBI606:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5078              		.loc 2 6991 26 view .LVU1604
 5079              	.LBB607:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5080              		.loc 2 6993 3 view .LVU1605
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5081              		.loc 2 6993 12 is_stmt 0 view .LVU1606
 5082 002c 9268     		ldr	r2, [r2, #8]
 5083              	.LVL448:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5084              		.loc 2 6993 74 view .LVU1607
 5085 002e 12F00402 		ands	r2, r2, #4
 5086 0032 00D0     		beq	.L360
 5087 0034 0122     		movs	r2, #1
 5088              	.L360:
 5089              	.LVL449:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5090              		.loc 2 6993 74 view .LVU1608
 5091              	.LBE607:
 5092              	.LBE606:
2226:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 5093              		.loc 1 2226 3 is_stmt 1 view .LVU1609
 5094              	.LBB608:
 5095              	.LBI608:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5096              		.loc 2 6991 26 view .LVU1610
 5097              	.LBB609:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5098              		.loc 2 6993 3 view .LVU1611
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5099              		.loc 2 6993 12 is_stmt 0 view .LVU1612
 5100 0036 8068     		ldr	r0, [r0, #8]
ARM GAS  /tmp/cc2DBcx1.s 			page 276


 5101              	.LVL450:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5102              		.loc 2 6993 74 view .LVU1613
 5103 0038 10F0040F 		tst	r0, #4
 5104 003c 53D1     		bne	.L361
 5105              	.LVL451:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5106              		.loc 2 6993 74 view .LVU1614
 5107              	.LBE609:
 5108              	.LBE608:
2227:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       && (tmp_hadc_slave_conversion_on_going == 0UL))
 5109              		.loc 1 2227 7 view .LVU1615
 5110 003e 002A     		cmp	r2, #0
 5111 0040 51D1     		bne	.L361
2228:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
2229:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Pointer to the common control register */
2230:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
 5112              		.loc 1 2230 5 is_stmt 1 view .LVU1616
 5113              	.LVL452:
2231:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2232:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* If multimode is selected, configure all multimode parameters.          */
2233:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Otherwise, reset multimode parameters (can be used in case of          */
2234:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* transition from multimode to independent mode).                        */
2235:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     if (pMultimode->Mode != ADC_MODE_INDEPENDENT)
 5114              		.loc 1 2235 5 view .LVU1617
 5115              		.loc 1 2235 19 is_stmt 0 view .LVU1618
 5116 0042 0A68     		ldr	r2, [r1]
 5117              	.LVL453:
 5118              		.loc 1 2235 8 view .LVU1619
 5119 0044 002A     		cmp	r2, #0
 5120 0046 32D0     		beq	.L362
2236:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
2237:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG,
 5121              		.loc 1 2237 7 is_stmt 1 view .LVU1620
 5122 0048 314C     		ldr	r4, .L377+4
 5123 004a A268     		ldr	r2, [r4, #8]
 5124 004c 22F46042 		bic	r2, r2, #57344
 5125 0050 4868     		ldr	r0, [r1, #4]
 5126 0052 93F834C0 		ldrb	ip, [r3, #52]	@ zero_extendqisi2
 5127 0056 40EA4C30 		orr	r0, r0, ip, lsl #13
 5128 005a 0243     		orrs	r2, r2, r0
 5129 005c A260     		str	r2, [r4, #8]
2238:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                  pMultimode->DMAAccessMode |
2239:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                  ADC_CCR_MULTI_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
2240:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2241:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:                */
2242:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                              */
2243:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*  - Multimode delay                                                       */
2244:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*    Note: Delay range depends on selected resolution:                     */
2245:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*      from 1 to 12 clock cycles for 12 bits                               */
2246:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*      from 1 to 10 clock cycles for 10 bits,                              */
2247:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*      from 1 to 8 clock cycles for 8 bits                                 */
2248:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*      from 1 to 6 clock cycles for 6 bits                                 */
2249:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*    If a higher delay is selected, it will be clipped to maximum delay    */
2250:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*    range                                                                 */
2251:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 5130              		.loc 1 2251 7 view .LVU1621
ARM GAS  /tmp/cc2DBcx1.s 			page 277


 5131              	.LVL454:
 5132              	.LBB610:
 5133              	.LBI610:
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5134              		.loc 2 6869 26 view .LVU1622
 5135              	.LBB611:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5136              		.loc 2 6871 3 view .LVU1623
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5137              		.loc 2 6871 12 is_stmt 0 view .LVU1624
 5138 005e 2B4A     		ldr	r2, .L377
 5139 0060 9268     		ldr	r2, [r2, #8]
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5140              		.loc 2 6871 68 view .LVU1625
 5141 0062 12F00102 		ands	r2, r2, #1
 5142 0066 00D0     		beq	.L363
 5143 0068 0122     		movs	r2, #1
 5144              	.L363:
 5145              	.LVL455:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5146              		.loc 2 6871 68 view .LVU1626
 5147              	.LBE611:
 5148              	.LBE610:
 5149              	.LBB612:
 5150              	.LBI612:
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5151              		.loc 2 6869 26 is_stmt 1 view .LVU1627
 5152              	.LBB613:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5153              		.loc 2 6871 3 view .LVU1628
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5154              		.loc 2 6871 12 is_stmt 0 view .LVU1629
 5155 006a 2A48     		ldr	r0, .L377+8
 5156 006c 8068     		ldr	r0, [r0, #8]
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5157              		.loc 2 6871 68 view .LVU1630
 5158 006e 10F00100 		ands	r0, r0, #1
 5159 0072 00D0     		beq	.L364
 5160 0074 0120     		movs	r0, #1
 5161              	.L364:
 5162              	.LVL456:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5163              		.loc 2 6871 68 view .LVU1631
 5164              	.LBE613:
 5165              	.LBE612:
 5166              		.loc 1 2251 10 view .LVU1632
 5167 0076 0243     		orrs	r2, r0, r2
 5168 0078 41D1     		bne	.L369
2252:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
2253:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         MODIFY_REG(tmpADC_Common->CCR,
 5169              		.loc 1 2253 9 is_stmt 1 view .LVU1633
 5170 007a 254C     		ldr	r4, .L377+4
 5171 007c A268     		ldr	r2, [r4, #8]
 5172 007e 22F47162 		bic	r2, r2, #3856
 5173 0082 22F00F02 		bic	r2, r2, #15
 5174 0086 0868     		ldr	r0, [r1]
 5175 0088 8968     		ldr	r1, [r1, #8]
ARM GAS  /tmp/cc2DBcx1.s 			page 278


 5176              	.LVL457:
 5177              		.loc 1 2253 9 is_stmt 0 view .LVU1634
 5178 008a 0143     		orrs	r1, r1, r0
 5179 008c 0A43     		orrs	r2, r2, r1
 5180 008e A260     		str	r2, [r4, #8]
2186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5181              		.loc 1 2186 21 view .LVU1635
 5182 0090 0020     		movs	r0, #0
 5183 0092 2DE0     		b	.L365
 5184              	.LVL458:
 5185              	.L375:
2207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 5186              		.loc 1 2207 3 discriminator 1 view .LVU1636
 5187 0094 02F58072 		add	r2, r2, #256
 5188 0098 0092     		str	r2, [sp]
 5189 009a C4E7     		b	.L358
 5190              	.L376:
2212:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 5191              		.loc 1 2212 5 is_stmt 1 view .LVU1637
 5192 009c 9A6D     		ldr	r2, [r3, #88]
 5193 009e 42F02002 		orr	r2, r2, #32
 5194 00a2 9A65     		str	r2, [r3, #88]
2215:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 5195              		.loc 1 2215 5 view .LVU1638
2215:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 5196              		.loc 1 2215 5 view .LVU1639
 5197 00a4 0022     		movs	r2, #0
 5198 00a6 83F85420 		strb	r2, [r3, #84]
2215:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 5199              		.loc 1 2215 5 view .LVU1640
2217:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 5200              		.loc 1 2217 5 view .LVU1641
2217:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
 5201              		.loc 1 2217 12 is_stmt 0 view .LVU1642
 5202 00aa 0120     		movs	r0, #1
 5203 00ac 23E0     		b	.L356
 5204              	.LVL459:
 5205              	.L362:
2254:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                    ADC_CCR_DUAL |
2255:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                    ADC_CCR_DELAY,
2256:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                    pMultimode->Mode |
2257:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                    pMultimode->TwoSamplingDelay
2258:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****                   );
2259:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
2260:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
2261:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     else /* ADC_MODE_INDEPENDENT */
2262:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     {
2263:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG);
 5206              		.loc 1 2263 7 is_stmt 1 view .LVU1643
 5207 00ae 1849     		ldr	r1, .L377+4
 5208              	.LVL460:
 5209              		.loc 1 2263 7 is_stmt 0 view .LVU1644
 5210 00b0 8A68     		ldr	r2, [r1, #8]
 5211 00b2 22F46042 		bic	r2, r2, #57344
 5212 00b6 8A60     		str	r2, [r1, #8]
2264:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2265:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:                */
ARM GAS  /tmp/cc2DBcx1.s 			page 279


2266:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                              */
2267:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       /*  - Multimode delay                                                       */
2268:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 5213              		.loc 1 2268 7 is_stmt 1 view .LVU1645
 5214              	.LVL461:
 5215              	.LBB614:
 5216              	.LBI614:
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5217              		.loc 2 6869 26 view .LVU1646
 5218              	.LBB615:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5219              		.loc 2 6871 3 view .LVU1647
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5220              		.loc 2 6871 12 is_stmt 0 view .LVU1648
 5221 00b8 144A     		ldr	r2, .L377
 5222 00ba 9268     		ldr	r2, [r2, #8]
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5223              		.loc 2 6871 68 view .LVU1649
 5224 00bc 12F00102 		ands	r2, r2, #1
 5225 00c0 00D0     		beq	.L366
 5226 00c2 0122     		movs	r2, #1
 5227              	.L366:
 5228              	.LVL462:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5229              		.loc 2 6871 68 view .LVU1650
 5230              	.LBE615:
 5231              	.LBE614:
 5232              	.LBB616:
 5233              	.LBI616:
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5234              		.loc 2 6869 26 is_stmt 1 view .LVU1651
 5235              	.LBB617:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5236              		.loc 2 6871 3 view .LVU1652
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5237              		.loc 2 6871 12 is_stmt 0 view .LVU1653
 5238 00c4 1349     		ldr	r1, .L377+8
 5239 00c6 8968     		ldr	r1, [r1, #8]
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5240              		.loc 2 6871 68 view .LVU1654
 5241 00c8 11F00101 		ands	r1, r1, #1
 5242 00cc 00D0     		beq	.L367
 5243 00ce 0121     		movs	r1, #1
 5244              	.L367:
 5245              	.LVL463:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5246              		.loc 2 6871 68 view .LVU1655
 5247              	.LBE617:
 5248              	.LBE616:
 5249              		.loc 1 2268 10 view .LVU1656
 5250 00d0 0A43     		orrs	r2, r1, r2
 5251 00d2 16D1     		bne	.L370
2269:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       {
2270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****         CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DUAL | ADC_CCR_DELAY);
 5252              		.loc 1 2270 9 is_stmt 1 view .LVU1657
 5253 00d4 0E49     		ldr	r1, .L377+4
 5254 00d6 8A68     		ldr	r2, [r1, #8]
ARM GAS  /tmp/cc2DBcx1.s 			page 280


 5255 00d8 22F47162 		bic	r2, r2, #3856
 5256 00dc 22F00F02 		bic	r2, r2, #15
 5257 00e0 8A60     		str	r2, [r1, #8]
2186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5258              		.loc 1 2186 21 is_stmt 0 view .LVU1658
 5259 00e2 0020     		movs	r0, #0
 5260 00e4 04E0     		b	.L365
 5261              	.LVL464:
 5262              	.L361:
2271:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       }
2272:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     }
2273:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
2274:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* If one of the ADC sharing the same common group is enabled, no update    */
2275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* could be done on neither of the multimode structure parameters.          */
2276:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   else
2277:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
2278:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
2279:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 5263              		.loc 1 2279 5 is_stmt 1 view .LVU1659
 5264 00e6 9A6D     		ldr	r2, [r3, #88]
 5265              	.LVL465:
 5266              		.loc 1 2279 5 is_stmt 0 view .LVU1660
 5267 00e8 42F02002 		orr	r2, r2, #32
 5268 00ec 9A65     		str	r2, [r3, #88]
2280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2281:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 5269              		.loc 1 2281 5 is_stmt 1 view .LVU1661
 5270              	.LVL466:
 5271              		.loc 1 2281 20 is_stmt 0 view .LVU1662
 5272 00ee 0120     		movs	r0, #1
 5273              	.LVL467:
 5274              	.L365:
2282:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
2283:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2284:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Process unlocked */
2285:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 5275              		.loc 1 2285 3 is_stmt 1 view .LVU1663
 5276              		.loc 1 2285 3 view .LVU1664
 5277 00f0 0022     		movs	r2, #0
 5278 00f2 83F85420 		strb	r2, [r3, #84]
 5279              		.loc 1 2285 3 view .LVU1665
2286:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2287:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Return function status */
2288:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return tmp_hal_status;
 5280              		.loc 1 2288 3 view .LVU1666
 5281              	.LVL468:
 5282              	.L356:
2289:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 5283              		.loc 1 2289 1 is_stmt 0 view .LVU1667
 5284 00f6 1BB0     		add	sp, sp, #108
 5285              	.LCFI38:
 5286              		.cfi_remember_state
 5287              		.cfi_def_cfa_offset 4
 5288              		@ sp needed
 5289 00f8 5DF8044B 		ldr	r4, [sp], #4
 5290              	.LCFI39:
 5291              		.cfi_restore 4
ARM GAS  /tmp/cc2DBcx1.s 			page 281


 5292              		.cfi_def_cfa_offset 0
 5293 00fc 7047     		bx	lr
 5294              	.LVL469:
 5295              	.L369:
 5296              	.LCFI40:
 5297              		.cfi_restore_state
2186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5298              		.loc 1 2186 21 view .LVU1668
 5299 00fe 0020     		movs	r0, #0
 5300 0100 F6E7     		b	.L365
 5301              	.LVL470:
 5302              	.L370:
2186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5303              		.loc 1 2186 21 view .LVU1669
 5304 0102 0020     		movs	r0, #0
 5305 0104 F4E7     		b	.L365
 5306              	.LVL471:
 5307              	.L368:
 5308              	.LCFI41:
 5309              		.cfi_def_cfa_offset 0
 5310              		.cfi_restore 4
2201:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
 5311              		.loc 1 2201 3 view .LVU1670
 5312 0106 0220     		movs	r0, #2
 5313              	.LVL472:
 5314              		.loc 1 2289 1 view .LVU1671
 5315 0108 7047     		bx	lr
 5316              	.L378:
 5317 010a 00BF     		.align	2
 5318              	.L377:
 5319 010c 00800242 		.word	1107460096
 5320 0110 00830242 		.word	1107460864
 5321 0114 00810242 		.word	1107460352
 5322              		.cfi_endproc
 5323              	.LFE383:
 5325              		.section	.text.HAL_ADCEx_EnableInjectedQueue,"ax",%progbits
 5326              		.align	1
 5327              		.global	HAL_ADCEx_EnableInjectedQueue
 5328              		.syntax unified
 5329              		.thumb
 5330              		.thumb_func
 5331              		.fpu fpv4-sp-d16
 5333              	HAL_ADCEx_EnableInjectedQueue:
 5334              	.LVL473:
 5335              	.LFB384:
2290:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2291:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2292:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
2293:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Enable Injected Queue
2294:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   This function resets CFGR register JQDIS bit in order to enable the
2295:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
2296:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regular nor injected
2297:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         conversion is ongoing.
2298:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle
2299:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status
2300:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
2301:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnableInjectedQueue(ADC_HandleTypeDef *hadc)
ARM GAS  /tmp/cc2DBcx1.s 			page 282


2302:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 5336              		.loc 1 2302 1 is_stmt 1 view -0
 5337              		.cfi_startproc
 5338              		@ args = 0, pretend = 0, frame = 0
 5339              		@ frame_needed = 0, uses_anonymous_args = 0
 5340              		@ link register save eliminated.
2303:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 5341              		.loc 1 2303 3 view .LVU1673
2304:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 5342              		.loc 1 2304 3 view .LVU1674
2305:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 5343              		.loc 1 2305 3 view .LVU1675
2306:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2307:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
2308:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 5344              		.loc 1 2308 3 view .LVU1676
2309:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2310:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 5345              		.loc 1 2310 3 view .LVU1677
 5346              		.loc 1 2310 79 is_stmt 0 view .LVU1678
 5347 0000 0168     		ldr	r1, [r0]
 5348              	.LVL474:
 5349              	.LBB618:
 5350              	.LBI618:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5351              		.loc 2 6991 26 is_stmt 1 view .LVU1679
 5352              	.LBB619:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5353              		.loc 2 6993 3 view .LVU1680
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5354              		.loc 2 6993 12 is_stmt 0 view .LVU1681
 5355 0002 8B68     		ldr	r3, [r1, #8]
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5356              		.loc 2 6993 74 view .LVU1682
 5357 0004 13F00403 		ands	r3, r3, #4
 5358 0008 00D0     		beq	.L380
 5359 000a 0123     		movs	r3, #1
 5360              	.L380:
 5361              	.LVL475:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5362              		.loc 2 6993 74 view .LVU1683
 5363              	.LBE619:
 5364              	.LBE618:
2311:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 5365              		.loc 1 2311 3 is_stmt 1 view .LVU1684
 5366              	.LBB620:
 5367              	.LBI620:
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5368              		.loc 2 7217 26 view .LVU1685
 5369              	.LBB621:
 5370              		.loc 2 7219 3 view .LVU1686
 5371              		.loc 2 7219 12 is_stmt 0 view .LVU1687
 5372 000c 8A68     		ldr	r2, [r1, #8]
 5373              		.loc 2 7219 76 view .LVU1688
 5374 000e 12F00802 		ands	r2, r2, #8
 5375 0012 00D0     		beq	.L381
 5376 0014 0122     		movs	r2, #1
ARM GAS  /tmp/cc2DBcx1.s 			page 283


 5377              	.L381:
 5378              	.LVL476:
 5379              		.loc 2 7219 76 view .LVU1689
 5380              	.LBE621:
 5381              	.LBE620:
2312:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2313:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going */
2314:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 5382              		.loc 1 2314 3 is_stmt 1 view .LVU1690
 5383              		.loc 1 2314 6 is_stmt 0 view .LVU1691
 5384 0016 53B9     		cbnz	r3, .L383
2315:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 5385              		.loc 1 2315 7 view .LVU1692
 5386 0018 5AB9     		cbnz	r2, .L384
2316:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****      )
2317:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
2318:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 5387              		.loc 1 2318 5 is_stmt 1 view .LVU1693
 5388 001a CB68     		ldr	r3, [r1, #12]
 5389              	.LVL477:
 5390              		.loc 1 2318 5 is_stmt 0 view .LVU1694
 5391 001c 23F00043 		bic	r3, r3, #-2147483648
 5392 0020 CB60     		str	r3, [r1, #12]
2319:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2320:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     /* Update state, clear previous result related to injected queue overflow */
2321:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
 5393              		.loc 1 2321 5 is_stmt 1 view .LVU1695
 5394 0022 836D     		ldr	r3, [r0, #88]
 5395 0024 23F48043 		bic	r3, r3, #16384
 5396 0028 8365     		str	r3, [r0, #88]
2322:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2323:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 5397              		.loc 1 2323 5 view .LVU1696
 5398              	.LVL478:
 5399              		.loc 1 2323 20 is_stmt 0 view .LVU1697
 5400 002a 0020     		movs	r0, #0
 5401              	.LVL479:
 5402              		.loc 1 2323 20 view .LVU1698
 5403 002c 7047     		bx	lr
 5404              	.LVL480:
 5405              	.L383:
2324:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
2325:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   else
2326:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
2327:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 5406              		.loc 1 2327 20 view .LVU1699
 5407 002e 0120     		movs	r0, #1
 5408              	.LVL481:
 5409              		.loc 1 2327 20 view .LVU1700
 5410 0030 7047     		bx	lr
 5411              	.LVL482:
 5412              	.L384:
 5413              		.loc 1 2327 20 view .LVU1701
 5414 0032 0120     		movs	r0, #1
 5415              	.LVL483:
2328:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
2329:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cc2DBcx1.s 			page 284


2330:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return tmp_hal_status;
 5416              		.loc 1 2330 3 is_stmt 1 view .LVU1702
2331:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 5417              		.loc 1 2331 1 is_stmt 0 view .LVU1703
 5418 0034 7047     		bx	lr
 5419              		.cfi_endproc
 5420              	.LFE384:
 5422              		.section	.text.HAL_ADCEx_DisableInjectedQueue,"ax",%progbits
 5423              		.align	1
 5424              		.global	HAL_ADCEx_DisableInjectedQueue
 5425              		.syntax unified
 5426              		.thumb
 5427              		.thumb_func
 5428              		.fpu fpv4-sp-d16
 5430              	HAL_ADCEx_DisableInjectedQueue:
 5431              	.LVL484:
 5432              	.LFB385:
2332:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2333:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
2334:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Disable Injected Queue
2335:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   This function sets CFGR register JQDIS bit in order to disable the
2336:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
2337:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regular nor injected
2338:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         conversion is ongoing.
2339:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle
2340:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status
2341:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
2342:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableInjectedQueue(ADC_HandleTypeDef *hadc)
2343:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 5433              		.loc 1 2343 1 is_stmt 1 view -0
 5434              		.cfi_startproc
 5435              		@ args = 0, pretend = 0, frame = 0
 5436              		@ frame_needed = 0, uses_anonymous_args = 0
 5437              		@ link register save eliminated.
2344:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 5438              		.loc 1 2344 3 view .LVU1705
2345:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 5439              		.loc 1 2345 3 view .LVU1706
2346:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 5440              		.loc 1 2346 3 view .LVU1707
2347:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2348:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
2349:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 5441              		.loc 1 2349 3 view .LVU1708
2350:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2351:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 5442              		.loc 1 2351 3 view .LVU1709
 5443              		.loc 1 2351 79 is_stmt 0 view .LVU1710
 5444 0000 0168     		ldr	r1, [r0]
 5445              	.LVL485:
 5446              	.LBB622:
 5447              	.LBI622:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5448              		.loc 2 6991 26 is_stmt 1 view .LVU1711
 5449              	.LBB623:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5450              		.loc 2 6993 3 view .LVU1712
ARM GAS  /tmp/cc2DBcx1.s 			page 285


6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5451              		.loc 2 6993 12 is_stmt 0 view .LVU1713
 5452 0002 8B68     		ldr	r3, [r1, #8]
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5453              		.loc 2 6993 74 view .LVU1714
 5454 0004 13F00403 		ands	r3, r3, #4
 5455 0008 00D0     		beq	.L386
 5456 000a 0123     		movs	r3, #1
 5457              	.L386:
 5458              	.LVL486:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5459              		.loc 2 6993 74 view .LVU1715
 5460              	.LBE623:
 5461              	.LBE622:
2352:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 5462              		.loc 1 2352 3 is_stmt 1 view .LVU1716
 5463              	.LBB624:
 5464              	.LBI624:
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5465              		.loc 2 7217 26 view .LVU1717
 5466              	.LBB625:
 5467              		.loc 2 7219 3 view .LVU1718
 5468              		.loc 2 7219 12 is_stmt 0 view .LVU1719
 5469 000c 8A68     		ldr	r2, [r1, #8]
 5470              		.loc 2 7219 76 view .LVU1720
 5471 000e 12F00802 		ands	r2, r2, #8
 5472 0012 00D0     		beq	.L387
 5473 0014 0122     		movs	r2, #1
 5474              	.L387:
 5475              	.LVL487:
 5476              		.loc 2 7219 76 view .LVU1721
 5477              	.LBE625:
 5478              	.LBE624:
2353:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2354:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going */
2355:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 5479              		.loc 1 2355 3 is_stmt 1 view .LVU1722
 5480              		.loc 1 2355 6 is_stmt 0 view .LVU1723
 5481 0016 53B9     		cbnz	r3, .L389
2356:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 5482              		.loc 1 2356 7 view .LVU1724
 5483 0018 5AB9     		cbnz	r2, .L390
2357:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****      )
2358:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
2359:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     LL_ADC_INJ_SetQueueMode(hadc->Instance, LL_ADC_INJ_QUEUE_DISABLE);
 5484              		.loc 1 2359 5 is_stmt 1 view .LVU1725
 5485              	.LVL488:
 5486              	.LBB626:
 5487              	.LBI626:
5149:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5488              		.loc 2 5149 22 view .LVU1726
 5489              	.LBB627:
5151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5490              		.loc 2 5151 3 view .LVU1727
 5491 001a CB68     		ldr	r3, [r1, #12]
 5492              	.LVL489:
5151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
ARM GAS  /tmp/cc2DBcx1.s 			page 286


 5493              		.loc 2 5151 3 is_stmt 0 view .LVU1728
 5494 001c 23F00043 		bic	r3, r3, #-2147483648
 5495 0020 23F40013 		bic	r3, r3, #2097152
 5496 0024 43F00043 		orr	r3, r3, #-2147483648
 5497 0028 CB60     		str	r3, [r1, #12]
 5498              	.LVL490:
5151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5499              		.loc 2 5151 3 view .LVU1729
 5500              	.LBE627:
 5501              	.LBE626:
2360:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 5502              		.loc 1 2360 5 is_stmt 1 view .LVU1730
 5503              		.loc 1 2360 20 is_stmt 0 view .LVU1731
 5504 002a 0020     		movs	r0, #0
 5505              	.LVL491:
 5506              		.loc 1 2360 20 view .LVU1732
 5507 002c 7047     		bx	lr
 5508              	.LVL492:
 5509              	.L389:
2361:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
2362:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   else
2363:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
2364:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 5510              		.loc 1 2364 20 view .LVU1733
 5511 002e 0120     		movs	r0, #1
 5512              	.LVL493:
 5513              		.loc 1 2364 20 view .LVU1734
 5514 0030 7047     		bx	lr
 5515              	.LVL494:
 5516              	.L390:
 5517              		.loc 1 2364 20 view .LVU1735
 5518 0032 0120     		movs	r0, #1
 5519              	.LVL495:
2365:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
2366:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2367:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return tmp_hal_status;
 5520              		.loc 1 2367 3 is_stmt 1 view .LVU1736
2368:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 5521              		.loc 1 2368 1 is_stmt 0 view .LVU1737
 5522 0034 7047     		bx	lr
 5523              		.cfi_endproc
 5524              	.LFE385:
 5526              		.section	.text.HAL_ADCEx_DisableVoltageRegulator,"ax",%progbits
 5527              		.align	1
 5528              		.global	HAL_ADCEx_DisableVoltageRegulator
 5529              		.syntax unified
 5530              		.thumb
 5531              		.thumb_func
 5532              		.fpu fpv4-sp-d16
 5534              	HAL_ADCEx_DisableVoltageRegulator:
 5535              	.LVL496:
 5536              	.LFB386:
2369:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2370:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
2371:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Disable ADC voltage regulator.
2372:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   Disabling voltage regulator allows to save power. This operation can
2373:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         be carried out only when ADC is disabled.
ARM GAS  /tmp/cc2DBcx1.s 			page 287


2374:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   To enable again the voltage regulator, the user is expected to
2375:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API.
2376:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle
2377:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status
2378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
2379:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableVoltageRegulator(ADC_HandleTypeDef *hadc)
2380:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 5537              		.loc 1 2380 1 is_stmt 1 view -0
 5538              		.cfi_startproc
 5539              		@ args = 0, pretend = 0, frame = 0
 5540              		@ frame_needed = 0, uses_anonymous_args = 0
 5541              		@ link register save eliminated.
2381:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 5542              		.loc 1 2381 3 view .LVU1739
2382:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2383:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
2384:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 5543              		.loc 1 2384 3 view .LVU1740
2385:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2386:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
2387:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 5544              		.loc 1 2387 3 view .LVU1741
 5545              		.loc 1 2387 28 is_stmt 0 view .LVU1742
 5546 0000 0368     		ldr	r3, [r0]
 5547              	.LVL497:
 5548              	.LBB628:
 5549              	.LBI628:
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5550              		.loc 2 6869 26 is_stmt 1 view .LVU1743
 5551              	.LBB629:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5552              		.loc 2 6871 3 view .LVU1744
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5553              		.loc 2 6871 12 is_stmt 0 view .LVU1745
 5554 0002 9A68     		ldr	r2, [r3, #8]
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5555              		.loc 2 6871 68 view .LVU1746
 5556 0004 12F0010F 		tst	r2, #1
 5557 0008 07D1     		bne	.L393
 5558              	.LVL498:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5559              		.loc 2 6871 68 view .LVU1747
 5560              	.LBE629:
 5561              	.LBE628:
2388:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
2389:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     LL_ADC_DisableInternalRegulator(hadc->Instance);
 5562              		.loc 1 2389 5 is_stmt 1 view .LVU1748
 5563              	.LBB630:
 5564              	.LBI630:
6798:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5565              		.loc 2 6798 22 view .LVU1749
 5566              	.LBB631:
6800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5567              		.loc 2 6800 3 view .LVU1750
 5568 000a 9A68     		ldr	r2, [r3, #8]
 5569 000c 22F01042 		bic	r2, r2, #-1879048192
 5570 0010 22F03F02 		bic	r2, r2, #63
ARM GAS  /tmp/cc2DBcx1.s 			page 288


 5571 0014 9A60     		str	r2, [r3, #8]
 5572              	.LVL499:
6800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5573              		.loc 2 6800 3 is_stmt 0 view .LVU1751
 5574              	.LBE631:
 5575              	.LBE630:
2390:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 5576              		.loc 1 2390 5 is_stmt 1 view .LVU1752
 5577              		.loc 1 2390 20 is_stmt 0 view .LVU1753
 5578 0016 0020     		movs	r0, #0
 5579              	.LVL500:
 5580              		.loc 1 2390 20 view .LVU1754
 5581 0018 7047     		bx	lr
 5582              	.LVL501:
 5583              	.L393:
2391:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
2392:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   else
2393:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
2394:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 5584              		.loc 1 2394 20 view .LVU1755
 5585 001a 0120     		movs	r0, #1
 5586              	.LVL502:
2395:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
2396:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2397:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return tmp_hal_status;
 5587              		.loc 1 2397 3 is_stmt 1 view .LVU1756
2398:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 5588              		.loc 1 2398 1 is_stmt 0 view .LVU1757
 5589 001c 7047     		bx	lr
 5590              		.cfi_endproc
 5591              	.LFE386:
 5593              		.section	.text.HAL_ADCEx_EnterADCDeepPowerDownMode,"ax",%progbits
 5594              		.align	1
 5595              		.global	HAL_ADCEx_EnterADCDeepPowerDownMode
 5596              		.syntax unified
 5597              		.thumb
 5598              		.thumb_func
 5599              		.fpu fpv4-sp-d16
 5601              	HAL_ADCEx_EnterADCDeepPowerDownMode:
 5602              	.LVL503:
 5603              	.LFB387:
2399:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2400:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** /**
2401:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @brief  Enter ADC deep-power-down mode
2402:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   This mode is achieved in setting DEEPPWD bit and allows to save power
2403:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         in reducing leakage currents. It is particularly interesting before
2404:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         entering stop modes.
2405:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   Setting DEEPPWD automatically clears ADVREGEN bit and disables the
2406:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         ADC voltage regulator. This means that this API encompasses
2407:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         HAL_ADCEx_DisableVoltageRegulator(). Additionally, the internal
2408:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         calibration is lost.
2409:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @note   To exit the ADC deep-power-down mode, the user is expected to
2410:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API as well as to relaunch a calibration
2411:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         with HAL_ADCEx_Calibration_Start() API or to re-apply a previously
2412:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   *         saved calibration factor.
2413:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @param hadc ADC handle
2414:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   * @retval HAL status
ARM GAS  /tmp/cc2DBcx1.s 			page 289


2415:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   */
2416:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnterADCDeepPowerDownMode(ADC_HandleTypeDef *hadc)
2417:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** {
 5604              		.loc 1 2417 1 is_stmt 1 view -0
 5605              		.cfi_startproc
 5606              		@ args = 0, pretend = 0, frame = 0
 5607              		@ frame_needed = 0, uses_anonymous_args = 0
 5608              		@ link register save eliminated.
2418:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 5609              		.loc 1 2418 3 view .LVU1759
2419:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2420:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Check the parameters */
2421:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 5610              		.loc 1 2421 3 view .LVU1760
2422:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2423:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
2424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 5611              		.loc 1 2424 3 view .LVU1761
 5612              		.loc 1 2424 28 is_stmt 0 view .LVU1762
 5613 0000 0268     		ldr	r2, [r0]
 5614              	.LVL504:
 5615              	.LBB632:
 5616              	.LBI632:
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5617              		.loc 2 6869 26 is_stmt 1 view .LVU1763
 5618              	.LBB633:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5619              		.loc 2 6871 3 view .LVU1764
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5620              		.loc 2 6871 12 is_stmt 0 view .LVU1765
 5621 0002 9368     		ldr	r3, [r2, #8]
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5622              		.loc 2 6871 68 view .LVU1766
 5623 0004 13F0010F 		tst	r3, #1
 5624 0008 09D1     		bne	.L396
 5625              	.LVL505:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5626              		.loc 2 6871 68 view .LVU1767
 5627              	.LBE633:
 5628              	.LBE632:
2425:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
2426:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     LL_ADC_EnableDeepPowerDown(hadc->Instance);
 5629              		.loc 1 2426 5 is_stmt 1 view .LVU1768
 5630              	.LBB634:
 5631              	.LBI634:
6723:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5632              		.loc 2 6723 22 view .LVU1769
 5633              	.LBB635:
6728:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5634              		.loc 2 6728 3 view .LVU1770
 5635 000a 9368     		ldr	r3, [r2, #8]
 5636 000c 23F02043 		bic	r3, r3, #-1610612736
 5637 0010 23F03F03 		bic	r3, r3, #63
 5638 0014 43F00053 		orr	r3, r3, #536870912
 5639 0018 9360     		str	r3, [r2, #8]
 5640              	.LVL506:
6728:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
ARM GAS  /tmp/cc2DBcx1.s 			page 290


 5641              		.loc 2 6728 3 is_stmt 0 view .LVU1771
 5642              	.LBE635:
 5643              	.LBE634:
2427:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 5644              		.loc 1 2427 5 is_stmt 1 view .LVU1772
 5645              		.loc 1 2427 20 is_stmt 0 view .LVU1773
 5646 001a 0020     		movs	r0, #0
 5647              	.LVL507:
 5648              		.loc 1 2427 20 view .LVU1774
 5649 001c 7047     		bx	lr
 5650              	.LVL508:
 5651              	.L396:
2428:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
2429:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   else
2430:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   {
2431:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 5652              		.loc 1 2431 20 view .LVU1775
 5653 001e 0120     		movs	r0, #1
 5654              	.LVL509:
2432:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   }
2433:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** 
2434:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c ****   return tmp_hal_status;
 5655              		.loc 1 2434 3 is_stmt 1 view .LVU1776
2435:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c **** }
 5656              		.loc 1 2435 1 is_stmt 0 view .LVU1777
 5657 0020 7047     		bx	lr
 5658              		.cfi_endproc
 5659              	.LFE387:
 5661              		.text
 5662              	.Letext0:
 5663              		.file 4 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 5664              		.file 5 "Drivers/CMSIS/Device/ST/STM32H5xx/Include/stm32h533xx.h"
 5665              		.file 6 "Drivers/CMSIS/Device/ST/STM32H5xx/Include/stm32h5xx.h"
 5666              		.file 7 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_def.h"
 5667              		.file 8 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_dma.h"
 5668              		.file 9 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_dma_ex.h"
 5669              		.file 10 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_adc.h"
 5670              		.file 11 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_adc_ex.h"
 5671              		.file 12 "Drivers/CMSIS/Device/ST/STM32H5xx/Include/system_stm32h5xx.h"
 5672              		.file 13 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal.h"
ARM GAS  /tmp/cc2DBcx1.s 			page 291


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h5xx_hal_adc_ex.c
     /tmp/cc2DBcx1.s:18     .text.HAL_ADCEx_Calibration_Start:0000000000000000 $t
     /tmp/cc2DBcx1.s:27     .text.HAL_ADCEx_Calibration_Start:0000000000000000 HAL_ADCEx_Calibration_Start
     /tmp/cc2DBcx1.s:189    .text.HAL_ADCEx_Calibration_Start:0000000000000098 $d
     /tmp/cc2DBcx1.s:194    .text.HAL_ADCEx_Calibration_GetValue:0000000000000000 $t
     /tmp/cc2DBcx1.s:201    .text.HAL_ADCEx_Calibration_GetValue:0000000000000000 HAL_ADCEx_Calibration_GetValue
     /tmp/cc2DBcx1.s:242    .text.HAL_ADCEx_Calibration_SetValue:0000000000000000 $t
     /tmp/cc2DBcx1.s:249    .text.HAL_ADCEx_Calibration_SetValue:0000000000000000 HAL_ADCEx_Calibration_SetValue
     /tmp/cc2DBcx1.s:427    .text.HAL_ADCEx_InjectedStart:0000000000000000 $t
     /tmp/cc2DBcx1.s:434    .text.HAL_ADCEx_InjectedStart:0000000000000000 HAL_ADCEx_InjectedStart
     /tmp/cc2DBcx1.s:676    .text.HAL_ADCEx_InjectedStart:00000000000000e8 $d
     /tmp/cc2DBcx1.s:682    .text.HAL_ADCEx_InjectedStop:0000000000000000 $t
     /tmp/cc2DBcx1.s:689    .text.HAL_ADCEx_InjectedStop:0000000000000000 HAL_ADCEx_InjectedStop
     /tmp/cc2DBcx1.s:789    .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 $t
     /tmp/cc2DBcx1.s:796    .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 HAL_ADCEx_InjectedPollForConversion
     /tmp/cc2DBcx1.s:1081   .text.HAL_ADCEx_InjectedPollForConversion:00000000000000f8 $d
     /tmp/cc2DBcx1.s:1087   .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 $t
     /tmp/cc2DBcx1.s:1094   .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 HAL_ADCEx_InjectedStart_IT
     /tmp/cc2DBcx1.s:1380   .text.HAL_ADCEx_InjectedStart_IT:000000000000012c $d
     /tmp/cc2DBcx1.s:1386   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 $t
     /tmp/cc2DBcx1.s:1393   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 HAL_ADCEx_InjectedStop_IT
     /tmp/cc2DBcx1.s:1498   .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 $t
     /tmp/cc2DBcx1.s:1505   .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 HAL_ADCEx_MultiModeStart_DMA
     /tmp/cc2DBcx1.s:1863   .text.HAL_ADCEx_MultiModeStart_DMA:000000000000014c $d
     /tmp/cc2DBcx1.s:1872   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 $t
     /tmp/cc2DBcx1.s:1879   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 HAL_ADCEx_MultiModeStop_DMA
     /tmp/cc2DBcx1.s:2213   .text.HAL_ADCEx_MultiModeStop_DMA:000000000000011c $d
     /tmp/cc2DBcx1.s:2218   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 $t
     /tmp/cc2DBcx1.s:2225   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 HAL_ADCEx_MultiModeGetValue
     /tmp/cc2DBcx1.s:2247   .text.HAL_ADCEx_MultiModeGetValue:0000000000000008 $d
     /tmp/cc2DBcx1.s:2252   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 $t
     /tmp/cc2DBcx1.s:2259   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 HAL_ADCEx_InjectedGetValue
     /tmp/cc2DBcx1.s:2324   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 $t
     /tmp/cc2DBcx1.s:2331   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 HAL_ADCEx_InjectedConvCpltCallback
     /tmp/cc2DBcx1.s:2346   .text.HAL_ADCEx_InjectedQueueOverflowCallback:0000000000000000 $t
     /tmp/cc2DBcx1.s:2353   .text.HAL_ADCEx_InjectedQueueOverflowCallback:0000000000000000 HAL_ADCEx_InjectedQueueOverflowCallback
     /tmp/cc2DBcx1.s:2368   .text.HAL_ADCEx_LevelOutOfWindow2Callback:0000000000000000 $t
     /tmp/cc2DBcx1.s:2375   .text.HAL_ADCEx_LevelOutOfWindow2Callback:0000000000000000 HAL_ADCEx_LevelOutOfWindow2Callback
     /tmp/cc2DBcx1.s:2390   .text.HAL_ADCEx_LevelOutOfWindow3Callback:0000000000000000 $t
     /tmp/cc2DBcx1.s:2397   .text.HAL_ADCEx_LevelOutOfWindow3Callback:0000000000000000 HAL_ADCEx_LevelOutOfWindow3Callback
     /tmp/cc2DBcx1.s:2412   .text.HAL_ADCEx_EndOfSamplingCallback:0000000000000000 $t
     /tmp/cc2DBcx1.s:2419   .text.HAL_ADCEx_EndOfSamplingCallback:0000000000000000 HAL_ADCEx_EndOfSamplingCallback
     /tmp/cc2DBcx1.s:2434   .text.HAL_ADCEx_RegularStop:0000000000000000 $t
     /tmp/cc2DBcx1.s:2441   .text.HAL_ADCEx_RegularStop:0000000000000000 HAL_ADCEx_RegularStop
     /tmp/cc2DBcx1.s:2544   .text.HAL_ADCEx_RegularStop_IT:0000000000000000 $t
     /tmp/cc2DBcx1.s:2551   .text.HAL_ADCEx_RegularStop_IT:0000000000000000 HAL_ADCEx_RegularStop_IT
     /tmp/cc2DBcx1.s:2659   .text.HAL_ADCEx_RegularStop_DMA:0000000000000000 $t
     /tmp/cc2DBcx1.s:2666   .text.HAL_ADCEx_RegularStop_DMA:0000000000000000 HAL_ADCEx_RegularStop_DMA
     /tmp/cc2DBcx1.s:2815   .text.HAL_ADCEx_RegularMultiModeStop_DMA:0000000000000000 $t
     /tmp/cc2DBcx1.s:2822   .text.HAL_ADCEx_RegularMultiModeStop_DMA:0000000000000000 HAL_ADCEx_RegularMultiModeStop_DMA
     /tmp/cc2DBcx1.s:3177   .text.HAL_ADCEx_RegularMultiModeStop_DMA:000000000000011c $d
     /tmp/cc2DBcx1.s:3182   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 $t
     /tmp/cc2DBcx1.s:3189   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 HAL_ADCEx_InjectedConfigChannel
     /tmp/cc2DBcx1.s:4349   .text.HAL_ADCEx_InjectedConfigChannel:00000000000003f4 $d
     /tmp/cc2DBcx1.s:4362   .text.HAL_ADCEx_InjectedConfigChannel:000000000000041c $t
     /tmp/cc2DBcx1.s:5002   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000644 $d
ARM GAS  /tmp/cc2DBcx1.s 			page 292


     /tmp/cc2DBcx1.s:5011   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 $t
     /tmp/cc2DBcx1.s:5018   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 HAL_ADCEx_MultiModeConfigChannel
     /tmp/cc2DBcx1.s:5319   .text.HAL_ADCEx_MultiModeConfigChannel:000000000000010c $d
     /tmp/cc2DBcx1.s:5326   .text.HAL_ADCEx_EnableInjectedQueue:0000000000000000 $t
     /tmp/cc2DBcx1.s:5333   .text.HAL_ADCEx_EnableInjectedQueue:0000000000000000 HAL_ADCEx_EnableInjectedQueue
     /tmp/cc2DBcx1.s:5423   .text.HAL_ADCEx_DisableInjectedQueue:0000000000000000 $t
     /tmp/cc2DBcx1.s:5430   .text.HAL_ADCEx_DisableInjectedQueue:0000000000000000 HAL_ADCEx_DisableInjectedQueue
     /tmp/cc2DBcx1.s:5527   .text.HAL_ADCEx_DisableVoltageRegulator:0000000000000000 $t
     /tmp/cc2DBcx1.s:5534   .text.HAL_ADCEx_DisableVoltageRegulator:0000000000000000 HAL_ADCEx_DisableVoltageRegulator
     /tmp/cc2DBcx1.s:5594   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:0000000000000000 $t
     /tmp/cc2DBcx1.s:5601   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:0000000000000000 HAL_ADCEx_EnterADCDeepPowerDownMode

UNDEFINED SYMBOLS
ADC_Disable
ADC_Enable
ADC_ConversionStop
HAL_GetTick
HAL_DMAEx_List_GetNodeConfig
HAL_DMAEx_List_Start_IT
HAL_DMA_Start_IT
ADC_DMAConvCplt
ADC_DMAHalfConvCplt
ADC_DMAError
HAL_DMA_Abort
SystemCoreClock
