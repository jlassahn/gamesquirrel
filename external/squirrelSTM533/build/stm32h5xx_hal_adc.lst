ARM GAS  /tmp/cc46GlVT.s 			page 1


   1              		.cpu cortex-m33
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32h5xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_ADC_MspInit
  20              		.arch armv8-m.main
  21              		.arch_extension dsp
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	HAL_ADC_MspInit:
  28              	.LVL0:
  29              	.LFB363:
  30              		.file 1 "Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c"
   1:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
   2:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @file    stm32h5xx_hal_adc.c
   4:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *           + Peripheral State functions
  11:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  12:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          "stm32h5xx_hal_adc_ex.c".
  13:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *
  14:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   ******************************************************************************
  15:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @attention
  16:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *
  17:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * Copyright (c) 2023 STMicroelectronics.
  18:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * All rights reserved.
  19:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *
  20:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  21:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * in the root directory of this software component.
  22:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  23:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *
  24:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   ******************************************************************************
  25:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   @verbatim
  26:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   ==============================================================================
  27:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                      ##### ADC peripheral features #####
  28:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   ==============================================================================
ARM GAS  /tmp/cc46GlVT.s 			page 2


  29:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   [..]
  30:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  31:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  32:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
  33:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       analog watchdog or overrun events.
  34:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  35:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  36:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  37:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  38:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  39:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  40:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  41:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  42:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  43:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  44:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  45:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  46:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  47:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode.
  48:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  49:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   (+) ADC channels selectable single/differential input.
  50:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  51:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   (+) ADC offset shared on 4 offset instances.
  52:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   (+) ADC calibration
  53:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  54:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   (+) ADC conversion of regular group.
  55:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  56:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  57:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  58:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  59:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       Vdda or to an external voltage reference).
  60:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  61:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  62:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                      ##### How to use this driver #####
  63:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   ==============================================================================
  64:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     [..]
  65:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  66:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  67:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      ============================================================
  68:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      [..]
  69:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  70:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     (#) Enable the ADC interface
  71:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  72:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  73:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         (++) Two clock settings are mandatory:
  74:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  75:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  76:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  77:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    Two possible clock sources: synchronous clock derived from AHB clock
  78:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    or asynchronous clock derived from system clock or PLL.
  79:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  80:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****              (+++) Example:
  81:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  82:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    other device clock parameters configuration:
  83:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory)
  84:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  85:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                RCC_ADCCLKSOURCE_PLL enable:                       (optional: if asynchronous clock 
ARM GAS  /tmp/cc46GlVT.s 			page 3


  86:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
  87:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  88:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_PLL;
  89:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  90:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  91:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  92:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  93:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  94:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     (#) ADC pins configuration
  95:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  96:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  97:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  98:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               using function HAL_GPIO_Init()
  99:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 100:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 101:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 102:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 103:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 104:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               into the function of corresponding ADC interruption vector
 105:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               ADCx_IRQHandler().
 106:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 107:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 108:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 109:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               using function HAL_DMA_Init().
 110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 114:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 115:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 116:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 117:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      ================================================================
 118:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      [..]
 119:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 120:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 121:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         using function HAL_ADC_Init().
 123:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 124:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 126:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 128:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 129:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         monitored, thresholds, ...)
 130:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 131:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      *** Execution of ADC conversions ***
 133:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      ====================================
 134:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      [..]
 135:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 136:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 137:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         conversion accuracy
 138:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 139:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 140:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         transfer by DMA.
 142:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 4


 143:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         (++) ADC conversion by polling:
 144:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 145:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 using function HAL_ADC_Start()
 146:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 147:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 148:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           (+++) Retrieve conversion results
 149:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 150:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 151:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 152:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 153:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         (++) ADC conversion by interruption:
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 155:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 156:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 157:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 158:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 (this function must be implemented in user program)
 159:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           (+++) Retrieve conversion results
 160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 161:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 162:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 163:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 164:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 165:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 166:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 167:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 168:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 169:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 (these functions must be implemented in user program)
 170:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 171:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 destination variable address.
 172:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 173:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 174:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 175:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      [..]
 176:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 177:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 178:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 179:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 182:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 183:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      *** Deinitialization of ADC ***
 184:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      ============================================================
 185:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      [..]
 186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 187:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     (#) Disable the ADC interface
 188:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 189:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 191:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         (++) ADC clock disable
 192:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 193:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****              (+++) Example:
 194:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 195:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    other device clock parameters configuration:
 196:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 197:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 199:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 5


 200:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     (#) ADC pins configuration
 201:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 202:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 203:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 205:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 206:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 208:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 209:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          (++) Deinitialize the DMA
 210:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               using function HAL_DMA_Init().
 211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 212:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 213:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 214:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     [..]
 215:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 216:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     *** Callback registration ***
 217:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     =============================================
 218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     [..]
 219:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 220:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 221:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 222:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      Use Functions @ref HAL_ADC_RegisterCallback()
 223:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      to register an interrupt callback.
 224:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     [..]
 225:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 226:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      Function @ref HAL_ADC_RegisterCallback() allows to register following callbacks:
 227:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 228:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 229:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 230:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 231:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 232:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 233:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 234:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 235:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 236:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 237:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 238:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 239:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      and a pointer to the user callback function.
 240:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     [..]
 241:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 242:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      Use function @ref HAL_ADC_UnRegisterCallback to reset a callback to the default
 243:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      weak function.
 244:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     [..]
 245:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 246:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      @ref HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 247:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      and the Callback ID.
 248:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      This function allows to reset following callbacks:
 249:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 250:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 251:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 252:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 253:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 254:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 255:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 256:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
ARM GAS  /tmp/cc46GlVT.s 			page 6


 257:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 258:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 259:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 260:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      [..]
 261:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 262:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      By default, after the @ref HAL_ADC_Init() and when the state is @ref HAL_ADC_STATE_RESET
 263:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 264:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      examples @ref HAL_ADC_ConvCpltCallback(), @ref HAL_ADC_ErrorCallback().
 265:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 266:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      reset to the legacy weak functions in the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit() only when
 267:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 268:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     [..]
 269:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit()
 271:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 272:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      [..]
 273:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 274:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      Callbacks can be registered/unregistered in @ref HAL_ADC_STATE_READY state only.
 275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 276:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      in @ref HAL_ADC_STATE_READY or @ref HAL_ADC_STATE_RESET state,
 277:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 278:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     [..]
 279:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 281:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      using @ref HAL_ADC_RegisterCallback() before calling @ref HAL_ADC_DeInit()
 282:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      or @ref HAL_ADC_Init() function.
 283:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      [..]
 284:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 285:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 286:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 287:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      are set to the corresponding weak functions.
 288:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 289:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   @endverbatim
 290:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   ******************************************************************************
 291:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
 292:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 293:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 294:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #include "stm32h5xx_hal.h"
 295:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 296:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /** @addtogroup STM32H5xx_HAL_Driver
 297:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @{
 298:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
 299:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 300:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /** @defgroup ADC ADC
 301:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief ADC HAL module driver
 302:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @{
 303:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
 304:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 305:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 306:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 307:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 308:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 309:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 310:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 311:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @{
 312:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
 313:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 7


 314:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #define ADC_CFGR_FIELDS_1 (ADC_CFGR_RES    | ADC_CFGR_ALIGN   |\
 315:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                            ADC_CFGR_CONT   | ADC_CFGR_OVRMOD  |\
 316:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                            ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM |\
 317:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                            ADC_CFGR_EXTEN  | ADC_CFGR_EXTSEL)              /*!< ADC_CFGR fields of 
 318:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                           be updated when no regular conversion is on-going */
 319:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 320:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /* Timeout values for ADC operations (enable settling time,                   */
 321:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /*   disable settling time, ...).                                             */
 322:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /*   Values defined to be higher than worst cases: low clock frequency,       */
 323:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /*   maximum prescalers.                                                      */
 324:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)    /*!< ADC enable time-out value  */
 325:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)    /*!< ADC disable time-out value */
 326:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 327:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /* Timeout to wait for current conversion on going to be completed.           */
 328:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /* Timeout fixed to longest ADC conversion possible, for 1 channel:           */
 329:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /*   - maximum sampling time (640.5 adc_clk)                                  */
 330:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /*   - ADC resolution (Tsar 12 bits= 12.5 adc_clk)                            */
 331:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /*   - System clock / ADC clock <= 4096 (hypothesis of maximum clock ratio)   */
 332:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /*   - ADC oversampling ratio 256                                             */
 333:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /*   Calculation: 653 * 4096 * 256 CPU clock cycles max                       */
 334:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /* Unit: cycles of CPU clock.                                                 */
 335:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES (653UL * 4096UL * 256UL)  /*!< ADC conversion completion
 336:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 337:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 338:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
 339:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @}
 340:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
 341:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 342:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 343:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 344:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 345:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 346:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 347:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 348:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @{
 349:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
 350:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 351:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 352:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 353:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *
 354:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** @verbatim
 355:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****  ===============================================================================
 356:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 357:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****  ===============================================================================
 358:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 359:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+) Initialize and configure the ADC.
 360:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+) De-initialize the ADC.
 361:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** @endverbatim
 362:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @{
 363:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
 364:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 365:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
 366:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 367:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 368:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 369:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 370:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         in header of this file).
ARM GAS  /tmp/cc46GlVT.s 			page 8


 371:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 372:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 373:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 374:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 375:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 376:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 377:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         before HAL_ADC_Init().
 378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 379:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 380:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 381:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 382:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 383:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 384:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   Parameters related to common ADC registers (ADC clock mode) are set
 385:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         only if all ADCs are disabled.
 386:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         If this is not the case, these common parameters setting are
 387:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 388:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         case of update of a parameter of ADC_InitTypeDef on the fly,
 389:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         without  disabling the other ADCs.
 390:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
 391:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status
 392:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
 393:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 394:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
 395:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 396:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_cfgr;
 397:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 398:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 399:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 400:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 401:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check ADC handle */
 402:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (hadc == NULL)
 403:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 404:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     return HAL_ERROR;
 405:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 406:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 407:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
 408:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 409:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 410:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 411:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 412:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 413:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 414:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 415:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 416:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLINGMODE(hadc->Init.SamplingMode));
 417:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 418:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 419:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 420:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 421:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 422:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 423:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 425:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 426:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 427:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 9


 428:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 429:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 430:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 431:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 432:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 433:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 434:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* DISCEN and CONT bits cannot be set at the same time */
 435:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 436:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 437:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 438:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 439:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 440:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 441:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 442:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Init the ADC Callback settings */
 443:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 444:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 445:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 446:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 447:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 448:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;  /* Legacy weak 
 449:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 450:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 451:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 452:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 453:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 454:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 455:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 456:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 457:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 458:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Init the low level hardware */
 459:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 460:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
 461:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Init the low level hardware */
 462:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 463:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 464:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 465:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Set ADC error code to none */
 466:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 467:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 468:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Initialize Lock */
 469:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 470:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 471:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 472:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
 473:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 474:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 475:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Disable ADC deep power down mode */
 476:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     LL_ADC_DisableDeepPowerDown(hadc->Instance);
 477:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 478:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* System was in deep power down mode, calibration must
 479:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      be relaunched or a previously saved calibration factor
 480:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      re-applied once the ADC voltage regulator is enabled */
 481:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 482:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 483:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 484:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
ARM GAS  /tmp/cc46GlVT.s 			page 10


 485:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 486:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 487:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 488:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 489:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 490:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL
 492:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 493:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 494:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       wait_loop_index--;
 495:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 496:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 497:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 498:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 499:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 500:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 501:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 502:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 503:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Update ADC state machine to error */
 504:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 505:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 506:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 507:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 508:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 509:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 510:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 511:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 512:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 513:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 514:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 515:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 516:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 517:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 518:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 519:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_regular == 0UL)
 520:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      )
 521:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 522:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Set ADC state */
 523:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 524:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 525:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 526:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 527:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 528:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 529:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 530:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 531:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  - clock configuration                                                 */
 532:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 533:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 534:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 535:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 536:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Reset configuration of ADC common register CCR:                      */
 537:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /*                                                                      */
 538:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /*   - ADC clock mode and ACC prescaler (CKMODE and PRESC bits)are set  */
 539:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /*     according to adc->Init.ClockPrescaler. It selects the clock      */
 540:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /*    source and sets the clock division factor.                        */
 541:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /*                                                                      */
ARM GAS  /tmp/cc46GlVT.s 			page 11


 542:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Some parameters of this register are not reset, since they are set   */
 543:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* by other functions and must be kept in case of usage of this         */
 544:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 545:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* without needing to reconfigure all other ADC groups/channels         */
 546:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* parameters):                                                         */
 547:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /*   - when multimode feature is available, multimode-related           */
 548:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
 549:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
 550:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 551:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /*     (set into HAL_ADC_ConfigChannel() or                             */
 552:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 553:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 554:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 555:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 556:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 557:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 558:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  - resolution                               Init.Resolution            */
 559:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  - data alignment                           Init.DataAlign             */
 560:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  - external trigger to start conversion     Init.ExternalTrigConv      */
 561:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
 562:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  - continuous conversion mode               Init.ContinuousConvMode    */
 563:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  - overrun                                  Init.Overrun               */
 564:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  - discontinuous mode                       Init.DiscontinuousConvMode */
 565:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  - discontinuous mode channel count         Init.NbrOfDiscConversion   */
 566:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_cfgr  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)           |
 567:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                  hadc->Init.Overrun                                                     |
 568:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                  hadc->Init.DataAlign                                                   |
 569:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                  hadc->Init.Resolution                                                  |
 570:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 571:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 572:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 573:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 574:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       tmp_cfgr |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 575:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 576:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 577:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 578:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* start.                                                                 */
 579:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 580:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 581:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*       software start.                                                  */
 582:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 583:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 584:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       tmp_cfgr |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 585:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    | hadc->Init.ExternalTrigConvEdge
 586:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                   );
 587:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 588:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 589:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Update Configuration Register CFGR */
 590:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmp_cfgr);
 591:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 592:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Configuration of sampling mode */
 593:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG, hadc->Init.SamplingMode);
 594:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 595:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 596:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 597:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* conversion on going on regular and injected groups:                    */
 598:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  - DMA continuous request          Init.DMAContinuousRequests          */
ARM GAS  /tmp/cc46GlVT.s 			page 12


 599:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
 600:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  - Oversampling parameters         Init.Oversampling                   */
 601:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 602:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 603:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 604:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        )
 605:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 606:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       tmp_cfgr = (
 607:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 608:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 609:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 610:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmp_cfgr);
 611:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 612:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 613:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 614:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 615:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 616:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 617:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 618:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 619:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Configuration of Oversampler:                                      */
 620:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /*  - Oversampling Ratio                                              */
 621:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /*  - Right bit shift                                                 */
 622:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /*  - Triggered mode                                                  */
 623:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /*  - Oversampling mode (continued/resumed)                           */
 624:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CFGR2,
 625:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 626:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    ADC_CFGR2_OVSS  |
 627:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    ADC_CFGR2_TROVS |
 628:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    ADC_CFGR2_ROVSM,
 629:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    ADC_CFGR2_ROVSE                       |
 630:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    hadc->Init.Oversampling.Ratio         |
 631:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    hadc->Init.Oversampling.RightBitShift |
 632:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    hadc->Init.Oversampling.TriggeredMode |
 633:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    hadc->Init.Oversampling.OversamplingStopReset
 634:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                   );
 635:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 636:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else
 637:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 638:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Disable ADC oversampling scope on ADC group regular */
 639:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 640:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 641:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 642:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 643:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 644:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 645:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 646:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 647:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 648:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 649:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 650:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 651:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 652:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 653:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 654:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 655:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set number of ranks in regular group sequencer */
ARM GAS  /tmp/cc46GlVT.s 			page 13


 656:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 657:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 658:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     else
 659:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 660:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 661:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 662:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 663:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Initialize the ADC state */
 664:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
 665:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 666:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 667:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   else
 668:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 669:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Update ADC state machine to error */
 670:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 671:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 672:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 673:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 674:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 675:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return function status */
 676:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return tmp_hal_status;
 677:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 678:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 679:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
 680:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 681:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 682:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
 683:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 684:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 685:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 686:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 687:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
 688:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 689:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 690:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         common group is still running.
 691:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   By default, HAL_ADC_DeInit() set ADC in mode deep power-down:
 692:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         this saves more power by reducing leakage currents
 693:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         and is particularly interesting before entering MCU low-power modes.
 694:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
 695:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status
 696:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
 697:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 698:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
 699:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 700:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 701:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check ADC handle */
 702:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (hadc == NULL)
 703:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 704:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     return HAL_ERROR;
 705:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 706:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 707:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
 708:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 709:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 710:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Set ADC state */
 711:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 712:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 14


 713:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Stop potential conversion on going */
 714:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 715:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 716:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped            */
 717:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Flush register JSQR: reset the queue sequencer when injected             */
 718:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* queue sequencer is enabled and ADC disabled.                             */
 719:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* The software and hardware triggers of the injected sequence are both     */
 720:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* internally disabled just after the completion of the last valid          */
 721:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* injected sequence.                                                       */
 722:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 723:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 724:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 725:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 726:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 727:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Disable the ADC peripheral */
 728:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 729:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 730:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 731:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 732:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 733:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Change ADC state */
 734:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 735:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 736:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 737:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 738:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 739:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 740:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 741:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 742:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 743:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 744:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 745:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register IER */
 746:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
 747:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 748:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                               ADC_IT_JEOS  | ADC_IT_JEOC |
 749:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 750:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY));
 751:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 752:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register ISR */
 753:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
 754:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 755:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                               ADC_FLAG_JEOS  | ADC_FLAG_JEOC |
 756:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 757:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 758:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 759:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register CR */
 760:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART,
 761:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      ADC_CR_ADCAL, ADC_CR_ADDIS and ADC_CR_ADEN are in access mode "read-set":
 762:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      no direct reset applicable.
 763:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      Update CR register to reset value where doable by software */
 764:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN | ADC_CR_ADCALDIF);
 765:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 766:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 767:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register CFGR */
 768:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_FIELDS);
 769:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
ARM GAS  /tmp/cc46GlVT.s 			page 15


 770:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 771:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register CFGR2 */
 772:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSM  | ADC_CFGR2_TROVS   | ADC_CFGR2_OVSS |
 773:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 774:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 775:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register SMPR1 */
 776:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_FIELDS);
 777:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 778:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register SMPR2 */
 779:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 |
 780:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 781:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10);
 782:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 783:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register TR1 */
 784:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR1, ADC_TR1_HT1 | ADC_TR1_LT1);
 785:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 786:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register TR2 */
 787:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);
 788:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 789:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register TR3 */
 790:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);
 791:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 792:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register SQR1 */
 793:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 |
 794:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 795:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 796:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register SQR2 */
 797:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 |
 798:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 799:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 800:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register SQR3 */
 801:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 |
 802:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 803:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 804:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register SQR4 */
 805:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15);
 806:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Register JSQR was reset when the ADC was disabled */
 808:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 809:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register DR */
 810:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 811:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 812:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register OFR1 */
 813:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1);
 814:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register OFR2 */
 815:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2);
 816:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register OFR3 */
 817:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3);
 818:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register OFR4 */
 819:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
 820:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 821:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 822:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 823:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 824:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register AWD2CR */
 825:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
 826:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 16


 827:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register AWD3CR */
 828:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
 829:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 830:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register DIFSEL */
 831:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
 832:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 833:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register CALFACT */
 834:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
 835:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 836:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 837:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* ========== Reset common ADC registers ========== */
 838:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 839:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Software is allowed to change common parameters only when all the other
 840:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      ADCs are disabled.   */
 841:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 842:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 843:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Reset configuration of ADC common register CCR:
 844:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       - clock mode: CKMODE, PRESCEN
 845:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       - multimode related parameters (when this feature is available): MDMA,
 846:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         DMACFG, DELAY, DUAL (set by HAL_ADCEx_MultiModeConfigChannel() API)
 847:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       - internal measurement paths: Vbat, temperature sensor, Vref (set into
 848:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
 849:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     */
 850:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     ADC_CLEAR_COMMON_CONTROL_REGISTER(hadc);
 851:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 852:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* ========== Hard reset ADC peripheral ========== */
 853:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Performs a global reset of the entire ADC peripherals instances        */
 854:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* sharing the same common ADC instance: ADC state is forced to           */
 855:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* a similar state as after device power-on.                              */
 856:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Note: A possible implementation is to add RCC bus reset of ADC         */
 857:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* (for example, using macro                                              */
 858:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  __HAL_RCC_ADC..._FORCE_RESET()/..._RELEASE_RESET()/..._CLK_DISABLE()) */
 859:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* in function "void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)":         */
 860:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 861:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (hadc->MspDeInitCallback == NULL)
 862:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 863:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 864:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 865:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 866:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* DeInit the low level hardware */
 867:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->MspDeInitCallback(hadc);
 868:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
 869:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* DeInit the low level hardware */
 870:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
 871:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 872:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 873:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 874:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Set ADC error code to none */
 875:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
 876:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 877:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset injected channel configuration parameters */
 878:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   hadc->InjectionConfig.ContextQueue = 0;
 879:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 880:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 881:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Set ADC state */
 882:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 883:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 17


 884:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Process unlocked */
 885:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 886:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 887:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return function status */
 888:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return tmp_hal_status;
 889:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 890:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 891:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
 892:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
 893:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
 894:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval None
 895:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
 896:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
 897:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
  31              		.loc 1 897 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
 898:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 899:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   UNUSED(hadc);
  36              		.loc 1 899 3 view .LVU1
 900:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 901:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 902:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 903:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****    */
 904:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
  37              		.loc 1 904 1 is_stmt 0 view .LVU2
  38 0000 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE363:
  42              		.section	.text.HAL_ADC_Init,"ax",%progbits
  43              		.align	1
  44              		.global	HAL_ADC_Init
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  48              		.fpu fpv4-sp-d16
  50              	HAL_ADC_Init:
  51              	.LVL1:
  52              	.LFB361:
 394:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  53              		.loc 1 394 1 is_stmt 1 view -0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 8
  56              		@ frame_needed = 0, uses_anonymous_args = 0
 394:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  57              		.loc 1 394 1 is_stmt 0 view .LVU4
  58 0000 30B5     		push	{r4, r5, lr}
  59              	.LCFI0:
  60              		.cfi_def_cfa_offset 12
  61              		.cfi_offset 4, -12
  62              		.cfi_offset 5, -8
  63              		.cfi_offset 14, -4
  64 0002 83B0     		sub	sp, sp, #12
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc46GlVT.s 			page 18


 395:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_cfgr;
  67              		.loc 1 395 3 is_stmt 1 view .LVU5
  68              	.LVL2:
 396:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
  69              		.loc 1 396 3 view .LVU6
 397:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
  70              		.loc 1 397 3 view .LVU7
 398:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
  71              		.loc 1 398 3 view .LVU8
 399:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  72              		.loc 1 399 3 view .LVU9
 399:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  73              		.loc 1 399 17 is_stmt 0 view .LVU10
  74 0004 0023     		movs	r3, #0
  75 0006 0193     		str	r3, [sp, #4]
 402:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
  76              		.loc 1 402 3 is_stmt 1 view .LVU11
 402:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
  77              		.loc 1 402 6 is_stmt 0 view .LVU12
  78 0008 0028     		cmp	r0, #0
  79 000a 00F0E580 		beq	.L22
  80 000e 0446     		mov	r4, r0
 408:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
  81              		.loc 1 408 3 is_stmt 1 view .LVU13
 409:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
  82              		.loc 1 409 3 view .LVU14
 410:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
  83              		.loc 1 410 3 view .LVU15
 411:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
  84              		.loc 1 411 3 view .LVU16
 412:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  85              		.loc 1 412 3 view .LVU17
 413:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  86              		.loc 1 413 3 view .LVU18
 414:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
  87              		.loc 1 414 3 view .LVU19
 415:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLINGMODE(hadc->Init.SamplingMode));
  88              		.loc 1 415 3 view .LVU20
 416:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
  89              		.loc 1 416 3 view .LVU21
 417:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
  90              		.loc 1 417 3 view .LVU22
 418:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
  91              		.loc 1 418 3 view .LVU23
 419:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
  92              		.loc 1 419 3 view .LVU24
 420:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
  93              		.loc 1 420 3 view .LVU25
 421:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  94              		.loc 1 421 3 view .LVU26
 423:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
  95              		.loc 1 423 3 view .LVU27
 430:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
  96              		.loc 1 430 7 view .LVU28
 435:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
  97              		.loc 1 435 3 view .LVU29
 439:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
ARM GAS  /tmp/cc46GlVT.s 			page 19


  98              		.loc 1 439 3 view .LVU30
 439:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
  99              		.loc 1 439 11 is_stmt 0 view .LVU31
 100 0010 836D     		ldr	r3, [r0, #88]
 439:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 101              		.loc 1 439 6 view .LVU32
 102 0012 13B3     		cbz	r3, .L25
 103              	.LVL3:
 104              	.L4:
 473:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 105              		.loc 1 473 3 is_stmt 1 view .LVU33
 473:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 106              		.loc 1 473 41 is_stmt 0 view .LVU34
 107 0014 2368     		ldr	r3, [r4]
 108              	.LVL4:
 109              	.LBB338:
 110              	.LBI338:
 111              		.file 2 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h"
   1:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
   2:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @file    stm32h5xx_ll_adc.h
   4:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @attention
   8:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
   9:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * Copyright (c) 2023 STMicroelectronics.
  10:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
  12:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
  16:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
  18:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  19:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #ifndef STM32H5xx_LL_ADC_H
  21:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define STM32H5xx_LL_ADC_H
  22:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  23:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif
  26:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  27:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #include "stm32h5xx.h"
  29:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  30:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @addtogroup STM32H5xx_LL_Driver
  31:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
  32:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
  33:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  34:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2)
  35:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  36:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
  38:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
  39:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
ARM GAS  /tmp/cc46GlVT.s 			page 20


  40:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  43:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
  46:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
  47:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  48:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - sequencer register offset                                                */
  51:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  52:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  53:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  54:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  55:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  56:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  57:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  58:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  59:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  60:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET \
  61:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SQR3_REGOFFSET | ADC_SQR4_REGOFFSET)
  62:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  63:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  64:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  65:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  66:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  67:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ1_Pos)
  68:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ2_Pos)
  69:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ3_Pos)
  70:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ4_Pos)
  71:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ5_Pos)
  72:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ6_Pos)
  73:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ7_Pos)
  74:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ8_Pos)
  75:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ9_Pos)
  76:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS (ADC_SQR3_SQ10_Pos)
  77:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS (ADC_SQR3_SQ11_Pos)
  78:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (ADC_SQR3_SQ12_Pos)
  79:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (ADC_SQR3_SQ13_Pos)
  80:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (ADC_SQR3_SQ14_Pos)
  81:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS (ADC_SQR4_SQ15_Pos)
  82:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS (ADC_SQR4_SQ16_Pos)
  83:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  84:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
  85:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
  86:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - data register offset                                                     */
  87:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  88:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  89:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  90:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  91:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
  92:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
  93:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
  94:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
  95:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
  96:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET \
ARM GAS  /tmp/cc46GlVT.s 			page 21


  97:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_JDR3_REGOFFSET | ADC_JDR4_REGOFFSET)
  98:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  99:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 100:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 102:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ1_Pos)
 104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ2_Pos)
 105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ3_Pos)
 106:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ4_Pos)
 107:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 108:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 109:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 110:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - regular trigger source                                                   */
 111:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - regular trigger edge                                                     */
 112:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT      (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (d
 113:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                  compatibility with some ADC on oth
 114:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                  having this setting set by HW defa
 115:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 116:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 117:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 118:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 119:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK           (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U * 
 120:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_CFGR_EXTSEL)                            << (4U * 
 121:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_CFGR_EXTSEL)                            << (4U * 
 122:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_CFGR_EXTSEL)                            << (4U * 
 123:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 124:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 125:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 126:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 127:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK             (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 0
 128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 1
 129:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 2
 130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 3
 131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 132:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 133:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  (ADC_CFGR_EXTSEL_Pos)
 134:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (ADC_CFGR_EXTEN_Pos)
 135:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 136:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 137:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 138:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - injected trigger source                                                  */
 139:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - injected trigger edge                                                    */
 140:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 141:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                   compatibility with some ADC on ot
 142:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                   having this setting set by HW def
 143:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 144:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 145:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 146:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 147:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK           (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U 
 148:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 149:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 150:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 153:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
ARM GAS  /tmp/cc46GlVT.s 			page 22


 154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK             (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U * 
 156:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
 157:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
 158:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
 159:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 160:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 161:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  (ADC_JSQR_JEXTSEL_Pos)
 162:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   (ADC_JSQR_JEXTEN_Pos)
 163:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 164:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 165:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 166:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 167:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 168:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 169:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 170:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 171:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 172:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 173:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 174:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (ADC_CFGR_AWD1CH_Pos)
 175:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 176:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 177:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 178:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 179:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   >> [Position of bitfield "ADC_CHANNEL_NUMBER_MASK" in register]) */
 180:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 182:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 183:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 184:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                              of different ADC internal channels map
 185:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                              number on different ADC instances */
 186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 187:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 188:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 190:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 191:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 192:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 193:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL)           /* Position of bits ADC_SMPRx_REGOFFSET
 194:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                in ADC_CHANNEL_SMPRX_REGOFFSET_MASK 
 195:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 196:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 197:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Equivalent to bitfield "ADC_CHANNEL_
 198:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                position in register */
 199:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 200:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 201:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* channels literals definition.                                              */
 202:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 203:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR_AWD1CH_0)
 204:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR_AWD1CH_1)
 205:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR_AWD1CH_2)
 207:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_0)
 208:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1)
 209:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 210:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR_AWD1CH_3)
ARM GAS  /tmp/cc46GlVT.s 			page 23


 211:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_0)
 212:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1)
 213:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 214:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2)
 215:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 216:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | \
 218:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4)
 220:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_0)
 221:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_1)
 222:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_19_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 223:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 224:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 225:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* channels literals definition.                                              */
 226:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 227:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 228:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 229:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 230:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 231:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 232:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 233:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 235:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 237:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 238:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 239:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 240:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 241:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 242:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 243:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 244:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 245:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_19_BITFIELD            (ADC_AWD2CR_AWD2CH_19)
 246:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 247:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 248:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* channels literals definition.                                              */
 249:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Value shifted are equivalent to bitfield "ADC_SMPRx_SMPy" position         */
 250:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* in register.                                                               */
 251:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 252:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 253:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 254:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 255:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 256:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 257:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 258:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 260:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 261:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 262:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 263:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 264:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 265:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 266:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 267:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
ARM GAS  /tmp/cc46GlVT.s 			page 24


 268:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 269:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 270:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CHANNEL_19_SMP                 (ADC_SMPR2_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 271:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 272:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 273:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 274:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 275:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* the relevant bits for:                                                     */
 276:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 277:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 278:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 279:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 280:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 281:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 282:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 283:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to perform of shift when single mode is selected, shift 
 284:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            channels bits range. */
 285:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL) /* Selection of 1 bit to discriminate di
 286:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            mask of bit */
 287:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)         /* Selection of 1 bit to discriminate di
 288:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            position of bit */
 289:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 290:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            ADC_SINGLEDIFF_CALIB_F_BIT_D to perform a shift of 4 ran
 291:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 292:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 293:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 294:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 295:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 series)).         */
 296:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 297:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 298:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 299:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*   selection on groups.                                                     */
 300:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 301:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 302:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 303:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 304:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 305:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 306:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 307:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 308:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 309:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 310:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 311:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 312:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 315:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 316:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 317:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL)                      /* Position of bits ADC_AWD_
 318:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                           in ADC_AWD_CRX_REGOFFSET_
 319:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 320:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 321:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 322:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 323:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 324:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
ARM GAS  /tmp/cc46GlVT.s 			page 25


 325:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)      /* Position of bits ADC
 326:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                                in ADC_AWD_TRX_REGOF
 327:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 328:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                                threshold high: mask
 329:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 330:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                                threshold high: posi
 331:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 332:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                                position to perform 
 333:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 334:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 335:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal register offset for ADC offset instance configuration */
 336:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 337:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 338:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 339:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 340:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET \
 341:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_OFR3_REGOFFSET | ADC_OFR4_REGOFFSET)
 342:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 343:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 344:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* ADC registers bits positions */
 345:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         (ADC_CFGR_RES_Pos)
 346:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (ADC_CFGR_AWD1SGL_Pos)
 347:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (ADC_CFGR_AWD1EN_Pos)
 348:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (ADC_CFGR_JAWD1EN_Pos)
 349:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (ADC_TR1_HT1_Pos)
 350:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 351:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 352:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* ADC registers bits groups */
 353:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADEN | ADC_CR_ADDIS \
 354:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CR_JADSTART | ADC_CR_JADSTP \
 355:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CR_ADSTART | ADC_CR_ADSTP)            /* ADC regi
 356:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            HW property "rs": Software can read as well as set this 
 357:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Writing '0' has no effect on the bit value. */
 358:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 359:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 360:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* ADC internal channels related definitions */
 361:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 362:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x08FFF810UL)) /* Internal voltage referen
 363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            parameter VREFINT_CAL: VrefInt ADC raw data acquired at 
 364:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.3 V (tolerance: +-10 mV
 365:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3300UL)                     /* Analog voltage reference
 366:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with which VrefInt has been calibrated in production
 367:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (tolerance: +-10 mV) (unit: mV). */
 368:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Temperature sensor */
 369:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x08FFF814UL)) /* Address of parameter TS_
 370:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            temperature sensor ADC raw data acquired at temperature 
 371:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.3 V (tolerance: +-10 mV
 372:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x08FFF818UL)) /* Address of parameter TS_
 373:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            temperature sensor ADC raw data acquired at temperature 
 374:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.3 V (tolerance: +-10 mV
 375:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30L)                        /* Temperature at which tem
 376:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            has been calibrated in production for data into TEMPSENS
 377:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (tolerance: +-5 DegC) (unit: DegC). */
 378:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130L)                       /* Temperature at which tem
 379:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            has been calibrated in production for data into TEMPSENS
 380:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (tolerance: +-5 DegC) (unit: DegC). */
 381:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3300UL)                     /* Analog voltage reference
ARM GAS  /tmp/cc46GlVT.s 			page 26


 382:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with which temperature sensor has been calibrated in pro
 383:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (tolerance +-10 mV) (unit: mV). */
 384:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 385:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 386:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 387:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 388:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 389:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 390:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 391:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 393:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 395:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 396:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a register from a register basis from which an offset
 397:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is applied.
 398:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 399:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 400:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Pointer to register address
 401:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 402:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 403:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 404:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 405:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 406:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 407:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 408:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 409:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 410:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 411:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 413:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 414:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 416:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 417:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and multimode
 418:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 419:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 420:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 421:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         sharing the same ADC common instance):
 422:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 423:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         disabled.
 424:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 425:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** typedef struct
 426:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 427:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 428:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 429:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 430:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    constraints between ADC clock and AHB clock must
 431:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    Refer to reference manual.
 432:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 433:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_SetCommonClock(). */
 434:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 435:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 436:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 437:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              (for devices with several ADC instances).
 438:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
ARM GAS  /tmp/cc46GlVT.s 			page 27


 439:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 440:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_SetMultimode(). */
 441:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 442:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC multimode conversion data transfer: no transfe
 443:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 444:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 445:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_SetMultiDMATransfer(). */
 446:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 447:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 448:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 449:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 450:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_SetMultiTwoSamplingDelay(). */
 451:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 452:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 453:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 454:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 455:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 456:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 457:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 458:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 459:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         of ADC group injected depends on STM32 series).
 460:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 461:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 462:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 463:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is conditioned to ADC state:
 464:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC instance must be disabled.
 465:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 466:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 467:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 468:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 469:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 470:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 471:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 472:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         refer to description of each function for setting
 473:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         conditioned to ADC state.
 474:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 475:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** typedef struct
 476:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 477:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 478:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 479:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 480:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_SetResolution(). */
 481:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 482:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 483:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 484:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 485:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_SetDataAlignment(). */
 486:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 487:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 488:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 489:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 490:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_SetLowPowerMode(). */
 491:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 492:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 493:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 494:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 495:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
ARM GAS  /tmp/cc46GlVT.s 			page 28


 496:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 497:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 498:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (functions with prefix "REG").
 500:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 501:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is conditioned to ADC state:
 502:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC instance must be disabled.
 503:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 504:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 506:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 507:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 509:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 510:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         refer to description of each function for setting
 511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         conditioned to ADC state.
 512:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 513:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** typedef struct
 514:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 515:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 516:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              from external peripheral (timer event, external interr
 517:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 518:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 519:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    set trigger polarity to rising edge(default sett
 520:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    with some ADC on other STM32 series having this 
 521:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    default value).
 522:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 523:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    @ref LL_ADC_REG_SetTriggerEdge().
 524:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 525:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetTriggerSource(). */
 526:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 527:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 528:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 529:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 530:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerLength(). */
 531:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 533:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              and scan conversions interrupted every selected number
 534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 535:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 536:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                     enabled (scan length of 2 ranks or more).
 537:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 538:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerDiscont(). */
 539:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 540:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 541:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              conversions are performed in single mode (one conversi
 542:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              continuous mode (after the first trigger, following co
 543:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              successively automatically).
 544:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 545:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 546:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    and discontinuous mode.
 547:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 548:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetContinuousMode(). */
 549:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 550:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 551:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              by DMA, and DMA requests mode.
 552:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
ARM GAS  /tmp/cc46GlVT.s 			page 29


 553:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 554:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetDMATransfer(). */
 555:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 556:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 557:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              data preserved or overwritten.
 558:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 559:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 560:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetOverrun(). */
 561:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 562:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 563:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 564:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 565:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 566:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 567:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 568:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 569:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (functions with prefix "INJ").
 570:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 571:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is conditioned to ADC state:
 572:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC instance must be disabled.
 573:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 574:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 575:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 576:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 577:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 578:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 579:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 580:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         refer to description of each function for setting
 581:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         conditioned to ADC state.
 582:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 583:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** typedef struct
 584:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 585:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 586:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              or from external peripheral (timer event, external int
 587:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 588:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 589:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    set trigger polarity to rising edge (default set
 590:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    compatibility with some ADC on other STM32 serie
 591:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    setting set by HW default value).
 592:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 593:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    @ref LL_ADC_INJ_SetTriggerEdge().
 594:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 595:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetTriggerSource(). */
 596:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 597:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 598:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 599:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 600:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetSequencerLength(). */
 601:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 602:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 603:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              and scan conversions interrupted every selected number
 604:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 605:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 606:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    enabled (scan length of 2 ranks or more).
 607:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 608:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetSequencerDiscont(). */
 609:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
ARM GAS  /tmp/cc46GlVT.s 			page 30


 610:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 611:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              regular.
 612:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 613:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 614:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    trigger source is set to an external trigger.
 615:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 616:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetTrigAuto(). */
 617:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 618:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 619:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 620:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 621:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 622:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 623:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 624:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 625:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 626:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 627:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 628:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 629:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 630:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 632:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 633:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 634:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 635:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 636:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion */
 637:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 638:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversions */
 639:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 640:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 642:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    conversion */
 643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 644:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    conversions */
 645:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 646:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    overflow */
 647:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 648:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 649:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 650:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 652:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 653:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 654:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    unitary conversion */
 655:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 656:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    unitary conversion */
 657:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 658:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    sequence conversions */
 659:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 660:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    sequence conversions */
 661:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 662:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    overrun */
 663:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 664:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    overrun */
 665:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 666:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    sampling phase */
ARM GAS  /tmp/cc46GlVT.s 			page 31


 667:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 668:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    sampling phase */
 669:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 670:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    unitary conversion */
 671:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 672:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    unitary conversion */
 673:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 674:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    sequence conversions */
 675:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 676:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    sequence conversions */
 677:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 678:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    contexts queue overflow */
 679:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 680:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    contexts queue overflow */
 681:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 682:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    of the ADC master */
 683:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 684:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    of the ADC slave */
 685:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 686:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    of the ADC master */
 687:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 688:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    of the ADC slave */
 689:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 690:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    of the ADC master */
 691:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 692:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    of the ADC slave */
 693:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 694:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 695:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 696:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 697:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 698:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 699:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 700:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 701:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 702:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 703:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 704:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    conversion */
 705:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 706:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    conversions */
 707:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 708:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 709:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    phase */
 710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 711:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    conversion */
 712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 713:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    conversions */
 714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 715:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    overflow */
 716:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 717:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 718:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 719:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 720:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 721:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 722:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 723:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
ARM GAS  /tmp/cc46GlVT.s 			page 32


 724:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 725:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 726:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 727:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* DMA transfer.                                                              */
 728:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 729:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA        (0x00000000UL)      /* ADC group regular conversion data
 730:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (corresponding to register DR) to be used with ADC confi
 731:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            mode. Without DMA transfer, register accessed by LL func
 732:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            @ref LL_ADC_REG_ReadConversionData32() and other
 733:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            functions @ref LL_ADC_REG_ReadConversionDatax() */
 734:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 735:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI  (0x00000001UL)      /* ADC group regular conversion data
 736:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (corresponding to register CDR) to be used with ADC conf
 737:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (available on STM32 devices with several ADC instances).
 738:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Without DMA transfer, register accessed by LL function
 739:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            @ref LL_ADC_REG_ReadMultiConversionData32() */
 740:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 741:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 742:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 743:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 744:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 745:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 746:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 747:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 748:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                    /*!< ADC synchrono
 749:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            AHB clock without prescaler */
 750:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1)                    /*!< ADC synchrono
 751:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            AHB clock with prescaler division by 2 */
 752:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0) /*!< ADC synchrono
 753:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            AHB clock with prescaler division by 4 */
 754:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                      /*!< ADC asynchronou
 755:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler */
 756:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                   /*!< ADC asynchronou
 757:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 2 */
 758:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1)                   /*!< ADC asynchronou
 759:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 4 */
 760:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 761:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 6 */
 762:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2)                   /*!< ADC asynchronou
 763:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 8 */
 764:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 765:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 10 */
 766:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 767:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 12 */
 768:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 \
 769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
 770:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 16  */
 771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                   /*!< ADC asynchronou
 772:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 32 */
 773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 774:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 64 */
 775:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 128 */
 777:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 \
 778:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
 779:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            prescaler division by 256 */
 780:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
ARM GAS  /tmp/cc46GlVT.s 			page 33


 781:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 782:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 783:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 784:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 785:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 786:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 787:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 788:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 789:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 790:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 791:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 792:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)       /*!< ADC measurement paths all disa
 793:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)     /*!< ADC measurement path to intern
 794:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)       /*!< ADC measurement path to intern
 795:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                      temperature sensor */
 796:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)     /*!< ADC measurement path to intern
 797:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 798:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 799:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 801:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 803:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 804:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 805:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 806:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 807:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 808:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 809:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 810:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 811:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 812:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 813:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 814:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 815:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)     /*!< ADC conversion data alignment: r
 816:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (alignment on data register LSB bit 0)*/
 817:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)   /*!< ADC conversion data alignment: l
 818:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (alignment on data register MSB bit 15)*/
 819:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 820:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 821:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 822:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 823:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 824:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 825:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)     /*!< No ADC low power mode activated 
 827:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)  /*!< ADC low power mode auto delay: D
 828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            mode, ADC conversions are performed only when necessary
 829:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (when previous ADC conversion data is read).
 830:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            See description with function @ref LL_ADC_SetLowPowerMod
 831:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 832:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 833:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 834:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset instance
 836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 837:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc46GlVT.s 			page 34


 838:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset instance 1: ADC chann
 839:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 840:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 841:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset instance 2: ADC chann
 842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 843:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 844:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset instance 3: ADC chann
 845:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 846:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset instance 4: ADC chann
 848:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 849:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 851:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 852:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 853:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 854:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 855:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 856:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 857:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled
 858:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (setting offset instance wise) */
 859:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled
 860:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (setting offset instance wise) */
 861:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 862:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 863:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 864:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 865:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SIGN ADC instance - Offset sign
 866:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 867:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 868:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_NEGATIVE        (0x00000000UL)       /*!< ADC offset is negative */
 869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_POSITIVE        (ADC_OFR1_OFFSETPOS) /*!< ADC offset is positive */
 870:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 872:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 873:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 874:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SATURATION ADC instance - Offset saturation mode
 875:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 876:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 877:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_DISABLE   (0x00000000UL)     /*!< ADC offset saturation is disable
 878:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            selected offset instance 1, 2, 3 or 4) */
 879:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_ENABLE    (ADC_OFR1_SATEN)   /*!< ADC offset saturation is enabled
 880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            selected offset instance 1, 2, 3 or 4) */
 881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 884:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 885:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 886:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 887:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL)     /*!< ADC group regular (available on 
 888:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL)     /*!< ADC group injected (not availabl
 889:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            devices)*/
 890:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL)     /*!< ADC both groups regular and inje
 891:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 892:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 893:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 894:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
ARM GAS  /tmp/cc46GlVT.s 			page 35


 895:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 896:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 897:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 898:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP \
 899:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_0_BITFIELD)                       /*!< AD
 900:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP \
 901:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_1_BITFIELD)                       /*!< AD
 902:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP \
 903:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_2_BITFIELD)                       /*!< AD
 904:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP \
 905:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_3_BITFIELD)                       /*!< AD
 906:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP \
 907:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_4_BITFIELD)                       /*!< AD
 908:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP \
 909:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_5_BITFIELD)                       /*!< AD
 910:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP \
 911:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_6_BITFIELD)                       /*!< AD
 912:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP \
 913:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_7_BITFIELD)                       /*!< AD
 914:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP \
 915:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_8_BITFIELD)                       /*!< AD
 916:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP \
 917:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_9_BITFIELD)                       /*!< AD
 918:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP \
 919:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_10_BITFIELD)                      /*!< AD
 920:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP \
 921:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_11_BITFIELD)                      /*!< AD
 922:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP \
 923:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_12_BITFIELD)                      /*!< AD
 924:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP \
 925:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_13_BITFIELD)                      /*!< AD
 926:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP \
 927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_14_BITFIELD)                      /*!< AD
 928:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP \
 929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_15_BITFIELD)                      /*!< AD
 930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP \
 931:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_16_BITFIELD) /*!< ADC channel ADCx_IN16 *
 932:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP \
 933:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_17_BITFIELD) /*!< ADC channel ADCx_IN17 *
 934:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP \
 935:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_18_BITFIELD) /*!< ADC channel ADCx_IN18 *
 936:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_19                  (ADC_CHANNEL_19_NUMBER | ADC_CHANNEL_19_SMP \
 937:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CHANNEL_19_BITFIELD) /*!< ADC channel ADCx_IN19 *
 938:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined (ADC2)
 939:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH)   /*!< 
 940:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            connected to VrefInt: Internal voltage reference.
 941:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
 942:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH)   /*!< 
 943:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            connected to internal temperature sensor.
 944:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
 945:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH_2) /*!< 
 946:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            connected to Vbat/4: Vbat voltage through a divider ladd
 947:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to have channel voltage always below Vdda.
 948:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
 949:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_VDDCORE             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH_2) /*!< 
 950:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            connected to Vddcore.
 951:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
ARM GAS  /tmp/cc46GlVT.s 			page 36


 952:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
 953:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 954:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            connected to VrefInt: Internal voltage reference. */
 955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 956:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            connected to internal temperature sensor.*/
 957:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_2  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 958:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            connected to Vbat/4: Vbat voltage through a divider ladd
 959:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to have channel voltage always below Vdda. */
 960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_VDDCORE             (LL_ADC_CHANNEL_6  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 961:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            connected to Vddcore.*/
 962:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC2 */
 963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 964:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definitions for backward compatibility with legacy STM32 series */
 965:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_CHANNEL_VCORE               LL_ADC_CHANNEL_VDDCORE
 966:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
 967:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
 968:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 969:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 970:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 971:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
 972:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
 973:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Triggers common to all devices of STM32H5 series */
 974:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                        /*
 975:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger internal: SW start. */
 976:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                       /*
 977:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
 978:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (capture compare: input capture or output capture).
 979:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 980:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
 981:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
 982:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (capture compare: input capture or output capture).
 983:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 984:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
 985:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
 986:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (capture compare: input capture or output capture).
 987:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 988:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 \
 989:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
 990:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 channe
 991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (capture compare: input capture or output capture).
 992:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
 994:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 TRGO e
 995:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 996:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 \
 997:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
 998:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: external in
 999:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            event. Trigger edge set to rising edge (default setting)
1000:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 \
1001:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
1002:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO e
1003:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1004:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 \
1005:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
1006:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO2 
1007:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1008:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 \
ARM GAS  /tmp/cc46GlVT.s 			page 37


1009:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*
1010:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 TRGO e
1011:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1012:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 \
1013:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*
1014:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM6 TRGO e
1015:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1016:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 \
1017:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 \
1018:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
1019:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1020:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (capture compare: input capture or output capture).
1021:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1022:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE15    (ADC_CFGR_EXTSEL_4 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
1023:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: LPTIM1 OUT 
1024:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1025:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM1_CH1     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 \
1026:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
1027:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: LPTIM2 OUT 
1028:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1029:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM2_CH1     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 \
1030:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*
1031:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: LPTIM3 even
1032:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1033:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1034:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Triggers specific to some devices of STM32H5 series */
1035:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(TIM8)
1036:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Devices STM32H563/H573xx */
1037:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 \
1038:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
1039:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM4 channe
1040:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (capture compare: input capture or output capture).
1041:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1042:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
1043:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 \
1044:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*
1045:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM12 TRGO 
1046:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1047:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
1048:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
1049:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM8 TRGO e
1050:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1051:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
1052:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 \
1053:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
1054:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM4 TRGO e
1055:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1056:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
1057:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 \
1058:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*
1059:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM15 TRGO 
1060:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1061:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
1062:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
1063:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Devices STM32H503xx */
1064:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM7_TRGO      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_0 \
1065:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)                     /*
ARM GAS  /tmp/cc46GlVT.s 			page 38


1066:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM7 TRGO e
1067:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting).
1068:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H503xx. */
1069:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* Devices STM32H563/H573xx or STM32H503xx */
1070:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1071:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1072:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1073:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
1075:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1077:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (ADC_CFGR_EXTEN_0)                      /*!< ADC group r
1078:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            trigger polarity set to rising edge */
1079:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1)                      /*!< ADC group r
1080:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            trigger polarity set to falling edge */
1081:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
1082:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            trigger polarity set to both rising and falling edges */
1083:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1084:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1085:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1086:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1087:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SAMPLING_MODE  ADC group regular - Sampling mode
1088:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1090:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_NORMAL               (0x00000000UL)       /*!< ADC conversions sam
1091:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            is defined using  @ref ADC_LL_EC_CHANNEL_SAMPLINGTIME */
1092:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_BULB                 (ADC_CFGR2_BULB)     /*!< ADC conversions sam
1093:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            immediately after end of conversion, and stops upon trig
1094:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Note: First conversion is using minimal sampling time
1095:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (see @ref ADC_LL_EC_CHANNEL_SAMPLINGTIME) */
1096:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED    (ADC_CFGR2_SMPTRIG)  /*!< ADC conversions sam
1097:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            controlled by trigger events: trigger rising edge for st
1098:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            trigger falling edge for stop sampling and start convers
1099:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1100:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1102:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
1104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1106:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)     /*!< ADC conversions performed in sin
1107:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            one conversion per trigger */
1108:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)    /*!< ADC conversions performed in con
1109:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            after the first trigger, following conversions launched 
1110:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            automatically */
1111:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1112:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1113:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1114:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1115:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
1116:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1117:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1118:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)     /*!< ADC conversions are not transfer
1119:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (ADC_CFGR_DMAEN)   /*!< ADC conversion data are transfer
1120:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            in limited mode (one shot mode): DMA transfer requests a
1121:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            number of DMA data transfers (number of ADC conversions)
1122:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode non-c
ARM GAS  /tmp/cc46GlVT.s 			page 39


1123:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
1124:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            transferred by DMA, in unlimited mode: DMA transfer requ
1125:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            whatever number of DMA data transferred (number of ADC c
1126:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode circu
1127:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1129:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
1132:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON_CONFIG ADC instance - ADC sampling time common configur
1133:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1134:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1135:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_DEFAULT      (0x00000000UL)      /*!< ADC sampling time let to d
1136:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5 (ADC_SMPR1_SMPPLUS) /*!< ADC additional sampling ti
1137:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            cycles replacing 2.5 ADC clock cycles (this applies to a
1138:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with selection sampling time 2.5 ADC clock cycles, whate
1139:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            on ADC groups regular or injected). */
1140:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1141:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1142:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1143:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
1144:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1145:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
1146:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1147:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1148:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)     /*!< ADC group regular behavior in ca
1149:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    data preserved */
1150:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)  /*!< ADC group regular behavior in ca
1151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    data overwritten */
1152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1153:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1156:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
1157:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1158:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1159:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                 /*!< ADC group regular se
1160:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (equivalent to sequencer of 1 rank: ADC conversion on on
1161:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_SQR1_L_0)                 /*!< ADC group regular se
1162:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 2 ranks in the sequence */
1163:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_SQR1_L_1)                 /*!< ADC group regular se
1164:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 3 ranks in the sequence */
1165:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_SQR1_L_1 | ADC_SQR1_L_0)  /*!< ADC group regular se
1166:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 4 ranks in the sequence */
1167:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_SQR1_L_2)                 /*!< ADC group regular se
1168:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 5 ranks in the sequence */
1169:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_SQR1_L_2 | ADC_SQR1_L_0)  /*!< ADC group regular se
1170:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 6 ranks in the sequence */
1171:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_SQR1_L_2 | ADC_SQR1_L_1) /*!< ADC group regular seq
1172:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 7 ranks in the sequence */
1173:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (ADC_SQR1_L_2 | ADC_SQR1_L_1 \
1174:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SQR1_L_0)                /*!< ADC group regular s
1175:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 8 ranks in the sequence */
1176:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3)                 /*!< ADC group regular se
1177:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 9 ranks in the sequence */
1178:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_0)  /*!< ADC group regular se
1179:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 10 ranks in the sequence */
ARM GAS  /tmp/cc46GlVT.s 			page 40


1180:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_1)  /*!< ADC group regular se
1181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 11 ranks in the sequence */
1182:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_1 \
1183:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SQR1_L_0)                /*!< ADC group regular s
1184:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 12 ranks in the sequence */
1185:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2)  /*!< ADC group regular se
1186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 13 ranks in the sequence */
1187:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 \
1188:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SQR1_L_0)                /*!< ADC group regular s
1189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 14 ranks in the sequence */
1190:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 \
1191:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SQR1_L_1)                /*!< ADC group regular s
1192:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 15 ranks in the sequence */
1193:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 \
1194:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SQR1_L_1 | ADC_SQR1_L_0) /*!< ADC group regular s
1195:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                               with 16 ranks in the 
1196:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1197:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1198:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1199:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1200:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
1201:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1202:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1203:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                          /*!< ADC group r
1204:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode disable */
1205:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR_DISCEN)                       /*!< ADC group r
1206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1207:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (ADC_CFGR_DISCNUM_0 | ADC_CFGR_DISCEN)  /*!< ADC group r
1208:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode enabled with sequence interruption ev
1209:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISCEN)  /*!< ADC group r
1210:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1211:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISCNUM_0 \
1212:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_DISCEN)                       /*!< ADC group
1213:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1214:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCEN)   /*!< ADC group 
1215:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1216:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_0 \
1217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_DISCEN)                       /*!< ADC group
1218:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 \
1220:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_DISCEN)                       /*!< ADC group
1221:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1222:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 \
1223:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_DISCNUM_0 | ADC_CFGR_DISCEN)  /*!< ADC group
1224:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1225:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1226:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1227:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1228:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1229:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
1230:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1231:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1232:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
1233:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 1 */
1234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
1235:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 2 */
1236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
ARM GAS  /tmp/cc46GlVT.s 			page 41


1237:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 3 */
1238:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
1239:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 4 */
1240:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
1241:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 5 */
1242:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
1243:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 6 */
1244:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
1245:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 7 */
1246:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
1247:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 8 */
1248:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
1249:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 9 */
1250:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
1251:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 10 */
1252:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
1253:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 11 */
1254:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
1255:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 12 */
1256:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
1257:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 13 */
1258:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
1259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 14 */
1260:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
1261:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 15 */
1262:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
1263:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular sequencer rank 16 */
1264:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1265:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1266:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1267:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1268:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
1269:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1270:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1271:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Triggers common to all devices of STM32H5 series */
1272:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                        /*
1273:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger internal: SW start. */
1274:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                       /*
1275:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO e
1276:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting). */
1277:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)  /*
1278:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
1279:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1280:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (default setting). */
1281:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)  /*
1282:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 TRGO e
1283:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting). */
1284:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 \
1285:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1286:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 channe
1287:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1288:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (default setting). */
1289:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)  /*
1290:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1291:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1292:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (default setting). */
1293:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 \
ARM GAS  /tmp/cc46GlVT.s 			page 42


1294:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1295:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: external in
1296:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1297:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)  /*
1298:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO2 
1299:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting). */
1300:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 \
1301:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)/*
1302:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1303:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1304:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (default setting). */
1305:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 \
1306:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1307:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 TRGO e
1308:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting). */
1309:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 \
1310:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)/*
1311:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1312:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (default setting). */
1314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 \
1315:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)/*
1316:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM6 TRGO e
1317:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting). */
1318:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM1_CH1     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 \
1319:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1320:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: LPTIM1 chan
1321:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            edge set to rising edge (default setting). */
1322:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM2_CH1     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 \
1323:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)/*
1324:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: LPTIM2 chan
1325:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            edge set to rising edge (default setting). */
1326:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1327:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Triggers specific to some devices of STM32H5 series */
1328:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(TIM8)
1329:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Devices STM32H563/H573xx */
1330:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 \
1331:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1332:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM4 TRGO e
1333:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting).
1334:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
1335:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 \
1336:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)/*
1337:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM9 channe
1338:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1339:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (default setting).
1340:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
1341:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 \
1342:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1343:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM12 TRGO 
1344:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting).
1345:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
1346:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 \
1347:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1348:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM9 TRGO e
1349:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting).
1350:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Specific to devices: STM32H563/H573xx. */
ARM GAS  /tmp/cc46GlVT.s 			page 43


1351:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 \
1352:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 \
1353:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1354:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM15 TRGO 
1355:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting). */
1356:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
1357:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Devices STM32H503xx */
1358:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM7_TRGO      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_0 \
1359:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                     /*
1360:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM7 TRGO e
1361:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to rising edge (default setting). */
1362:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* Devices STM32H563/H573xx or STM32H503xx */
1363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1364:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1365:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1366:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1367:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
1368:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1369:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1370:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
1371:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            trigger polarity set to rising edge */
1372:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
1373:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            trigger polarity set to falling edge */
1374:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
1375:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            trigger polarity set to both rising and falling edges */
1376:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1377:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1378:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1379:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1380:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
1381:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1382:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1383:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)     /*!< ADC group injected conversion tr
1384:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            Setting mandatory if ADC group injected injected trigger
1385:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            an external trigger. */
1386:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)   /*!< ADC group injected conversion tr
1387:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular. Setting compliant only with group injected trig
1388:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            SW start, without any further action on  ADC group injec
1389:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            or stop: in this case, ADC group injected is controlled 
1390:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular. */
1391:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1393:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1395:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
1396:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1397:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1398:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)   /* Group injected sequence context 
1399:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            and can contain up to 2 contexts. When all contexts have
1400:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            the queue maintains the last context active perpetually.
1401:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)   /* Group injected sequence context 
1402:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            and can contain up to 2 contexts. When all contexts have
1403:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            the queue is empty and injected group triggers are disab
1404:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS) /* Group injected sequence context 
1405:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            only 1 sequence can be configured and is active perpetua
1406:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1407:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cc46GlVT.s 			page 44


1408:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1409:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1410:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1411:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1413:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1414:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (equivalent to sequencer of 1 rank: ADC conversion on on
1415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1416:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 2 ranks in the sequence */
1417:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1418:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 3 ranks in the sequence */
1419:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1420:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            with 4 ranks in the sequence */
1421:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1422:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1423:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1424:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1425:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1426:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1427:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1428:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)     /*!< ADC group injected sequencer dis
1429:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            disable */
1430:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN) /*!< ADC group injected sequencer dis
1431:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            enable with sequence interruption every rank */
1432:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1433:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1434:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1435:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1436:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1437:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1438:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1439:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET \
1440:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS) /*!< ADC group inj
1441:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET \
1442:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS) /*!< ADC group inj
1443:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET \
1444:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS) /*!< ADC group inj
1445:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET \
1446:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS) /*!< ADC group inj
1447:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1448:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1449:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1450:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1451:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1452:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1453:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1454:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)       /*!< Sampling time 2.5 ADC clock cy
1455:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (ADC_SMPR2_SMP10_0)  /*!< Sampling time 6.5 ADC clock cy
1456:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR2_SMP10_1)  /*!< Sampling time 12.5 ADC clock c
1457:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (ADC_SMPR2_SMP10_1 \
1458:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_0) /*!< Sampling time 24.5 ADC clock 
1459:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2)  /*!< Sampling time 47.5 ADC clock c
1460:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2 \
1461:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_0) /*!< Sampling time 92.5 ADC clock 
1462:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 \
1463:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_1) /*!< Sampling time 247.5 ADC clock
1464:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 \
ARM GAS  /tmp/cc46GlVT.s 			page 45


1465:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_1 \
1466:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_0) /*!< Sampling time 640.5 ADC clock
1467:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1468:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1469:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1470:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1471:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1472:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1473:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1474:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1475:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to single ended (literal also used to set calibratio
1476:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1477:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to differential (literal also used to set calibratio
1478:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1479:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            set to both single ended and differential (literal used 
1480:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            calibration factors) */
1481:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1482:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1483:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1484:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1485:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1486:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1487:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1488:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK \
1489:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_AWD_CR1_REGOFFSET) /*!< ADC analog watchdog numbe
1490:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK \
1491:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_AWD_CR2_REGOFFSET) /*!< ADC analog watchdog numbe
1492:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK \
1493:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_AWD_CR3_REGOFFSET) /*!< ADC analog watchdog numbe
1494:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1495:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1496:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1497:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1498:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1500:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1501:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                           /*!< ADC analog
1502:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            disabled */
1503:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK \
1504:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN)                       /*!< ADC analo
1505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of all channels, converted by group regular only */
1506:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK \
1507:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN)                      /*!< ADC analo
1508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of all channels, converted by group injected only */
1509:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK \
1510:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN)    /*!< ADC analo
1511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of all channels, converted by either group regular or in
1512:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
1513:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1514:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by group regular only
1515:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
1516:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1517:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by group injected onl
1518:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
1519:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1520:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1521:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by either group regul
ARM GAS  /tmp/cc46GlVT.s 			page 46


1522:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
1523:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1524:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by group regular only
1525:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
1526:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1527:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by group injected onl
1528:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
1529:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1530:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1531:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by either group regul
1532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
1533:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by group regular only
1535:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
1536:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1537:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by group injected onl
1538:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
1539:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1540:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1541:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by either group regul
1542:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
1543:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1544:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by group regular only
1545:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
1546:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1547:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by group injected onl
1548:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
1549:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1550:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1551:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by either group regul
1552:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
1553:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1554:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by group regular only
1555:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
1556:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1557:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by group injected onl
1558:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
1559:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1560:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1561:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by either group regul
1562:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
1563:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1564:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by group regular only
1565:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
1566:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1567:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by group injected onl
1568:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
1569:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1570:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1571:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by either group regul
1572:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
1573:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1574:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by group regular only
1575:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
1576:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1577:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by group injected onl
1578:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
ARM GAS  /tmp/cc46GlVT.s 			page 47


1579:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1580:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1581:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by either group regul
1582:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
1583:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1584:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by group regular only
1585:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
1586:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1587:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by group injected onl
1588:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
1589:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1590:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1591:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by either group regul
1592:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1593:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1594:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by group regular only
1595:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1596:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1597:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by group injected onl
1598:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1599:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1600:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1601:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by either group regul
1602:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1603:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1604:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by group regular only
1605:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1606:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1607:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by group injected onl
1608:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1609:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1610:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1611:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by either group regul
1612:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) \
1613:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1614:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by group regular onl
1615:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) \
1616:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1617:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by group injected on
1618:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)\
1619:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1620:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1621:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by either group regu
1622:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
1623:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1624:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by group regular onl
1625:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
1626:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1627:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by group injected on
1628:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
1629:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1630:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by either group regu
1632:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
1633:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1634:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by group regular onl
1635:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
ARM GAS  /tmp/cc46GlVT.s 			page 48


1636:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1637:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by group injected on
1638:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
1639:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1640:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by either group regu
1642:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1644:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by group regular onl
1645:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1646:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1647:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by group injected on
1648:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1649:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1650:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by either group regu
1652:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1653:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1654:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by group regular onl
1655:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1656:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1657:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by group only */
1658:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1659:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1660:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1661:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by either group regu
1662:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1663:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1664:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            monitoring of ADC channel ADCx_IN15, converted by group 
1665:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1666:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1667:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN15, converted by group injected on
1668:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1669:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1670:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1671:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN15, converted by either group
1672:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular or injected */
1673:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1674:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1675:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by group regular onl
1676:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1677:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1678:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by group injected on
1679:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1680:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1681:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1682:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by either group regu
1683:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1684:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1685:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by group regular onl
1686:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1687:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1688:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by group injected on
1689:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1690:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1691:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1692:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by either group regu
ARM GAS  /tmp/cc46GlVT.s 			page 49


1693:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1694:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1695:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by group regular onl
1696:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1697:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1698:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by group injected on
1699:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1700:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1701:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1702:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by either group regu
1703:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_REG          ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK) \
1704:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1705:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN19, converted by group regular onl
1706:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_INJ          ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK) \
1707:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1708:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN19, converted by group injected on
1709:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_REG_INJ      ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK) \
1710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1711:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC channel ADCx_IN19, converted by either group regu
1713:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) \
1714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1715:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to VrefInt: Internal v
1716:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by group regular only.
1717:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1718:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) \
1719:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1720:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             of ADC internal channel connected to VrefInt: Internal 
1721:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             converted by group injected only.
1722:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             On STM32H563xx/573xx, ADC channel available only on ADC
1723:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) \
1724:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1725:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1726:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to VrefInt: Internal v
1727:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by either group regular or injected.
1728:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1729:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) \
1730:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1731:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to internal temperatur
1732:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by group regular only.
1733:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1734:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) \
1735:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1736:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to internal temperatur
1737:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by group injected only.
1738:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1739:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) \
1740:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1741:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1742:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to internal temperatur
1743:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by either group regular or injected.
1744:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1745:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) \
1746:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1747:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to Vbat/4: Vbat voltag
1748:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            a divider ladder of factor 1/4 to have channel voltage a
1749:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by group regular only.
ARM GAS  /tmp/cc46GlVT.s 			page 50


1750:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1751:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) \
1752:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1753:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to Vbat/4: Vbat voltag
1754:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            a divider ladder of factor 1/4 to have channel voltage a
1755:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by group injected only.
1756:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1757:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) \
1758:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1759:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1760:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to Vbat/4: Vbat voltag
1761:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            a divider ladder of factor 1/4 to have channel voltage a
1762:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1763:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VDDCORE_REG          ((LL_ADC_CHANNEL_VDDCORE    & ADC_CHANNEL_ID_MASK) \
1764:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1765:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to Vddcore, converted 
1766:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1767:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VDDCORE_INJ          ((LL_ADC_CHANNEL_VDDCORE    & ADC_CHANNEL_ID_MASK) \
1768:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to Vddcore,
1770:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by group injected only.
1771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1772:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VDDCORE_REG_INJ      ((LL_ADC_CHANNEL_VDDCORE    & ADC_CHANNEL_ID_MASK) \
1773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1774:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1775:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            of ADC internal channel connected to Vddcore,
1776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            converted by either group regular or injected.
1777:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            On STM32H563xx/573xx, ADC channel available only on ADC 
1778:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1779:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Definitions for backward compatibility with legacy STM32 series */
1780:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VCORE_REG            LL_ADC_AWD_CH_VDDCORE_REG
1781:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VCORE_INJ            LL_ADC_AWD_CH_VDDCORE_INJ
1782:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_CH_VCORE_REG_INJ        LL_ADC_AWD_CH_VDDCORE_REG_INJ
1783:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1784:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1785:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1786:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1787:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1788:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1789:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1790:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1)      /*!< ADC analog watchdog threshold hi
1791:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (ADC_TR1_LT1)      /*!< ADC analog watchdog threshold lo
1792:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 \
1793:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_TR1_LT1)     /*!< ADC analog watchdog both thresh
1794:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            concatenated into the same data */
1795:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1796:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1797:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1798:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1799:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_FILTERING_CONFIG  Analog watchdog - filtering config
1800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1801:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_NONE          (0x00000000UL)                          /*!< ADC analog 
1803:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            one out-of-window sample is needed to raise flag or inte
1804:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_2SAMPLES      (ADC_TR1_AWDFILT_0)                     /*!< ADC analog 
1805:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            out-of-window samples are needed to raise flag or interr
1806:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_3SAMPLES      (ADC_TR1_AWDFILT_1)                     /*!< ADC analog 
ARM GAS  /tmp/cc46GlVT.s 			page 51


1807:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
1808:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_4SAMPLES      (ADC_TR1_AWDFILT_1 | ADC_TR1_AWDFILT_0) /*!< ADC analog 
1809:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
1810:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_5SAMPLES      (ADC_TR1_AWDFILT_2)                     /*!< ADC analog 
1811:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
1812:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_6SAMPLES      (ADC_TR1_AWDFILT_2 | ADC_TR1_AWDFILT_0) /*!< ADC analog 
1813:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
1814:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_7SAMPLES      (ADC_TR1_AWDFILT_2 | ADC_TR1_AWDFILT_1) /*!< ADC analog 
1815:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
1816:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_8SAMPLES      (ADC_TR1_AWDFILT_2 | ADC_TR1_AWDFILT_1 \
1817:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_TR1_AWDFILT_0)                    /*!< ADC analog
1818:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            consecutives out-of-window samples are needed to raise f
1819:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1820:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1821:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1822:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1823:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1824:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1825:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                      /*!< ADC oversamplin
1827:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (ADC_CFGR2_ROVSE)                   /*!< ADC oversamplin
1828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            ADC group regular. If group injected interrupts group re
1829:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            when ADC group injected is triggered, the oversampling o
1830:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            is temporary stopped and continued afterwards. */
1831:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM | ADC_CFGR2_ROVSE) /*!< ADC oversamplin
1832:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            ADC group regular. If group injected interrupts group re
1833:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            when ADC group injected is triggered, the oversampling o
1834:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            is resumed from start (oversampler buffer reset). */
1835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (ADC_CFGR2_JOVSE)                   /*!< ADC oversamplin
1836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            ADC group injected. */
1837:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*!< ADC oversamplin
1838:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            both ADC groups regular and injected. If group injected 
1839:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular: when ADC group injected is triggered, the overs
1840:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular is resumed from start (oversampler buffer reset)
1841:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1843:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1844:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1845:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1846:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1848:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)     /*!< ADC oversampling discontinuous m
1849:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** (all conversions of oversampling ratio are done from 1 trigger) */
1850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)  /*!< ADC oversampling discontinuous m
1851:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            mode (each conversion of oversampling ratio needs a trig
1852:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1853:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1854:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1855:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1856:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1857:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1858:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1859:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                        /*!< ADC oversampl
1860:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1861:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (before potential shift) */
1862:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (ADC_CFGR2_OVSR_0)                    /*!< ADC oversampl
1863:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
ARM GAS  /tmp/cc46GlVT.s 			page 52


1864:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (before potential shift) */
1865:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (ADC_CFGR2_OVSR_1)                    /*!< ADC oversampl
1866:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1867:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (before potential shift) */
1868:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1870:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (before potential shift) */
1871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2)                    /*!< ADC oversampl
1872:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1873:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (before potential shift) */
1874:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1875:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1876:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (before potential shift) */
1877:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1) /*!< ADC oversampl
1878:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1879:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (before potential shift) */
1880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 \
1881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR2_OVSR_0)                   /*!< ADC oversamp
1882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (before potential shift) */
1884:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1885:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1886:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1887:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1888:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data right shift
1889:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1890:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1891:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                        /*!< ADC oversampl
1892:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data is not divided to resul
1893:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            conversion data) */
1894:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (ADC_CFGR2_OVSS_0)                    /*!< ADC oversampl
1895:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1896:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1897:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (ADC_CFGR2_OVSS_1)                    /*!< ADC oversampl
1898:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1899:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1900:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (ADC_CFGR2_OVSS_1 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1901:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1902:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1903:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (ADC_CFGR2_OVSS_2)                    /*!< ADC oversampl
1904:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1905:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1906:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1907:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1908:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1909:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1) /*!< ADC oversampl
1910:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1911:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1912:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 \
1913:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CFGR2_OVSS_0)                   /*!< ADC oversamp
1914:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1915:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1916:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3)                    /*!< ADC oversampl
1917:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1918:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1919:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1920:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cc46GlVT.s 			page 53


1921:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1922:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1923:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1924:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1925:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1926:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                    /*!< ADC dual mode dis
1928:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            independent mode) */
1929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1) /*!< ADC dual mode ena
1930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            simultaneous */
1931:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 \
1932:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CCR_DUAL_0)                  /*!< ADC dual mode e
1933:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular interleaved */
1934:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (ADC_CCR_DUAL_2 | ADC_CCR_DUAL_0) /*!< ADC dual mode ena
1935:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            simultaneous */
1936:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3 | ADC_CCR_DUAL_0) /*!< ADC dual mode ena
1937:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            alternate trigger. Works only with external triggers (no
1938:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (ADC_CCR_DUAL_0)                  /*!< ADC dual mode ena
1939:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular simultaneous + group injected simultaneous */
1940:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (ADC_CCR_DUAL_1)                  /*!< ADC dual mode ena
1941:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular simultaneous + group injected alternate trigger 
1942:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (ADC_CCR_DUAL_1 | ADC_CCR_DUAL_0) /*!< ADC dual mode ena
1943:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            regular interleaved + group injected simultaneous */
1944:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1945:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1946:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1947:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1948:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1949:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1950:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1951:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                    /*!< ADC multimode g
1952:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              conversions are transferred by DMA: each ADC uses its 
1953:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              with its individual DMA transfer settings */
1954:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B (ADC_CCR_MDMA_1)                  /*!< ADC multimode g
1955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
1956:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ADC master), in limited mode (one shot mode): DMA tran
1957:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              are stopped when number of DMA data transfers (number 
1958:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              is reached. This ADC mode is intended to be used with 
1959:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              non-circular. Setting for ADC resolution of 12 and 10 
1960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B   (ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!< ADC multimode g
1961:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
1962:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ADC master), in limited mode (one shot mode): DMA tran
1963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              are stopped when number of DMA data transfers (number 
1964:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              is reached. This ADC mode is intended to be used with 
1965:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              non-circular. Setting for ADC resolution of 8 and 6 bi
1966:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B (ADC_CCR_DMACFG | ADC_CCR_MDMA_1) /*!< ADC multimode g
1967:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
1968:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ADC master), in unlimited mode: DMA transfer requests 
1969:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              whatever number of DMA data transferred (number of ADC
1970:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This ADC mode is intended to be used with DMA mode cir
1971:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              Setting for ADC resolution of 12 and 10 bits */
1972:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B   (ADC_CCR_DMACFG | ADC_CCR_MDMA_1 \
1973:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                               | ADC_CCR_MDMA_0)                 /*!< ADC multimode 
1974:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
1975:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ADC master), in unlimited mode: DMA transfer requests 
1976:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              whatever number of DMA data transferred (number of ADC
1977:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              This ADC mode is intended to be used with DMA mode cir
ARM GAS  /tmp/cc46GlVT.s 			page 54


1978:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              Setting for ADC resolution of 8 and 6 bits */
1979:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
1980:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
1981:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1982:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
1983:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1984:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
1985:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
1986:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE   (0x00000000UL)                      /*!< ADC multimode d
1987:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 1 ADC clock cycle */
1988:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES  (ADC_CCR_DELAY_0)                   /*!< ADC multimode d
1989:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 2 ADC clock cycles */
1990:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES  (ADC_CCR_DELAY_1)                   /*!< ADC multimode d
1991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 3 ADC clock cycles */
1992:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES  (ADC_CCR_DELAY_1 | ADC_CCR_DELAY_0) /*!< ADC multimode d
1993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 4 ADC clock cycles */
1994:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES  (ADC_CCR_DELAY_2)                   /*!< ADC multimode d
1995:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 5 ADC clock cycles */
1996:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (ADC_CCR_DELAY_2 | ADC_CCR_DELAY_0) /*!< ADC multimode d
1997:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 6 ADC clock cycles */
1998:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1) /*!< ADC multimode d
1999:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 7 ADC clock cycles */
2000:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1 \
2001:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CCR_DELAY_0)                  /*!< ADC multimode 
2002:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 8 ADC clock cycles */
2003:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (ADC_CCR_DELAY_3)                   /*!< ADC multimode d
2004:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 9 ADC clock cycles */
2005:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (ADC_CCR_DELAY_3 | ADC_CCR_DELAY_0) /*!< ADC multimode d
2006:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 10 ADC clock cycles */
2007:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (ADC_CCR_DELAY_3 | ADC_CCR_DELAY_1) /*!< ADC multimode d
2008:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 11 ADC clock cycles */
2009:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (ADC_CCR_DELAY_3 | ADC_CCR_DELAY_1 \
2010:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CCR_DELAY_0)                  /*!< ADC multimode 
2011:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            sampling phases: 12 ADC clock cycles */
2012:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2013:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
2014:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2015:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2016:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
2017:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
2018:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2019:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (ADC_CDR_RDATA_MST) /*!< In multimode, selection among s
2020:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            instances: ADC master */
2021:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV) /*!< In multimode, selection among s
2022:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            instances: ADC slave */
2023:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV \
2024:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                             | ADC_CDR_RDATA_MST) /*!< In multimode, selection among
2025:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            instances: both ADC master and ADC slave */
2026:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2027:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
2028:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2029:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2030:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2031:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2032:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HELPER_MACRO  Definitions of constants used by helper macro
2033:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
2034:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc46GlVT.s 			page 55


2035:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_TEMPERATURE_CALC_ERROR      ((int16_t)0x7FFF)  /* Temperature calculation error usin
2036:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                  @ref __LL_ADC_CALC_TEMPERATURE(), 
2037:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                  calibration parameters. This value
2038:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                  (to fit on signed word or double w
2039:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                  to an inconsistent temperature val
2040:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2041:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
2042:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2043:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2044:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
2045:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
2046:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         not timeout values.
2047:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
2048:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         above each literal definition.
2049:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
2050:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2051:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2052:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
2053:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       not timeout values.                                                  */
2054:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
2055:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
2056:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
2057:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
2058:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       STM32 series:                                                        */
2059:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
2060:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
2061:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
2062:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
2063:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
2064:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
2065:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*         cycles                                                             */
2066:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
2067:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*         configuration.                                                     */
2068:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
2069:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2070:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
2071:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
2072:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
2073:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Unit: us                                                                   */
2074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)           /*!< Delay for ADC stabilization time
2075:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                               regulator start-up time) */
2076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2077:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
2078:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
2079:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
2080:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Unit: us                                                                   */
2081:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)        /*!< Delay for internal voltage refer
2082:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    time */
2083:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2084:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
2085:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
2086:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* parameter "tSTART").                                                       */
2087:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Unit: us                                                                   */
2088:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        ( 26UL)        /*!< Delay for temperature sensor sta
2089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 26UL)        /*!< Delay for temperature sensor buf
2090:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    time (starting from ADC enable, 
2091:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    @ref LL_ADC_Enable()) */
ARM GAS  /tmp/cc46GlVT.s 			page 56


2092:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2093:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
2094:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
2095:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
2096:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
2097:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
2098:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
2099:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
2100:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  4UL)        /*!< Delay required between ADC end o
2101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                    and ADC enable */
2102:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
2105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2106:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2107:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2108:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
2109:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2110:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2111:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2112:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
2113:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
2114:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
2115:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2116:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2117:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
2118:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
2119:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2120:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2121:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2122:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Write a value in ADC register
2123:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
2124:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __REG__ Register to be written
2125:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
2126:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
2127:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
2129:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Read a value in ADC register
2132:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
2133:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __REG__ Register to be read
2134:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Register value
2135:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2136:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
2137:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2138:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
2139:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2140:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2141:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
2142:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
2143:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2144:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2145:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2146:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
2147:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
2148:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Example:
ARM GAS  /tmp/cc46GlVT.s 			page 57


2149:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
2150:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           will return decimal number "4".
2151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
2152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         number is returned, either defined with number
2153:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
2154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
2156:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
2157:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
2158:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
2159:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
2160:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
2161:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2162:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2163:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2164:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2165:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2166:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2167:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2168:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2169:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2170:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2171:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2172:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2173:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2174:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
2175:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2176:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2177:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
2178:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
2179:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
2180:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
2181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
2182:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
2183:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
2184:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
2185:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
2187:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
2188:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    (                                                                                       \
2189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
2190:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    )                                                                                       \
2191:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    :                                                                                       \
2192:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    (                                                                                       \
2193:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
2194:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    )                                                                                       \
2195:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   )
2196:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2197:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2198:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
2199:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         from number in decimal format.
2200:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Example:
2201:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
2202:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
2203:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
2204:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2205:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
ARM GAS  /tmp/cc46GlVT.s 			page 58


2206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
2207:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
2208:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
2209:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
2210:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
2211:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2212:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2213:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2214:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2215:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2216:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2218:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2220:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2221:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2222:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2223:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2224:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
2225:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)(4)
2226:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)(4)
2227:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)(4)
2228:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)(4)
2229:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
2230:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
2231:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
2232:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
2233:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
2234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
2235:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
2236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2237:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2238:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
2239:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL) ?                                                                     
2240:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    (                                                                                               
2241:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
2242:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                              |    
2243:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
2244:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    )                                                                                               
2245:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    :                                                                                               
2246:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    (                                                                                               
2247:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
2248:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
2249:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
2250:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    )                                                                                               
2251:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   )
2252:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2253:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2254:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
2255:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
2256:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
2257:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC internal channel:
2258:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
2259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
2260:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
2261:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
2262:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
ARM GAS  /tmp/cc46GlVT.s 			page 59


2263:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
2264:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
2265:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
2266:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         returned from ADC registers,
2267:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         because internal and external channels share the same channel
2268:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
2269:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         parameters definitions of driver.
2270:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2271:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
2272:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
2273:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
2274:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
2275:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
2276:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
2277:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2278:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2279:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2280:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2281:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2282:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2283:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2284:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2285:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2286:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2287:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2288:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2289:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2290:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
2291:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2292:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2293:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
2294:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
2295:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
2296:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
2297:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
2298:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
2299:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
2300:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
2301:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                       connected to a GPIO pin).
2302:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
2303:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2304:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
2305:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
2306:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2307:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2308:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
2309:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
2310:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
2311:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
2312:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
2313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
2314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
2315:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
2316:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a value defined from parameter definition of
2317:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
2318:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
2319:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         from ADC registers.
ARM GAS  /tmp/cc46GlVT.s 			page 60


2320:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2321:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
2322:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
2323:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
2324:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
2325:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
2326:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
2327:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2328:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2329:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2330:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2331:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2332:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2333:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2334:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2335:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2336:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2337:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2338:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2339:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2340:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
2341:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2342:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2343:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
2344:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
2345:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
2346:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
2347:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
2348:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
2349:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
2350:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2351:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2352:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2353:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2354:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2355:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2356:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2357:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2358:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2359:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2360:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2361:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2362:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2364:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2365:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2366:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2367:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2368:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2369:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2370:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
2371:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2372:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
2373:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
2374:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2375:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2376:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
ARM GAS  /tmp/cc46GlVT.s 			page 61


2377:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
2378:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
2379:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
2380:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
2381:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
2382:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
2383:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or a value from functions where a channel number is
2384:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         returned from ADC registers,
2385:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         because internal and external channels share the same channel
2386:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
2387:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         parameters definitions of driver.
2388:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
2389:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2390:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2391:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
2393:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
2394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
2395:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.
2396:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.
2397:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
2398:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
2399:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2400:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC2)
2401:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
2402:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
2403:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     &&(((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR     ) ||                    \
2404:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT))                              \
2405:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    )                                                                           \
2406:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    ||                                                                          \
2407:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
2408:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     &&(((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
2409:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VDDCORE))                              \
2410:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    )                                                                           \
2411:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   )
2412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
2413:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
2414:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                             \
2415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                             \
2416:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_VDDCORE)    ||                             \
2417:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                      \
2418:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   )
2419:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC2 */
2420:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2421:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2422:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
2423:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
2424:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         from sequencer channel and groups definition.
2425:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
2426:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example:
2427:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
2428:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
2429:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
2430:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2431:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
2432:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
2433:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
ARM GAS  /tmp/cc46GlVT.s 			page 62


2434:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
2435:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
2436:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
2437:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2438:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2439:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2440:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2441:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2442:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2443:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2444:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2445:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2446:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2447:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2448:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2449:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2450:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
2451:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)(4)
2452:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)(4)
2453:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)(4)
2454:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)(4)
2455:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
2456:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
2457:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
2458:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
2459:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
2460:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
2461:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
2462:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2463:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
2464:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
2465:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
2466:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
2467:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2468:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2469:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
2470:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
2471:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
2472:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
2473:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
2474:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
2475:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
2476:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
2477:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
2478:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
2479:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
2480:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
2481:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
2482:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
2483:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
2484:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
2485:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
2486:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
2487:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
2488:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
2489:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
2490:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
ARM GAS  /tmp/cc46GlVT.s 			page 63


2491:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
2492:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
2493:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
2494:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
2495:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
2496:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
2497:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
2498:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
2499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
2500:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
2501:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
2502:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
2503:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
2504:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
2505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
2506:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
2507:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
2508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
2509:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
2510:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
2511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
2512:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
2513:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
2514:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
2515:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
2516:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
2517:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
2518:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
2519:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
2520:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
2521:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
2522:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
2523:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
2524:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
2525:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
2526:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
2527:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
2528:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
2529:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
2530:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
2531:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
2532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
2533:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
2534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
2535:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(1)
2536:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
2537:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
2538:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(2)
2539:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(2)
2540:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (2)
2541:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDCORE_REG          (0)(2)
2542:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDCORE_INJ          (0)(2)
2543:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDCORE_REG_INJ         (2)
2544:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
2545:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (0) On STM32H5, parameter available only on analog watchdog number: AWD1.\n
2546:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.
2547:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.
ARM GAS  /tmp/cc46GlVT.s 			page 64


2548:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2549:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
2550:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
2551:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
2552:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    :                                                                                               
2553:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
2554:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
2555:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    :                                                                                               
2556:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
2557:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   )
2558:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2559:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2560:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
2561:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2562:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         different of 12 bits.
2563:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
2564:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
2565:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
2566:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
2567:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
2568:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *            (< ADCx param >,
2569:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
2570:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *            );
2571:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2572:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2573:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2574:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2575:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2576:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
2577:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2578:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2579:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
2580:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2581:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2582:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2583:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
2584:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2585:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         different of 12 bits.
2586:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2587:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
2588:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
2589:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
2590:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
2591:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
2592:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *            );
2593:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2594:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2595:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2596:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2597:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2598:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
2599:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2600:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2601:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
2602:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2603:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2604:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
ARM GAS  /tmp/cc46GlVT.s 			page 65


2605:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
2606:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
2607:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2608:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
2609:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
2610:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
2611:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
2612:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
2613:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2614:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2615:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2616:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)          
2617:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
2618:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    & LL_ADC_AWD_THRESHOLD_LOW)
2619:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2620:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2621:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
2622:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
2623:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
2624:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
2625:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and differential ended to 0x2A:
2626:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
2627:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             ADC1,
2628:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
2629:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
2630:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
2631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2632:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2633:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2634:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2635:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2636:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2637:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2638:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2639:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2640:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2642:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2644:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2645:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2646:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2647:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2648:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2649:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2650:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2652:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2653:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2654:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2655:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2656:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2657:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2658:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC common instance).
2659:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2660:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2661:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
ARM GAS  /tmp/cc46GlVT.s 			page 66


2662:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         considered as master instances (do not depend to
2663:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         any other ADC instance).
2664:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2665:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2666:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2667:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2668:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ( ( ((__ADCx__) == ADC2)                                                     \
2669:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     )?                                                                         \
2670:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     (ADC1)                                                                     \
2671:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     :                                                                          \
2672:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     (__ADCx__)                                                                 \
2673:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   )
2674:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2675:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2676:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2677:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2678:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2679:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2680:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2681:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2682:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2683:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2684:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval ADC common register instance
2685:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2686:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)  (ADC12_COMMON)
2687:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2688:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2689:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC common instance are disabled.
2690:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2691:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
2692:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2693:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2694:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2695:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2696:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2697:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2698:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2699:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2700:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         are disabled.
2701:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2702:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is enabled.
2703:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2704:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC2)
2705:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2706:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) | LL_ADC_IsEnabled(ADC2))
2707:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
2708:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)  (LL_ADC_IsEnabled(ADC1))
2709:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC2 */
2710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2711:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2713:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2715:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2716:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (refer to reference manual).
2717:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2718:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
ARM GAS  /tmp/cc46GlVT.s 			page 67


2719:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2720:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2721:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2722:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2723:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2724:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2725:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2726:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2727:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2728:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2729:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a resolution to another resolution.
2730:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2731:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2732:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This parameter can be one of the following values:
2733:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2734:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2735:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2736:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2737:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2738:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This parameter can be one of the following values:
2739:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2740:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2741:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2742:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2743:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2744:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2745:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2746:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2747:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
2748:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** (((__DATA__)                                                                 \
2749:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2750:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2751:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** )
2752:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2753:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2754:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2755:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2756:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2757:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2758:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2759:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2760:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2761:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                       (unit: digital value).
2762:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2763:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2764:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2765:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2766:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2767:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2768:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2770:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                       __ADC_DATA__,\
2771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
2772:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2774:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** )
2775:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
ARM GAS  /tmp/cc46GlVT.s 			page 68


2776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2777:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2778:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value) in
2779:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         differential ended mode.
2780:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   ADC data from ADC data register is unsigned and centered around
2781:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         middle code in. Converted voltage can be positive or negative
2782:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         depending on differential input voltages.
2783:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2784:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2785:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2786:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2787:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (unit: digital value).
2788:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2789:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2790:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2791:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2792:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2793:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2794:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2795:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CALC_DIFF_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2796:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            __ADC_DATA__,\
2797:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                            __ADC_RESOLUTION__)\
2798:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** ((int32_t)((__ADC_DATA__) << 1U) * (int32_t)(__VREFANALOG_VOLTAGE__)\
2799:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  / (int32_t)(__LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))\
2800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  - (int32_t)(__VREFANALOG_VOLTAGE__))
2801:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2803:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2804:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2805:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         reference VrefInt.
2806:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2807:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         stored in system memory for each device during production.
2808:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2809:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         connected to pin Vref+.
2810:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2811:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2812:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2813:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2814:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2815:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2816:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2817:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2818:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2819:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2820:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2821:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2822:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2823:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2824:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2825:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2827:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
2829:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2830:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2831:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
2832:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
ARM GAS  /tmp/cc46GlVT.s 			page 69


2833:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** )
2834:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2837:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2838:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2839:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         stored in system memory for each device during production.
2840:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Calculation formula:
2841:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2843:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2844:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2845:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2846:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2848:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2849:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2851:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2852:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  parameters are correct (address and data).
2853:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2854:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2855:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  less accurate than calibrated values),
2856:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2857:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2858:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2859:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2860:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2861:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2862:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2863:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
2864:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2865:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         temperature sensor.
2866:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2867:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2868:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2870:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2872:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2873:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This parameter can be one of the following values:
2874:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2875:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2876:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2877:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2878:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2879:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         In case or error, value LL_ADC_TEMPERATURE_CALC_ERROR is returned (inconsistent tempera
2880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                   __ADC_RESOLUTION__)\
2884:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** ((((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) != 0) ?       \
2885:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2886:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    (__ADC_RESOLUTION__),          \
2887:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    LL_ADC_RESOLUTION_12B)         \
2888:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                   * (__VREFANALOG_VOLTAGE__))                                     \
2889:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                  / TEMPSENSOR_CAL_VREFANALOG)                                     \
ARM GAS  /tmp/cc46GlVT.s 			page 70


2890:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****        - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2891:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2892:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2893:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ) + TEMPSENSOR_CAL1_TEMP                                                        \
2894:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  )                                                                                \
2895:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  :                                                                                \
2896:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  ((int32_t)LL_ADC_TEMPERATURE_CALC_ERROR)                                         \
2897:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** )
2898:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2899:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2900:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2901:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2902:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2903:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (refer to device datasheet).
2904:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Calculation formula:
2905:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2906:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2907:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2908:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                   (unit: digital value)
2909:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2910:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2911:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2912:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2913:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2914:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  of the current device has characteristics in line with
2915:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  datasheet typical values.
2916:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2917:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2918:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2919:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2920:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2921:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2922:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2923:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2924:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2925:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
2926:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
2928:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                       (unit: uV/DegCelsius).
2930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                       On STM32H5, refer to device datasheet parameter "Avg_Slop
2931:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2932:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                       (at temperature and Vref+ defined in parameters below) (u
2933:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                       On this STM32 series, refer to datasheet parameter "V30" 
2934:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                       to TS_CAL1).
2935:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2936:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                       (see parameter above) is corresponding (unit: mV)
2937:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) value (unit: mV)
2938:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2939:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2940:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This parameter can be one of the following values:
2941:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2942:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2943:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2944:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2945:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2946:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc46GlVT.s 			page 71


2947:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2948:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2949:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2950:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2951:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2952:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
2953:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2954:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****               * 1000UL)                                                     \
2956:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     -                                                                       \
2957:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2958:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****               * 1000UL)                                                     \
2959:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****    )                                                                        \
2960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
2961:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
2962:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** )
2963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2964:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2965:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
2966:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2967:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2968:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2969:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
2970:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2971:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2972:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2973:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2974:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2975:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
2976:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2977:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2978:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2979:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
2980:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
2981:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
2982:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
2983:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
2984:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
2985:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
2986:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2987:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2988:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2989:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   These ADC registers are data registers:
2990:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2992:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2994:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example:
2995:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2996:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2997:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2998:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2999:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
3000:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
3001:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
3002:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
3003:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
ARM GAS  /tmp/cc46GlVT.s 			page 72


3004:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
3005:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
3006:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
3007:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3008:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
3009:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
3010:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
3011:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
3012:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
3013:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval ADC register address
3014:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3015:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
3016:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(const ADC_TypeDef *ADCx, uint32_t Register)
3017:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3018:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t data_reg_addr;
3019:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3020:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
3021:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   {
3022:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     /* Retrieve address of register DR */
3023:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     data_reg_addr = (uint32_t) &(ADCx->DR);
3024:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   }
3025:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
3026:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   {
3027:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     /* Retrieve address of register CDR */
3028:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     data_reg_addr = (uint32_t) &((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
3029:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   }
3030:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3031:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return data_reg_addr;
3032:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3033:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
3034:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(const ADC_TypeDef *ADCx, uint32_t Register)
3035:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3036:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
3037:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (void)(Register);
3038:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3039:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Retrieve address of register DR */
3040:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
3041:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3042:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
3043:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3044:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3045:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
3046:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3047:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3048:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
3049:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC instances
3050:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
3051:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3052:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3053:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3054:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
3055:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
3056:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
3057:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         must be respected.
3058:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to reference manual.
3059:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3060:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/cc46GlVT.s 			page 73


3061:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
3062:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
3063:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
3064:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
3065:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
3066:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
3067:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3068:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3069:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
3070:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
3071:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
3072:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
3073:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
3074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
3075:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
3076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
3077:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
3078:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
3079:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
3080:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
3081:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
3082:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
3083:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
3084:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
3085:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3086:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3087:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
3088:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
3090:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3091:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3092:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3093:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
3094:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
3095:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
3096:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3097:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3098:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3099:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
3100:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
3101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
3102:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
3103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
3104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
3105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
3106:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
3107:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
3108:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
3109:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
3110:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
3111:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
3112:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
3113:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
3114:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3115:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(const ADC_Common_TypeDef *ADCxy_COMMON)
3116:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3117:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
ARM GAS  /tmp/cc46GlVT.s 			page 74


3118:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3119:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3120:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3121:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
3122:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
3123:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
3124:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   One or several values can be selected.
3125:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3126:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3127:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         The values not selected are removed from configuration.
3128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
3129:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
3130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
3131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         temperature sensor stabilization time.
3132:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet.
3133:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
3134:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
3135:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
3136:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
3137:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         For ADC conversion of internal channels,
3138:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a sampling time minimum value is required.
3139:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet.
3140:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
3141:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
3142:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
3143:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3144:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3145:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
3146:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3147:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3148:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3149:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3150:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
3153:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
3155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3156:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3157:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3158:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
3159:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
3160:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Add paths to the current configuration.
3161:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   One or several values can be selected.
3162:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3163:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3164:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
3165:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
3166:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
3167:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         temperature sensor stabilization time.
3168:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet.
3169:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
3170:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
3171:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
3172:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
3173:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         For ADC conversion of internal channels,
3174:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a sampling time minimum value is required.
ARM GAS  /tmp/cc46GlVT.s 			page 75


3175:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet.
3176:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
3177:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
3178:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
3179:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3180:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
3182:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3183:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3184:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3185:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3187:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3188:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
3189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3190:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
3191:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3192:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3193:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3194:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
3195:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
3196:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Remove paths to the current configuration.
3197:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   One or several values can be selected.
3198:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3199:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3200:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
3201:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
3202:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
3203:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3204:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3205:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
3206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3207:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3208:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3209:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3210:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3211:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3212:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
3213:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3214:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
3215:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3216:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3218:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
3219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
3220:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   One or several values can be selected.
3221:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3222:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3223:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
3224:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
3225:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
3226:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3227:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3228:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
3229:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3230:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3231:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
ARM GAS  /tmp/cc46GlVT.s 			page 76


3232:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3233:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(const ADC_Common_TypeDef *ADCxy_COMMON)
3235:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
3237:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3238:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3239:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3240:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
3241:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3242:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3243:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
3244:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
3245:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3246:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3247:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined (ADC2)
3248:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3249:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable VddCore (internal digital core voltage) channel.
3250:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, VddCore channel is controlled via a specific register.
3251:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, VddCore channel is on ADC2 instance only.
3252:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OR       OP0       LL_ADC_EnableChannelVDDcore
3253:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3254:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3255:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3256:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableChannelVDDcore(ADC_TypeDef *ADCx)
3257:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3258:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCx->OR, ADC_OR_OP0);
3259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3260:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
3261:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3262:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable VddCore (internal digital core voltage) channel.
3263:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, VddCore channel is controlled via a specific register.
3264:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OR       OP1       LL_ADC_EnableChannelVDDcore
3265:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3266:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3267:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3268:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableChannelVDDcore(ADC_TypeDef *ADCx)
3269:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3270:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCx->OR, ADC_OR_OP1);
3271:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3272:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC2 */
3273:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3274:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined (ADC2)
3275:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3276:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable VddCore (internal digital core voltage) channel.
3277:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, VddCore channel is controlled via a specific register.
3278:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, VddCore channel is on ADC2 instance only.
3279:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OR       OP0       LL_ADC_DisableChannelVDDcore
3280:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3281:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3282:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3283:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableChannelVDDcore(ADC_TypeDef *ADCx)
3284:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3285:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->OR, ADC_OR_OP0);
3286:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3287:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
3288:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
ARM GAS  /tmp/cc46GlVT.s 			page 77


3289:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable VddCore (internal digital core voltage) channel.
3290:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, VddCore channel is controlled via a specific register.
3291:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OR       OP1       LL_ADC_DisableChannelVDDcore
3292:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3293:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3294:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3295:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableChannelVDDcore(ADC_TypeDef *ADCx)
3296:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3297:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->OR, ADC_OR_OP1);
3298:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3299:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC2 */
3300:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3301:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3302:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable Channel 0 GPIO switch control.
3303:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, Channel 0 channel connection to GPIO is controlled via specific r
3304:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, Channel 0 GPIO switch control must be enabled when INP0 is used.
3305:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OR       OP0       LL_ADC_EnableChannel0_GPIO
3306:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3307:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3308:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3309:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableChannel0_GPIO(const ADC_TypeDef *ADCx)
3310:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3311:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
3312:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (void)(ADCx);
3313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADC1->OR, ADC_OR_OP0);
3314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3315:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3316:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3317:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable Channel 0 GPIO switch control.
3318:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, Channel 0 connection to GPIO is controlled via specific register.
3319:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OR       OP0       LL_ADC_DisableChannel0_GPIO
3320:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3321:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3322:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3323:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableChannel0_GPIO(const ADC_TypeDef *ADCx)
3324:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3325:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
3326:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (void)(ADCx);
3327:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADC1->OR, ADC_OR_OP0);
3328:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3329:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3330:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3331:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
3332:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
3333:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
3334:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without having to perform a new calibration using
3335:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
3336:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with differential mode available:
3337:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Calibration of offset is specific to each of
3338:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         single-ended and differential modes
3339:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
3340:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
3341:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         requires their calibration).
3342:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
3343:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
3344:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         both calibration factors must be concatenated.
3345:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         To perform this processing, use helper macro
ARM GAS  /tmp/cc46GlVT.s 			page 78


3346:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
3347:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3348:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3349:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
3350:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on going on group regular.
3351:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
3352:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
3353:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3354:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
3355:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
3356:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
3357:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
3358:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
3359:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3360:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3361:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
3362:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
3364:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
3365:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK)
3366:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     >> ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4)
3367:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                    & ~(SingleDiff & ADC_CALFACT_CALFACT_S)));
3368:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3369:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3370:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3371:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
3372:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
3373:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
3374:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
3375:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with differential mode available:
3376:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Calibration of offset is specific to each of
3377:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         single-ended and differential modes
3378:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
3379:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
3380:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3381:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
3382:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
3383:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
3384:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
3385:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3386:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(const ADC_TypeDef *ADCx, uint32_t SingleDiff)
3387:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3388:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
3389:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* "SingleDiff".                                                            */
3390:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
3391:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT,
3393:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK))
3394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                     >> ((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >>
3395:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                         ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4));
3396:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3397:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3398:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3399:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC resolution.
3400:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
3401:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3402:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  /tmp/cc46GlVT.s 			page 79


3403:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3404:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3405:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
3406:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
3407:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3408:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
3409:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3410:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3411:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3413:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3414:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
3416:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3417:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
3418:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3419:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3420:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3421:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC resolution.
3422:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
3423:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3424:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
3425:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3426:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3427:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3428:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3429:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3430:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3431:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3432:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(const ADC_TypeDef *ADCx)
3433:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3434:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3435:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3436:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3437:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3438:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
3439:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
3440:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3441:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3442:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3443:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3444:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
3445:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
3446:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3447:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
3448:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
3449:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
3450:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3451:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3452:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
3453:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3454:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
3455:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3456:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3457:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3458:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
3459:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
ARM GAS  /tmp/cc46GlVT.s 			page 80


3460:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3461:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
3462:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3463:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3464:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
3465:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
3466:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3467:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(const ADC_TypeDef *ADCx)
3468:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3469:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
3470:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3471:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3472:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3473:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC low power mode.
3474:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3475:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3476:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3477:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           in order to reduce power consumption.
3478:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3479:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3480:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3481:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           has been retrieved by user software.
3482:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3483:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           other conversion.
3484:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3485:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3486:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3487:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           applications.
3488:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           How to use this low power mode:
3489:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3490:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3491:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3492:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3493:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3494:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3495:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3496:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3497:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3498:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             ADC conversion start.
3500:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3501:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3502:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         of delay during which ADC was idle.
3503:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3504:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC channel.
3506:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3507:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3509:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
3510:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
3511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3512:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
3513:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3514:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3515:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3516:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc46GlVT.s 			page 81


3517:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
3518:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3519:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
3520:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3521:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3522:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3523:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC low power mode:
3524:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3525:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3526:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3527:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           in order to reduce power consumption.
3528:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3529:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3530:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3531:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           has been retrieved by user software.
3532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3533:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           other conversion.
3534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3535:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3536:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3537:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           applications.
3538:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           How to use this low power mode:
3539:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3540:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3541:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3542:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3543:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3544:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3545:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3546:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3547:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3548:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3549:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             ADC conversion start.
3550:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3551:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3552:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         of delay during which ADC was idle.
3553:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3554:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3555:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC channel.
3556:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
3557:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3558:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3559:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3560:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3561:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3562:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(const ADC_TypeDef *ADCx)
3563:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3564:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
3565:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3566:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3567:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3568:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC selected offset instance 1, 2, 3 or 4.
3569:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
3570:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
3571:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
3572:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           or group injected)
3573:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
ARM GAS  /tmp/cc46GlVT.s 			page 82


3574:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           converted data).
3575:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3576:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3577:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         are set to 0.
3578:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
3579:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
3580:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
3581:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
3582:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3583:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3584:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3585:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
3586:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On STM32H5, some fast channels are available: fast analog inputs
3587:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
3588:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
3589:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
3590:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
3591:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
3592:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
3593:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
3594:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
3595:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
3596:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
3597:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
3598:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
3599:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
3600:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3601:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3602:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3603:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3604:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3605:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3606:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3607:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
3608:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
3609:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
3610:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
3611:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
3612:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
3613:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3614:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3615:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3616:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3617:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3618:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3619:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3620:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3621:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3622:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3623:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3624:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3625:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3626:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3627:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3628:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
3629:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
3630:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
ARM GAS  /tmp/cc46GlVT.s 			page 83


3631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
3632:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
3633:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
3634:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
3635:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
3636:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
3637:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3638:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3639:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
3640:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3642:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
3644:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3645:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3646:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3647:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3648:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3649:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
3650:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
3651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
3652:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or group injected)
3653:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3654:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3655:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3656:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3657:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3658:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3659:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3660:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           as parameter for another function.
3661:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3662:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           process the returned value with the helper macro
3663:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3664:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On STM32H5, some fast channels are available: fast analog inputs
3665:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
3666:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
3667:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
3668:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
3669:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
3670:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3671:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3672:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3673:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3674:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3675:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3676:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3677:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
3678:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
3679:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
3680:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
3681:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
3682:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
3683:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3684:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3685:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3686:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3687:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
ARM GAS  /tmp/cc46GlVT.s 			page 84


3688:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3689:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3690:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3691:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3692:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3693:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3694:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3695:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3696:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3697:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)(4)
3698:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)(4)
3699:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)(4)
3700:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)(4)
3701:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
3702:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
3703:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
3704:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
3705:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
3706:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
3707:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3708:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3709:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(const ADC_TypeDef *ADCx, uint32_t Offsety)
3711:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3713:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3715:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3716:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3717:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3718:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
3719:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3720:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         converted data).
3721:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3722:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3723:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         are set to 0.
3724:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3725:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3726:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3727:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3728:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3729:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3730:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3731:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3732:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3733:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3734:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3735:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3736:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(const ADC_TypeDef *ADCx, uint32_t Offsety)
3737:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3738:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3739:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3740:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3741:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3742:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3743:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3744:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set for the ADC selected offset instance 1, 2, 3 or 4:
ARM GAS  /tmp/cc46GlVT.s 			page 85


3745:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         force offset state disable or enable
3746:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without modifying offset channel or offset value.
3747:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3748:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3749:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3750:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3751:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3752:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3753:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
3754:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3755:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3756:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3757:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3758:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3759:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3760:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3761:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3762:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3763:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3764:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3765:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3766:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3767:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3768:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3770:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3772:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
3774:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
3775:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              OffsetState);
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3777:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3778:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3779:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
3780:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         offset state disabled or enabled.
3781:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3782:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3783:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3784:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3785:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3786:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3787:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3788:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3789:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3790:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3791:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3792:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3793:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3794:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3795:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(const ADC_TypeDef *ADCx, uint32_t Offsety)
3796:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3797:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3798:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3799:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3801:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
ARM GAS  /tmp/cc46GlVT.s 			page 86


3802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3803:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set for the ADC selected offset instance 1, 2, 3 or 4:
3804:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         choose offset sign.
3805:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3806:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3807:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3808:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
3809:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_SetOffsetSign\n
3810:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_SetOffsetSign\n
3811:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_SetOffsetSign\n
3812:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_SetOffsetSign
3813:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3814:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3815:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3816:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3817:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3818:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3819:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  OffsetSign This parameter can be one of the following values:
3820:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3821:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3822:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3823:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3824:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSign)
3825:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3827:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
3829:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
3830:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              OffsetSign);
3831:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3832:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3833:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3834:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
3835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         offset sign if positive or negative.
3836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_GetOffsetSign\n
3837:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_GetOffsetSign\n
3838:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_GetOffsetSign\n
3839:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_GetOffsetSign
3840:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3841:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3843:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3844:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3845:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3846:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3848:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3849:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSign(const ADC_TypeDef *ADCx, uint32_t Offsety)
3851:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3852:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3853:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3854:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSETPOS);
3855:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3856:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3857:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3858:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set for the ADC selected offset instance 1, 2, 3 or 4:
ARM GAS  /tmp/cc46GlVT.s 			page 87


3859:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         choose offset saturation mode.
3860:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3861:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3862:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3863:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
3864:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_SetOffsetSaturation\n
3865:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_SetOffsetSaturation\n
3866:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_SetOffsetSaturation\n
3867:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_SetOffsetSaturation
3868:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3870:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3872:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3873:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3874:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  OffsetSaturation This parameter can be one of the following values:
3875:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3876:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3877:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3878:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3879:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Offse
3880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
3884:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_SATEN,
3885:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              OffsetSaturation);
3886:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3887:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3888:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3889:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
3890:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         offset saturation if enabled or disabled.
3891:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_GetOffsetSaturation\n
3892:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_GetOffsetSaturation\n
3893:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_GetOffsetSaturation\n
3894:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_GetOffsetSaturation
3895:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3896:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3897:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3898:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3899:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3900:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3901:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3902:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3903:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3904:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3905:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSaturation(const ADC_TypeDef *ADCx, uint32_t Offsety)
3906:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3907:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3908:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3909:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_SATEN);
3910:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3911:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3912:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
3913:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3914:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC sampling time common configuration impacting
3915:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         settings of sampling time channel wise.
ARM GAS  /tmp/cc46GlVT.s 			page 88


3916:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3917:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3918:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3919:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
3920:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_SetSamplingTimeCommonConfig
3921:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3922:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SamplingTimeCommonConfig This parameter can be one of the following values:
3923:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3924:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3925:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
3926:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonConfig(ADC_TypeDef *ADCx, uint32_t SamplingTimeCom
3928:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR1, ADC_SMPR1_SMPPLUS, SamplingTimeCommonConfig);
3930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3931:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3932:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3933:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC sampling time common configuration impacting
3934:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         settings of sampling time channel wise.
3935:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_GetSamplingTimeCommonConfig
3936:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3937:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3938:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3939:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3940:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3941:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonConfig(const ADC_TypeDef *ADCx)
3942:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
3943:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR1, ADC_SMPR1_SMPPLUS));
3944:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
3945:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
3946:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3947:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3948:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
3949:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3950:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3951:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3952:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
3953:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
3954:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
3955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
3956:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3957:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3958:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         external interrupt line).
3959:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3961:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3962:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         STM32 series having this setting set by HW default value).
3963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3964:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3965:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3966:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3967:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3968:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
3969:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3970:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
3971:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3972:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
ARM GAS  /tmp/cc46GlVT.s 			page 89


3973:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
3974:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3975:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3976:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3977:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3978:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3979:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3980:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3981:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3982:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3983:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3984:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3985:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO        (1)
3986:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4         (1)
3987:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3988:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM7_TRGO        (2)
3989:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO        (1)
3990:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2       (1)
3991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO       (1)
3992:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM1_CH1
3993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM2_CH1
3994:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3995:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE15
3996:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
3997:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H5 series, parameter specific to devices: STM32H563/H573xx.
3998:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H5 series, parameter specific to devices: STM32H503xx.
3999:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4000:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4001:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4002:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4003:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
4004:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4005:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4006:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4007:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
4008:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4009:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         external interrupt line).
4010:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
4011:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal (SW start) or external, without detail
4012:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4013:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (equivalent to
4014:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
4015:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
4016:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4017:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4018:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
4019:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
4020:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4021:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4022:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
4023:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
4024:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
4025:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
4026:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
4027:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
4028:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
4029:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
ARM GAS  /tmp/cc46GlVT.s 			page 90


4030:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
4031:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
4032:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO        (1)
4033:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4         (1)
4034:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
4035:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM7_TRGO        (2)
4036:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO        (1)
4037:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2       (1)
4038:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO       (1)
4039:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM1_CH1
4040:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM2_CH1
4041:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
4042:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE15
4043:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
4044:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H5 series, parameter specific to devices: STM32H563/H573xx.
4045:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H5 series, parameter specific to devices: STM32H503xx.
4046:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4047:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(const ADC_TypeDef *ADCx)
4048:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4049:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t trigger_source = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
4050:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4051:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4052:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
4053:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t shift_exten = ((trigger_source & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 
4054:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4055:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
4056:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
4057:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((trigger_source
4058:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> shift_exten) & ADC_CFGR_EXTSEL)
4059:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> shift_exten) & ADC_CFGR_EXTEN)
4060:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****          );
4061:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4062:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4063:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4064:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
4065:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or external.
4066:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
4067:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4068:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
4069:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
4070:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4071:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4072:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4073:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
4075:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
4077:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4078:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4079:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4080:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
4081:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
4082:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4083:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4084:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4085:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
4086:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
ARM GAS  /tmp/cc46GlVT.s 			page 91


4087:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4088:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
4090:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
4091:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
4092:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4093:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4094:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4095:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4096:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
4097:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4098:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4099:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4100:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
4101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
4102:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
4103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
4106:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
4107:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
4108:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4109:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(const ADC_TypeDef *ADCx)
4110:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4111:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
4112:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4113:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4114:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4115:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC sampling mode.
4116:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function set the ADC conversion sampling mode
4117:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This mode applies to regular group only.
4118:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Set sampling mode is applied to all conversion of regular group.
4119:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4120:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4121:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4122:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
4123:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_SetSamplingMode\n
4124:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_SetSamplingMode
4125:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4126:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SamplingMode This parameter can be one of the following values:
4127:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
4128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
4129:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
4130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4132:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSamplingMode(ADC_TypeDef *ADCx, uint32_t SamplingMode)
4133:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4134:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG, SamplingMode);
4135:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4136:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4137:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4138:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get the ADC sampling mode
4139:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_GetSamplingMode\n
4140:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_GetSamplingMode
4141:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4142:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4143:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
ARM GAS  /tmp/cc46GlVT.s 			page 92


4144:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
4145:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
4146:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4147:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSamplingMode(const ADC_TypeDef *ADCx)
4148:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4149:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG));
4150:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4153:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
4154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
4155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
4156:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
4157:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4158:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           are configurable.
4159:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This function performs configuration of:
4160:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
4161:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4162:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
4163:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Sequencer ranks are selected using
4164:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
4165:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
4166:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
4167:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4168:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           are defined by channel number.
4169:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This function performs configuration of:
4170:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
4171:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
4172:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
4173:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4174:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4175:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
4176:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             highest channel number).
4177:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Sequencer ranks are selected using
4178:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
4179:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4180:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4182:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4183:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4184:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
4185:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
4186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4187:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4188:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
4189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
4190:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
4191:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
4192:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
4193:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
4194:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
4195:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
4196:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
4197:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
4198:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
4199:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
4200:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
ARM GAS  /tmp/cc46GlVT.s 			page 93


4201:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
4202:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
4203:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
4204:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4205:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4207:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4208:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
4209:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4210:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4211:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4212:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
4213:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
4214:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
4215:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
4216:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           are configurable.
4218:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This function retrieves:
4219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
4220:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4221:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
4222:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Sequencer ranks are selected using
4223:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
4224:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
4225:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
4226:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4227:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           are defined by channel number.
4228:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This function retrieves:
4229:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
4230:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
4231:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
4232:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4233:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
4235:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             highest channel number).
4236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Sequencer ranks are selected using
4237:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
4238:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4239:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4240:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
4241:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4242:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4243:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
4244:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
4245:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
4246:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
4247:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
4248:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
4249:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
4250:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
4251:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
4252:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
4253:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
4254:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
4255:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
4256:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
4257:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
ARM GAS  /tmp/cc46GlVT.s 			page 94


4258:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
4259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4260:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(const ADC_TypeDef *ADCx)
4261:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4262:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
4263:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4264:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4265:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4266:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
4267:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4268:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         number of ranks.
4269:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4270:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4271:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
4272:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
4273:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4274:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4275:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4276:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
4277:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
4278:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
4279:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4280:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4281:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4282:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4283:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4284:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
4285:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4286:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4287:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4288:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
4289:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4290:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4291:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4292:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4293:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4294:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
4295:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4296:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4297:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4298:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
4299:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4300:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         number of ranks.
4301:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
4302:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
4303:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4304:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4305:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4306:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4307:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4308:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
4309:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4310:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4311:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4312:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
4313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc46GlVT.s 			page 95


4315:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(const ADC_TypeDef *ADCx)
4316:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4317:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
4318:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4319:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4320:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4321:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
4322:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         scan sequence rank.
4323:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function performs configuration of:
4324:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
4325:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
4326:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4327:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4328:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         affectation to a channel are configurable.
4329:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4330:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4331:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4332:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4333:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4334:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         enabled separately.
4335:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4336:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4337:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4338:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4339:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
4340:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
4341:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
4342:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
4343:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
4344:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
4345:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
4346:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
4347:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
4348:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
4349:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
4350:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
4351:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
4352:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
4353:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
4354:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
4355:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
4356:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4357:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4358:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4359:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4360:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4361:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4362:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4364:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4365:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4366:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4367:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4368:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4369:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4370:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4371:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
ARM GAS  /tmp/cc46GlVT.s 			page 96


4372:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4373:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4374:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4375:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4376:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4377:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4378:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4379:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4380:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4381:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4382:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4383:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4384:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4385:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4386:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4387:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4388:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4389:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4390:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4391:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4393:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4395:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4396:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4397:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
4398:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
4399:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
4400:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
4401:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
4402:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
4403:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
4404:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4405:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4406:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4407:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4408:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4409:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
4410:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4411:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1,
4413:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQRX_REGO
4414:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
4416:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
4417:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4418:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
4419:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4420:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4421:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4422:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
4423:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         scan sequence rank.
4424:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4425:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4426:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         affectation to a channel are configurable.
4427:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4428:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
ARM GAS  /tmp/cc46GlVT.s 			page 97


4429:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4430:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4431:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4432:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4433:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4434:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4435:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4436:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4437:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           as parameter for another function.
4438:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4439:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           process the returned value with the helper macro
4440:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4441:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
4442:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
4443:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
4444:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
4445:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
4446:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
4447:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
4448:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
4449:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
4450:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
4451:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
4452:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
4453:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
4454:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
4455:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
4456:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
4457:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4458:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4459:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4460:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4461:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4462:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4463:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4464:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4465:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4466:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4467:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4468:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4469:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4470:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4471:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4472:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4473:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4474:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4475:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4476:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4477:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4478:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4479:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4480:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4481:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4482:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4483:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4484:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4485:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
ARM GAS  /tmp/cc46GlVT.s 			page 98


4486:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4487:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4488:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4489:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4490:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4491:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4492:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4493:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4494:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4495:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4496:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)(4)
4497:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)(4)
4498:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)(4)
4499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)(4)
4500:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
4501:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
4502:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
4503:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
4504:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
4505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
4506:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
4507:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4509:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
4510:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1,
4512:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQR
4513:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4514:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
4515:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
4516:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4517:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                    );
4518:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4519:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4520:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4521:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
4522:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4523:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4524:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4525:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           conversions launched successively automatically.
4526:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4527:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4528:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4529:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4530:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4531:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
4532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
4533:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
4535:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4536:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4537:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4538:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4539:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
4540:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4541:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
4542:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
ARM GAS  /tmp/cc46GlVT.s 			page 99


4543:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4544:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4545:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
4546:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4547:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4548:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4549:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           conversions launched successively automatically.
4550:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
4551:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4552:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4553:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4554:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4555:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4556:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(const ADC_TypeDef *ADCx)
4557:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4558:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
4559:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4560:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4561:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4562:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
4563:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4564:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4565:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         mode:
4566:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4567:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4568:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions) is reached.
4569:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4570:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4571:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4572:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions).
4573:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4574:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4575:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         mode non-circular:
4576:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4577:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4578:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
4579:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4580:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
4581:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4582:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4583:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4584:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4585:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4586:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
4587:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
4588:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
4589:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4590:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
4591:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4592:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4593:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4594:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4595:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4596:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
4597:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4598:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
4599:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
ARM GAS  /tmp/cc46GlVT.s 			page 100


4600:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4601:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4602:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
4603:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4604:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4605:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         mode:
4606:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4607:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4608:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions) is reached.
4609:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4610:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4611:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4612:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions).
4613:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4614:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4615:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         mode non-circular:
4616:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4617:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4618:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
4619:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4620:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
4621:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4622:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4623:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
4624:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
4625:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4626:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4627:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4628:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4629:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4630:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(const ADC_TypeDef *ADCx)
4632:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4633:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
4634:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4635:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4636:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4637:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
4638:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         data preserved or overwritten.
4639:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
4640:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         other devices without this feature have a behavior
4641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         equivalent to data overwritten.
4642:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
4643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
4644:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         overrun should be set to data overwritten.
4645:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4646:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4647:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4648:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
4649:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
4650:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
4652:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4653:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4654:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4655:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4656:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
ARM GAS  /tmp/cc46GlVT.s 			page 101


4657:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4658:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
4659:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4660:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4661:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4662:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
4663:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         data preserved or overwritten.
4664:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
4665:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4666:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4667:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4668:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4669:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4670:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(const ADC_TypeDef *ADCx)
4671:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4672:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
4673:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4674:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4675:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4676:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
4677:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4678:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4679:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
4680:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
4681:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4682:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4683:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4684:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
4685:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4686:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         external interrupt line).
4687:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
4688:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         also set trigger polarity to rising edge
4689:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
4690:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         STM32 series having this setting set by HW default value).
4691:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
4692:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
4693:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4694:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4695:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4696:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4697:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4698:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on going on either groups regular or injected.
4699:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
4700:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
4701:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4702:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4703:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4704:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4705:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4706:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4707:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4708:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4709:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4711:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4713:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO        (1)
ARM GAS  /tmp/cc46GlVT.s 			page 102


4714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4715:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO        (2)
4716:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO        (1)
4717:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2       (1)
4718:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4         (1)
4719:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO       (1)
4720:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_CH1
4721:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_CH1
4722:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4723:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
4724:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H5 series, parameter specific to devices: STM32H563/H573xx.
4725:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H5 series, parameter specific to devices: STM32H503xx.
4726:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4727:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4728:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4729:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4730:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
4731:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4732:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4733:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4734:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
4735:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4736:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         external interrupt line).
4737:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
4738:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal (SW start) or external, without detail
4739:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4740:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (equivalent to
4741:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
4742:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
4743:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4744:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4745:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
4746:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
4747:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4748:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4749:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4750:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4751:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4752:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4753:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4754:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4755:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4756:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4757:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4758:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4759:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO        (1)
4760:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4761:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO        (2)
4762:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO        (1)
4763:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2       (1)
4764:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4         (1)
4765:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO       (1)
4766:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_CH1
4767:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_CH1
4768:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
4770:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H5 series, parameter specific to devices: STM32H563/H573xx.
ARM GAS  /tmp/cc46GlVT.s 			page 103


4771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H5 series, parameter specific to devices: STM32H503xx.
4772:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(const ADC_TypeDef *ADCx)
4774:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4775:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t trigger_source = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
4776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4777:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4778:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
4779:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t shift_jexten = ((trigger_source & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS 
4780:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4781:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
4782:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
4783:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((trigger_source
4784:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> shift_jexten) & ADC_JSQR_JEXTSEL)
4785:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> shift_jexten) & ADC_JSQR_JEXTEN)
4786:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****          );
4787:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4788:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4789:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4790:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
4791:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****             or external
4792:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
4793:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4794:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
4795:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
4796:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4797:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4798:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4799:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
4801:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
4803:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4804:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4805:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4806:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
4807:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4808:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4809:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4810:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4811:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on going on either groups regular or injected.
4812:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
4813:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4814:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4815:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4816:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4817:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4818:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4819:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4820:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4821:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4822:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
4823:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4824:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4825:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4827:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
ARM GAS  /tmp/cc46GlVT.s 			page 104


4828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4829:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4830:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4831:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4832:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4833:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4834:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(const ADC_TypeDef *ADCx)
4836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4837:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4838:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4839:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4840:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4841:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function performs configuration of:
4843:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4844:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4845:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4846:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4848:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4849:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4851:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on going on either groups regular or injected.
4852:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4853:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4854:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4855:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4856:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4857:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4858:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4859:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4860:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4861:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4862:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4863:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4864:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4865:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4866:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4867:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4868:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function retrieves:
4869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4870:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4872:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4873:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4874:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4875:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4876:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4877:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4878:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4879:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(const ADC_TypeDef *ADCx)
4883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4884:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
ARM GAS  /tmp/cc46GlVT.s 			page 105


4885:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4886:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4887:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4888:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4889:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4890:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         number of ranks.
4891:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4892:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4893:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4894:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4895:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4896:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4897:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4898:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4899:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4900:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4901:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4902:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4903:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4904:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4905:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4906:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4907:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4908:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         number of ranks.
4909:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4910:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4911:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4912:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4913:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4914:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4915:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(const ADC_TypeDef *ADCx)
4916:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4917:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4918:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4919:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4920:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4921:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4922:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         sequence rank.
4923:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4924:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4925:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4926:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         enabled separately.
4928:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On STM32H5, some fast channels are available: fast analog inputs
4930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
4931:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4932:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
4933:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4934:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on going on either groups regular or injected.
4935:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4936:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4937:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4938:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4939:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
4940:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4941:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
ARM GAS  /tmp/cc46GlVT.s 			page 106


4942:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4943:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4944:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4945:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4946:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4947:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4948:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4949:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4950:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4951:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4952:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4953:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4954:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4956:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4957:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4958:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4959:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4961:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4962:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4964:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4965:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4966:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4967:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4968:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
4969:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
4970:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
4971:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
4972:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
4973:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
4974:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
4975:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
4976:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
4977:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4978:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
4979:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4980:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4981:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4982:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4983:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4984:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4985:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              << (Rank & ADC_INJ_RANK_ID_JSQR_MASK),
4986:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4987:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              << (Rank & ADC_INJ_RANK_ID_JSQR_MASK));
4988:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
4989:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
4990:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
4991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4992:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         sequence rank.
4993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4994:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4995:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4996:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4997:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4998:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
ARM GAS  /tmp/cc46GlVT.s 			page 107


4999:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5000:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5001:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5002:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           as parameter for another function.
5003:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5004:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           process the returned value with the helper macro
5005:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5006:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
5007:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
5008:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
5009:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
5010:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5011:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
5012:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
5013:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
5014:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
5015:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
5016:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5017:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5018:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5019:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5020:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5021:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5022:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5023:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5024:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5025:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5026:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5027:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5028:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5029:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5030:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5031:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5032:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5033:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5034:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5035:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5036:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5037:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)(4)
5038:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)(4)
5039:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)(4)
5040:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)(4)
5041:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5042:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
5043:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
5044:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
5045:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
5046:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
5047:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
5048:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
5049:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5050:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
5051:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5052:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
5053:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5054:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                               << (Rank & ADC_INJ_RANK_ID_JSQR_MASK))
5055:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
ARM GAS  /tmp/cc46GlVT.s 			page 108


5056:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                    );
5057:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5058:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5059:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5060:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
5061:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         independent or from ADC group regular.
5062:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
5063:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
5064:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
5065:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
5066:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
5067:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on ADC group injected.
5068:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
5069:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
5070:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         independent trigger.
5071:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
5072:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
5073:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
5074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
5075:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         from ADC group regular.
5076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
5077:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
5078:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5079:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
5080:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5081:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
5082:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
5083:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5084:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
5085:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
5086:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
5087:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
5088:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
5090:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5091:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
5092:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5093:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5094:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5095:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
5096:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         independent or from ADC group regular.
5097:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
5098:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5099:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5100:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
5101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
5102:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(const ADC_TypeDef *ADCx)
5104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
5106:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5107:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5108:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5109:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
5110:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5111:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - group injected trigger
5112:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - sequencer length
ARM GAS  /tmp/cc46GlVT.s 			page 109


5113:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - sequencer ranks
5114:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         If contexts queue is disabled:
5115:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - only 1 sequence can be configured
5116:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           and is active perpetually.
5117:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         If contexts queue is enabled:
5118:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - up to 2 contexts can be queued
5119:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
5120:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
5121:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
5122:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
5123:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
5124:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
5125:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
5126:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
5127:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
5128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           into the queue).
5129:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
5130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
5131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
5132:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
5133:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
5134:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
5135:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
5136:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5137:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
5138:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5139:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
5140:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
5141:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
5142:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5143:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
5144:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5145:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5146:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5147:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
5148:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5149:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
5150:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
5152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5153:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
5156:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
5157:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
5158:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5159:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5160:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5161:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5162:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5163:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5164:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(const ADC_TypeDef *ADCx)
5165:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5166:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
5167:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5168:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5169:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
ARM GAS  /tmp/cc46GlVT.s 			page 110


5170:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
5171:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         contexts queue.
5172:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5173:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - group injected trigger
5174:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - sequencer length
5175:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - sequencer ranks
5176:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
5177:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
5178:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
5179:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         cannot be used):
5180:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
5181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
5182:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
5183:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
5184:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
5185:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
5186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
5187:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
5188:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         enabled separately.
5189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
5190:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On STM32H5, some fast channels are available: fast analog inputs
5191:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
5192:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5193:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
5194:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
5195:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on going on either groups regular or injected.
5196:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
5197:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
5198:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
5199:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
5200:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
5201:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
5202:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
5203:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5204:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
5205:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
5206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
5207:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
5208:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
5209:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
5210:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
5211:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
5212:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
5213:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
5214:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
5215:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO        (1)
5216:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
5217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO        (2)
5218:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO        (1)
5219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2       (1)
5220:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4         (1)
5221:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO       (1)
5222:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_CH1
5223:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_CH1
5224:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
5225:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5226:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H5 series, parameter specific to devices: STM32H563/H573xx.
ARM GAS  /tmp/cc46GlVT.s 			page 111


5227:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H5 series, parameter specific to devices: STM32H503xx.
5228:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
5229:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
5230:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
5231:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
5232:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5233:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
5234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
5235:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
5236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
5237:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
5238:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
5239:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
5240:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
5241:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5242:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5243:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5244:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5245:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5246:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5247:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5248:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5249:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5250:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5251:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5252:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5253:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5254:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5255:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5256:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5257:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5258:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5260:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5261:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5262:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5263:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
5264:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
5265:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5266:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
5267:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
5268:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
5269:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
5270:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
5271:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5272:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5273:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5274:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5275:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5276:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5277:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5278:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5279:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5280:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5281:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5282:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5283:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
ARM GAS  /tmp/cc46GlVT.s 			page 112


5284:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5285:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5286:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5287:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5288:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5289:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5290:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5291:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5292:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5293:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
5294:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
5295:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5296:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
5297:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
5298:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
5299:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
5300:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
5301:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5302:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5303:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5304:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5305:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5306:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5307:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5308:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5309:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5310:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5311:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5312:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5315:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5316:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5317:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5318:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5319:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5320:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5321:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5322:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5323:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
5324:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
5325:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5326:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
5327:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
5328:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
5329:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
5330:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
5331:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5332:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5333:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5334:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5335:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5336:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5337:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5338:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5339:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5340:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
ARM GAS  /tmp/cc46GlVT.s 			page 113


5341:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5342:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5343:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5344:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5345:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5346:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5347:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5348:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5349:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5350:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5351:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5352:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5353:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
5354:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
5355:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5356:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
5357:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
5358:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
5359:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
5360:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
5361:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5362:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
5363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    uint32_t TriggerSource,
5364:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
5365:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
5366:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
5367:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
5368:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
5369:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
5370:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5371:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
5372:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
5373:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
5374:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
5375:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
5376:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
5377:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
5378:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
5379:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
5380:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
5381:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
5382:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
5383:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
5384:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
5385:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_JSQR_JL,
5386:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
5387:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
5388:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5389:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_4 & ADC_INJ_RANK_ID_JSQR_MASK)) |
5390:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5391:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_3 & ADC_INJ_RANK_ID_JSQR_MASK)) |
5392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5393:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_2 & ADC_INJ_RANK_ID_JSQR_MASK)) |
5394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5395:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_1 & ADC_INJ_RANK_ID_JSQR_MASK)) |
5396:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              SequencerNbRanks
5397:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****             );
ARM GAS  /tmp/cc46GlVT.s 			page 114


5398:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5399:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5400:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5401:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
5402:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5403:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5404:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
5405:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
5406:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5407:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5408:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5409:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5410:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5411:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5413:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5414:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         converted:
5415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
5416:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
5417:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         setting).
5418:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5419:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TS_temp, ...).
5420:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5421:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5422:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5423:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5424:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5425:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5426:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5427:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5428:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is required.
5429:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet.
5430:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5431:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
5432:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5433:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
5434:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
5435:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5436:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
5437:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5438:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
5439:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
5440:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5441:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5442:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5443:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5444:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5445:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5446:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
5447:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
5448:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5449:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5450:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
5451:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5452:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5453:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5454:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
ARM GAS  /tmp/cc46GlVT.s 			page 115


5455:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5456:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5457:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5458:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5459:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5460:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5461:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5462:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5463:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5464:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5465:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5466:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5467:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5468:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5469:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5470:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5471:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5472:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5473:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5474:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5475:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5476:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5477:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
5478:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
5479:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5480:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
5481:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
5482:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
5483:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
5484:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
5485:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
5486:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5487:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5488:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5489:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5490:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5491:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5492:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5493:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5494:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
5495:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
5496:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
5497:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
5498:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
5500:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5501:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
5502:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
5503:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5504:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1,
5506:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
5507:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
5509:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5510:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
ARM GAS  /tmp/cc46GlVT.s 			page 116


5512:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5513:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5514:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5515:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5516:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5517:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5518:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5519:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5520:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5521:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5522:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5523:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5524:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5525:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5526:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5527:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5528:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
5529:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
5530:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
5531:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5533:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
5535:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5536:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5537:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5538:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5539:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
5540:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5541:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
5542:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5543:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5544:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5545:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5546:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5547:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5548:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5549:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5550:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5551:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5552:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5553:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5554:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5555:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5556:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5557:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5558:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5559:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5560:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5561:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5562:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5563:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5564:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5565:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5566:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5567:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (2)
5568:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VDDCORE      (2)
ARM GAS  /tmp/cc46GlVT.s 			page 117


5569:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5570:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.\n
5571:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.\n
5572:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) On STM32H5, fast channel allows: 2.5 (sampling) + 12.5 (conversion 12b) = 15 ADC cl
5573:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Other channels are slow channels: 6.5 (sampling) + 12.5 (conversion 12b) = 19 ADC c
5574:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5575:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
5576:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5577:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5578:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5579:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5580:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5581:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5582:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5583:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5584:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
5585:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
5586:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
5587:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5588:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(const ADC_TypeDef *ADCx, uint32_t Channel)
5589:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5590:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
5591:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                                  >> ADC_SMPRX_REGOFFSET_POS));
5592:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5593:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5594:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                              ADC_SMPR1_SMP0
5595:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                              << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BI
5596:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
5597:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                    );
5598:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5599:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5600:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5601:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
5602:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC channel.
5603:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
5604:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on ADC group regular or injected.
5605:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
5606:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
5607:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
5608:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
5609:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5610:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         available in differential mode.
5611:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5612:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         not available in differential mode.
5613:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5614:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5615:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
5616:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
5617:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
5618:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5619:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
5620:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be ADC disabled.
5621:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   One or several values can be selected.
5622:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5623:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
5624:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5625:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
ARM GAS  /tmp/cc46GlVT.s 			page 118


5626:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5627:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5628:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5629:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5630:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5632:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5633:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5634:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5635:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5636:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5637:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5638:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5639:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5640:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
5642:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
5643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
5644:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
5645:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5646:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
5647:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5648:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5649:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5650:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
5651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
5652:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5653:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)
5654:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK)));
5655:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5656:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5657:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5658:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
5659:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC channel.
5660:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5661:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5662:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
5663:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
5664:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
5665:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
5666:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5667:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         available in differential mode.
5668:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5669:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         not available in differential mode.
5670:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5671:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5672:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
5673:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
5674:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5675:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
5676:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5677:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
5678:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5679:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5680:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5681:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5682:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
ARM GAS  /tmp/cc46GlVT.s 			page 119


5683:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5684:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5685:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5686:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5687:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5688:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5689:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5690:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5691:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5692:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5693:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
5694:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5695:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(const ADC_TypeDef *ADCx, uint32_t Channel)
5696:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5697:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5698:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5699:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5700:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5701:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
5702:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5703:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5704:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
5705:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
5706:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5707:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5708:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5709:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
5710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
5711:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
5712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
5713:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is enabled.
5714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
5715:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
5716:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
5717:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5718:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         instance:
5719:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5720:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5721:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5722:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5723:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             ADC resolution configured).
5724:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5725:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5726:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5727:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5728:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             be selected. For example:
5729:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5730:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5731:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             groups regular and injected).
5732:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5733:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5734:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5735:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5736:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5737:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             the 2 LSB are ignored.
5738:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5739:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/cc46GlVT.s 			page 120


5740:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5741:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
5742:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
5743:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
5744:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
5745:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
5746:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
5747:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
5748:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5749:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5750:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5751:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5752:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5753:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
5754:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5755:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5756:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5757:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5758:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5759:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5760:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5761:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5762:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5763:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5764:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5765:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5766:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5767:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5768:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5770:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5772:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5774:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5775:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5777:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5778:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5779:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5780:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5781:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5782:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5783:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5784:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5785:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5786:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5787:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5788:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5789:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5790:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5791:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5792:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5793:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5794:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5795:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5796:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
ARM GAS  /tmp/cc46GlVT.s 			page 121


5797:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5798:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5799:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5801:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5803:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5804:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5805:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5806:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5807:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5808:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5809:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5810:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5811:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5812:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5813:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5814:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5815:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
5816:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
5817:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
5818:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
5819:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
5820:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
5821:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(1)
5822:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
5823:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
5824:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(2)
5825:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(2)
5826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (2)
5827:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDCORE_REG          (0)(2)
5828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDCORE_INJ          (0)(2)
5829:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDCORE_REG_INJ         (2)
5830:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5831:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (0) On STM32H5, parameter available only on analog watchdog number: AWD1.\n
5832:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On STM32H563xx/573xx, parameter available only on ADC instance: ADC1.
5833:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) On STM32H563xx/573xx, parameter available only on ADC instance: ADC2.
5834:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
5835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5837:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5838:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5839:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5840:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5841:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR,
5843:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
5844:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK)
5845:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                 * ADC_AWD_CR12_REGOFFSETGAP_VAL));
5846:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
5848:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5849:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
5851:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5852:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
5853:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
ARM GAS  /tmp/cc46GlVT.s 			page 122


5854:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5855:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5856:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5857:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5858:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5859:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5860:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5861:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           as parameter for another function.
5862:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5863:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           process the returned value with the helper macro
5864:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5865:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5866:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           one channel.
5867:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5868:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         instance:
5869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5870:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5872:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5873:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             ADC resolution configured).
5874:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5875:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5876:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5877:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5878:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             be selected. For example:
5879:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             groups regular and injected).
5882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5884:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5885:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5886:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5887:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             the 2 LSB are ignored.
5888:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5889:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
5890:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5891:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
5892:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5893:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5894:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5895:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5896:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5897:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5898:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
5899:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5900:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5901:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5902:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5903:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5904:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5905:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5906:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5907:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5908:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             by bitfield.
5909:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5910:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
ARM GAS  /tmp/cc46GlVT.s 			page 123


5911:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5912:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5913:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5914:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5915:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5916:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5917:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5918:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5919:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5920:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5921:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5922:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5923:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5924:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5925:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5926:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5928:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5931:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5932:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5933:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5934:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5935:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5936:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5937:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5938:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5939:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5940:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5941:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5942:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5943:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5944:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5945:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5946:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5947:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5948:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5949:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5950:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5951:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5952:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5953:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5954:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5956:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5957:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5958:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5959:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5961:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5962:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5964:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5965:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5966:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5967:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
ARM GAS  /tmp/cc46GlVT.s 			page 124


5968:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5969:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5970:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5971:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
5972:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
5973:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
5974:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
5975:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (0) On STM32H5, parameter available only on analog watchdog number: AWD1.
5976:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
5977:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(const ADC_TypeDef *ADCx, uint32_t AWDy)
5978:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
5979:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR,
5980:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_
5981:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK)
5982:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                       * ADC_AWD_CR12_REGOFFSETGAP_VAL));
5983:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5984:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   uint32_t analog_wd_monit_channels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
5985:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
5986:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* If "analog_wd_monit_channels" == 0, then the selected AWD is disabled       */
5987:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5988:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5989:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* or a single channel.                                                     */
5990:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   if (analog_wd_monit_channels != 0UL)
5991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   {
5992:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     {
5994:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_CFGR_AWD1SGL) == 0UL)
5995:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       {
5996:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5997:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         analog_wd_monit_channels = ((analog_wd_monit_channels
5998:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                      | (ADC_AWD_CR23_CHANNEL_MASK)
5999:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     )
6000:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     & (~(ADC_CFGR_AWD1CH))
6001:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                    );
6002:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       }
6003:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       else
6004:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       {
6005:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         /* AWD monitoring a single channel */
6006:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
6007:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     | (ADC_AWD2CR_AWD2CH_0 << (analog_wd_monit_channels >> ADC_CFGR
6008:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                    );
6009:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       }
6010:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     }
6011:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     else
6012:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     {
6013:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
6014:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       {
6015:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         /* AWD monitoring a group of channels */
6016:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         analog_wd_monit_channels = (ADC_AWD_CR23_CHANNEL_MASK
6017:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
6018:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                    );
6019:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       }
6020:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       else
6021:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       {
6022:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         /* AWD monitoring a single channel */
6023:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         /* AWD monitoring a group of channels */
6024:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
ARM GAS  /tmp/cc46GlVT.s 			page 125


6025:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
6026:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                     | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(analog_wd_monit_channels) << 
6027:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                    );
6028:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****       }
6029:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****     }
6030:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   }
6031:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6032:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return analog_wd_monit_channels;
6033:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6034:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6035:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6036:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
6037:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         high and low.
6038:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
6039:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
6040:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6041:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6042:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6043:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6044:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         instance:
6045:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6046:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6047:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6048:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6049:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             ADC resolution configured).
6050:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6051:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6052:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6053:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6054:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             be selected. For example:
6055:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6056:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6057:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             groups regular and injected).
6058:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6059:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6060:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6061:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6062:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6063:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             the 2 LSB are ignored.
6064:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
6065:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6066:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6067:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
6068:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Examples:
6069:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6070:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
6071:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
6072:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6073:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
6074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
6075:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
6077:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
6078:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
6079:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
6080:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
6081:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
ARM GAS  /tmp/cc46GlVT.s 			page 126


6082:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
6083:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
6084:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6085:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6086:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6087:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6088:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
6090:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
6091:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6092:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6093:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
6094:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
6095:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6096:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
6097:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
6098:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* "AWDy".                                                                  */
6099:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
6100:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6102:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
6103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
6105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
6106:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
6107:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6108:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6109:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6110:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
6111:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         high or low.
6112:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
6113:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
6114:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6115:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6116:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6117:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6118:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         instance:
6119:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6120:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6121:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6122:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6123:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             ADC resolution configured).
6124:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6125:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6126:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6127:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             be selected. For example:
6129:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             groups regular and injected).
6132:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6133:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6134:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6135:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6136:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6137:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *             the 2 LSB are ignored.
6138:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
ARM GAS  /tmp/cc46GlVT.s 			page 127


6139:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6140:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6141:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
6142:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Examples:
6143:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6144:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
6145:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
6146:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6147:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
6148:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
6149:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6150:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
6151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
6152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is not conditioned to
6153:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC can be disabled, enabled with or without conversion on going
6155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either ADC groups regular or injected.
6156:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
6157:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
6158:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
6159:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
6160:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
6161:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
6162:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6163:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6164:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6165:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6166:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6167:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6168:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6169:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6170:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
6171:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6172:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6173:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
6174:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
6175:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6176:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
6177:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
6178:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
6179:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
6180:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6182:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
6183:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6184:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(*preg,
6185:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              AWDThresholdsHighLow,
6186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
6187:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6188:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6190:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
6191:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
6192:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         concatenated.
6193:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
6194:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
6195:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         using helper macro:
ARM GAS  /tmp/cc46GlVT.s 			page 128


6196:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
6197:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6198:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6199:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
6200:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
6201:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
6202:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
6203:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
6204:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
6205:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
6206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6207:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6208:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6209:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6210:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6211:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6212:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6213:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6214:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
6215:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6216:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(const ADC_TypeDef *ADCx,
6218:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                       uint32_t AWDy, uint32_t AWDThresholdsHighLow)
6219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6220:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6221:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_
6222:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6223:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
6224:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
6225:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
6226:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_TR1_LT1)));
6227:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6228:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6229:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6230:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC analog watchdog filtering configuration
6231:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6232:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6233:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
6235:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, this feature is only available on first
6236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         analog watchdog (AWD1)
6237:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_SetAWDFilteringConfiguration
6238:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6239:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6240:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6241:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  FilteringConfig This parameter can be one of the following values:
6242:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6243:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6244:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6245:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6246:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6247:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6248:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6249:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6250:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6251:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6252:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t
ARM GAS  /tmp/cc46GlVT.s 			page 129


6253:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6254:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6255:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (void)(AWDy);
6256:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->TR1, ADC_TR1_AWDFILT, FilteringConfig);
6257:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6258:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6260:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC analog watchdog filtering configuration
6261:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, this feature is only available on first
6262:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         analog watchdog (AWD1)
6263:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_GetAWDFilteringConfiguration
6264:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6265:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6266:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6267:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be:
6268:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6269:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6270:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6271:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6272:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6273:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6274:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6275:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6276:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6277:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAWDFilteringConfiguration(const ADC_TypeDef *ADCx, uint32_t AWDy
6278:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6279:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6280:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   (void)(AWDy);
6281:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->TR1, ADC_TR1_AWDFILT));
6282:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6283:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6284:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6285:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
6286:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6287:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6288:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
6289:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
6290:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6291:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6292:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6293:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
6294:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 series).
6295:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6296:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6297:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6298:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6299:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6300:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (oversampler buffer reset).
6301:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6302:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6303:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6304:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
6305:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
6306:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
6307:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
6308:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6309:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
ARM GAS  /tmp/cc46GlVT.s 			page 130


6310:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6311:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6312:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6315:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6316:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6317:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
6318:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6319:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
6320:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6321:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6322:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6323:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
6324:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 series).
6325:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6326:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6327:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6328:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6329:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6330:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (oversampler buffer reset).
6331:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
6332:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
6333:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
6334:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6335:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6336:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6337:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6338:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6339:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6340:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6341:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6342:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(const ADC_TypeDef *ADCx)
6343:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6344:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
6345:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6346:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6347:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6348:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
6349:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on the selected ADC group.
6350:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6351:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6352:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           are done from 1 trigger)
6353:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6354:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           needs a trigger)
6355:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6356:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6357:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6358:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on group regular.
6359:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
6360:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
6361:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
6362:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
6363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6364:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
6365:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6366:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
ARM GAS  /tmp/cc46GlVT.s 			page 131


6367:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6368:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6369:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
6370:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6371:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
6372:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6373:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6374:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6375:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
6376:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on the selected ADC group.
6377:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6378:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6379:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           are done from 1 trigger)
6380:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6381:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           needs a trigger)
6382:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
6383:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6384:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6385:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6386:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6387:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6388:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(const ADC_TypeDef *ADCx)
6389:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6390:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
6391:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6393:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC oversampling
6395:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
6396:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
6397:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ratio
6398:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - shift
6399:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6400:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6401:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6402:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
6403:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
6404:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
6405:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6406:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
6407:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6408:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6409:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6410:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6411:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6413:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6414:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
6416:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6417:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6418:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6419:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6420:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6421:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6422:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6423:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
ARM GAS  /tmp/cc46GlVT.s 			page 132


6424:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6425:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6426:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6427:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
6428:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6429:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
6430:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6431:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6432:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6433:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
6434:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6435:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
6436:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6437:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
6438:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6439:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6440:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6441:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6442:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6443:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6444:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6445:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6446:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6447:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(const ADC_TypeDef *ADCx)
6448:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6449:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
6450:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6451:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6452:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6453:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
6454:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6455:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
6456:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6457:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
6458:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6459:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6460:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6461:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6462:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6463:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6464:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6465:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6466:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6467:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6468:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(const ADC_TypeDef *ADCx)
6469:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6470:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
6471:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6472:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6473:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6474:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
6475:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6476:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6477:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
6478:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
6479:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6480:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
ARM GAS  /tmp/cc46GlVT.s 			page 133


6481:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6482:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6483:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
6484:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6485:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6486:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         either master or slave depending on hardware.
6487:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to reference manual.
6488:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6489:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6490:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6491:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6492:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC instance or by using helper macro
6493:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6494:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
6495:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6496:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6497:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
6498:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6500:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6501:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6502:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6503:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6504:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6506:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6507:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
6509:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6510:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
6511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6512:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6513:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6514:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
6515:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6516:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6517:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         either master or slave depending on hardware.
6518:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to reference manual.
6519:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
6520:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6521:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6522:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6523:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6524:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6525:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6526:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6527:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6528:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6529:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6530:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6531:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(const ADC_Common_TypeDef *ADCxy_COMMON)
6533:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
6535:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6536:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6537:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
ARM GAS  /tmp/cc46GlVT.s 			page 134


6538:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
6539:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or transfer by DMA.
6540:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6541:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6542:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         DMA transfer settings.
6543:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6544:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6545:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6546:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6547:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6548:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions) is reached.
6549:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6550:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6551:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6552:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions).
6553:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6554:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6555:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         mode non-circular:
6556:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6557:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6558:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6559:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6560:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6561:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6562:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6563:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6564:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6565:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6566:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6567:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6568:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6569:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
6570:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
6571:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_SetMultiDMATransfer\n
6572:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_SetMultiDMATransfer
6573:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6574:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6575:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
6576:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6577:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
6578:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
6579:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
6580:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
6581:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6582:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6583:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
6584:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6585:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG, MultiDMATransfer);
6586:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6587:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6588:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6589:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
6590:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or transfer by DMA.
6591:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6592:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6593:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         DMA transfer settings.
6594:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
ARM GAS  /tmp/cc46GlVT.s 			page 135


6595:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6596:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6597:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6598:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6599:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions) is reached.
6600:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6601:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6602:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6603:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           ADC conversions).
6604:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6605:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6606:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         mode non-circular:
6607:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6608:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6609:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6610:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6611:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6612:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6613:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6614:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6615:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6616:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6617:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6618:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_GetMultiDMATransfer\n
6619:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_GetMultiDMATransfer
6620:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6621:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6622:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6623:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6624:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
6625:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
6626:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
6627:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
6628:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6629:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(const ADC_Common_TypeDef *ADCxy_COMMON)
6630:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG));
6632:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6633:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6634:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6635:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
6636:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
6637:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
6638:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
6639:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
6640:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
6641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6642:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6644:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6645:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
6646:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6647:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
6648:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6649:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6650:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
6651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
ARM GAS  /tmp/cc46GlVT.s 			page 136


6652:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
6653:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
6654:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
6655:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
6656:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
6657:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
6658:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
6659:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
6660:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
6661:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
6662:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
6663:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
6664:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
6665:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
6666:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
6667:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6668:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6669:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
6670:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6671:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
6672:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6673:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6674:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6675:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
6676:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
6677:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6678:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6679:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6680:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
6681:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
6682:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
6683:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
6684:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
6685:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
6686:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
6687:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
6688:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
6689:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
6690:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
6691:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
6692:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *
6693:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
6694:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
6695:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
6696:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6697:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(const ADC_Common_TypeDef *ADCxy_COMMON)
6698:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6699:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
6700:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6701:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
6702:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6703:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6704:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
6705:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6706:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
6707:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
6708:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc46GlVT.s 			page 137


6709:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6711:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
6712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6713:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6715:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6716:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6717:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6718:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be ADC disabled.
6719:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
6720:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6721:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6722:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6723:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
6724:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6725:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6726:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6727:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6728:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6729:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6730:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_DEEPPWD);
6731:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6732:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6733:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6734:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
6735:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6736:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6737:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6738:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6739:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6740:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6741:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be ADC disabled.
6742:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
6743:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6744:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6745:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6746:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
6747:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6748:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6749:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6750:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6751:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
6752:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6753:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6754:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6755:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
6756:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
6757:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6758:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
6759:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6760:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(const ADC_TypeDef *ADCx)
 112              		.loc 2 6760 26 is_stmt 1 view .LVU35
 113              	.LBB339:
6761:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6762:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
 114              		.loc 2 6762 3 view .LVU36
ARM GAS  /tmp/cc46GlVT.s 			page 138


 115              		.loc 2 6762 12 is_stmt 0 view .LVU37
 116 0016 9A68     		ldr	r2, [r3, #8]
 117              		.loc 2 6762 74 view .LVU38
 118 0018 12F0005F 		tst	r2, #536870912
 119 001c 05D0     		beq	.L5
 120              	.LVL5:
 121              		.loc 2 6762 74 view .LVU39
 122              	.LBE339:
 123              	.LBE338:
 476:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 124              		.loc 1 476 5 is_stmt 1 view .LVU40
 125              	.LBB340:
 126              	.LBI340:
6746:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 127              		.loc 2 6746 22 view .LVU41
 128              	.LBB341:
6751:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 129              		.loc 2 6751 3 view .LVU42
 130 001e 9A68     		ldr	r2, [r3, #8]
 131 0020 22F02042 		bic	r2, r2, #-1610612736
 132 0024 22F03F02 		bic	r2, r2, #63
 133 0028 9A60     		str	r2, [r3, #8]
 134              	.LVL6:
 135              	.L5:
6751:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 136              		.loc 2 6751 3 is_stmt 0 view .LVU43
 137              	.LBE341:
 138              	.LBE340:
 483:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 139              		.loc 1 483 3 is_stmt 1 view .LVU44
 483:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 140              		.loc 1 483 45 is_stmt 0 view .LVU45
 141 002a 2268     		ldr	r2, [r4]
 142              	.LVL7:
 143              	.LBB342:
 144              	.LBI342:
6763:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6764:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6765:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6766:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
6767:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
6768:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
6769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
6770:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
6771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
6772:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6774:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be ADC disabled.
6775:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
6776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6777:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6778:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6779:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
6780:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6781:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6782:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6783:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
ARM GAS  /tmp/cc46GlVT.s 			page 139


6784:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6785:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6786:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_ADVREGEN);
6787:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6788:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6789:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6790:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
6791:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6792:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6793:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be ADC disabled.
6794:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
6795:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6796:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6797:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6798:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
6799:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
6801:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6803:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6804:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
6805:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
6806:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6807:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
6808:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6809:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(const ADC_TypeDef *ADCx)
 145              		.loc 2 6809 26 is_stmt 1 view .LVU46
 146              	.LBB343:
6810:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6811:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 147              		.loc 2 6811 3 view .LVU47
 148              		.loc 2 6811 12 is_stmt 0 view .LVU48
 149 002c 9368     		ldr	r3, [r2, #8]
 150              		.loc 2 6811 76 view .LVU49
 151 002e 13F0805F 		tst	r3, #268435456
 152 0032 1FD1     		bne	.L6
 153              	.LVL8:
 154              		.loc 2 6811 76 view .LVU50
 155              	.LBE343:
 156              	.LBE342:
 486:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 157              		.loc 1 486 5 is_stmt 1 view .LVU51
 158              	.LBB344:
 159              	.LBI344:
6779:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 160              		.loc 2 6779 22 view .LVU52
 161              	.LBB345:
6784:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 162              		.loc 2 6784 3 view .LVU53
 163 0034 9368     		ldr	r3, [r2, #8]
 164 0036 23F01043 		bic	r3, r3, #-1879048192
 165 003a 23F03F03 		bic	r3, r3, #63
 166 003e 43F08053 		orr	r3, r3, #268435456
 167 0042 9360     		str	r3, [r2, #8]
 168              	.LVL9:
6784:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 169              		.loc 2 6784 3 is_stmt 0 view .LVU54
ARM GAS  /tmp/cc46GlVT.s 			page 140


 170              	.LBE345:
 171              	.LBE344:
 491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 172              		.loc 1 491 5 is_stmt 1 view .LVU55
 491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 173              		.loc 1 491 89 is_stmt 0 view .LVU56
 174 0044 654B     		ldr	r3, .L29
 175 0046 1B68     		ldr	r3, [r3]
 176 0048 9B09     		lsrs	r3, r3, #6
 177 004a 654A     		ldr	r2, .L29+4
 178 004c A2FB0323 		umull	r2, r3, r2, r3
 179 0050 9B09     		lsrs	r3, r3, #6
 491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 180              		.loc 1 491 109 view .LVU57
 181 0052 0133     		adds	r3, r3, #1
 491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 182              		.loc 1 491 69 view .LVU58
 183 0054 5B00     		lsls	r3, r3, #1
 491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 184              		.loc 1 491 21 view .LVU59
 185 0056 0193     		str	r3, [sp, #4]
 492:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 186              		.loc 1 492 5 is_stmt 1 view .LVU60
 492:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 187              		.loc 1 492 11 is_stmt 0 view .LVU61
 188 0058 09E0     		b	.L7
 189              	.LVL10:
 190              	.L25:
 462:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 191              		.loc 1 462 5 is_stmt 1 view .LVU62
 192 005a FFF7FEFF 		bl	HAL_ADC_MspInit
 193              	.LVL11:
 466:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 194              		.loc 1 466 5 view .LVU63
 195 005e 0023     		movs	r3, #0
 196 0060 E365     		str	r3, [r4, #92]
 469:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 197              		.loc 1 469 5 view .LVU64
 469:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 198              		.loc 1 469 16 is_stmt 0 view .LVU65
 199 0062 84F85430 		strb	r3, [r4, #84]
 200 0066 D5E7     		b	.L4
 201              	.L8:
 494:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 202              		.loc 1 494 7 is_stmt 1 view .LVU66
 494:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 203              		.loc 1 494 22 is_stmt 0 view .LVU67
 204 0068 019B     		ldr	r3, [sp, #4]
 205 006a 013B     		subs	r3, r3, #1
 206 006c 0193     		str	r3, [sp, #4]
 207              	.L7:
 492:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 208              		.loc 1 492 11 is_stmt 1 view .LVU68
 492:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 209              		.loc 1 492 28 is_stmt 0 view .LVU69
 210 006e 019B     		ldr	r3, [sp, #4]
 492:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
ARM GAS  /tmp/cc46GlVT.s 			page 141


 211              		.loc 1 492 11 view .LVU70
 212 0070 002B     		cmp	r3, #0
 213 0072 F9D1     		bne	.L8
 214              	.L6:
 501:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 215              		.loc 1 501 3 is_stmt 1 view .LVU71
 501:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 216              		.loc 1 501 45 is_stmt 0 view .LVU72
 217 0074 2268     		ldr	r2, [r4]
 218              	.LVL12:
 219              	.LBB346:
 220              	.LBI346:
6809:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 221              		.loc 2 6809 26 is_stmt 1 view .LVU73
 222              	.LBB347:
 223              		.loc 2 6811 3 view .LVU74
 224              		.loc 2 6811 12 is_stmt 0 view .LVU75
 225 0076 9368     		ldr	r3, [r2, #8]
 226              		.loc 2 6811 76 view .LVU76
 227 0078 13F0805F 		tst	r3, #268435456
 228 007c 40F08380 		bne	.L23
 229              	.LVL13:
 230              		.loc 2 6811 76 view .LVU77
 231              	.LBE347:
 232              	.LBE346:
 504:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 233              		.loc 1 504 5 is_stmt 1 view .LVU78
 234 0080 A36D     		ldr	r3, [r4, #88]
 235 0082 43F01003 		orr	r3, r3, #16
 236 0086 A365     		str	r3, [r4, #88]
 507:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 237              		.loc 1 507 5 view .LVU79
 238 0088 E36D     		ldr	r3, [r4, #92]
 239 008a 43F00103 		orr	r3, r3, #1
 240 008e E365     		str	r3, [r4, #92]
 509:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 241              		.loc 1 509 5 view .LVU80
 242              	.LVL14:
 509:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 243              		.loc 1 509 20 is_stmt 0 view .LVU81
 244 0090 0120     		movs	r0, #1
 245              	.LVL15:
 246              	.L9:
 516:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 247              		.loc 1 516 3 is_stmt 1 view .LVU82
 248              	.LBB348:
 249              	.LBI348:
6812:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6813:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6814:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6815:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
6816:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
6817:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
6818:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC conversion start.
6819:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
6820:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6821:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
ARM GAS  /tmp/cc46GlVT.s 			page 142


6822:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6823:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6824:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6825:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6827:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6829:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6830:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6831:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6832:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6833:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6834:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6837:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_ADEN);
6838:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6839:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6840:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6841:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6843:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6844:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6845:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         on either groups regular or injected.
6846:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6848:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6849:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6851:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6852:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6853:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6854:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6855:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6856:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6857:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_ADDIS);
6858:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6859:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6860:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6861:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6862:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6863:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6864:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6865:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6866:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6867:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6868:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(const ADC_TypeDef *ADCx)
6870:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
6872:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6873:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6874:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6875:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6876:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6877:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6878:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
ARM GAS  /tmp/cc46GlVT.s 			page 143


6879:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(const ADC_TypeDef *ADCx)
6881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6884:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6885:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6886:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6887:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6888:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6889:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6890:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6891:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with differential mode available:
6892:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         Calibration of offset is specific to each of
6893:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         single-ended and differential modes
6894:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (calibration run must be performed for each of these
6895:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6896:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         requires their calibration).
6897:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6898:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6899:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be ADC disabled.
6900:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6901:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6902:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6903:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6904:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6905:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6906:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6907:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6908:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
6909:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6910:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6911:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6912:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6913:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6914:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6915:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
6916:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6917:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6918:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6919:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6920:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6921:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6922:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6923:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6924:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(const ADC_TypeDef *ADCx)
6925:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6926:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
6927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6928:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
6931:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6932:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6933:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6934:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
6935:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc46GlVT.s 			page 144


6936:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6937:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6938:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6939:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6940:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6941:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6942:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           starts immediately.
6943:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6944:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6945:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           following the ADC start conversion command.
6946:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6947:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6948:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6949:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6950:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without ADC disable command on going.
6951:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6952:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6953:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6954:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6956:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6957:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6958:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6959:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6961:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6962:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_ADSTART);
6963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6964:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6965:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6966:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6967:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6968:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
6969:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6970:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without ADC disable command on going.
6971:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6972:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6973:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
6974:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6975:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6976:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6977:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6978:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6979:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6980:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6981:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6982:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_ADSTP);
6983:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6984:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6985:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6986:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6987:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6988:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
6989:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6990:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(const ADC_TypeDef *ADCx)
 250              		.loc 2 6991 26 view .LVU83
ARM GAS  /tmp/cc46GlVT.s 			page 145


 251              	.LBB349:
6992:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 252              		.loc 2 6993 3 view .LVU84
 253              		.loc 2 6993 12 is_stmt 0 view .LVU85
 254 0092 9368     		ldr	r3, [r2, #8]
 255              		.loc 2 6993 74 view .LVU86
 256 0094 13F00403 		ands	r3, r3, #4
 257 0098 00D0     		beq	.L10
 258 009a 0123     		movs	r3, #1
 259              	.L10:
 260              	.LVL16:
 261              		.loc 2 6993 74 view .LVU87
 262              	.LBE349:
 263              	.LBE348:
 518:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_regular == 0UL)
 264              		.loc 1 518 3 is_stmt 1 view .LVU88
 518:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_regular == 0UL)
 265              		.loc 1 518 13 is_stmt 0 view .LVU89
 266 009c A16D     		ldr	r1, [r4, #88]
 518:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_regular == 0UL)
 267              		.loc 1 518 6 view .LVU90
 268 009e 11F0100F 		tst	r1, #16
 269 00a2 40F09280 		bne	.L11
 519:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      )
 270              		.loc 1 519 7 view .LVU91
 271 00a6 002B     		cmp	r3, #0
 272 00a8 40F08F80 		bne	.L11
 523:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 273              		.loc 1 523 5 is_stmt 1 view .LVU92
 274 00ac A36D     		ldr	r3, [r4, #88]
 275              	.LVL17:
 523:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 276              		.loc 1 523 5 is_stmt 0 view .LVU93
 277 00ae 23F48173 		bic	r3, r3, #258
 278 00b2 43F00203 		orr	r3, r3, #2
 279 00b6 A365     		str	r3, [r4, #88]
 532:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 280              		.loc 1 532 5 is_stmt 1 view .LVU94
 281              	.LVL18:
 282              	.LBB350:
 283              	.LBI350:
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 284              		.loc 2 6869 26 view .LVU95
 285              	.LBB351:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 286              		.loc 2 6871 3 view .LVU96
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 287              		.loc 2 6871 12 is_stmt 0 view .LVU97
 288 00b8 9368     		ldr	r3, [r2, #8]
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 289              		.loc 2 6871 68 view .LVU98
 290 00ba 13F0010F 		tst	r3, #1
 291 00be 14D1     		bne	.L12
 292              	.LVL19:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 293              		.loc 2 6871 68 view .LVU99
ARM GAS  /tmp/cc46GlVT.s 			page 146


 294              	.LBE351:
 295              	.LBE350:
 534:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 296              		.loc 1 534 7 is_stmt 1 view .LVU100
 297              	.LBB352:
 298              	.LBI352:
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 299              		.loc 2 6869 26 view .LVU101
 300              	.LBB353:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 301              		.loc 2 6871 3 view .LVU102
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 302              		.loc 2 6871 12 is_stmt 0 view .LVU103
 303 00c0 484B     		ldr	r3, .L29+8
 304 00c2 9B68     		ldr	r3, [r3, #8]
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 305              		.loc 2 6871 68 view .LVU104
 306 00c4 13F00103 		ands	r3, r3, #1
 307 00c8 00D0     		beq	.L13
 308 00ca 0123     		movs	r3, #1
 309              	.L13:
 310              	.LVL20:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 311              		.loc 2 6871 68 view .LVU105
 312              	.LBE353:
 313              	.LBE352:
 314              	.LBB354:
 315              	.LBI354:
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 316              		.loc 2 6869 26 is_stmt 1 view .LVU106
 317              	.LBB355:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 318              		.loc 2 6871 3 view .LVU107
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 319              		.loc 2 6871 12 is_stmt 0 view .LVU108
 320 00cc 464A     		ldr	r2, .L29+12
 321 00ce 9268     		ldr	r2, [r2, #8]
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 322              		.loc 2 6871 68 view .LVU109
 323 00d0 12F00102 		ands	r2, r2, #1
 324 00d4 00D0     		beq	.L14
 325 00d6 0122     		movs	r2, #1
 326              	.L14:
 327              	.LVL21:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 328              		.loc 2 6871 68 view .LVU110
 329              	.LBE355:
 330              	.LBE354:
 534:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 331              		.loc 1 534 10 view .LVU111
 332 00d8 1343     		orrs	r3, r2, r3
 333 00da 06D1     		bne	.L12
 553:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 334              		.loc 1 553 9 is_stmt 1 view .LVU112
 335 00dc 6368     		ldr	r3, [r4, #4]
 336              	.LVL22:
 337              	.LBB356:
ARM GAS  /tmp/cc46GlVT.s 			page 147


 338              	.LBI356:
3087:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 339              		.loc 2 3087 22 view .LVU113
 340              	.LBB357:
3089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 341              		.loc 2 3089 3 view .LVU114
 342 00de 4349     		ldr	r1, .L29+16
 343 00e0 8A68     		ldr	r2, [r1, #8]
 344 00e2 22F47C12 		bic	r2, r2, #4128768
 345 00e6 1343     		orrs	r3, r3, r2
 346              	.LVL23:
3089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 347              		.loc 2 3089 3 is_stmt 0 view .LVU115
 348 00e8 8B60     		str	r3, [r1, #8]
 349              	.LVL24:
 350              	.L12:
3089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 351              		.loc 2 3089 3 view .LVU116
 352              	.LBE357:
 353              	.LBE356:
 566:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                  hadc->Init.Overrun                                                     |
 354              		.loc 1 566 5 is_stmt 1 view .LVU117
 566:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                  hadc->Init.Overrun                                                     |
 355              		.loc 1 566 18 is_stmt 0 view .LVU118
 356 00ea 627E     		ldrb	r2, [r4, #25]	@ zero_extendqisi2
 567:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                  hadc->Init.DataAlign                                                   |
 357              		.loc 1 567 28 view .LVU119
 358 00ec A36B     		ldr	r3, [r4, #56]
 566:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                  hadc->Init.Overrun                                                     |
 359              		.loc 1 566 89 view .LVU120
 360 00ee 43EA4233 		orr	r3, r3, r2, lsl #13
 568:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                  hadc->Init.Resolution                                                  |
 361              		.loc 1 568 28 view .LVU121
 362 00f2 E268     		ldr	r2, [r4, #12]
 567:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                  hadc->Init.DataAlign                                                   |
 363              		.loc 1 567 89 view .LVU122
 364 00f4 1343     		orrs	r3, r3, r2
 569:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 365              		.loc 1 569 28 view .LVU123
 366 00f6 A268     		ldr	r2, [r4, #8]
 568:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                  hadc->Init.Resolution                                                  |
 367              		.loc 1 568 89 view .LVU124
 368 00f8 1343     		orrs	r3, r3, r2
 570:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 369              		.loc 1 570 18 view .LVU125
 370 00fa 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 566:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                  hadc->Init.Overrun                                                     |
 371              		.loc 1 566 15 view .LVU126
 372 00fe 43EA0243 		orr	r3, r3, r2, lsl #16
 373              	.LVL25:
 572:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 374              		.loc 1 572 5 is_stmt 1 view .LVU127
 572:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 375              		.loc 1 572 8 is_stmt 0 view .LVU128
 376 0102 012A     		cmp	r2, #1
 377 0104 41D0     		beq	.L26
 378              	.L15:
ARM GAS  /tmp/cc46GlVT.s 			page 148


 582:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 379              		.loc 1 582 5 is_stmt 1 view .LVU129
 582:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 380              		.loc 1 582 19 is_stmt 0 view .LVU130
 381 0106 A26A     		ldr	r2, [r4, #40]
 582:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 382              		.loc 1 582 8 view .LVU131
 383 0108 22B1     		cbz	r2, .L16
 584:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    | hadc->Init.ExternalTrigConvEdge
 384              		.loc 1 584 7 is_stmt 1 view .LVU132
 584:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    | hadc->Init.ExternalTrigConvEdge
 385              		.loc 1 584 49 is_stmt 0 view .LVU133
 386 010a 02F47872 		and	r2, r2, #992
 585:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                   );
 387              		.loc 1 585 32 view .LVU134
 388 010e E16A     		ldr	r1, [r4, #44]
 585:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                   );
 389              		.loc 1 585 20 view .LVU135
 390 0110 0A43     		orrs	r2, r2, r1
 584:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    | hadc->Init.ExternalTrigConvEdge
 391              		.loc 1 584 16 view .LVU136
 392 0112 1343     		orrs	r3, r3, r2
 393              	.LVL26:
 394              	.L16:
 590:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 395              		.loc 1 590 5 is_stmt 1 view .LVU137
 396 0114 2168     		ldr	r1, [r4]
 397 0116 CD68     		ldr	r5, [r1, #12]
 398 0118 354A     		ldr	r2, .L29+20
 399 011a 2A40     		ands	r2, r2, r5
 400 011c 1343     		orrs	r3, r3, r2
 401              	.LVL27:
 590:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 402              		.loc 1 590 5 is_stmt 0 view .LVU138
 403 011e CB60     		str	r3, [r1, #12]
 593:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 404              		.loc 1 593 5 is_stmt 1 view .LVU139
 405 0120 2268     		ldr	r2, [r4]
 406 0122 1369     		ldr	r3, [r2, #16]
 407 0124 23F04063 		bic	r3, r3, #201326592
 408 0128 216B     		ldr	r1, [r4, #48]
 409 012a 0B43     		orrs	r3, r3, r1
 410 012c 1361     		str	r3, [r2, #16]
 601:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 411              		.loc 1 601 5 view .LVU140
 601:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 412              		.loc 1 601 82 is_stmt 0 view .LVU141
 413 012e 2268     		ldr	r2, [r4]
 414              	.LVL28:
 415              	.LBB358:
 416              	.LBI358:
6994:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
6995:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
6996:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
6997:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6998:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6999:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/cc46GlVT.s 			page 149


7000:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
7001:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7002:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(const ADC_TypeDef *ADCx)
7003:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7004:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
7005:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7006:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7007:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7008:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Start ADC sampling phase for sampling time trigger mode
7009:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function is relevant only when
7010:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED has been set
7011:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           using @ref LL_ADC_REG_SetSamplingMode
7012:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - @ref LL_ADC_REG_TRIG_SOFTWARE is used as trigger source
7013:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7014:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
7015:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
7016:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
7017:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without ADC disable command on going.
7018:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    SWTRIG         LL_ADC_REG_StartSamplingPhase
7019:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7020:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7021:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7022:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartSamplingPhase(ADC_TypeDef *ADCx)
7023:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7024:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCx->CFGR2, ADC_CFGR2_SWTRIG);
7025:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7026:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7027:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7028:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Stop ADC sampling phase for sampling time trigger mode and start conversion
7029:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   This function is relevant only when
7030:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED has been set
7031:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           using @ref LL_ADC_REG_SetSamplingMode
7032:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - @ref LL_ADC_REG_TRIG_SOFTWARE is used as trigger source
7033:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - @ref LL_ADC_REG_StartSamplingPhase has been called to start
7034:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           the sampling phase
7035:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7036:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
7037:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
7038:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
7039:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without ADC disable command on going.
7040:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CFGR2    SWTRIG         LL_ADC_REG_StopSamplingPhase
7041:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7042:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7043:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7044:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopSamplingPhase(ADC_TypeDef *ADCx)
7045:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7046:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->CFGR2, ADC_CFGR2_SWTRIG);
7047:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7048:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7049:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7050:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7051:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
7052:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         all oversampling increased data width (for devices
7053:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         with feature oversampling).
7054:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
7055:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7056:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
ARM GAS  /tmp/cc46GlVT.s 			page 150


7057:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7058:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(const ADC_TypeDef *ADCx)
7059:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7060:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7061:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7062:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7063:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7064:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7065:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC resolution 12 bits.
7066:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7067:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         can increase data width, function for extended range
7068:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7069:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
7070:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7071:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
7072:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7073:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(const ADC_TypeDef *ADCx)
7074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7075:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7077:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7078:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7079:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7080:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC resolution 10 bits.
7081:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7082:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         can increase data width, function for extended range
7083:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7084:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
7085:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7086:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
7087:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7088:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(const ADC_TypeDef *ADCx)
7089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7090:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7091:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7092:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7093:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7094:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7095:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC resolution 8 bits.
7096:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7097:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         can increase data width, function for extended range
7098:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7099:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
7100:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
7102:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(const ADC_TypeDef *ADCx)
7104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7106:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7107:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7108:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7109:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7110:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC resolution 6 bits.
7111:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7112:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         can increase data width, function for extended range
7113:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
ARM GAS  /tmp/cc46GlVT.s 			page 151


7114:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
7115:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7116:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
7117:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7118:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(const ADC_TypeDef *ADCx)
7119:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7120:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7121:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7122:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7123:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
7124:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7125:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
7126:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
7127:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
7128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         a macro is available to get the conversion data of
7129:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
7130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
7131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
7132:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
7133:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
7134:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         separately).
7135:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
7136:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
7137:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7138:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7139:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
7140:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
7141:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
7142:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
7143:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7144:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7145:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(const ADC_Common_TypeDef *ADCxy_COMMO
7146:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                               uint32_t ConversionData)
7147:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7148:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
7149:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                              ConversionData)
7150:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
7151:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                    );
7152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7153:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
7154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7156:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
7157:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7158:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7159:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
7160:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
7161:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7162:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7163:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7164:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
7165:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
7166:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
7167:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
7168:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           starts immediately.
7169:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
7170:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
ARM GAS  /tmp/cc46GlVT.s 			page 152


7171:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *           following the ADC start conversion command.
7172:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7173:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
7174:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
7175:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
7176:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without ADC disable command on going.
7177:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
7178:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7179:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7180:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7181:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
7182:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7183:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7184:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7185:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7186:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7187:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7188:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_JADSTART);
7189:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7190:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7191:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7192:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
7193:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7194:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC state:
7195:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
7196:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         without ADC disable command on going.
7197:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
7198:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7199:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7200:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7201:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
7202:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7203:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7204:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7205:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7207:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7208:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_JADSTP);
7209:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7210:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7211:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7212:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
7213:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
7214:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7215:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
7216:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(const ADC_TypeDef *ADCx)
 417              		.loc 2 7217 26 is_stmt 1 view .LVU142
 418              	.LBB359:
7218:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 419              		.loc 2 7219 3 view .LVU143
 420              		.loc 2 7219 12 is_stmt 0 view .LVU144
 421 0130 9368     		ldr	r3, [r2, #8]
 422              		.loc 2 7219 76 view .LVU145
 423 0132 13F00803 		ands	r3, r3, #8
 424 0136 00D0     		beq	.L17
ARM GAS  /tmp/cc46GlVT.s 			page 153


 425 0138 0123     		movs	r3, #1
 426              	.L17:
 427              	.LVL29:
 428              		.loc 2 7219 76 view .LVU146
 429              	.LBE359:
 430              	.LBE358:
 602:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 431              		.loc 1 602 5 is_stmt 1 view .LVU147
 603:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        )
 432              		.loc 1 603 9 is_stmt 0 view .LVU148
 433 013a ABB9     		cbnz	r3, .L18
 606:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 434              		.loc 1 606 7 is_stmt 1 view .LVU149
 607:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 435              		.loc 1 607 20 is_stmt 0 view .LVU150
 436 013c 217E     		ldrb	r1, [r4, #24]	@ zero_extendqisi2
 608:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 437              		.loc 1 608 20 view .LVU151
 438 013e 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 439              	.LVL30:
 608:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 440              		.loc 1 608 20 view .LVU152
 441 0142 5B00     		lsls	r3, r3, #1
 606:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 442              		.loc 1 606 16 view .LVU153
 443 0144 43EA8131 		orr	r1, r3, r1, lsl #14
 444              	.LVL31:
 610:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 445              		.loc 1 610 7 is_stmt 1 view .LVU154
 446 0148 D368     		ldr	r3, [r2, #12]
 447 014a 23F48043 		bic	r3, r3, #16384
 448 014e 23F00203 		bic	r3, r3, #2
 449 0152 0B43     		orrs	r3, r3, r1
 450 0154 D360     		str	r3, [r2, #12]
 612:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 451              		.loc 1 612 7 view .LVU155
 612:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 452              		.loc 1 612 21 is_stmt 0 view .LVU156
 453 0156 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 612:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 454              		.loc 1 612 10 view .LVU157
 455 015a 012B     		cmp	r3, #1
 456 015c 1AD0     		beq	.L27
 639:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 457              		.loc 1 639 9 is_stmt 1 view .LVU158
 458 015e 2268     		ldr	r2, [r4]
 459 0160 1369     		ldr	r3, [r2, #16]
 460 0162 23F00103 		bic	r3, r3, #1
 461 0166 1361     		str	r3, [r2, #16]
 462              	.LVL32:
 463              	.L18:
 653:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 464              		.loc 1 653 5 view .LVU159
 653:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 465              		.loc 1 653 19 is_stmt 0 view .LVU160
 466 0168 2369     		ldr	r3, [r4, #16]
 653:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
ARM GAS  /tmp/cc46GlVT.s 			page 154


 467              		.loc 1 653 8 view .LVU161
 468 016a 012B     		cmp	r3, #1
 469 016c 24D0     		beq	.L28
 660:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 470              		.loc 1 660 7 is_stmt 1 view .LVU162
 471 016e 2268     		ldr	r2, [r4]
 472 0170 136B     		ldr	r3, [r2, #48]
 473 0172 23F00F03 		bic	r3, r3, #15
 474 0176 1363     		str	r3, [r2, #48]
 475              	.L21:
 665:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 476              		.loc 1 665 5 view .LVU163
 477 0178 A36D     		ldr	r3, [r4, #88]
 478 017a 23F00303 		bic	r3, r3, #3
 479 017e 43F00103 		orr	r3, r3, #1
 480 0182 A365     		str	r3, [r4, #88]
 481 0184 26E0     		b	.L3
 482              	.LVL33:
 483              	.L23:
 395:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_cfgr;
 484              		.loc 1 395 21 is_stmt 0 view .LVU164
 485 0186 0020     		movs	r0, #0
 486 0188 83E7     		b	.L9
 487              	.LVL34:
 488              	.L26:
 574:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 489              		.loc 1 574 7 is_stmt 1 view .LVU165
 574:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 490              		.loc 1 574 19 is_stmt 0 view .LVU166
 491 018a 626A     		ldr	r2, [r4, #36]
 492 018c 013A     		subs	r2, r2, #1
 574:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 493              		.loc 1 574 16 view .LVU167
 494 018e 43EA4243 		orr	r3, r3, r2, lsl #17
 495              	.LVL35:
 574:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 496              		.loc 1 574 16 view .LVU168
 497 0192 B8E7     		b	.L15
 498              	.LVL36:
 499              	.L27:
 614:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 500              		.loc 1 614 9 is_stmt 1 view .LVU169
 615:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 501              		.loc 1 615 9 view .LVU170
 616:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 502              		.loc 1 616 9 view .LVU171
 617:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 503              		.loc 1 617 9 view .LVU172
 624:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 504              		.loc 1 624 9 view .LVU173
 505 0194 2168     		ldr	r1, [r4]
 506              	.LVL37:
 624:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 507              		.loc 1 624 9 is_stmt 0 view .LVU174
 508 0196 0B69     		ldr	r3, [r1, #16]
 509 0198 23F4FF63 		bic	r3, r3, #2040
 510 019c 23F00403 		bic	r3, r3, #4
ARM GAS  /tmp/cc46GlVT.s 			page 155


 511 01a0 226C     		ldr	r2, [r4, #64]
 512 01a2 656C     		ldr	r5, [r4, #68]
 513 01a4 2A43     		orrs	r2, r2, r5
 514 01a6 A56C     		ldr	r5, [r4, #72]
 515 01a8 2A43     		orrs	r2, r2, r5
 516 01aa E56C     		ldr	r5, [r4, #76]
 517 01ac 2A43     		orrs	r2, r2, r5
 518 01ae 1343     		orrs	r3, r3, r2
 519 01b0 43F00103 		orr	r3, r3, #1
 520 01b4 0B61     		str	r3, [r1, #16]
 521 01b6 D7E7     		b	.L18
 522              	.L28:
 656:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 523              		.loc 1 656 7 is_stmt 1 view .LVU175
 524 01b8 2168     		ldr	r1, [r4]
 525 01ba 0B6B     		ldr	r3, [r1, #48]
 526 01bc 23F00F03 		bic	r3, r3, #15
 527 01c0 E269     		ldr	r2, [r4, #28]
 528 01c2 013A     		subs	r2, r2, #1
 529 01c4 1343     		orrs	r3, r3, r2
 530 01c6 0B63     		str	r3, [r1, #48]
 531 01c8 D6E7     		b	.L21
 532              	.LVL38:
 533              	.L11:
 670:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 534              		.loc 1 670 5 view .LVU176
 535 01ca A36D     		ldr	r3, [r4, #88]
 536              	.LVL39:
 670:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 537              		.loc 1 670 5 is_stmt 0 view .LVU177
 538 01cc 43F01003 		orr	r3, r3, #16
 539 01d0 A365     		str	r3, [r4, #88]
 672:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 540              		.loc 1 672 5 is_stmt 1 view .LVU178
 541              	.LVL40:
 672:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 542              		.loc 1 672 20 is_stmt 0 view .LVU179
 543 01d2 0120     		movs	r0, #1
 544              	.LVL41:
 545              	.L3:
 677:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 546              		.loc 1 677 1 view .LVU180
 547 01d4 03B0     		add	sp, sp, #12
 548              	.LCFI2:
 549              		.cfi_remember_state
 550              		.cfi_def_cfa_offset 12
 551              		@ sp needed
 552 01d6 30BD     		pop	{r4, r5, pc}
 553              	.LVL42:
 554              	.L22:
 555              	.LCFI3:
 556              		.cfi_restore_state
 404:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 557              		.loc 1 404 12 view .LVU181
 558 01d8 0120     		movs	r0, #1
 559              	.LVL43:
 404:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
ARM GAS  /tmp/cc46GlVT.s 			page 156


 560              		.loc 1 404 12 view .LVU182
 561 01da FBE7     		b	.L3
 562              	.L30:
 563              		.align	2
 564              	.L29:
 565 01dc 00000000 		.word	SystemCoreClock
 566 01e0 632D3E05 		.word	87960931
 567 01e4 00800242 		.word	1107460096
 568 01e8 00810242 		.word	1107460352
 569 01ec 00830242 		.word	1107460864
 570 01f0 0740F0FF 		.word	-1032185
 571              		.cfi_endproc
 572              	.LFE361:
 574              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 575              		.align	1
 576              		.weak	HAL_ADC_MspDeInit
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 580              		.fpu fpv4-sp-d16
 582              	HAL_ADC_MspDeInit:
 583              	.LVL44:
 584              	.LFB364:
 905:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 906:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
 907:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
 908:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
 909:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
 910:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 911:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval None
 912:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
 913:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
 914:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
 585              		.loc 1 914 1 is_stmt 1 view -0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589              		@ link register save eliminated.
 915:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 916:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   UNUSED(hadc);
 590              		.loc 1 916 3 view .LVU184
 917:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 918:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 919:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 920:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****    */
 921:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 591              		.loc 1 921 1 is_stmt 0 view .LVU185
 592 0000 7047     		bx	lr
 593              		.cfi_endproc
 594              	.LFE364:
 596              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 597              		.align	1
 598              		.global	HAL_ADC_PollForConversion
 599              		.syntax unified
 600              		.thumb
 601              		.thumb_func
 602              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc46GlVT.s 			page 157


 604              	HAL_ADC_PollForConversion:
 605              	.LVL45:
 606              	.LFB367:
 922:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 923:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 924:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
 925:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Register a User ADC Callback
 926:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 927:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 928:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 929:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 930:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         This parameter can be one of the following values:
 931:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 932:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 933:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 934:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 935:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 936:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
 937:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
 938:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
 939:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
 940:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 941:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 942:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 944:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 945:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status
 946:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
 947:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 948:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                            pADC_CallbackTypeDef pCallback)
 949:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
 950:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 951:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 952:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (pCallback == NULL)
 953:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 954:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Update the error code */
 955:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 956:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 957:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     return HAL_ERROR;
 958:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 959:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 960:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 961:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 962:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     switch (CallbackID)
 963:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 964:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 965:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 966:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
 967:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 968:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 969:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 970:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
 971:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 972:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 973:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 974:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
 975:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 158


 976:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 977:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 978:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
 979:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 980:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 981:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
 982:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
 983:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 984:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
 985:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = pCallback;
 986:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
 987:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 988:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
 989:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
 990:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
 991:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 992:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
 993:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
 994:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
 995:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 996:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
 997:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
 998:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
 999:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1000:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1001:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1002:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1003:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1004:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1005:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1006:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1007:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1008:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       default :
1009:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Update the error code */
1010:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1011:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1012:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Return error status */
1013:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         status = HAL_ERROR;
1014:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1015:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
1016:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1017:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1018:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1019:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     switch (CallbackID)
1020:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
1021:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1022:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1023:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1024:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1025:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1026:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1027:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1028:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1029:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       default :
1030:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Update the error code */
1031:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1032:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 159


1033:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Return error status */
1034:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         status = HAL_ERROR;
1035:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1036:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
1037:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1038:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   else
1039:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1040:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Update the error code */
1041:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1042:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1043:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Return error status */
1044:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     status =  HAL_ERROR;
1045:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1046:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1047:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return status;
1048:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
1049:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1050:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
1051:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1052:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1053:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1054:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *                the configuration information for the specified ADC.
1055:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1056:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         This parameter can be one of the following values:
1057:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1058:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1059:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1060:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1061:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
1062:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
1063:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1064:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1065:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1066:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1067:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1068:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1069:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1070:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status
1071:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
1072:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1073:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
1074:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1075:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1076:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1077:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1078:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     switch (CallbackID)
1079:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
1080:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1081:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1082:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1083:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1084:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1085:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1086:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1088:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1089:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
ARM GAS  /tmp/cc46GlVT.s 			page 160


1090:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1091:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1092:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1093:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1094:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1095:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1096:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1097:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
1098:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1099:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1100:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1101:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;
1102:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1103:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1104:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1105:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1106:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1107:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1108:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1109:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
1114:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1115:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1116:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1117:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1118:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1119:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1120:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1121:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1123:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1124:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       default :
1125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Update the error code */
1126:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1128:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Return error status */
1129:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         status =  HAL_ERROR;
1130:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1131:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
1132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1133:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1134:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1135:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     switch (CallbackID)
1136:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
1137:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1138:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1139:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1140:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1142:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1143:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1144:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1145:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       default :
1146:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Update the error code */
ARM GAS  /tmp/cc46GlVT.s 			page 161


1147:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1148:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1149:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Return error status */
1150:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         status =  HAL_ERROR;
1151:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
1152:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
1153:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   else
1155:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1156:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Update the error code */
1157:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1158:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1159:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Return error status */
1160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     status =  HAL_ERROR;
1161:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1162:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1163:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return status;
1164:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
1165:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1166:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1167:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1168:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
1169:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @}
1170:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
1171:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1172:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1173:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief    ADC IO operation functions
1174:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *
1175:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** @verbatim
1176:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****  ===============================================================================
1177:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                       ##### IO operation functions #####
1178:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****  ===============================================================================
1179:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+) Start conversion of regular group.
1181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+) Stop conversion of regular group.
1182:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1183:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+) Poll for conversion event.
1184:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+) Get result of regular channel conversion.
1185:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1187:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+) Handle ADC interrupt request
1188:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1189:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** @endverbatim
1191:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @{
1192:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
1193:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1194:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
1195:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1196:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1197:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *           if ADC is Slave, ADC is enabled but conversion is not started,
1199:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *           if ADC is master, ADC is enabled and multimode conversion is started.
1200:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
1201:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status
1202:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
1203:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
ARM GAS  /tmp/cc46GlVT.s 			page 162


1204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
1205:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1206:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1208:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1209:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1210:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
1212:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1213:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1214:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1215:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1216:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1217:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Process locked */
1218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     __HAL_LOCK(hadc);
1219:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1220:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Enable the ADC peripheral */
1221:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1222:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1223:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1224:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1225:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
1226:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC state                                                        */
1227:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1228:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1229:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1230:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1231:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1232:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1233:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1234:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1235:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1236:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1237:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1238:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1239:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          )
1240:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1241:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1242:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1243:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1244:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1245:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC error code */
1246:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1247:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1248:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1249:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1250:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1251:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1252:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else
1253:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1254:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Reset all ADC error code fields */
1255:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1256:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1257:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1258:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1259:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1260:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
ARM GAS  /tmp/cc46GlVT.s 			page 163


1261:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1262:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Process unlocked */
1263:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1264:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1265:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1266:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1267:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1268:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1269:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* trigger event.                                                       */
1271:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1272:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1273:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1274:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1276:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1277:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1278:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1279:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          )
1281:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1282:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1283:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1284:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
1285:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1286:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
1287:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1288:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Start ADC group regular conversion */
1289:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
1290:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1291:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else
1292:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1293:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1294:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1295:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
1296:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****            HAL_ADC_STATE_INJ_BUSY bit and in resetting HAL_ADC_STATE_INJ_EOC bit */
1297:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1298:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
1299:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
1300:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1301:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
1302:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1303:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1304:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
1305:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1306:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1307:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1308:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1309:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1310:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Start ADC group regular conversion */
1311:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1312:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1313:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
1314:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     else
1315:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
1316:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Process unlocked */
1317:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
ARM GAS  /tmp/cc46GlVT.s 			page 164


1318:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
1319:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1320:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   else
1321:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1322:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1323:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1324:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1325:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return function status */
1326:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return tmp_hal_status;
1327:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
1328:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1329:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
1330:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1331:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1332:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1333:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1334:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1335:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
1336:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status.
1337:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
1338:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1339:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
1340:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1341:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1342:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
1343:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1344:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1345:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Process locked */
1346:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __HAL_LOCK(hadc);
1347:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1348:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1349:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1350:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1351:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1352:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1353:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1354:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1355:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1356:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1357:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1358:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1359:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
1360:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC state */
1361:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1362:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1363:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1364:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
1365:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1366:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1367:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Process unlocked */
1368:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1369:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1370:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return function status */
1371:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return tmp_hal_status;
1372:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
1373:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1374:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
ARM GAS  /tmp/cc46GlVT.s 			page 165


1375:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1376:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1377:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1379:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1380:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1381:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
1382:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1383:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1384:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1385:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1386:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1387:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1388:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
1389:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1390:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status
1391:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
1392:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1393:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
 607              		.loc 1 1393 1 is_stmt 1 view -0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		.loc 1 1393 1 is_stmt 0 view .LVU187
 612 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 613              	.LCFI4:
 614              		.cfi_def_cfa_offset 24
 615              		.cfi_offset 4, -24
 616              		.cfi_offset 5, -20
 617              		.cfi_offset 6, -16
 618              		.cfi_offset 7, -12
 619              		.cfi_offset 8, -8
 620              		.cfi_offset 14, -4
 621 0004 0446     		mov	r4, r0
 622 0006 0E46     		mov	r6, r1
1394:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tickstart;
 623              		.loc 1 1394 3 is_stmt 1 view .LVU188
1395:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_Flag_End;
 624              		.loc 1 1395 3 view .LVU189
1396:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_cfgr;
 625              		.loc 1 1396 3 view .LVU190
1397:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1398:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
 626              		.loc 1 1398 3 view .LVU191
1399:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 627              		.loc 1 1399 3 view .LVU192
 628              	.LVL46:
 629              	.LBB360:
 630              	.LBI360:
6532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 631              		.loc 2 6532 26 view .LVU193
 632              	.LBB361:
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 633              		.loc 2 6534 3 view .LVU194
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 634              		.loc 2 6534 21 is_stmt 0 view .LVU195
 635 0008 3F4B     		ldr	r3, .L57
ARM GAS  /tmp/cc46GlVT.s 			page 166


 636 000a 9F68     		ldr	r7, [r3, #8]
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 637              		.loc 2 6534 10 view .LVU196
 638 000c 07F01F07 		and	r7, r7, #31
 639              	.LVL47:
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 640              		.loc 2 6534 10 view .LVU197
 641              	.LBE361:
 642              	.LBE360:
1400:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1401:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1402:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
1403:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 643              		.loc 1 1403 3 is_stmt 1 view .LVU198
1404:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1405:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1406:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 644              		.loc 1 1406 3 view .LVU199
 645              		.loc 1 1406 17 is_stmt 0 view .LVU200
 646 0010 4569     		ldr	r5, [r0, #20]
 647              		.loc 1 1406 6 view .LVU201
 648 0012 082D     		cmp	r5, #8
 649 0014 11D0     		beq	.L33
1407:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1408:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_Flag_End = ADC_FLAG_EOS;
1409:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1410:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1411:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1412:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1413:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1414:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* each conversion:                                                       */
1415:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1416:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1417:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1418:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1419:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1420:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 650              		.loc 1 1420 5 is_stmt 1 view .LVU202
 651              		.loc 1 1420 8 is_stmt 0 view .LVU203
 652 0016 57B1     		cbz	r7, .L34
1421:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 653              		.loc 1 1421 9 view .LVU204
 654 0018 052F     		cmp	r7, #5
 655 001a 08D0     		beq	.L34
1422:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 656              		.loc 1 1422 9 view .LVU205
 657 001c 092F     		cmp	r7, #9
 658 001e 06D0     		beq	.L34
1423:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        )
1424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
1425:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Check ADC DMA mode in independent mode on ADC group regular */
1426:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
1427:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1428:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1429:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         return HAL_ERROR;
1430:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1431:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else
ARM GAS  /tmp/cc46GlVT.s 			page 167


1432:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1433:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
1434:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1435:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
1436:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     else
1437:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
1438:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Check ADC DMA mode in multimode on ADC group regular */
1439:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_REG_
 659              		.loc 1 1439 7 is_stmt 1 view .LVU206
 660              	.LVL48:
 661              	.LBB362:
 662              	.LBI362:
6629:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 663              		.loc 2 6629 26 view .LVU207
 664              	.LBB363:
6631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 665              		.loc 2 6631 3 view .LVU208
6631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 666              		.loc 2 6631 21 is_stmt 0 view .LVU209
 667 0020 394B     		ldr	r3, .L57
 668 0022 9B68     		ldr	r3, [r3, #8]
 669              	.LVL49:
6631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 670              		.loc 2 6631 21 view .LVU210
 671              	.LBE363:
 672              	.LBE362:
 673              		.loc 1 1439 10 view .LVU211
 674 0024 13F4604F 		tst	r3, #57344
 675 0028 2CD1     		bne	.L52
1440:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1441:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1442:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         return HAL_ERROR;
1443:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1444:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else
1445:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1446:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
 676              		.loc 1 1446 22 view .LVU212
 677 002a 0425     		movs	r5, #4
 678 002c 05E0     		b	.L33
 679              	.L34:
1426:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 680              		.loc 1 1426 7 is_stmt 1 view .LVU213
1426:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 681              		.loc 1 1426 11 is_stmt 0 view .LVU214
 682 002e 2368     		ldr	r3, [r4]
 683 0030 DB68     		ldr	r3, [r3, #12]
1426:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 684              		.loc 1 1426 10 view .LVU215
 685 0032 13F0010F 		tst	r3, #1
 686 0036 1FD1     		bne	.L53
1433:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 687              		.loc 1 1433 22 view .LVU216
 688 0038 0425     		movs	r5, #4
 689              	.L33:
 690              	.LVL50:
1447:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1448:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
ARM GAS  /tmp/cc46GlVT.s 			page 168


1449:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
1450:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Check ADC DMA mode */
1451:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
1452:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
1453:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1454:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       return HAL_ERROR;
1455:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
1456:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     else
1457:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
1458:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       tmp_Flag_End = (ADC_FLAG_EOC);
1459:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
1460:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1461:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1462:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1463:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Get tick count */
1464:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   tickstart = HAL_GetTick();
 691              		.loc 1 1464 3 is_stmt 1 view .LVU217
 692              		.loc 1 1464 15 is_stmt 0 view .LVU218
 693 003a FFF7FEFF 		bl	HAL_GetTick
 694              	.LVL51:
 695              		.loc 1 1464 15 view .LVU219
 696 003e 8046     		mov	r8, r0
 697              	.LVL52:
1465:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1466:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1467:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 698              		.loc 1 1467 3 is_stmt 1 view .LVU220
 699              	.L38:
 700              		.loc 1 1467 9 view .LVU221
 701              		.loc 1 1467 15 is_stmt 0 view .LVU222
 702 0040 2368     		ldr	r3, [r4]
 703              		.loc 1 1467 25 view .LVU223
 704 0042 1A68     		ldr	r2, [r3]
 705              		.loc 1 1467 9 view .LVU224
 706 0044 2A42     		tst	r2, r5
 707 0046 23D1     		bne	.L54
1468:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1469:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1470:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 708              		.loc 1 1470 5 is_stmt 1 view .LVU225
 709              		.loc 1 1470 8 is_stmt 0 view .LVU226
 710 0048 B6F1FF3F 		cmp	r6, #-1
 711 004c F8D0     		beq	.L38
1471:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
1472:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 712              		.loc 1 1472 7 is_stmt 1 view .LVU227
 713              		.loc 1 1472 13 is_stmt 0 view .LVU228
 714 004e FFF7FEFF 		bl	HAL_GetTick
 715              	.LVL53:
 716              		.loc 1 1472 27 view .LVU229
 717 0052 A0EB0800 		sub	r0, r0, r8
 718              		.loc 1 1472 10 view .LVU230
 719 0056 B042     		cmp	r0, r6
 720 0058 01D8     		bhi	.L39
 721              		.loc 1 1472 51 discriminator 1 view .LVU231
 722 005a 002E     		cmp	r6, #0
 723 005c F0D1     		bne	.L38
ARM GAS  /tmp/cc46GlVT.s 			page 169


 724              	.L39:
1473:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1474:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1475:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 725              		.loc 1 1475 9 is_stmt 1 view .LVU232
 726              		.loc 1 1475 18 is_stmt 0 view .LVU233
 727 005e 2368     		ldr	r3, [r4]
 728              		.loc 1 1475 28 view .LVU234
 729 0060 1B68     		ldr	r3, [r3]
 730              		.loc 1 1475 12 view .LVU235
 731 0062 2B42     		tst	r3, r5
 732 0064 ECD1     		bne	.L38
1476:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
1477:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1478:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 733              		.loc 1 1478 11 is_stmt 1 view .LVU236
 734 0066 A36D     		ldr	r3, [r4, #88]
 735 0068 43F00403 		orr	r3, r3, #4
 736 006c A365     		str	r3, [r4, #88]
1479:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1480:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Process unlocked */
1481:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 737              		.loc 1 1481 11 view .LVU237
 738              		.loc 1 1481 11 view .LVU238
 739 006e 0023     		movs	r3, #0
 740 0070 84F85430 		strb	r3, [r4, #84]
 741              		.loc 1 1481 11 view .LVU239
1482:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1483:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           return HAL_TIMEOUT;
 742              		.loc 1 1483 11 view .LVU240
 743              		.loc 1 1483 18 is_stmt 0 view .LVU241
 744 0074 0320     		movs	r0, #3
 745 0076 42E0     		b	.L36
 746              	.LVL54:
 747              	.L53:
1428:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         return HAL_ERROR;
 748              		.loc 1 1428 9 is_stmt 1 view .LVU242
 749 0078 A36D     		ldr	r3, [r4, #88]
 750 007a 43F02003 		orr	r3, r3, #32
 751 007e A365     		str	r3, [r4, #88]
1429:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 752              		.loc 1 1429 9 view .LVU243
1429:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 753              		.loc 1 1429 16 is_stmt 0 view .LVU244
 754 0080 0120     		movs	r0, #1
 755              	.LVL55:
1429:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 756              		.loc 1 1429 16 view .LVU245
 757 0082 3CE0     		b	.L36
 758              	.LVL56:
 759              	.L52:
1441:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         return HAL_ERROR;
 760              		.loc 1 1441 9 is_stmt 1 view .LVU246
 761 0084 836D     		ldr	r3, [r0, #88]
 762 0086 43F02003 		orr	r3, r3, #32
 763 008a 8365     		str	r3, [r0, #88]
1442:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
ARM GAS  /tmp/cc46GlVT.s 			page 170


 764              		.loc 1 1442 9 view .LVU247
1442:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 765              		.loc 1 1442 16 is_stmt 0 view .LVU248
 766 008c 0120     		movs	r0, #1
 767              	.LVL57:
1442:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 768              		.loc 1 1442 16 view .LVU249
 769 008e 36E0     		b	.L36
 770              	.LVL58:
 771              	.L54:
1484:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
1485:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1486:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
1487:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1488:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1489:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Update ADC state machine */
1490:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 772              		.loc 1 1490 3 is_stmt 1 view .LVU250
 773 0090 A26D     		ldr	r2, [r4, #88]
 774 0092 42F40072 		orr	r2, r2, #512
 775 0096 A265     		str	r2, [r4, #88]
1491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1492:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1493:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1494:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
 776              		.loc 1 1494 3 view .LVU251
 777              	.LVL59:
 778              	.LBB364:
 779              	.LBI364:
4074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 780              		.loc 2 4074 26 view .LVU252
 781              	.LBB365:
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 782              		.loc 2 4076 3 view .LVU253
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 783              		.loc 2 4076 12 is_stmt 0 view .LVU254
 784 0098 DA68     		ldr	r2, [r3, #12]
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 785              		.loc 2 4076 103 view .LVU255
 786 009a 12F4406F 		tst	r2, #3072
 787 009e 11D1     		bne	.L41
 788              	.LVL60:
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 789              		.loc 2 4076 103 view .LVU256
 790              	.LBE365:
 791              	.LBE364:
1495:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
 792              		.loc 1 1495 21 view .LVU257
 793 00a0 627E     		ldrb	r2, [r4, #25]	@ zero_extendqisi2
 794              		.loc 1 1495 7 view .LVU258
 795 00a2 7AB9     		cbnz	r2, .L41
1496:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      )
1497:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1498:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Check whether end of sequence is reached */
1499:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
 796              		.loc 1 1499 5 is_stmt 1 view .LVU259
 797              		.loc 1 1499 9 is_stmt 0 view .LVU260
ARM GAS  /tmp/cc46GlVT.s 			page 171


 798 00a4 1A68     		ldr	r2, [r3]
 799              		.loc 1 1499 8 view .LVU261
 800 00a6 12F0080F 		tst	r2, #8
 801 00aa 0BD0     		beq	.L41
1500:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
1501:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC state */
1502:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 802              		.loc 1 1502 7 is_stmt 1 view .LVU262
 803 00ac A26D     		ldr	r2, [r4, #88]
 804 00ae 22F48072 		bic	r2, r2, #256
 805 00b2 A265     		str	r2, [r4, #88]
1503:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1504:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 806              		.loc 1 1504 7 view .LVU263
 807              		.loc 1 1504 16 is_stmt 0 view .LVU264
 808 00b4 A26D     		ldr	r2, [r4, #88]
 809              		.loc 1 1504 10 view .LVU265
 810 00b6 12F4805F 		tst	r2, #4096
 811 00ba 03D1     		bne	.L41
1505:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1506:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 812              		.loc 1 1506 9 is_stmt 1 view .LVU266
 813 00bc A26D     		ldr	r2, [r4, #88]
 814 00be 42F00102 		orr	r2, r2, #1
 815 00c2 A265     		str	r2, [r4, #88]
 816              	.L41:
1507:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1508:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
1509:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1510:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1511:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave        */
1512:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* in function of multimode state (for devices with multimode               */
1513:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* available).                                                              */
1514:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1515:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 817              		.loc 1 1515 3 view .LVU267
 818              		.loc 1 1515 8 is_stmt 0 view .LVU268
 819 00c4 114A     		ldr	r2, .L57+4
 820 00c6 9342     		cmp	r3, r2
 821 00c8 09D0     		beq	.L55
 822 00ca 1A46     		mov	r2, r3
 823              	.L42:
 824              		.loc 1 1515 6 discriminator 4 view .LVU269
 825 00cc 9342     		cmp	r3, r2
 826 00ce 09D0     		beq	.L43
1516:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 827              		.loc 1 1516 7 view .LVU270
 828 00d0 47B1     		cbz	r7, .L43
1517:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 829              		.loc 1 1517 7 view .LVU271
 830 00d2 052F     		cmp	r7, #5
 831 00d4 06D0     		beq	.L43
1518:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 832              		.loc 1 1518 7 view .LVU272
 833 00d6 092F     		cmp	r7, #9
 834 00d8 04D0     		beq	.L43
1519:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      )
ARM GAS  /tmp/cc46GlVT.s 			page 172


1520:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1521:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Retrieve handle ADC CFGR register */
1522:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
1523:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1524:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   else
1525:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1526:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Retrieve Master ADC CFGR register */
1527:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 835              		.loc 1 1527 5 is_stmt 1 discriminator 4 view .LVU273
 836              	.LVL61:
1528:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 837              		.loc 1 1528 5 discriminator 4 view .LVU274
 838              		.loc 1 1528 14 is_stmt 0 discriminator 4 view .LVU275
 839 00da D268     		ldr	r2, [r2, #12]
 840              	.LVL62:
 841              		.loc 1 1528 14 discriminator 4 view .LVU276
 842 00dc 03E0     		b	.L45
 843              	.LVL63:
 844              	.L55:
1515:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 845              		.loc 1 1515 8 view .LVU277
 846 00de A2F58072 		sub	r2, r2, #256
 847 00e2 F3E7     		b	.L42
 848              	.L43:
1522:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 849              		.loc 1 1522 5 is_stmt 1 view .LVU278
1522:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 850              		.loc 1 1522 14 is_stmt 0 view .LVU279
 851 00e4 DA68     		ldr	r2, [r3, #12]
 852              	.LVL64:
 853              	.L45:
1529:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1530:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
1531:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Retrieve handle ADC CFGR register */
1532:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   tmp_cfgr = READ_REG(hadc->Instance->CFGR);
1533:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1534:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1535:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Clear polled flag */
1536:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (tmp_Flag_End == ADC_FLAG_EOS)
 854              		.loc 1 1536 3 is_stmt 1 view .LVU280
 855              		.loc 1 1536 6 is_stmt 0 view .LVU281
 856 00e6 082D     		cmp	r5, #8
 857 00e8 06D0     		beq	.L56
1537:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1538:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOS);
1539:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1540:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   else
1541:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1542:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Clear end of conversion EOC flag of regular group if low power feature */
1543:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature    */
1544:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* until data register is read using function HAL_ADC_GetValue().         */
1545:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
 858              		.loc 1 1545 5 is_stmt 1 view .LVU282
 859              		.loc 1 1545 8 is_stmt 0 view .LVU283
 860 00ea 12F4804F 		tst	r2, #16384
 861 00ee 08D1     		bne	.L50
1546:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
ARM GAS  /tmp/cc46GlVT.s 			page 173


1547:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 862              		.loc 1 1547 7 is_stmt 1 view .LVU284
 863 00f0 0C22     		movs	r2, #12
 864              	.LVL65:
 865              		.loc 1 1547 7 is_stmt 0 view .LVU285
 866 00f2 1A60     		str	r2, [r3]
1548:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
1549:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1550:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1551:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return function status */
1552:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return HAL_OK;
 867              		.loc 1 1552 10 view .LVU286
 868 00f4 0020     		movs	r0, #0
 869 00f6 02E0     		b	.L36
 870              	.LVL66:
 871              	.L56:
1538:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 872              		.loc 1 1538 5 is_stmt 1 view .LVU287
 873 00f8 0822     		movs	r2, #8
 874              	.LVL67:
1538:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 875              		.loc 1 1538 5 is_stmt 0 view .LVU288
 876 00fa 1A60     		str	r2, [r3]
 877              		.loc 1 1552 10 view .LVU289
 878 00fc 0020     		movs	r0, #0
 879              	.LVL68:
 880              	.L36:
1553:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 881              		.loc 1 1553 1 view .LVU290
 882 00fe BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 883              	.LVL69:
 884              	.L50:
1552:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 885              		.loc 1 1552 10 view .LVU291
 886 0102 0020     		movs	r0, #0
 887 0104 FBE7     		b	.L36
 888              	.L58:
 889 0106 00BF     		.align	2
 890              	.L57:
 891 0108 00830242 		.word	1107460864
 892 010c 00810242 		.word	1107460352
 893              		.cfi_endproc
 894              	.LFE367:
 896              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 897              		.align	1
 898              		.global	HAL_ADC_PollForEvent
 899              		.syntax unified
 900              		.thumb
 901              		.thumb_func
 902              		.fpu fpv4-sp-d16
 904              	HAL_ADC_PollForEvent:
 905              	.LVL70:
 906              	.LFB368:
1554:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1555:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
1556:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Poll for ADC event.
1557:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
ARM GAS  /tmp/cc46GlVT.s 			page 174


1558:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param EventType the ADC event type.
1559:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          This parameter can be one of the following values:
1560:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1561:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1562:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *                                       all STM32 series)
1563:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1564:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *                                       all STM32 series)
1565:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1566:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *                                       all STM32 series)
1567:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1568:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *            @arg @ref ADC_JQOVF_EVENT  ADC Injected context queue overflow event
1569:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1570:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1571:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1572:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1573:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1574:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1575:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1576:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status
1577:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
1578:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1579:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
 907              		.loc 1 1579 1 is_stmt 1 view -0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 0, uses_anonymous_args = 0
 911              		.loc 1 1579 1 is_stmt 0 view .LVU293
 912 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 913              	.LCFI5:
 914              		.cfi_def_cfa_offset 24
 915              		.cfi_offset 4, -24
 916              		.cfi_offset 5, -20
 917              		.cfi_offset 6, -16
 918              		.cfi_offset 7, -12
 919              		.cfi_offset 8, -8
 920              		.cfi_offset 14, -4
 921 0004 0646     		mov	r6, r0
 922 0006 0D46     		mov	r5, r1
 923 0008 1746     		mov	r7, r2
1580:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tickstart;
 924              		.loc 1 1580 3 is_stmt 1 view .LVU294
1581:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1582:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
1583:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 925              		.loc 1 1583 3 view .LVU295
1584:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 926              		.loc 1 1584 3 view .LVU296
1585:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1586:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Get tick count */
1587:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   tickstart = HAL_GetTick();
 927              		.loc 1 1587 3 view .LVU297
 928              		.loc 1 1587 15 is_stmt 0 view .LVU298
 929 000a FFF7FEFF 		bl	HAL_GetTick
 930              	.LVL71:
 931              		.loc 1 1587 15 view .LVU299
 932 000e 8046     		mov	r8, r0
 933              	.LVL72:
ARM GAS  /tmp/cc46GlVT.s 			page 175


1588:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1589:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check selected event flag */
1590:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 934              		.loc 1 1590 3 is_stmt 1 view .LVU300
 935              	.L61:
 936              		.loc 1 1590 9 view .LVU301
 937              		.loc 1 1590 10 is_stmt 0 view .LVU302
 938 0010 3368     		ldr	r3, [r6]
 939 0012 1C68     		ldr	r4, [r3]
 940              		.loc 1 1590 9 view .LVU303
 941 0014 35EA0402 		bics	r2, r5, r4
 942 0018 18D0     		beq	.L74
1591:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1592:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1593:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 943              		.loc 1 1593 5 is_stmt 1 view .LVU304
 944              		.loc 1 1593 8 is_stmt 0 view .LVU305
 945 001a B7F1FF3F 		cmp	r7, #-1
 946 001e F7D0     		beq	.L61
1594:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
1595:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 947              		.loc 1 1595 7 is_stmt 1 view .LVU306
 948              		.loc 1 1595 13 is_stmt 0 view .LVU307
 949 0020 FFF7FEFF 		bl	HAL_GetTick
 950              	.LVL73:
 951              		.loc 1 1595 27 view .LVU308
 952 0024 A0EB0803 		sub	r3, r0, r8
 953              		.loc 1 1595 10 view .LVU309
 954 0028 BB42     		cmp	r3, r7
 955 002a 01D8     		bhi	.L62
 956              		.loc 1 1595 51 discriminator 1 view .LVU310
 957 002c 002F     		cmp	r7, #0
 958 002e EFD1     		bne	.L61
 959              	.L62:
1596:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1597:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1598:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 960              		.loc 1 1598 9 is_stmt 1 view .LVU311
 961              		.loc 1 1598 13 is_stmt 0 view .LVU312
 962 0030 3368     		ldr	r3, [r6]
 963 0032 1B68     		ldr	r3, [r3]
 964              		.loc 1 1598 12 view .LVU313
 965 0034 35EA0303 		bics	r3, r5, r3
 966 0038 EAD0     		beq	.L61
1599:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
1600:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1601:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 967              		.loc 1 1601 11 is_stmt 1 view .LVU314
 968 003a B36D     		ldr	r3, [r6, #88]
 969 003c 43F00403 		orr	r3, r3, #4
 970 0040 B365     		str	r3, [r6, #88]
1602:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1603:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Process unlocked */
1604:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 971              		.loc 1 1604 11 view .LVU315
 972              		.loc 1 1604 11 view .LVU316
 973 0042 0023     		movs	r3, #0
ARM GAS  /tmp/cc46GlVT.s 			page 176


 974 0044 86F85430 		strb	r3, [r6, #84]
 975              		.loc 1 1604 11 view .LVU317
1605:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1606:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           return HAL_TIMEOUT;
 976              		.loc 1 1606 11 view .LVU318
 977              		.loc 1 1606 18 is_stmt 0 view .LVU319
 978 0048 0320     		movs	r0, #3
 979 004a 29E0     		b	.L63
 980              	.L74:
1607:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
1608:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1609:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
1610:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1611:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1612:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   switch (EventType)
 981              		.loc 1 1612 3 is_stmt 1 view .LVU320
 982 004c B5F5807F 		cmp	r5, #256
 983 0050 28D0     		beq	.L65
 984 0052 0BD8     		bhi	.L66
 985 0054 022D     		cmp	r5, #2
 986 0056 1CD0     		beq	.L67
 987 0058 802D     		cmp	r5, #128
 988 005a 35D1     		bne	.L69
1613:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1614:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* End Of Sampling event */
1615:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1616:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC state */
1617:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1618:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1619:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1620:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1621:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1622:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       break;
1623:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1624:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1625:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1626:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1627:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1628:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* For example:                                                             */
1629:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1630:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1631:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1632:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1633:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1634:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     case ADC_AWD_EVENT:
1635:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC state */
1636:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 989              		.loc 1 1636 7 view .LVU321
 990 005c B26D     		ldr	r2, [r6, #88]
 991 005e 42F48032 		orr	r2, r2, #65536
 992 0062 B265     		str	r2, [r6, #88]
1637:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1638:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1639:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 993              		.loc 1 1639 7 view .LVU322
 994 0064 8022     		movs	r2, #128
 995 0066 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc46GlVT.s 			page 177


1640:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1641:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       break;
 996              		.loc 1 1641 7 view .LVU323
1642:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1643:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1644:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     case ADC_AWD2_EVENT:
1645:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC state */
1646:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1647:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1648:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1649:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1650:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1651:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       break;
1652:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1653:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1654:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     case ADC_AWD3_EVENT:
1655:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC state */
1656:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1657:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1658:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1659:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1660:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1661:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       break;
1662:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1663:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Injected context queue overflow event */
1664:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     case ADC_JQOVF_EVENT:
1665:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC state */
1666:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
1667:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1668:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC error code to Injected context queue overflow */
1669:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
1670:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1671:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Clear ADC Injected context queue overflow flag */
1672:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
1673:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1674:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       break;
1675:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1676:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Overrun event */
1677:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1678:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1679:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* considered as an error.                                                */
1680:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1681:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* overrun ")                                                             */
1682:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1683:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1684:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Set ADC state */
1685:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1686:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1687:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Set ADC error code to overrun */
1688:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1689:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1690:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else
1691:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1692:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1693:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
1694:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****            as OVR is cleared. */
1695:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
ARM GAS  /tmp/cc46GlVT.s 			page 178


1696:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1697:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       break;
1698:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1699:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1700:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return function status */
1701:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return HAL_OK;
 997              		.loc 1 1701 10 is_stmt 0 view .LVU324
 998 0068 0020     		movs	r0, #0
1641:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 999              		.loc 1 1641 7 view .LVU325
 1000 006a 19E0     		b	.L63
 1001              	.L66:
1612:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1002              		.loc 1 1612 3 view .LVU326
 1003 006c B5F5007F 		cmp	r5, #512
 1004 0070 21D0     		beq	.L70
 1005 0072 B5F5806F 		cmp	r5, #1024
 1006 0076 27D1     		bne	.L69
1666:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1007              		.loc 1 1666 7 is_stmt 1 view .LVU327
 1008 0078 B26D     		ldr	r2, [r6, #88]
 1009 007a 42F48042 		orr	r2, r2, #16384
 1010 007e B265     		str	r2, [r6, #88]
1669:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1011              		.loc 1 1669 7 view .LVU328
 1012 0080 F26D     		ldr	r2, [r6, #92]
 1013 0082 42F00802 		orr	r2, r2, #8
 1014 0086 F265     		str	r2, [r6, #92]
1672:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1015              		.loc 1 1672 7 view .LVU329
 1016 0088 4FF48062 		mov	r2, #1024
 1017 008c 1A60     		str	r2, [r3]
1674:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1018              		.loc 1 1674 7 view .LVU330
 1019              		.loc 1 1701 10 is_stmt 0 view .LVU331
 1020 008e 0020     		movs	r0, #0
1674:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1021              		.loc 1 1674 7 view .LVU332
 1022 0090 06E0     		b	.L63
 1023              	.L67:
1617:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1024              		.loc 1 1617 7 is_stmt 1 view .LVU333
 1025 0092 B26D     		ldr	r2, [r6, #88]
 1026 0094 42F40062 		orr	r2, r2, #2048
 1027 0098 B265     		str	r2, [r6, #88]
1620:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1028              		.loc 1 1620 7 view .LVU334
 1029 009a 0222     		movs	r2, #2
 1030 009c 1A60     		str	r2, [r3]
1622:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1031              		.loc 1 1622 7 view .LVU335
 1032              		.loc 1 1701 10 is_stmt 0 view .LVU336
 1033 009e 0020     		movs	r0, #0
 1034              	.L63:
1702:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 1035              		.loc 1 1702 1 view .LVU337
 1036 00a0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  /tmp/cc46GlVT.s 			page 179


 1037              	.LVL74:
 1038              	.L65:
1646:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1039              		.loc 1 1646 7 is_stmt 1 view .LVU338
 1040 00a4 B26D     		ldr	r2, [r6, #88]
 1041 00a6 42F40032 		orr	r2, r2, #131072
 1042 00aa B265     		str	r2, [r6, #88]
1649:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1043              		.loc 1 1649 7 view .LVU339
 1044 00ac 4FF48072 		mov	r2, #256
 1045 00b0 1A60     		str	r2, [r3]
1651:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1046              		.loc 1 1651 7 view .LVU340
1701:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 1047              		.loc 1 1701 10 is_stmt 0 view .LVU341
 1048 00b2 0020     		movs	r0, #0
1651:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1049              		.loc 1 1651 7 view .LVU342
 1050 00b4 F4E7     		b	.L63
 1051              	.L70:
1656:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1052              		.loc 1 1656 7 is_stmt 1 view .LVU343
 1053 00b6 B26D     		ldr	r2, [r6, #88]
 1054 00b8 42F48022 		orr	r2, r2, #262144
 1055 00bc B265     		str	r2, [r6, #88]
1659:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1056              		.loc 1 1659 7 view .LVU344
 1057 00be 4FF40072 		mov	r2, #512
 1058 00c2 1A60     		str	r2, [r3]
1661:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1059              		.loc 1 1661 7 view .LVU345
1701:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 1060              		.loc 1 1701 10 is_stmt 0 view .LVU346
 1061 00c4 0020     		movs	r0, #0
1661:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1062              		.loc 1 1661 7 view .LVU347
 1063 00c6 EBE7     		b	.L63
 1064              	.L69:
1682:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 1065              		.loc 1 1682 7 is_stmt 1 view .LVU348
1682:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 1066              		.loc 1 1682 21 is_stmt 0 view .LVU349
 1067 00c8 B26B     		ldr	r2, [r6, #56]
1682:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 1068              		.loc 1 1682 10 view .LVU350
 1069 00ca 4AB9     		cbnz	r2, .L72
1685:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1070              		.loc 1 1685 9 is_stmt 1 view .LVU351
 1071 00cc B36D     		ldr	r3, [r6, #88]
 1072 00ce 43F48063 		orr	r3, r3, #1024
 1073 00d2 B365     		str	r3, [r6, #88]
1688:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 1074              		.loc 1 1688 9 view .LVU352
 1075 00d4 F36D     		ldr	r3, [r6, #92]
 1076 00d6 43F00203 		orr	r3, r3, #2
 1077 00da F365     		str	r3, [r6, #92]
1701:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
ARM GAS  /tmp/cc46GlVT.s 			page 180


 1078              		.loc 1 1701 10 is_stmt 0 view .LVU353
 1079 00dc 0020     		movs	r0, #0
 1080 00de DFE7     		b	.L63
 1081              	.L72:
1695:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 1082              		.loc 1 1695 9 is_stmt 1 view .LVU354
 1083 00e0 1022     		movs	r2, #16
 1084 00e2 1A60     		str	r2, [r3]
1701:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 1085              		.loc 1 1701 10 is_stmt 0 view .LVU355
 1086 00e4 0020     		movs	r0, #0
 1087 00e6 DBE7     		b	.L63
 1088              		.cfi_endproc
 1089              	.LFE368:
 1091              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1092              		.align	1
 1093              		.global	HAL_ADC_GetValue
 1094              		.syntax unified
 1095              		.thumb
 1096              		.thumb_func
 1097              		.fpu fpv4-sp-d16
 1099              	HAL_ADC_GetValue:
 1100              	.LVL75:
 1101              	.LFB373:
1703:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1704:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
1705:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1706:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1707:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1708:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         OVR overrun.
1709:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1710:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1711:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         HAL_ADC_Start_IT() must be called for ADC Slave first, then for
1712:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         ADC Master.
1713:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         For ADC Slave, ADC is enabled only (conversion is not started).
1714:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         For ADC Master, ADC is enabled and multimode conversion is started.
1715:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1716:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1717:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1718:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1719:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1720:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         mode), the user must:
1721:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1722:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
1723:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1724:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
1725:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status
1726:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
1727:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1728:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
1729:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1730:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1731:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1732:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1733:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1734:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1735:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
ARM GAS  /tmp/cc46GlVT.s 			page 181


1736:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1737:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1738:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1739:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1740:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1741:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Process locked */
1742:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     __HAL_LOCK(hadc);
1743:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1744:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Enable the ADC peripheral */
1745:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1746:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1747:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1748:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1749:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
1750:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC state                                                        */
1751:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1752:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1753:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1754:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1755:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1756:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1757:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1758:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1759:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1760:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1761:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1762:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1763:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          )
1764:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1765:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1766:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1767:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1768:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1769:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC error code */
1770:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1771:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
1772:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1773:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1774:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1775:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1776:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else
1777:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1778:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Reset all ADC error code fields */
1779:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1780:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1781:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1782:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1783:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1784:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1785:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1786:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Process unlocked */
1787:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1788:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1789:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1790:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1791:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1792:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
ARM GAS  /tmp/cc46GlVT.s 			page 182


1793:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1794:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1795:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
1796:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1797:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1798:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1799:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
1800:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1801:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         default:
1802:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1803:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
1804:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1805:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1806:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1808:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1809:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1810:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1811:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1812:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1813:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1814:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1815:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1816:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1817:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1818:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* trigger event.                                                       */
1819:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1820:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1821:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1822:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1823:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1824:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1825:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1826:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1827:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1828:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          )
1829:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1830:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1831:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1832:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
1833:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1834:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1835:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Enable as well injected interruptions in case
1836:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****            HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1837:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****            allows to start regular and injected conversions when JAUTO is
1838:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****            set with a single call to HAL_ADC_Start_IT() */
1839:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
1840:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
1841:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1842:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1843:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1844:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               break;
1845:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1846:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             default:
1847:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1848:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1849:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               break;
ARM GAS  /tmp/cc46GlVT.s 			page 183


1850:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
1851:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
1852:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1853:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Start ADC group regular conversion */
1854:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
1855:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1856:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else
1857:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1858:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1859:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1860:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
1861:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****            are enabled nevertheless (for same reason as above) */
1862:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1863:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
1864:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
1865:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* First, update Slave State in setting HAL_ADC_STATE_INJ_BUSY bit
1866:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****              and in resetting HAL_ADC_STATE_INJ_EOC bit */
1867:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1868:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
1869:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
1870:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
1871:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1872:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1873:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1874:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               break;
1875:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1876:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             default:
1877:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1878:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1879:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               break;
1880:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
1881:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
1882:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1883:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
1884:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* ADC instance is not a multimode slave instance with multimode regular conversions enabled 
1885:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1886:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
1887:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1888:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1889:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Enable as well injected interruptions in case
1890:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1891:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          allows to start regular and injected conversions when JAUTO is
1892:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          set with a single call to HAL_ADC_Start_IT() */
1893:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         switch (hadc->Init.EOCSelection)
1894:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
1895:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           case ADC_EOC_SEQ_CONV:
1896:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1897:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1898:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             break;
1899:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* case ADC_EOC_SINGLE_CONV */
1900:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           default:
1901:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1902:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1903:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             break;
1904:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
1905:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
1906:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 184


1907:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Start ADC group regular conversion */
1908:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1909:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1910:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
1911:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     else
1912:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
1913:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Process unlocked */
1914:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1915:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
1916:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1917:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1918:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   else
1919:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1920:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1921:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1922:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1923:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return function status */
1924:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return tmp_hal_status;
1925:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
1926:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1927:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
1928:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1929:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
1930:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1931:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
1932:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status.
1933:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
1934:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
1935:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
1936:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1937:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1938:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
1939:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1940:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1941:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Process locked */
1942:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __HAL_LOCK(hadc);
1943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1944:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1945:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1946:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1947:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1948:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1949:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
1950:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1951:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1952:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1953:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1954:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1955:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1956:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1957:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1958:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1959:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
1960:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC state */
1961:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1962:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1963:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
ARM GAS  /tmp/cc46GlVT.s 			page 185


1964:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
1965:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
1966:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1967:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Process unlocked */
1968:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1969:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1970:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return function status */
1971:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return tmp_hal_status;
1972:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
1973:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1974:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
1975:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
1976:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   Interruptions enabled in this function:
1977:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
1978:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1979:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available): HAL_ADC_Start_DMA()
1980:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         is designed for single-ADC mode only. For multimode, the dedicated
1981:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         HAL_ADCEx_MultiModeStart_DMA() function must be used.
1982:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
1983:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param pData Destination Buffer address.
1984:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
1985:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status.
1986:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
1987:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
1988:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
1989:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1990:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1991:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1992:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1993:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t length_bytes;
1994:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   DMA_NodeConfTypeDef node_conf;
1995:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1996:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
1997:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1998:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
1999:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
2000:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2001:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
2002:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Process locked */
2003:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     __HAL_LOCK(hadc);
2004:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2005:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2006:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Ensure that multimode regular conversions are not enabled.   */
2007:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Otherwise, dedicated API HAL_ADCEx_MultiModeStart_DMA() must be used.  */
2008:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2009:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2010:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2011:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        )
2012:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2013:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2014:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Enable the ADC peripheral */
2015:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
2016:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2017:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Start conversion if ADC is effectively enabled */
2018:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (tmp_hal_status == HAL_OK)
2019:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
2020:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Set ADC state                                                        */
ARM GAS  /tmp/cc46GlVT.s 			page 186


2021:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* - Clear state bitfield related to regular group conversion results   */
2022:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* - Set state bitfield related to regular operation                    */
2023:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
2024:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
2025:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY);
2026:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2027:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2028:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
2029:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           - if ADC instance is master or if multimode feature is not available
2030:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           - if multimode setting is disabled (ADC instance slave in independent mode) */
2031:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2032:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2033:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****            )
2034:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
2035:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2036:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
2037:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2038:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2039:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Check if a conversion is on going on ADC group injected */
2040:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
2041:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
2042:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Reset ADC error code fields related to regular conversions only */
2043:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
2044:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
2045:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         else
2046:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
2047:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Reset all ADC error code fields */
2048:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           ADC_CLEAR_ERRORCODE(hadc);
2049:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
2050:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2051:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Set the DMA transfer complete callback */
2052:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
2053:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2054:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Set the DMA half transfer complete callback */
2055:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
2056:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2057:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Set the DMA error callback */
2058:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
2059:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2060:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2061:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start,     */
2062:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* ADC start (in case of SW start):                                   */
2063:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2064:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Clear regular group conversion flag and overrun flag               */
2065:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* (To ensure of no unknown state from potential previous ADC         */
2066:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* operations)                                                        */
2067:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
2068:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2069:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Process unlocked */
2070:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Unlock before starting ADC conversions: in case of potential         */
2071:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* interruption, to let the process to ADC IRQ Handler.                 */
2072:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2073:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2074:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* With DMA, overrun event is always considered as an error even if
2075:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****            hadc->Init.Overrun is set to ADC_OVR_DATA_OVERWRITTEN. Therefore,
2076:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****            ADC_IT_OVR is enabled. */
2077:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
ARM GAS  /tmp/cc46GlVT.s 			page 187


2078:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2079:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Enable ADC DMA mode */
2080:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2081:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2082:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Check linkedlist mode */
2083:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if ((hadc->DMA_Handle->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
2084:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
2085:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           if ((hadc->DMA_Handle->LinkedListQueue != NULL) && (hadc->DMA_Handle->LinkedListQueue->He
2086:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
2087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* Length should be converted to number of bytes */
2088:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             if (HAL_DMAEx_List_GetNodeConfig(&node_conf, hadc->DMA_Handle->LinkedListQueue->Head) !
2089:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
2090:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               return HAL_ERROR;
2091:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             }
2092:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2093:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* Length should be converted to number of bytes */
2094:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             if (node_conf.Init.SrcDataWidth == DMA_SRC_DATAWIDTH_WORD)
2095:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
2096:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               /* Word -> Bytes */
2097:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               length_bytes = Length * 4U;
2098:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             }
2099:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             else if (node_conf.Init.SrcDataWidth == DMA_SRC_DATAWIDTH_HALFWORD)
2100:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
2101:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               /* Halfword -> Bytes */
2102:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               length_bytes = Length * 2U;
2103:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             }
2104:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             else /* Bytes */
2105:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
2106:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               /* Same size already expressed in Bytes */
2107:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               length_bytes = Length;
2108:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             }
2109:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             hadc->DMA_Handle->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = (uin
2111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             hadc->DMA_Handle->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] =     
2112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 (uint32_t)&hadc->Instance->DR;
2113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             hadc->DMA_Handle->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uin
2114:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             tmp_hal_status = HAL_DMAEx_List_Start_IT(hadc->DMA_Handle);
2115:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
2116:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           else
2117:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
2118:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             return HAL_ERROR;
2119:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
2120:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
2121:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         else
2122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
2123:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Length should be converted to number of bytes */
2124:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           if (hadc->DMA_Handle->Init.SrcDataWidth == DMA_SRC_DATAWIDTH_WORD)
2125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
2126:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* Word -> Bytes */
2127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             length_bytes = Length * 4U;
2128:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
2129:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           else if (hadc->DMA_Handle->Init.SrcDataWidth == DMA_SRC_DATAWIDTH_HALFWORD)
2130:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
2131:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* Halfword -> Bytes */
2132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             length_bytes = Length * 2U;
2133:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
2134:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           else /* Bytes */
ARM GAS  /tmp/cc46GlVT.s 			page 188


2135:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
2136:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* Same size already expressed in Bytes */
2137:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             length_bytes = Length;
2138:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
2139:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2140:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Start the DMA channel */
2141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint3
2142:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                             length_bytes);
2143:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
2144:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2145:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Enable conversion of regular group.                                  */
2146:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* If software start has been selected, conversion starts immediately.  */
2147:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* If external trigger has been selected, conversion will start at next */
2148:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* trigger event.                                                       */
2149:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Start ADC group regular conversion */
2150:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
2151:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
2152:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else
2153:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
2154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Process unlocked */
2155:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2156:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
2157:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2158:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2159:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     else
2161:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2162:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
2163:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Process unlocked */
2164:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
2165:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2166:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2167:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
2168:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   else
2169:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
2170:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
2171:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
2172:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2173:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return function status */
2174:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return tmp_hal_status;
2175:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
2176:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2177:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
2178:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
2179:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
2180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         ADC peripheral.
2181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
2182:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         conversion on ADC group injected. If ADC group injected is under use, it
2183:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
2184:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
2185:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         HAL_ADC_Stop_DMA() function is dedicated to single-ADC mode only.
2186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         For multimode, the dedicated HAL_ADCEx_MultiModeStop_DMA() API must be used.
2187:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
2188:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status.
2189:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
2190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
2191:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
ARM GAS  /tmp/cc46GlVT.s 			page 189


2192:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2193:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2194:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
2195:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2196:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2197:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Process locked */
2198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __HAL_LOCK(hadc);
2199:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2200:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
2201:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2202:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2203:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
2205:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
2206:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continuous requests is kept) */
2207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2208:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2209:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
2210:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
2211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
2212:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2213:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
2214:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2215:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
2216:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
2217:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
2218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Update ADC state machine to error */
2219:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
2220:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
2221:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2222:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2223:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
2224:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
2225:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2226:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
2227:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
2228:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
2229:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2230:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2231:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
2232:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2233:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     else
2234:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2235:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (void)ADC_Disable(hadc);
2236:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2237:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2238:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
2239:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2240:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2241:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC state */
2242:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2243:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2244:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2245:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2246:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2247:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
2248:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 190


2249:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Process unlocked */
2250:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2251:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2252:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return function status */
2253:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return tmp_hal_status;
2254:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
2255:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2256:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
2257:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
2258:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2259:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
2260:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
2261:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
2262:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
2263:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2264:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *            to flag EOC.
2265:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
2266:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2267:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
2268:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         To clear this flag, either use function:
2269:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
2271:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2272:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
2273:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval ADC group regular conversion data
2274:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
2275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(const ADC_HandleTypeDef *hadc)
2276:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
 1102              		.loc 1 2276 1 is_stmt 1 view -0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 0
 1105              		@ frame_needed = 0, uses_anonymous_args = 0
 1106              		@ link register save eliminated.
2277:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
2278:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1107              		.loc 1 2278 3 view .LVU357
2279:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
2281:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
2282:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2283:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return ADC converted value */
2284:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return hadc->Instance->DR;
 1108              		.loc 1 2284 3 view .LVU358
 1109              		.loc 1 2284 14 is_stmt 0 view .LVU359
 1110 0000 0368     		ldr	r3, [r0]
 1111              		.loc 1 2284 24 view .LVU360
 1112 0002 186C     		ldr	r0, [r3, #64]
 1113              	.LVL76:
2285:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 1114              		.loc 1 2285 1 view .LVU361
 1115 0004 7047     		bx	lr
 1116              		.cfi_endproc
 1117              	.LFE373:
 1119              		.section	.text.HAL_ADC_StartSampling,"ax",%progbits
 1120              		.align	1
 1121              		.global	HAL_ADC_StartSampling
 1122              		.syntax unified
ARM GAS  /tmp/cc46GlVT.s 			page 191


 1123              		.thumb
 1124              		.thumb_func
 1125              		.fpu fpv4-sp-d16
 1127              	HAL_ADC_StartSampling:
 1128              	.LVL77:
 1129              	.LFB374:
2286:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2287:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
2288:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Start ADC conversion sampling phase of regular group
2289:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note:  This function should only be called to start sampling when
2290:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         - @ref ADC_SAMPLING_MODE_TRIGGER_CONTROLED sampling
2291:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         mode has been selected
2292:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         - @ref ADC_SOFTWARE_START has been selected as trigger source
2293:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
2294:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status.
2295:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
2296:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_StartSampling(ADC_HandleTypeDef *hadc)
2297:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
 1130              		.loc 1 2297 1 is_stmt 1 view -0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 0
 1133              		@ frame_needed = 0, uses_anonymous_args = 0
 1134              		@ link register save eliminated.
2298:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
2299:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1135              		.loc 1 2299 3 view .LVU363
2300:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2301:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Start sampling */
2302:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR2, ADC_CFGR2_SWTRIG);
 1136              		.loc 1 2302 3 view .LVU364
 1137 0000 0268     		ldr	r2, [r0]
 1138 0002 1369     		ldr	r3, [r2, #16]
 1139 0004 43F00073 		orr	r3, r3, #33554432
 1140 0008 1361     		str	r3, [r2, #16]
2303:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2304:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return function status */
2305:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return HAL_OK;
 1141              		.loc 1 2305 3 view .LVU365
2306:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 1142              		.loc 1 2306 1 is_stmt 0 view .LVU366
 1143 000a 0020     		movs	r0, #0
 1144              	.LVL78:
 1145              		.loc 1 2306 1 view .LVU367
 1146 000c 7047     		bx	lr
 1147              		.cfi_endproc
 1148              	.LFE374:
 1150              		.section	.text.HAL_ADC_StopSampling,"ax",%progbits
 1151              		.align	1
 1152              		.global	HAL_ADC_StopSampling
 1153              		.syntax unified
 1154              		.thumb
 1155              		.thumb_func
 1156              		.fpu fpv4-sp-d16
 1158              	HAL_ADC_StopSampling:
 1159              	.LVL79:
 1160              	.LFB375:
2307:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 192


2308:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
2309:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Stop ADC conversion sampling phase of regular group and start conversion
2310:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note:  This function should only be called to stop sampling when
2311:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         - @ref ADC_SAMPLING_MODE_TRIGGER_CONTROLED sampling
2312:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         mode has been selected
2313:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         - @ref ADC_SOFTWARE_START has been selected as trigger source
2314:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         - after sampling has been started using @ref HAL_ADC_StartSampling.
2315:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
2316:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status.
2317:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
2318:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_StopSampling(ADC_HandleTypeDef *hadc)
2319:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
 1161              		.loc 1 2319 1 is_stmt 1 view -0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 0, uses_anonymous_args = 0
 1165              		@ link register save eliminated.
2320:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
2321:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1166              		.loc 1 2321 3 view .LVU369
2322:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2323:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Start sampling */
2324:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_SWTRIG);
 1167              		.loc 1 2324 3 view .LVU370
 1168 0000 0268     		ldr	r2, [r0]
 1169 0002 1369     		ldr	r3, [r2, #16]
 1170 0004 23F00073 		bic	r3, r3, #33554432
 1171 0008 1361     		str	r3, [r2, #16]
2325:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2326:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return function status */
2327:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return HAL_OK;
 1172              		.loc 1 2327 3 view .LVU371
2328:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 1173              		.loc 1 2328 1 is_stmt 0 view .LVU372
 1174 000a 0020     		movs	r0, #0
 1175              	.LVL80:
 1176              		.loc 1 2328 1 view .LVU373
 1177 000c 7047     		bx	lr
 1178              		.cfi_endproc
 1179              	.LFE375:
 1181              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1182              		.align	1
 1183              		.weak	HAL_ADC_ConvCpltCallback
 1184              		.syntax unified
 1185              		.thumb
 1186              		.thumb_func
 1187              		.fpu fpv4-sp-d16
 1189              	HAL_ADC_ConvCpltCallback:
 1190              	.LVL81:
 1191              	.LFB377:
2329:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2330:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
2331:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
2332:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
2333:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval None
2334:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
2335:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
ARM GAS  /tmp/cc46GlVT.s 			page 193


2336:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
2337:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
2338:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
2339:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
2340:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
2341:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
2342:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_cfgr;
2343:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2344:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
2345:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
2346:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2347:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2348:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
2349:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2350:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
2351:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2352:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
2353:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
2354:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
2355:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
2356:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2357:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2358:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC state */
2359:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
2360:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2361:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2362:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* End Of Sampling callback */
2363:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2364:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
2365:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
2366:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
2367:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2368:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2369:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Clear regular group conversion flag */
2370:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
2371:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
2372:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2373:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
2374:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
2375:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
2376:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
2377:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2379:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2380:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC state */
2381:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
2382:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2383:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2384:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2385:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2386:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* to disable interruption.                                               */
2387:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
2388:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2389:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Get relevant register CFGR in ADC instance of ADC master or slave    */
2390:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* in function of multimode state (for devices with multimode           */
2391:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* available).                                                          */
2392:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
ARM GAS  /tmp/cc46GlVT.s 			page 194


2393:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2394:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2395:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2396:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2397:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          )
2398:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
2399:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* check CONT bit directly in handle ADC CFGR register */
2400:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2401:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
2402:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else
2403:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
2404:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* else need to check Master ADC CONT bit */
2405:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2406:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2407:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
2408:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
2409:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2410:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2411:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2412:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Carry on if continuous mode is disabled */
2413:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) != ADC_CFGR_CONT)
2414:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
2415:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2416:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
2417:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
2418:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit         */
2419:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* ADSTART==0 (no conversion on going)                              */
2420:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2421:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
2422:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt */
2423:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* Note: Overrun interrupt was enabled with EOC interrupt in      */
2424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* HAL_Start_IT(), but is not disabled here because can be used   */
2425:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* by overrun IRQ process below.                                  */
2426:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2427:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2428:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* Set ADC state */
2429:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
2430:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2431:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
2432:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
2433:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2434:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             }
2435:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
2436:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           else
2437:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
2438:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* Change ADC state to error state */
2439:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2440:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2441:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2442:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2443:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
2444:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
2445:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
2446:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2447:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2448:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Conversion complete callback */
2449:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
ARM GAS  /tmp/cc46GlVT.s 			page 195


2450:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
2451:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*       possibility to use:                                              */
2452:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*        " if ( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "               */
2453:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2454:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2455:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
2456:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
2457:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2458:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2459:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Clear regular group conversion flag */
2460:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
2461:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
2462:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
2463:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
2464:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
2465:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
2466:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2467:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* ====== Check ADC group injected end of unitary conversion sequence conversions ===== */
2468:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_JEOC) == ADC_FLAG_JEOC) && ((tmp_ier & ADC_IT_JEOC) == ADC_IT_JEOC)) ||
2469:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
2470:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
2471:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2472:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2473:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2474:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC state */
2475:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
2476:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2477:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2478:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Retrieve ADC configuration */
2479:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
2480:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
2481:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
2482:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* in function of multimode state (for devices with multimode         */
2483:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* available).                                                        */
2484:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2485:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2486:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2487:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
2488:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
2489:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        )
2490:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2492:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2493:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     else
2494:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2495:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2496:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2497:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2498:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
2499:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2500:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2501:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2502:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Disable interruption if no further conversion upcoming by injected     */
2503:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* external trigger or by automatic injected conversion with regular      */
2504:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* group having no further conversion upcoming (same conditions as        */
2505:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* regular group interruption disabling above),                           */
2506:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* and if injected scan sequence is completed.                            */
ARM GAS  /tmp/cc46GlVT.s 			page 196


2507:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (tmp_adc_inj_is_trigger_source_sw_start != 0UL)
2508:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2509:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL) ||
2510:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
2511:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****            (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL)))
2512:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
2513:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2514:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
2515:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
2516:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Particular case if injected contexts queue is enabled:             */
2517:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* when the last context has been fully processed, JSQR is reset      */
2518:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* by the hardware. Even if no injected conversion is planned to come */
2519:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* (queue empty, triggers are ignored), it can start again            */
2520:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* immediately after setting a new context (JADSTART is still set).   */
2521:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Therefore, state of HAL ADC injected group is kept to busy.        */
2522:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
2523:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
2524:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit       */
2525:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* JADSTART==0 (no conversion on going)                             */
2526:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
2527:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
2528:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               /* Disable ADC end of sequence conversion interrupt  */
2529:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
2530:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2531:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               /* Set ADC state */
2532:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
2533:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2534:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
2535:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               {
2536:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2537:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               }
2538:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             }
2539:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             else
2540:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
2541:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               /* Update ADC state machine to error */
2542:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2543:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2544:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               /* Set ADC error code to ADC peripheral internal error */
2545:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2546:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             }
2547:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
2548:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
2549:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
2550:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2551:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2552:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Injected Conversion complete callback */
2553:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Note:  HAL_ADCEx_InjectedConvCpltCallback can resort to
2554:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               if (__HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) or
2555:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               if (__HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOC)) to determine whether
2556:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               interruption has been triggered by end of conversion or end of
2557:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               sequence.    */
2558:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2559:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->InjectedConvCpltCallback(hadc);
2560:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
2561:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
2562:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2563:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 197


2564:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Clear injected group conversion flag */
2565:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
2566:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
2567:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2568:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
2569:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
2570:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
2571:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Set ADC state */
2572:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2573:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2574:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Level out of window 1 callback */
2575:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2576:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
2577:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
2578:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
2579:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2580:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2581:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2582:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
2583:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
2584:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2585:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
2586:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
2587:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
2588:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Set ADC state */
2589:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2590:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2591:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Level out of window 2 callback */
2592:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2593:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
2594:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
2595:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
2596:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2597:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2598:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2599:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
2600:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
2601:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2602:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
2603:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
2604:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
2605:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Set ADC state */
2606:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2607:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2608:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Level out of window 3 callback */
2609:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2610:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
2611:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
2612:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
2613:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2614:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2615:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2616:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
2617:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
2618:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2619:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2620:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
ARM GAS  /tmp/cc46GlVT.s 			page 198


2621:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
2622:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2623:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2624:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2625:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* overrun ")                                                             */
2626:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2627:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* error.                                                                 */
2628:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2629:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2630:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       overrun_error = 1UL;
2631:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2632:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     else
2633:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2634:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Check DMA configuration */
2635:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2636:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (tmp_multimode_config != LL_ADC_MULTI_INDEPENDENT)
2637:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
2638:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Multimode (when feature is available) is enabled,
2639:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****            Common Control Register MDMA bits must be checked. */
2640:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_RE
2641:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
2642:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           overrun_error = 1UL;
2643:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
2644:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
2645:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else
2646:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2647:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
2648:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Multimode not set or feature not available or ADC independent */
2649:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if ((hadc->Instance->CFGR & ADC_CFGR_DMAEN) != 0UL)
2650:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
2651:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           overrun_error = 1UL;
2652:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
2653:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
2654:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2655:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2656:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (overrun_error == 1UL)
2657:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2658:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Change ADC state to error state */
2659:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2660:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2661:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC error code to overrun */
2662:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2663:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2664:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Error callback */
2665:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2666:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2667:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2668:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2669:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2670:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2671:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
2672:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2673:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2674:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2675:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2676:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Clear ADC overrun flag */
2677:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
ARM GAS  /tmp/cc46GlVT.s 			page 199


2678:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
2679:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2680:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* ========== Check Injected context queue overflow flag ========== */
2681:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_JQOVF) == ADC_FLAG_JQOVF) && ((tmp_ier & ADC_IT_JQOVF) == ADC_IT_JQOVF))
2682:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
2683:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Change ADC state to overrun state */
2684:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
2685:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2686:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Set ADC error code to Injected context queue overflow */
2687:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
2688:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2689:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Clear the Injected context queue overflow flag */
2690:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
2691:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2692:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Injected context queue overflow callback */
2693:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2694:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback(hadc);
2695:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
2696:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
2697:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2698:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
2699:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2700:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
2701:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2702:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
2703:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2704:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
2705:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval None
2706:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
2707:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
2708:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
 1192              		.loc 1 2708 1 is_stmt 1 view -0
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 0
 1195              		@ frame_needed = 0, uses_anonymous_args = 0
 1196              		@ link register save eliminated.
2709:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2710:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   UNUSED(hadc);
 1197              		.loc 1 2710 3 view .LVU375
2711:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2712:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2713:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2714:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****    */
2715:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 1198              		.loc 1 2715 1 is_stmt 0 view .LVU376
 1199 0000 7047     		bx	lr
 1200              		.cfi_endproc
 1201              	.LFE377:
 1203              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1204              		.align	1
 1205              		.weak	HAL_ADC_ConvHalfCpltCallback
 1206              		.syntax unified
 1207              		.thumb
 1208              		.thumb_func
 1209              		.fpu fpv4-sp-d16
 1211              	HAL_ADC_ConvHalfCpltCallback:
 1212              	.LVL82:
ARM GAS  /tmp/cc46GlVT.s 			page 200


 1213              	.LFB378:
2716:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2717:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
2718:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2719:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
2720:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval None
2721:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
2722:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
2723:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
 1214              		.loc 1 2723 1 is_stmt 1 view -0
 1215              		.cfi_startproc
 1216              		@ args = 0, pretend = 0, frame = 0
 1217              		@ frame_needed = 0, uses_anonymous_args = 0
 1218              		@ link register save eliminated.
2724:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2725:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   UNUSED(hadc);
 1219              		.loc 1 2725 3 view .LVU378
2726:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2727:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2728:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2729:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
2730:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 1220              		.loc 1 2730 1 is_stmt 0 view .LVU379
 1221 0000 7047     		bx	lr
 1222              		.cfi_endproc
 1223              	.LFE378:
 1225              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1226              		.align	1
 1227              		.global	ADC_DMAHalfConvCplt
 1228              		.syntax unified
 1229              		.thumb
 1230              		.thumb_func
 1231              		.fpu fpv4-sp-d16
 1233              	ADC_DMAHalfConvCplt:
 1234              	.LVL83:
 1235              	.LFB389:
2731:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2732:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
2733:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2734:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
2735:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval None
2736:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
2737:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2738:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
2739:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2740:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   UNUSED(hadc);
2741:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2742:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2743:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2744:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
2745:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
2746:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2747:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
2748:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2749:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2750:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2751:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
ARM GAS  /tmp/cc46GlVT.s 			page 201


2752:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2753:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2754:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2755:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2756:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
2757:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval None
2758:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
2759:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2760:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
2761:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2762:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   UNUSED(hadc);
2763:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2764:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2765:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2766:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
2767:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
2768:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2769:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
2770:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @}
2771:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
2772:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2773:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2774:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief    Peripheral Control functions
2775:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *
2776:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** @verbatim
2777:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****  ===============================================================================
2778:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****              ##### Peripheral Control functions #####
2779:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****  ===============================================================================
2780:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     [..]  This section provides functions allowing to:
2781:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+) Configure channels on regular group
2782:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+) Configure the analog watchdog
2783:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2784:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** @endverbatim
2785:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @{
2786:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
2787:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2788:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
2789:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2790:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2791:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2792:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         These internal paths can be disabled using function
2793:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         HAL_ADC_DeInit().
2794:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2795:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2796:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2797:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2798:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         without resetting the ADC.
2799:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2800:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2801:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
2802:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param pConfig Structure of ADC channel assigned to ADC group regular.
2803:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status
2804:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
2805:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, const ADC_ChannelConfTypeDef *pCon
2806:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
2807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2808:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
ARM GAS  /tmp/cc46GlVT.s 			page 202


2809:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2810:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2811:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2812:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2813:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2814:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
2815:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2816:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(pConfig->Rank));
2817:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(pConfig->SamplingTime));
2818:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(pConfig->SingleDiff));
2819:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(pConfig->OffsetNumber));
2820:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pConfig->Offset));
2821:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2822:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
2823:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      ignored (considered as reset) */
2824:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(!((pConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENAB
2825:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2826:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Verification of channel number */
2827:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (pConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
2828:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
2829:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, pConfig->Channel));
2830:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
2831:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   else
2832:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
2833:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, pConfig->Channel));
2834:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
2835:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2836:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Process locked */
2837:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __HAL_LOCK(hadc);
2838:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2839:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2840:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2841:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2842:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /*  - Channel number                                                        */
2843:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /*  - Channel rank                                                          */
2844:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2845:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
2846:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (pConfig->Channel == ADC_CHANNEL_0)
2847:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2848:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       LL_ADC_EnableChannel0_GPIO(hadc->Instance);
2849:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2850:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2851:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Set ADC group regular sequence: channel on the selected scan sequence rank */
2852:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     LL_ADC_REG_SetSequencerRanks(hadc->Instance, pConfig->Rank, pConfig->Channel);
2853:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2854:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2855:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without   */
2856:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* conversion on going on regular group:                                    */
2857:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  - Channel sampling time                                                 */
2858:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  - Channel offset                                                        */
2859:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
2860:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
2861:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
2862:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
2863:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        )
2864:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2865:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Manage specific case of sampling time 3.5 cycles replacing 2.5 cyles */
ARM GAS  /tmp/cc46GlVT.s 			page 203


2866:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (pConfig->SamplingTime == ADC_SAMPLETIME_3CYCLES_5)
2867:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
2868:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2869:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, pConfig->Channel, LL_ADC_SAMPLINGTIME_2CYCLES
2870:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2871:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2872:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5)
2873:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
2874:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else
2875:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
2876:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2877:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, pConfig->Channel, pConfig->SamplingTime);
2878:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2879:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2880:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_DEFAULT);
2881:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
2882:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2883:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Configure the offset: offset enable/disable, channel, offset value */
2884:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2885:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Shift the offset with respect to the selected ADC resolution. */
2886:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
2887:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)pConfig->Offset);
2888:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2889:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (pConfig->OffsetNumber != ADC_OFFSET_NONE)
2890:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
2891:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Set ADC selected offset number */
2892:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_SetOffset(hadc->Instance, pConfig->OffsetNumber, pConfig->Channel, tmpOffsetShifted)
2893:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2894:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         assert_param(IS_ADC_OFFSET_SIGN(pConfig->OffsetSign));
2895:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         assert_param(IS_FUNCTIONAL_STATE(pConfig->OffsetSaturation));
2896:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Set ADC selected offset sign & saturation */
2897:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_SetOffsetSign(hadc->Instance, pConfig->OffsetNumber, pConfig->OffsetSign);
2898:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_SetOffsetSaturation(hadc->Instance, pConfig->OffsetNumber,
2899:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                    (pConfig->OffsetSaturation == ENABLE) ?
2900:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                    LL_ADC_OFFSET_SATURATION_ENABLE : LL_ADC_OFFSET_SATURATION_DISAB
2901:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
2902:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else
2903:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
2904:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Scan each offset register to check if the selected channel is targeted. */
2905:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* If this is the case, the corresponding offset number is disabled.       */
2906:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1)
2907:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
2908:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
2909:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
2910:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
2911:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2)
2912:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
2913:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
2914:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
2915:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
2916:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3)
2917:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
2918:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
2919:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
2920:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
2921:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4)
2922:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
ARM GAS  /tmp/cc46GlVT.s 			page 204


2923:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
2924:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
2925:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
2926:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
2927:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2928:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2929:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2930:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:                */
2931:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /*  - Single or differential mode                                           */
2932:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2933:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2934:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set mode single-ended or differential input of the selected ADC channel */
2935:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       LL_ADC_SetChannelSingleDiff(hadc->Instance, pConfig->Channel, pConfig->SingleDiff);
2936:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2937:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Configuration of differential mode */
2938:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (pConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
2939:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
2940:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2941:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits r
2942:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance,
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
2944:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
2945:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                     + 1UL) & 0x1FUL)),
2946:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                       pConfig->SamplingTime);
2947:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
2948:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2949:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
2950:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2951:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2952:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* If internal channel selected, enable dedicated internal buffers and    */
2953:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* paths.                                                                 */
2954:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Note: these internal measurement paths can be disabled using           */
2955:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* HAL_ADC_DeInit().                                                      */
2956:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2957:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (__LL_ADC_IS_CHANNEL_INTERNAL(pConfig->Channel))
2958:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
2959:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->I
2960:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2961:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* If the requested internal measurement path has already been enabled, */
2962:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* bypass the configuration processing.                                 */
2963:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if ((pConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
2964:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
2965:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
2966:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
2967:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
2968:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2969:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
2970:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
2971:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2972:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Wait loop initialization and execution */
2973:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Note: Variable divided by 2 to compensate partially              */
2974:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /*       CPU processing cycles, scaling in us split to not          */
2975:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /*       exceed 32 bits register capacity and handle low frequency. */
2976:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000
2977:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           while (wait_loop_index != 0UL)
2978:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
2979:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             wait_loop_index--;
ARM GAS  /tmp/cc46GlVT.s 			page 205


2980:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
2981:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
2982:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
2983:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else if ((pConfig->Channel == ADC_CHANNEL_VBAT)
2984:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
2985:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
2986:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
2987:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
2988:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2989:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2990:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
2991:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
2992:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else if ((pConfig->Channel == ADC_CHANNEL_VREFINT)
2993:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
2994:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
2995:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (ADC_VREFINT_INSTANCE(hadc))
2996:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
2997:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2998:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
2999:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
3000:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3001:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else if (pConfig->Channel == ADC_CHANNEL_VDDCORE)
3002:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3003:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (ADC_VDDCORE_INSTANCE(hadc))
3004:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
3005:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_EnableChannelVDDcore(hadc->Instance);
3006:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
3007:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3008:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else
3009:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3010:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* nothing to do */
3011:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3012:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3013:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
3014:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3015:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
3016:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
3017:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* parameters.                                                              */
3018:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   else
3019:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
3020:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Update ADC state machine to error */
3021:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3022:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3023:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
3024:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
3025:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3026:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Process unlocked */
3027:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
3028:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3029:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return function status */
3030:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return tmp_hal_status;
3031:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
3032:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3033:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
3034:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Configure the analog watchdog.
3035:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
3036:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
ARM GAS  /tmp/cc46GlVT.s 			page 206


3037:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
3038:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
3039:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         the ADC.
3040:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
3041:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
3042:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
3043:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   On this STM32 series, analog watchdog thresholds can be modified
3044:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         while ADC conversion is on going.
3045:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         In this case, some constraints must be taken into account:
3046:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         the programmed threshold values are effective from the next
3047:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         ADC EOC (end of unitary conversion).
3048:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         Considering that registers write delay may happen due to
3049:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         bus activity, this might cause an uncertainty on the
3050:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         effective timing of the new programmed threshold values.
3051:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
3052:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param pAnalogWDGConfig Structure of ADC analog watchdog configuration
3053:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status
3054:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
3055:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, const ADC_AnalogWDGConfTypeDef *
3056:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
3057:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3058:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
3059:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_awd_low_threshold_shifted;
3060:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3061:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3062:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3063:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
3064:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3065:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(pAnalogWDGConfig->WatchdogNumber));
3066:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(pAnalogWDGConfig->WatchdogMode));
3067:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_FILTERING_MODE(pAnalogWDGConfig->FilteringConfig));
3068:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(pAnalogWDGConfig->ITMode));
3069:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3070:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if ((pAnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
3071:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (pAnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
3072:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (pAnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC))
3073:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
3074:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, pAnalogWDGConfig->Channel));
3075:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
3076:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3077:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Verify thresholds range */
3078:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
3079:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
3080:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Case of oversampling enabled: depending on ratio and shift configuration,
3081:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        analog watchdog thresholds can be higher than ADC resolution.
3082:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        Verify if thresholds are within maximum thresholds range. */
3083:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, pAnalogWDGConfig->HighThreshold));
3084:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, pAnalogWDGConfig->LowThreshold));
3085:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
3086:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   else
3087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
3088:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Verify if thresholds are within the selected ADC resolution */
3089:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pAnalogWDGConfig->HighThreshold));
3090:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pAnalogWDGConfig->LowThreshold));
3091:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
3092:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3093:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Process locked */
ARM GAS  /tmp/cc46GlVT.s 			page 207


3094:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __HAL_LOCK(hadc);
3095:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3096:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
3097:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
3098:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* conversion on going on ADC groups regular and injected:                  */
3099:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
3100:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3101:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3102:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
3103:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
3104:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      )
3105:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
3106:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Analog watchdog configuration */
3107:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
3108:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
3109:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
3110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
3111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*    channels, on groups regular and-or injected.                      */
3112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       switch (pAnalogWDGConfig->WatchdogMode)
3113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3114:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3115:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1,
3116:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
3117:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                                           LL_ADC_GROUP_REGULAR));
3118:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
3119:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3120:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3121:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1,
3122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
3123:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                                           LL_ADC_GROUP_INJECTED));
3124:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
3125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3126:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1,
3128:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
3129:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                                           LL_ADC_GROUP_REGULAR_INJE
3130:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
3131:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3133:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
3134:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
3135:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3136:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3137:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_INJ)
3138:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
3139:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3140:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG_
3142:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
3143:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3144:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3145:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
3146:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
3147:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3148:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3149:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set the filtering configuration */
3150:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->TR1,
ARM GAS  /tmp/cc46GlVT.s 			page 208


3151:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                  ADC_TR1_AWDFILT,
3152:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                  pAnalogWDGConfig->FilteringConfig);
3153:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
3155:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
3156:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3157:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
3158:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3159:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
3161:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
3162:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3163:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
3164:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (pAnalogWDGConfig->ITMode == ENABLE)
3165:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3166:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
3167:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3168:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else
3169:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3170:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
3171:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3172:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3173:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
3174:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     else
3175:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
3176:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       switch (pAnalogWDGConfig->WatchdogMode)
3177:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3178:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3179:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
3182:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* several channels by successive calls of this function.           */
3183:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3184:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
3185:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR,
3186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                     (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig->Channel) & 0x1FUL)));
3187:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
3188:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           else
3189:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
3190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR,
3191:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                     (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig->Channel) & 0x1FUL)));
3192:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
3193:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
3194:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3195:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3196:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3197:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance,
3199:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                           pAnalogWDGConfig->WatchdogNumber, LL_ADC_AWD_ALL_CHANNELS
3200:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
3201:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3202:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3203:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, pAnalogWDGConfig->WatchdogNumber, LL_ADC_
3204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
3205:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3206:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
ARM GAS  /tmp/cc46GlVT.s 			page 209


3208:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3209:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
3210:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
3211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3212:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3213:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3214:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3215:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3216:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
3217:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3219:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (pAnalogWDGConfig->ITMode == ENABLE)
3220:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
3221:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
3222:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
3223:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         else
3224:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
3225:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
3226:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
3227:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3228:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
3229:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       else
3230:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3231:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
3232:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
3233:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3234:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3235:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3236:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3237:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3238:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
3239:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3240:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3241:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (pAnalogWDGConfig->ITMode == ENABLE)
3242:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
3243:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
3244:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
3245:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         else
3246:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
3247:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
3248:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
3249:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3250:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3251:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3252:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
3253:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3254:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Analog watchdog thresholds configuration */
3255:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
3256:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
3257:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Shift the offset with respect to the selected ADC resolution:        */
3258:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
3259:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* are set to 0.                                                        */
3260:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_awd_high_threshold_shifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Hig
3261:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
3262:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
3263:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Case of ADC_ANALOGWATCHDOG_2 and ADC_ANALOGWATCHDOG_3 */
3264:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   else
ARM GAS  /tmp/cc46GlVT.s 			page 210


3265:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
3266:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Shift the offset with respect to the selected ADC resolution:        */
3267:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 7, the LSB (right bits)    */
3268:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* are set to 0.                                                        */
3269:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_awd_high_threshold_shifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Hi
3270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Lo
3271:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
3272:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3273:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3274:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, pAnalogWDGConfig->WatchdogNumber, tmp_awd_high_th
3275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                   tmp_awd_low_threshold_shifted);
3276:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3277:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Process unlocked */
3278:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
3279:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return function status */
3281:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return tmp_hal_status;
3282:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
3283:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3284:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3285:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
3286:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @}
3287:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
3288:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3289:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
3290:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
3291:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *
3292:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** @verbatim
3293:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****  ===============================================================================
3294:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
3295:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****  ===============================================================================
3296:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     [..]
3297:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
3298:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     peripheral.
3299:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+) Check the ADC state
3300:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (+) Check the ADC error code
3301:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3302:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** @endverbatim
3303:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @{
3304:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
3305:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3306:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
3307:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Return the ADC handle state.
3308:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
3309:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         compared with states bits.
3310:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         For example:
3311:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
3312:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
3313:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
3314:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
3315:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
3316:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** uint32_t HAL_ADC_GetState(const ADC_HandleTypeDef *hadc)
3317:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
3318:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
3319:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3320:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3321:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return ADC handle state */
ARM GAS  /tmp/cc46GlVT.s 			page 211


3322:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return hadc->State;
3323:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
3324:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3325:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
3326:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Return the ADC error code.
3327:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
3328:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
3329:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
3330:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** uint32_t HAL_ADC_GetError(const ADC_HandleTypeDef *hadc)
3331:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
3332:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
3333:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3334:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3335:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return hadc->ErrorCode;
3336:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
3337:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3338:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
3339:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @}
3340:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
3341:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3342:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
3343:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @}
3344:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
3345:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3346:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
3347:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @{
3348:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
3349:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3350:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
3351:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Stop ADC conversion.
3352:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
3353:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param ConversionGroup ADC group regular and/or injected.
3354:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *          This parameter can be one of the following values:
3355:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_GROUP           ADC regular conversion type.
3356:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *            @arg @ref ADC_INJECTED_GROUP          ADC injected conversion type.
3357:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_INJECTED_GROUP  ADC regular and injected conversion type.
3358:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status.
3359:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
3360:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc, uint32_t ConversionGroup)
3361:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
3362:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tickstart;
3363:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
3364:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
3365:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
3366:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3367:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3368:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3369:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
3370:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3371:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
3372:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3373:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
3374:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* groups) to bypass this function if not needed.                           */
3375:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3376:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3377:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
3378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
ARM GAS  /tmp/cc46GlVT.s 			page 212


3379:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      )
3380:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
3381:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Particular case of continuous auto-injection mode combined with        */
3382:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* auto-delay mode.                                                       */
3383:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
3384:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
3385:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Procedure to be followed: Wait until JEOS=1, clear JEOS, set ADSTP=1   */
3386:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* (see reference manual).                                                */
3387:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (((hadc->Instance->CFGR & ADC_CFGR_JAUTO) != 0UL)
3388:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
3389:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         && (hadc->Init.LowPowerAutoWait == ENABLE)
3390:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        )
3391:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
3392:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Use stop of regular group */
3393:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       conversion_group_reassigned = ADC_REGULAR_GROUP;
3394:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3395:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
3396:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == 0UL)
3397:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3398:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES * 4UL))
3399:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
3400:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Update ADC state machine to error */
3401:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3402:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3403:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3404:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3405:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3406:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           return HAL_ERROR;
3407:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
3408:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         Conversion_Timeout_CPU_cycles ++;
3409:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3410:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3411:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Clear JEOS */
3412:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
3413:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3414:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3415:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group regular */
3416:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_INJECTED_GROUP)
3417:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
3418:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
3419:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
3420:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3421:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3422:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
3423:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Stop ADC group regular conversion */
3424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_REG_StopConversion(hadc->Instance);
3425:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
3426:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3427:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3428:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3429:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group injected */
3430:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_REGULAR_GROUP)
3431:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
3432:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0 */
3433:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
3434:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3435:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
ARM GAS  /tmp/cc46GlVT.s 			page 213


3436:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
3437:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Stop ADC group injected conversion */
3438:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           LL_ADC_INJ_StopConversion(hadc->Instance);
3439:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
3440:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3441:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3442:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3443:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Selection of start and stop bits with respect to the regular or injected group */
3444:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     switch (conversion_group_reassigned)
3445:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
3446:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case ADC_REGULAR_INJECTED_GROUP:
3447:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
3448:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
3449:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       case ADC_INJECTED_GROUP:
3450:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
3451:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
3452:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Case ADC_REGULAR_GROUP only*/
3453:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       default:
3454:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
3455:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
3456:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3457:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3458:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
3459:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tickstart = HAL_GetTick();
3460:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3461:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     while ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3462:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
3463:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
3464:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3465:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3466:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3467:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
3468:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Update ADC state machine to error */
3469:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3470:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3471:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3472:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3473:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3474:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           return HAL_ERROR;
3475:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
3476:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3477:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3478:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3479:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
3480:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3481:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return HAL status */
3482:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return HAL_OK;
3483:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
3484:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3485:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
3486:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Enable the selected ADC.
3487:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
3488:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
3489:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
3490:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status.
3491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
3492:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
ARM GAS  /tmp/cc46GlVT.s 			page 214


3493:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
3494:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tickstart;
3495:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
3496:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3497:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
3498:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
3499:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
3500:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
3501:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3502:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
3503:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
3504:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JADSTART | ADC_
3505:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
3506:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
3507:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Update ADC state machine to error */
3508:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3509:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3510:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3511:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3512:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3513:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       return HAL_ERROR;
3514:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3515:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3516:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Enable the ADC peripheral */
3517:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
3518:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3519:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if ((LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance))
3520:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          & LL_ADC_PATH_INTERNAL_TEMPSENSOR) != 0UL)
3521:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
3522:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Delay for temperature sensor buffer stabilization time */
3523:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Note: Value LL_ADC_DELAY_TEMPSENSOR_STAB_US used instead of      */
3524:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*       LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US because needed      */
3525:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*       in case of ADC enable after a system wake up               */
3526:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*       from low power mode.                                       */
3527:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3528:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Wait loop initialization and execution */
3529:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Note: Variable divided by 2 to compensate partially              */
3530:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*       CPU processing cycles, scaling in us split to not          */
3531:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*       exceed 32 bits register capacity and handle low frequency. */
3532:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000UL *
3533:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       while (wait_loop_index != 0UL)
3534:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3535:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         wait_loop_index--;
3536:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3537:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3538:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3539:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
3540:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tickstart = HAL_GetTick();
3541:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3542:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
3543:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
3544:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit
3545:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           has been cleared (after a calibration), ADEN bit is reset by the
3546:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           calibration logic.
3547:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           The workaround is to continue setting ADEN until ADRDY is becomes 1.
3548:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
3549:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           4 ADC clock cycle duration */
ARM GAS  /tmp/cc46GlVT.s 			page 215


3550:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Note: Test of ADC enabled required due to hardware constraint to     */
3551:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /*       not enable ADC if already enabled.                             */
3552:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3553:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3554:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_Enable(hadc->Instance);
3555:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3556:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3557:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
3558:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3559:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3560:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
3561:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
3562:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Update ADC state machine to error */
3563:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3564:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3565:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3566:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3567:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3568:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           return HAL_ERROR;
3569:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
3570:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3571:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3572:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
3573:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3574:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return HAL status */
3575:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return HAL_OK;
3576:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
3577:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3578:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
3579:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  Disable the selected ADC.
3580:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
3581:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   *         stopped.
3582:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hadc ADC handle
3583:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval HAL status.
3584:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
3585:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
3586:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
3587:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tickstart;
3588:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
3589:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3590:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
3591:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
3592:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /*       disabled.                                                          */
3593:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
3594:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
3595:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      )
3596:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
3597:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
3598:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_JADSTART | ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
3599:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
3600:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Disable the ADC peripheral */
3601:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
3602:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
3603:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3604:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     else
3605:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
3606:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Update ADC state machine to error */
ARM GAS  /tmp/cc46GlVT.s 			page 216


3607:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3608:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3609:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3610:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3611:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3612:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       return HAL_ERROR;
3613:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3614:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3615:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
3616:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Get tick count */
3617:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tickstart = HAL_GetTick();
3618:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3619:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3620:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
3621:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
3622:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3623:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3624:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3625:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
3626:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Update ADC state machine to error */
3627:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3628:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3629:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3630:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3631:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3632:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           return HAL_ERROR;
3633:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
3634:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3635:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3636:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
3637:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3638:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Return HAL status */
3639:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   return HAL_OK;
3640:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
3641:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3642:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
3643:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  DMA transfer complete callback.
3644:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3645:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval None
3646:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
3647:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
3648:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
3649:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3650:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3651:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3652:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
3653:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
3654:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
3655:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Set ADC state */
3656:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
3657:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3658:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
3659:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
3660:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* to disable interruption.                                               */
3661:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Is it the end of the regular sequence ? */
3662:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if ((hadc->Instance->ISR & ADC_FLAG_EOS) != 0UL)
3663:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
ARM GAS  /tmp/cc46GlVT.s 			page 217


3664:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Are conversions software-triggered ? */
3665:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
3666:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3667:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Is CONT bit set ? */
3668:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_CONT) == 0UL)
3669:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
3670:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* CONT bit is not set, no more conversions expected */
3671:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3672:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3673:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
3674:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3675:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
3676:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
3677:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3678:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3679:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     else
3680:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
3681:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* DMA End of Transfer interrupt was triggered but conversions sequence
3682:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          is not over. If DMACFG is set to 0, conversions are stopped. */
3683:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMACFG) == 0UL)
3684:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
3685:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* DMACFG bit is not set, conversions are stopped. */
3686:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3687:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3688:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
3689:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3690:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
3691:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
3692:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3693:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3694:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Conversion complete callback */
3695:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3696:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
3697:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
3698:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
3699:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3700:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
3701:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
3702:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
3703:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
3704:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
3705:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
3706:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3707:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
3708:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
3709:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
3710:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3711:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3712:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     else
3713:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
3714:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Call ADC DMA error callback */
3715:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
3716:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
3717:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
3718:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
3719:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3720:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
ARM GAS  /tmp/cc46GlVT.s 			page 218


3721:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
3722:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3723:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval None
3724:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
3725:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
3726:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
 1236              		.loc 1 3726 1 is_stmt 1 view -0
 1237              		.cfi_startproc
 1238              		@ args = 0, pretend = 0, frame = 0
 1239              		@ frame_needed = 0, uses_anonymous_args = 0
 1240              		.loc 1 3726 1 is_stmt 0 view .LVU381
 1241 0000 08B5     		push	{r3, lr}
 1242              	.LCFI6:
 1243              		.cfi_def_cfa_offset 8
 1244              		.cfi_offset 3, -8
 1245              		.cfi_offset 14, -4
3727:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3728:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1246              		.loc 1 3728 3 is_stmt 1 view .LVU382
 1247              	.LVL84:
3729:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3730:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Half conversion callback */
3731:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3732:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
3733:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
3734:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1248              		.loc 1 3734 3 view .LVU383
 1249 0002 C06D     		ldr	r0, [r0, #92]
 1250              	.LVL85:
 1251              		.loc 1 3734 3 is_stmt 0 view .LVU384
 1252 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1253              	.LVL86:
3735:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3736:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 1254              		.loc 1 3736 1 view .LVU385
 1255 0008 08BD     		pop	{r3, pc}
 1256              		.cfi_endproc
 1257              	.LFE389:
 1259              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1260              		.align	1
 1261              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1262              		.syntax unified
 1263              		.thumb
 1264              		.thumb_func
 1265              		.fpu fpv4-sp-d16
 1267              	HAL_ADC_LevelOutOfWindowCallback:
 1268              	.LVL87:
 1269              	.LFB379:
2738:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1270              		.loc 1 2738 1 is_stmt 1 view -0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 0
 1273              		@ frame_needed = 0, uses_anonymous_args = 0
 1274              		@ link register save eliminated.
2740:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1275              		.loc 1 2740 3 view .LVU387
2745:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 219


 1276              		.loc 1 2745 1 is_stmt 0 view .LVU388
 1277 0000 7047     		bx	lr
 1278              		.cfi_endproc
 1279              	.LFE379:
 1281              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1282              		.align	1
 1283              		.weak	HAL_ADC_ErrorCallback
 1284              		.syntax unified
 1285              		.thumb
 1286              		.thumb_func
 1287              		.fpu fpv4-sp-d16
 1289              	HAL_ADC_ErrorCallback:
 1290              	.LVL88:
 1291              	.LFB380:
2760:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1292              		.loc 1 2760 1 is_stmt 1 view -0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 0
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 1296              		@ link register save eliminated.
2762:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1297              		.loc 1 2762 3 view .LVU390
2767:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1298              		.loc 1 2767 1 is_stmt 0 view .LVU391
 1299 0000 7047     		bx	lr
 1300              		.cfi_endproc
 1301              	.LFE380:
 1303              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1304              		.align	1
 1305              		.global	HAL_ADC_IRQHandler
 1306              		.syntax unified
 1307              		.thumb
 1308              		.thumb_func
 1309              		.fpu fpv4-sp-d16
 1311              	HAL_ADC_IRQHandler:
 1312              	.LVL89:
 1313              	.LFB376:
2336:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1314              		.loc 1 2336 1 is_stmt 1 view -0
 1315              		.cfi_startproc
 1316              		@ args = 0, pretend = 0, frame = 0
 1317              		@ frame_needed = 0, uses_anonymous_args = 0
2336:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1318              		.loc 1 2336 1 is_stmt 0 view .LVU393
 1319 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1320              	.LCFI7:
 1321              		.cfi_def_cfa_offset 24
 1322              		.cfi_offset 3, -24
 1323              		.cfi_offset 4, -20
 1324              		.cfi_offset 5, -16
 1325              		.cfi_offset 6, -12
 1326              		.cfi_offset 7, -8
 1327              		.cfi_offset 14, -4
 1328 0002 0446     		mov	r4, r0
2337:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 1329              		.loc 1 2337 3 is_stmt 1 view .LVU394
 1330              	.LVL90:
ARM GAS  /tmp/cc46GlVT.s 			page 220


2338:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1331              		.loc 1 2338 3 view .LVU395
2338:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1332              		.loc 1 2338 26 is_stmt 0 view .LVU396
 1333 0004 0368     		ldr	r3, [r0]
2338:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1334              		.loc 1 2338 12 view .LVU397
 1335 0006 1F68     		ldr	r7, [r3]
 1336              	.LVL91:
2339:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 1337              		.loc 1 2339 3 is_stmt 1 view .LVU398
2339:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 1338              		.loc 1 2339 12 is_stmt 0 view .LVU399
 1339 0008 5D68     		ldr	r5, [r3, #4]
 1340              	.LVL92:
2340:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
 1341              		.loc 1 2340 3 is_stmt 1 view .LVU400
2341:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_cfgr;
 1342              		.loc 1 2341 3 view .LVU401
2342:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 1343              		.loc 1 2342 3 view .LVU402
2344:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 1344              		.loc 1 2344 3 view .LVU403
2345:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 1345              		.loc 1 2345 3 view .LVU404
 1346              	.LBB366:
 1347              	.LBI366:
6532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 1348              		.loc 2 6532 26 view .LVU405
 1349              	.LBB367:
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1350              		.loc 2 6534 3 view .LVU406
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1351              		.loc 2 6534 21 is_stmt 0 view .LVU407
 1352 000a 984B     		ldr	r3, .L131
 1353 000c 9E68     		ldr	r6, [r3, #8]
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1354              		.loc 2 6534 10 view .LVU408
 1355 000e 06F01F06 		and	r6, r6, #31
 1356              	.LVL93:
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1357              		.loc 2 6534 10 view .LVU409
 1358              	.LBE367:
 1359              	.LBE366:
2349:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 1360              		.loc 1 2349 3 is_stmt 1 view .LVU410
2350:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1361              		.loc 1 2350 3 view .LVU411
2353:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1362              		.loc 1 2353 3 view .LVU412
2353:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1363              		.loc 1 2353 6 is_stmt 0 view .LVU413
 1364 0012 17F0020F 		tst	r7, #2
 1365 0016 10D0     		beq	.L85
2353:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1366              		.loc 1 2353 54 discriminator 1 view .LVU414
 1367 0018 15F0020F 		tst	r5, #2
ARM GAS  /tmp/cc46GlVT.s 			page 221


 1368 001c 0DD0     		beq	.L85
2356:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1369              		.loc 1 2356 5 is_stmt 1 view .LVU415
2356:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1370              		.loc 1 2356 14 is_stmt 0 view .LVU416
 1371 001e 836D     		ldr	r3, [r0, #88]
2356:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1372              		.loc 1 2356 8 view .LVU417
 1373 0020 13F0100F 		tst	r3, #16
 1374 0024 03D1     		bne	.L86
2359:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 1375              		.loc 1 2359 7 is_stmt 1 view .LVU418
 1376 0026 836D     		ldr	r3, [r0, #88]
 1377 0028 43F40063 		orr	r3, r3, #2048
 1378 002c 8365     		str	r3, [r0, #88]
 1379              	.L86:
2366:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1380              		.loc 1 2366 5 view .LVU419
 1381 002e 2046     		mov	r0, r4
 1382              	.LVL94:
2366:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1383              		.loc 1 2366 5 is_stmt 0 view .LVU420
 1384 0030 FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 1385              	.LVL95:
2370:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 1386              		.loc 1 2370 5 is_stmt 1 view .LVU421
 1387 0034 2368     		ldr	r3, [r4]
 1388 0036 0222     		movs	r2, #2
 1389 0038 1A60     		str	r2, [r3]
 1390              	.L85:
2374:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1391              		.loc 1 2374 3 view .LVU422
2374:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1392              		.loc 1 2374 6 is_stmt 0 view .LVU423
 1393 003a 17F0040F 		tst	r7, #4
 1394 003e 02D0     		beq	.L87
2374:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1395              		.loc 1 2374 51 discriminator 1 view .LVU424
 1396 0040 15F0040F 		tst	r5, #4
 1397 0044 05D1     		bne	.L88
 1398              	.L87:
2374:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1399              		.loc 1 2374 94 discriminator 3 view .LVU425
 1400 0046 17F0080F 		tst	r7, #8
 1401 004a 4AD0     		beq	.L89
2375:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1402              		.loc 1 2375 51 view .LVU426
 1403 004c 15F0080F 		tst	r5, #8
 1404 0050 47D0     		beq	.L89
 1405              	.L88:
2378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1406              		.loc 1 2378 5 is_stmt 1 view .LVU427
2378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1407              		.loc 1 2378 14 is_stmt 0 view .LVU428
 1408 0052 A36D     		ldr	r3, [r4, #88]
2378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1409              		.loc 1 2378 8 view .LVU429
ARM GAS  /tmp/cc46GlVT.s 			page 222


 1410 0054 13F0100F 		tst	r3, #16
 1411 0058 03D1     		bne	.L90
2381:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 1412              		.loc 1 2381 7 is_stmt 1 view .LVU430
 1413 005a A36D     		ldr	r3, [r4, #88]
 1414 005c 43F40073 		orr	r3, r3, #512
 1415 0060 A365     		str	r3, [r4, #88]
 1416              	.L90:
2387:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1417              		.loc 1 2387 5 view .LVU431
2387:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1418              		.loc 1 2387 47 is_stmt 0 view .LVU432
 1419 0062 2368     		ldr	r3, [r4]
 1420              	.LVL96:
 1421              	.LBB368:
 1422              	.LBI368:
4074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 1423              		.loc 2 4074 26 is_stmt 1 view .LVU433
 1424              	.LBB369:
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1425              		.loc 2 4076 3 view .LVU434
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1426              		.loc 2 4076 12 is_stmt 0 view .LVU435
 1427 0064 DA68     		ldr	r2, [r3, #12]
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1428              		.loc 2 4076 103 view .LVU436
 1429 0066 12F4406F 		tst	r2, #3072
 1430 006a 34D1     		bne	.L91
 1431              	.LVL97:
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1432              		.loc 2 4076 103 view .LVU437
 1433              	.LBE369:
 1434              	.LBE368:
2393:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1435              		.loc 1 2393 7 is_stmt 1 view .LVU438
2393:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1436              		.loc 1 2393 12 is_stmt 0 view .LVU439
 1437 006c 804A     		ldr	r2, .L131+4
 1438 006e 9342     		cmp	r3, r2
 1439 0070 09D0     		beq	.L125
 1440 0072 1A46     		mov	r2, r3
 1441              	.L92:
2393:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1442              		.loc 1 2393 10 discriminator 4 view .LVU440
 1443 0074 9342     		cmp	r3, r2
 1444 0076 09D0     		beq	.L93
2394:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 1445              		.loc 1 2394 11 view .LVU441
 1446 0078 46B1     		cbz	r6, .L93
2395:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 1447              		.loc 1 2395 11 view .LVU442
 1448 007a 052E     		cmp	r6, #5
 1449 007c 06D0     		beq	.L93
2396:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          )
 1450              		.loc 1 2396 11 view .LVU443
 1451 007e 092E     		cmp	r6, #9
 1452 0080 04D0     		beq	.L93
ARM GAS  /tmp/cc46GlVT.s 			page 223


2405:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 1453              		.loc 1 2405 9 is_stmt 1 discriminator 4 view .LVU444
 1454              	.LVL98:
2406:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 1455              		.loc 1 2406 9 discriminator 4 view .LVU445
2406:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 1456              		.loc 1 2406 18 is_stmt 0 discriminator 4 view .LVU446
 1457 0082 D268     		ldr	r2, [r2, #12]
 1458              	.LVL99:
2406:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 1459              		.loc 1 2406 18 discriminator 4 view .LVU447
 1460 0084 03E0     		b	.L95
 1461              	.LVL100:
 1462              	.L125:
2393:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1463              		.loc 1 2393 12 view .LVU448
 1464 0086 A2F58072 		sub	r2, r2, #256
 1465 008a F3E7     		b	.L92
 1466              	.L93:
2400:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 1467              		.loc 1 2400 9 is_stmt 1 view .LVU449
2400:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 1468              		.loc 1 2400 18 is_stmt 0 view .LVU450
 1469 008c DA68     		ldr	r2, [r3, #12]
 1470              	.LVL101:
 1471              	.L95:
2413:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 1472              		.loc 1 2413 7 is_stmt 1 view .LVU451
2413:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 1473              		.loc 1 2413 10 is_stmt 0 view .LVU452
 1474 008e 12F4005F 		tst	r2, #8192
 1475 0092 20D1     		bne	.L91
2416:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 1476              		.loc 1 2416 9 is_stmt 1 view .LVU453
2416:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 1477              		.loc 1 2416 13 is_stmt 0 view .LVU454
 1478 0094 1A68     		ldr	r2, [r3]
 1479              	.LVL102:
2416:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 1480              		.loc 1 2416 12 view .LVU455
 1481 0096 12F0080F 		tst	r2, #8
 1482 009a 1CD0     		beq	.L91
2420:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 1483              		.loc 1 2420 11 is_stmt 1 view .LVU456
 1484              	.LVL103:
 1485              	.LBB370:
 1486              	.LBI370:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 1487              		.loc 2 6991 26 view .LVU457
 1488              	.LBB371:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1489              		.loc 2 6993 3 view .LVU458
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1490              		.loc 2 6993 12 is_stmt 0 view .LVU459
 1491 009c 9A68     		ldr	r2, [r3, #8]
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1492              		.loc 2 6993 74 view .LVU460
ARM GAS  /tmp/cc46GlVT.s 			page 224


 1493 009e 12F0040F 		tst	r2, #4
 1494 00a2 10D1     		bne	.L96
 1495              	.LVL104:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1496              		.loc 2 6993 74 view .LVU461
 1497              	.LBE371:
 1498              	.LBE370:
2426:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1499              		.loc 1 2426 13 is_stmt 1 view .LVU462
 1500 00a4 5A68     		ldr	r2, [r3, #4]
 1501 00a6 22F00C02 		bic	r2, r2, #12
 1502 00aa 5A60     		str	r2, [r3, #4]
2429:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1503              		.loc 1 2429 13 view .LVU463
 1504 00ac A36D     		ldr	r3, [r4, #88]
 1505 00ae 23F48073 		bic	r3, r3, #256
 1506 00b2 A365     		str	r3, [r4, #88]
2431:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
 1507              		.loc 1 2431 13 view .LVU464
2431:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
 1508              		.loc 1 2431 22 is_stmt 0 view .LVU465
 1509 00b4 A36D     		ldr	r3, [r4, #88]
2431:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
 1510              		.loc 1 2431 16 view .LVU466
 1511 00b6 13F4805F 		tst	r3, #4096
 1512 00ba 0CD1     		bne	.L91
2433:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             }
 1513              		.loc 1 2433 15 is_stmt 1 view .LVU467
 1514 00bc A36D     		ldr	r3, [r4, #88]
 1515 00be 43F00103 		orr	r3, r3, #1
 1516 00c2 A365     		str	r3, [r4, #88]
 1517 00c4 07E0     		b	.L91
 1518              	.LVL105:
 1519              	.L96:
2439:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1520              		.loc 1 2439 13 view .LVU468
 1521 00c6 A36D     		ldr	r3, [r4, #88]
 1522 00c8 43F01003 		orr	r3, r3, #16
 1523 00cc A365     		str	r3, [r4, #88]
2442:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
 1524              		.loc 1 2442 13 view .LVU469
 1525 00ce E36D     		ldr	r3, [r4, #92]
 1526 00d0 43F00103 		orr	r3, r3, #1
 1527 00d4 E365     		str	r3, [r4, #92]
 1528              	.L91:
2456:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1529              		.loc 1 2456 5 view .LVU470
 1530 00d6 2046     		mov	r0, r4
 1531 00d8 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1532              	.LVL106:
2464:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 1533              		.loc 1 2464 5 view .LVU471
 1534 00dc 2368     		ldr	r3, [r4]
 1535 00de 0C22     		movs	r2, #12
 1536 00e0 1A60     		str	r2, [r3]
 1537              	.L89:
2468:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
ARM GAS  /tmp/cc46GlVT.s 			page 225


 1538              		.loc 1 2468 3 view .LVU472
2468:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1539              		.loc 1 2468 6 is_stmt 0 view .LVU473
 1540 00e2 17F0200F 		tst	r7, #32
 1541 00e6 02D0     		beq	.L98
2468:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1542              		.loc 1 2468 53 discriminator 1 view .LVU474
 1543 00e8 15F0200F 		tst	r5, #32
 1544 00ec 05D1     		bne	.L99
 1545              	.L98:
2468:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1546              		.loc 1 2468 98 discriminator 3 view .LVU475
 1547 00ee 17F0400F 		tst	r7, #64
 1548 00f2 5CD0     		beq	.L100
2469:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1549              		.loc 1 2469 53 view .LVU476
 1550 00f4 15F0400F 		tst	r5, #64
 1551 00f8 59D0     		beq	.L100
 1552              	.L99:
2472:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1553              		.loc 1 2472 5 is_stmt 1 view .LVU477
2472:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1554              		.loc 1 2472 14 is_stmt 0 view .LVU478
 1555 00fa A36D     		ldr	r3, [r4, #88]
2472:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1556              		.loc 1 2472 8 view .LVU479
 1557 00fc 13F0100F 		tst	r3, #16
 1558 0100 03D1     		bne	.L101
2475:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 1559              		.loc 1 2475 7 is_stmt 1 view .LVU480
 1560 0102 A36D     		ldr	r3, [r4, #88]
 1561 0104 43F40053 		orr	r3, r3, #8192
 1562 0108 A365     		str	r3, [r4, #88]
 1563              	.L101:
2479:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1564              		.loc 1 2479 5 view .LVU481
2479:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1565              		.loc 1 2479 84 is_stmt 0 view .LVU482
 1566 010a 2368     		ldr	r3, [r4]
 1567              	.LVL107:
 1568              	.LBB372:
 1569              	.LBI372:
4800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 1570              		.loc 2 4800 26 is_stmt 1 view .LVU483
 1571              	.LBB373:
4802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1572              		.loc 2 4802 3 view .LVU484
4802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1573              		.loc 2 4802 12 is_stmt 0 view .LVU485
 1574 010c DA6C     		ldr	r2, [r3, #76]
4802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1575              		.loc 2 4802 105 view .LVU486
 1576 010e 12F4C07F 		tst	r2, #384
 1577 0112 12D1     		bne	.L121
 1578 0114 0121     		movs	r1, #1
 1579              	.L102:
 1580              	.LVL108:
ARM GAS  /tmp/cc46GlVT.s 			page 226


4802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1581              		.loc 2 4802 105 view .LVU487
 1582              	.LBE373:
 1583              	.LBE372:
2480:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
 1584              		.loc 1 2480 5 is_stmt 1 view .LVU488
 1585              	.LBB375:
 1586              	.LBI375:
4074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 1587              		.loc 2 4074 26 view .LVU489
 1588              	.LBB376:
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1589              		.loc 2 4076 3 view .LVU490
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1590              		.loc 2 4076 12 is_stmt 0 view .LVU491
 1591 0116 DA68     		ldr	r2, [r3, #12]
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1592              		.loc 2 4076 103 view .LVU492
 1593 0118 12F4406F 		tst	r2, #3072
 1594 011c 0FD1     		bne	.L122
 1595 011e 0120     		movs	r0, #1
 1596              	.L103:
 1597              	.LVL109:
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1598              		.loc 2 4076 103 view .LVU493
 1599              	.LBE376:
 1600              	.LBE375:
2485:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1601              		.loc 1 2485 5 is_stmt 1 view .LVU494
2485:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1602              		.loc 1 2485 10 is_stmt 0 view .LVU495
 1603 0120 534A     		ldr	r2, .L131+4
 1604 0122 9342     		cmp	r3, r2
 1605 0124 0DD0     		beq	.L126
 1606 0126 1A46     		mov	r2, r3
 1607              	.L104:
2485:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1608              		.loc 1 2485 8 discriminator 4 view .LVU496
 1609 0128 9342     		cmp	r3, r2
 1610 012a 0DD0     		beq	.L105
2486:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 1611              		.loc 1 2486 9 view .LVU497
 1612 012c 66B1     		cbz	r6, .L105
2487:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 1613              		.loc 1 2487 9 view .LVU498
 1614 012e 062E     		cmp	r6, #6
 1615 0130 0AD0     		beq	.L105
2488:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        )
 1616              		.loc 1 2488 9 view .LVU499
 1617 0132 072E     		cmp	r6, #7
 1618 0134 08D0     		beq	.L105
2495:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 1619              		.loc 1 2495 7 is_stmt 1 discriminator 4 view .LVU500
 1620              	.LVL110:
2496:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 1621              		.loc 1 2496 7 discriminator 4 view .LVU501
2496:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
ARM GAS  /tmp/cc46GlVT.s 			page 227


 1622              		.loc 1 2496 16 is_stmt 0 discriminator 4 view .LVU502
 1623 0136 D268     		ldr	r2, [r2, #12]
 1624              	.LVL111:
2496:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 1625              		.loc 1 2496 16 discriminator 4 view .LVU503
 1626 0138 07E0     		b	.L107
 1627              	.LVL112:
 1628              	.L121:
 1629              	.LBB378:
 1630              	.LBB374:
4802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1631              		.loc 2 4802 105 view .LVU504
 1632 013a 0021     		movs	r1, #0
 1633 013c EBE7     		b	.L102
 1634              	.LVL113:
 1635              	.L122:
4802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1636              		.loc 2 4802 105 view .LVU505
 1637              	.LBE374:
 1638              	.LBE378:
 1639              	.LBB379:
 1640              	.LBB377:
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1641              		.loc 2 4076 103 view .LVU506
 1642 013e 0020     		movs	r0, #0
 1643 0140 EEE7     		b	.L103
 1644              	.LVL114:
 1645              	.L126:
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1646              		.loc 2 4076 103 view .LVU507
 1647              	.LBE377:
 1648              	.LBE379:
2485:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1649              		.loc 1 2485 10 view .LVU508
 1650 0142 A2F58072 		sub	r2, r2, #256
 1651 0146 EFE7     		b	.L104
 1652              	.L105:
2491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 1653              		.loc 1 2491 7 is_stmt 1 view .LVU509
2491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 1654              		.loc 1 2491 16 is_stmt 0 view .LVU510
 1655 0148 DA68     		ldr	r2, [r3, #12]
 1656              	.LVL115:
 1657              	.L107:
2507:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1658              		.loc 1 2507 5 is_stmt 1 view .LVU511
2507:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1659              		.loc 1 2507 8 is_stmt 0 view .LVU512
 1660 014a 51B3     		cbz	r1, .L108
2509:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1661              		.loc 1 2509 7 is_stmt 1 view .LVU513
2509:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1662              		.loc 1 2509 10 is_stmt 0 view .LVU514
 1663 014c 12F0007F 		tst	r2, #33554432
 1664 0150 03D0     		beq	.L109
2509:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1665              		.loc 1 2509 55 discriminator 1 view .LVU515
ARM GAS  /tmp/cc46GlVT.s 			page 228


 1666 0152 30B3     		cbz	r0, .L108
2510:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****            (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL)))
 1667              		.loc 1 2510 60 view .LVU516
 1668 0154 12F4005F 		tst	r2, #8192
 1669 0158 23D1     		bne	.L108
 1670              	.L109:
2514:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 1671              		.loc 1 2514 9 is_stmt 1 view .LVU517
2514:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 1672              		.loc 1 2514 13 is_stmt 0 view .LVU518
 1673 015a 1968     		ldr	r1, [r3]
 1674              	.LVL116:
2514:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 1675              		.loc 1 2514 12 view .LVU519
 1676 015c 11F0400F 		tst	r1, #64
 1677 0160 1FD0     		beq	.L108
2522:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 1678              		.loc 1 2522 11 is_stmt 1 view .LVU520
2522:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 1679              		.loc 1 2522 14 is_stmt 0 view .LVU521
 1680 0162 12F4001F 		tst	r2, #2097152
 1681 0166 1CD1     		bne	.L108
2526:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
 1682              		.loc 1 2526 13 is_stmt 1 view .LVU522
 1683              	.LVL117:
 1684              	.LBB380:
 1685              	.LBI380:
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 1686              		.loc 2 7217 26 view .LVU523
 1687              	.LBB381:
 1688              		.loc 2 7219 3 view .LVU524
 1689              		.loc 2 7219 12 is_stmt 0 view .LVU525
 1690 0168 9A68     		ldr	r2, [r3, #8]
 1691              	.LVL118:
 1692              		.loc 2 7219 76 view .LVU526
 1693 016a 12F0080F 		tst	r2, #8
 1694 016e 10D1     		bne	.L110
 1695              	.LVL119:
 1696              		.loc 2 7219 76 view .LVU527
 1697              	.LBE381:
 1698              	.LBE380:
2529:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1699              		.loc 1 2529 15 is_stmt 1 view .LVU528
 1700 0170 5A68     		ldr	r2, [r3, #4]
 1701 0172 22F06002 		bic	r2, r2, #96
 1702 0176 5A60     		str	r2, [r3, #4]
2532:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1703              		.loc 1 2532 15 view .LVU529
 1704 0178 A36D     		ldr	r3, [r4, #88]
 1705 017a 23F48053 		bic	r3, r3, #4096
 1706 017e A365     		str	r3, [r4, #88]
2534:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               {
 1707              		.loc 1 2534 15 view .LVU530
2534:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               {
 1708              		.loc 1 2534 24 is_stmt 0 view .LVU531
 1709 0180 A36D     		ldr	r3, [r4, #88]
2534:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               {
ARM GAS  /tmp/cc46GlVT.s 			page 229


 1710              		.loc 1 2534 18 view .LVU532
 1711 0182 13F4807F 		tst	r3, #256
 1712 0186 0CD1     		bne	.L108
2536:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               }
 1713              		.loc 1 2536 17 is_stmt 1 view .LVU533
 1714 0188 A36D     		ldr	r3, [r4, #88]
 1715 018a 43F00103 		orr	r3, r3, #1
 1716 018e A365     		str	r3, [r4, #88]
 1717 0190 07E0     		b	.L108
 1718              	.LVL120:
 1719              	.L110:
2542:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1720              		.loc 1 2542 15 view .LVU534
 1721 0192 A36D     		ldr	r3, [r4, #88]
 1722 0194 43F01003 		orr	r3, r3, #16
 1723 0198 A365     		str	r3, [r4, #88]
2545:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             }
 1724              		.loc 1 2545 15 view .LVU535
 1725 019a E36D     		ldr	r3, [r4, #92]
 1726 019c 43F00103 		orr	r3, r3, #1
 1727 01a0 E365     		str	r3, [r4, #92]
 1728              	.L108:
2561:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1729              		.loc 1 2561 5 view .LVU536
 1730 01a2 2046     		mov	r0, r4
 1731              	.LVL121:
2561:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1732              		.loc 1 2561 5 is_stmt 0 view .LVU537
 1733 01a4 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 1734              	.LVL122:
2565:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 1735              		.loc 1 2565 5 is_stmt 1 view .LVU538
 1736 01a8 2368     		ldr	r3, [r4]
 1737 01aa 6022     		movs	r2, #96
 1738 01ac 1A60     		str	r2, [r3]
 1739              	.L100:
2569:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1740              		.loc 1 2569 3 view .LVU539
2569:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1741              		.loc 1 2569 6 is_stmt 0 view .LVU540
 1742 01ae 17F0800F 		tst	r7, #128
 1743 01b2 02D0     		beq	.L112
2569:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1744              		.loc 1 2569 52 discriminator 1 view .LVU541
 1745 01b4 15F0800F 		tst	r5, #128
 1746 01b8 2FD1     		bne	.L127
 1747              	.L112:
2586:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1748              		.loc 1 2586 3 is_stmt 1 view .LVU542
2586:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1749              		.loc 1 2586 6 is_stmt 0 view .LVU543
 1750 01ba 17F4807F 		tst	r7, #256
 1751 01be 02D0     		beq	.L113
2586:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1752              		.loc 1 2586 52 discriminator 1 view .LVU544
 1753 01c0 15F4807F 		tst	r5, #256
 1754 01c4 34D1     		bne	.L128
ARM GAS  /tmp/cc46GlVT.s 			page 230


 1755              	.L113:
2603:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1756              		.loc 1 2603 3 is_stmt 1 view .LVU545
2603:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1757              		.loc 1 2603 6 is_stmt 0 view .LVU546
 1758 01c6 17F4007F 		tst	r7, #512
 1759 01ca 02D0     		beq	.L114
2603:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1760              		.loc 1 2603 52 discriminator 1 view .LVU547
 1761 01cc 15F4007F 		tst	r5, #512
 1762 01d0 3AD1     		bne	.L129
 1763              	.L114:
2620:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1764              		.loc 1 2620 3 is_stmt 1 view .LVU548
2620:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1765              		.loc 1 2620 6 is_stmt 0 view .LVU549
 1766 01d2 17F0100F 		tst	r7, #16
 1767 01d6 19D0     		beq	.L115
2620:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1768              		.loc 1 2620 50 discriminator 1 view .LVU550
 1769 01d8 15F0100F 		tst	r5, #16
 1770 01dc 16D0     		beq	.L115
2628:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1771              		.loc 1 2628 5 is_stmt 1 view .LVU551
2628:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1772              		.loc 1 2628 19 is_stmt 0 view .LVU552
 1773 01de A36B     		ldr	r3, [r4, #56]
2628:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1774              		.loc 1 2628 8 view .LVU553
 1775 01e0 33B1     		cbz	r3, .L116
2636:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 1776              		.loc 1 2636 7 is_stmt 1 view .LVU554
2636:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 1777              		.loc 1 2636 10 is_stmt 0 view .LVU555
 1778 01e2 002E     		cmp	r6, #0
 1779 01e4 3CD0     		beq	.L117
2640:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 1780              		.loc 1 2640 9 is_stmt 1 view .LVU556
 1781              	.LVL123:
 1782              	.LBB382:
 1783              	.LBI382:
6629:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 1784              		.loc 2 6629 26 view .LVU557
 1785              	.LBB383:
6631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1786              		.loc 2 6631 3 view .LVU558
6631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1787              		.loc 2 6631 21 is_stmt 0 view .LVU559
 1788 01e6 214B     		ldr	r3, .L131
 1789 01e8 9B68     		ldr	r3, [r3, #8]
 1790              	.LVL124:
6631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1791              		.loc 2 6631 21 view .LVU560
 1792              	.LBE383:
 1793              	.LBE382:
2640:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 1794              		.loc 1 2640 12 view .LVU561
ARM GAS  /tmp/cc46GlVT.s 			page 231


 1795 01ea 13F4604F 		tst	r3, #57344
 1796 01ee 0AD0     		beq	.L118
 1797              	.L116:
 1798              	.LVL125:
2659:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1799              		.loc 1 2659 7 is_stmt 1 view .LVU562
 1800 01f0 A36D     		ldr	r3, [r4, #88]
 1801 01f2 43F48063 		orr	r3, r3, #1024
 1802 01f6 A365     		str	r3, [r4, #88]
2662:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1803              		.loc 1 2662 7 view .LVU563
 1804 01f8 E36D     		ldr	r3, [r4, #92]
 1805 01fa 43F00203 		orr	r3, r3, #2
 1806 01fe E365     		str	r3, [r4, #92]
2672:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1807              		.loc 1 2672 7 view .LVU564
 1808 0200 2046     		mov	r0, r4
 1809 0202 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1810              	.LVL126:
 1811              	.L118:
2677:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 1812              		.loc 1 2677 5 view .LVU565
 1813 0206 2368     		ldr	r3, [r4]
 1814 0208 1022     		movs	r2, #16
 1815 020a 1A60     		str	r2, [r3]
 1816              	.L115:
2681:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1817              		.loc 1 2681 3 view .LVU566
2681:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1818              		.loc 1 2681 6 is_stmt 0 view .LVU567
 1819 020c 17F4806F 		tst	r7, #1024
 1820 0210 02D0     		beq	.L84
2681:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1821              		.loc 1 2681 54 discriminator 1 view .LVU568
 1822 0212 15F4806F 		tst	r5, #1024
 1823 0216 2DD1     		bne	.L130
 1824              	.L84:
2700:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1825              		.loc 1 2700 1 view .LVU569
 1826 0218 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1827              	.LVL127:
 1828              	.L127:
2572:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1829              		.loc 1 2572 5 is_stmt 1 view .LVU570
 1830 021a A36D     		ldr	r3, [r4, #88]
 1831 021c 43F48033 		orr	r3, r3, #65536
 1832 0220 A365     		str	r3, [r4, #88]
2578:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1833              		.loc 1 2578 5 view .LVU571
 1834 0222 2046     		mov	r0, r4
 1835 0224 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1836              	.LVL128:
2582:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 1837              		.loc 1 2582 5 view .LVU572
 1838 0228 2368     		ldr	r3, [r4]
 1839 022a 8022     		movs	r2, #128
 1840 022c 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc46GlVT.s 			page 232


 1841 022e C4E7     		b	.L112
 1842              	.L128:
2589:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1843              		.loc 1 2589 5 view .LVU573
 1844 0230 A36D     		ldr	r3, [r4, #88]
 1845 0232 43F40033 		orr	r3, r3, #131072
 1846 0236 A365     		str	r3, [r4, #88]
2595:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1847              		.loc 1 2595 5 view .LVU574
 1848 0238 2046     		mov	r0, r4
 1849 023a FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1850              	.LVL129:
2599:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 1851              		.loc 1 2599 5 view .LVU575
 1852 023e 2368     		ldr	r3, [r4]
 1853 0240 4FF48072 		mov	r2, #256
 1854 0244 1A60     		str	r2, [r3]
 1855 0246 BEE7     		b	.L113
 1856              	.L129:
2606:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1857              		.loc 1 2606 5 view .LVU576
 1858 0248 A36D     		ldr	r3, [r4, #88]
 1859 024a 43F48023 		orr	r3, r3, #262144
 1860 024e A365     		str	r3, [r4, #88]
2612:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1861              		.loc 1 2612 5 view .LVU577
 1862 0250 2046     		mov	r0, r4
 1863 0252 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 1864              	.LVL130:
2616:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 1865              		.loc 1 2616 5 view .LVU578
 1866 0256 2368     		ldr	r3, [r4]
 1867 0258 4FF40072 		mov	r2, #512
 1868 025c 1A60     		str	r2, [r3]
 1869 025e B8E7     		b	.L114
 1870              	.L117:
2649:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 1871              		.loc 1 2649 9 view .LVU579
2649:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 1872              		.loc 1 2649 18 is_stmt 0 view .LVU580
 1873 0260 2368     		ldr	r3, [r4]
2649:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 1874              		.loc 1 2649 28 view .LVU581
 1875 0262 DB68     		ldr	r3, [r3, #12]
2649:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 1876              		.loc 1 2649 12 view .LVU582
 1877 0264 13F0010F 		tst	r3, #1
 1878 0268 CDD0     		beq	.L118
 1879 026a C1E7     		b	.L116
 1880              	.L132:
 1881              		.align	2
 1882              	.L131:
 1883 026c 00830242 		.word	1107460864
 1884 0270 00810242 		.word	1107460352
 1885              	.LVL131:
 1886              	.L130:
2684:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 233


 1887              		.loc 1 2684 5 is_stmt 1 view .LVU583
 1888 0274 A36D     		ldr	r3, [r4, #88]
 1889 0276 43F48043 		orr	r3, r3, #16384
 1890 027a A365     		str	r3, [r4, #88]
2687:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1891              		.loc 1 2687 5 view .LVU584
 1892 027c E36D     		ldr	r3, [r4, #92]
 1893 027e 43F00803 		orr	r3, r3, #8
 1894 0282 E365     		str	r3, [r4, #92]
2690:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1895              		.loc 1 2690 5 view .LVU585
 1896 0284 2368     		ldr	r3, [r4]
 1897 0286 4FF48062 		mov	r2, #1024
 1898 028a 1A60     		str	r2, [r3]
2696:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1899              		.loc 1 2696 5 view .LVU586
 1900 028c 2046     		mov	r0, r4
 1901 028e FFF7FEFF 		bl	HAL_ADCEx_InjectedQueueOverflowCallback
 1902              	.LVL132:
2700:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1903              		.loc 1 2700 1 is_stmt 0 view .LVU587
 1904 0292 C1E7     		b	.L84
 1905              		.cfi_endproc
 1906              	.LFE376:
 1908              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1909              		.align	1
 1910              		.global	ADC_DMAConvCplt
 1911              		.syntax unified
 1912              		.thumb
 1913              		.thumb_func
 1914              		.fpu fpv4-sp-d16
 1916              	ADC_DMAConvCplt:
 1917              	.LVL133:
 1918              	.LFB388:
3648:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1919              		.loc 1 3648 1 is_stmt 1 view -0
 1920              		.cfi_startproc
 1921              		@ args = 0, pretend = 0, frame = 0
 1922              		@ frame_needed = 0, uses_anonymous_args = 0
3648:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1923              		.loc 1 3648 1 is_stmt 0 view .LVU589
 1924 0000 08B5     		push	{r3, lr}
 1925              	.LCFI8:
 1926              		.cfi_def_cfa_offset 8
 1927              		.cfi_offset 3, -8
 1928              		.cfi_offset 14, -4
 1929 0002 0346     		mov	r3, r0
3650:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1930              		.loc 1 3650 3 is_stmt 1 view .LVU590
3650:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1931              		.loc 1 3650 22 is_stmt 0 view .LVU591
 1932 0004 C06D     		ldr	r0, [r0, #92]
 1933              	.LVL134:
3653:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1934              		.loc 1 3653 3 is_stmt 1 view .LVU592
3653:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1935              		.loc 1 3653 12 is_stmt 0 view .LVU593
ARM GAS  /tmp/cc46GlVT.s 			page 234


 1936 0006 826D     		ldr	r2, [r0, #88]
3653:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 1937              		.loc 1 3653 6 view .LVU594
 1938 0008 12F0500F 		tst	r2, #80
 1939 000c 30D1     		bne	.L134
3656:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1940              		.loc 1 3656 5 is_stmt 1 view .LVU595
 1941 000e 836D     		ldr	r3, [r0, #88]
 1942              	.LVL135:
3656:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 1943              		.loc 1 3656 5 is_stmt 0 view .LVU596
 1944 0010 43F40073 		orr	r3, r3, #512
 1945 0014 8365     		str	r3, [r0, #88]
3662:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1946              		.loc 1 3662 5 is_stmt 1 view .LVU597
3662:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1947              		.loc 1 3662 14 is_stmt 0 view .LVU598
 1948 0016 0368     		ldr	r3, [r0]
3662:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1949              		.loc 1 3662 24 view .LVU599
 1950 0018 1A68     		ldr	r2, [r3]
3662:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 1951              		.loc 1 3662 8 view .LVU600
 1952 001a 12F0080F 		tst	r2, #8
 1953 001e 14D0     		beq	.L135
3665:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 1954              		.loc 1 3665 7 is_stmt 1 view .LVU601
 1955              	.LVL136:
 1956              	.LBB384:
 1957              	.LBI384:
4074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 1958              		.loc 2 4074 26 view .LVU602
 1959              	.LBB385:
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1960              		.loc 2 4076 3 view .LVU603
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1961              		.loc 2 4076 12 is_stmt 0 view .LVU604
 1962 0020 DA68     		ldr	r2, [r3, #12]
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1963              		.loc 2 4076 103 view .LVU605
 1964 0022 12F4406F 		tst	r2, #3072
 1965 0026 20D1     		bne	.L136
 1966              	.LVL137:
4076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 1967              		.loc 2 4076 103 view .LVU606
 1968              	.LBE385:
 1969              	.LBE384:
3668:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 1970              		.loc 1 3668 9 is_stmt 1 view .LVU607
3668:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 1971              		.loc 1 3668 13 is_stmt 0 view .LVU608
 1972 0028 DB68     		ldr	r3, [r3, #12]
3668:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 1973              		.loc 1 3668 12 view .LVU609
 1974 002a 13F4005F 		tst	r3, #8192
 1975 002e 1CD1     		bne	.L136
3671:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
ARM GAS  /tmp/cc46GlVT.s 			page 235


 1976              		.loc 1 3671 11 is_stmt 1 view .LVU610
 1977 0030 836D     		ldr	r3, [r0, #88]
 1978 0032 23F48073 		bic	r3, r3, #256
 1979 0036 8365     		str	r3, [r0, #88]
3672:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 1980              		.loc 1 3672 11 view .LVU611
3672:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 1981              		.loc 1 3672 20 is_stmt 0 view .LVU612
 1982 0038 836D     		ldr	r3, [r0, #88]
3672:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 1983              		.loc 1 3672 14 view .LVU613
 1984 003a 13F4805F 		tst	r3, #4096
 1985 003e 14D1     		bne	.L136
3674:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
 1986              		.loc 1 3674 13 is_stmt 1 view .LVU614
 1987 0040 836D     		ldr	r3, [r0, #88]
 1988 0042 43F00103 		orr	r3, r3, #1
 1989 0046 8365     		str	r3, [r0, #88]
 1990 0048 0FE0     		b	.L136
 1991              	.L135:
3683:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 1992              		.loc 1 3683 7 view .LVU615
3683:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 1993              		.loc 1 3683 11 is_stmt 0 view .LVU616
 1994 004a DB68     		ldr	r3, [r3, #12]
3683:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 1995              		.loc 1 3683 10 view .LVU617
 1996 004c 13F0020F 		tst	r3, #2
 1997 0050 0BD1     		bne	.L136
3686:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 1998              		.loc 1 3686 9 is_stmt 1 view .LVU618
 1999 0052 836D     		ldr	r3, [r0, #88]
 2000 0054 23F48073 		bic	r3, r3, #256
 2001 0058 8365     		str	r3, [r0, #88]
3687:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 2002              		.loc 1 3687 9 view .LVU619
3687:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 2003              		.loc 1 3687 18 is_stmt 0 view .LVU620
 2004 005a 836D     		ldr	r3, [r0, #88]
3687:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 2005              		.loc 1 3687 12 view .LVU621
 2006 005c 13F4805F 		tst	r3, #4096
 2007 0060 03D1     		bne	.L136
3689:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 2008              		.loc 1 3689 11 is_stmt 1 view .LVU622
 2009 0062 836D     		ldr	r3, [r0, #88]
 2010 0064 43F00103 		orr	r3, r3, #1
 2011 0068 8365     		str	r3, [r0, #88]
 2012              	.L136:
3698:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2013              		.loc 1 3698 5 view .LVU623
 2014 006a FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 2015              	.LVL138:
 2016              	.L133:
3718:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2017              		.loc 1 3718 1 is_stmt 0 view .LVU624
 2018 006e 08BD     		pop	{r3, pc}
ARM GAS  /tmp/cc46GlVT.s 			page 236


 2019              	.LVL139:
 2020              	.L134:
3703:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 2021              		.loc 1 3703 5 is_stmt 1 view .LVU625
3703:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 2022              		.loc 1 3703 14 is_stmt 0 view .LVU626
 2023 0070 826D     		ldr	r2, [r0, #88]
3703:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 2024              		.loc 1 3703 8 view .LVU627
 2025 0072 12F0100F 		tst	r2, #16
 2026 0076 04D1     		bne	.L140
3715:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 2027              		.loc 1 3715 7 is_stmt 1 view .LVU628
3715:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 2028              		.loc 1 3715 11 is_stmt 0 view .LVU629
 2029 0078 026D     		ldr	r2, [r0, #80]
3715:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 2030              		.loc 1 3715 23 view .LVU630
 2031 007a 926E     		ldr	r2, [r2, #104]
3715:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 2032              		.loc 1 3715 7 view .LVU631
 2033 007c 1846     		mov	r0, r3
 2034              	.LVL140:
3715:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 2035              		.loc 1 3715 7 view .LVU632
 2036 007e 9047     		blx	r2
 2037              	.LVL141:
3718:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2038              		.loc 1 3718 1 view .LVU633
 2039 0080 F5E7     		b	.L133
 2040              	.LVL142:
 2041              	.L140:
3709:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2042              		.loc 1 3709 7 is_stmt 1 view .LVU634
 2043 0082 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2044              	.LVL143:
3709:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2045              		.loc 1 3709 7 is_stmt 0 view .LVU635
 2046 0086 F2E7     		b	.L133
 2047              		.cfi_endproc
 2048              	.LFE388:
 2050              		.section	.text.ADC_DMAError,"ax",%progbits
 2051              		.align	1
 2052              		.global	ADC_DMAError
 2053              		.syntax unified
 2054              		.thumb
 2055              		.thumb_func
 2056              		.fpu fpv4-sp-d16
 2058              	ADC_DMAError:
 2059              	.LVL144:
 2060              	.LFB390:
3737:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3738:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** /**
3739:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @brief  DMA error callback.
3740:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3741:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   * @retval None
3742:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   */
ARM GAS  /tmp/cc46GlVT.s 			page 237


3743:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)
3744:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** {
 2061              		.loc 1 3744 1 is_stmt 1 view -0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 0
 2064              		@ frame_needed = 0, uses_anonymous_args = 0
 2065              		.loc 1 3744 1 is_stmt 0 view .LVU637
 2066 0000 08B5     		push	{r3, lr}
 2067              	.LCFI9:
 2068              		.cfi_def_cfa_offset 8
 2069              		.cfi_offset 3, -8
 2070              		.cfi_offset 14, -4
3745:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3746:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2071              		.loc 1 3746 3 is_stmt 1 view .LVU638
 2072              		.loc 1 3746 22 is_stmt 0 view .LVU639
 2073 0002 C06D     		ldr	r0, [r0, #92]
 2074              	.LVL145:
3747:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3748:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Set ADC state */
3749:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 2075              		.loc 1 3749 3 is_stmt 1 view .LVU640
 2076 0004 836D     		ldr	r3, [r0, #88]
 2077 0006 43F04003 		orr	r3, r3, #64
 2078 000a 8365     		str	r3, [r0, #88]
3750:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3751:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Set ADC error code to DMA error */
3752:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 2079              		.loc 1 3752 3 view .LVU641
 2080 000c C36D     		ldr	r3, [r0, #92]
 2081 000e 43F00403 		orr	r3, r3, #4
 2082 0012 C365     		str	r3, [r0, #92]
3753:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
3754:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Error callback */
3755:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3756:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
3757:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #else
3758:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 2083              		.loc 1 3758 3 view .LVU642
 2084 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2085              	.LVL146:
3759:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3760:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 2086              		.loc 1 3760 1 is_stmt 0 view .LVU643
 2087 0018 08BD     		pop	{r3, pc}
 2088              		.cfi_endproc
 2089              	.LFE390:
 2091              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 2092              		.align	1
 2093              		.global	HAL_ADC_ConfigChannel
 2094              		.syntax unified
 2095              		.thumb
 2096              		.thumb_func
 2097              		.fpu fpv4-sp-d16
 2099              	HAL_ADC_ConfigChannel:
 2100              	.LVL147:
 2101              	.LFB381:
ARM GAS  /tmp/cc46GlVT.s 			page 238


2806:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2102              		.loc 1 2806 1 is_stmt 1 view -0
 2103              		.cfi_startproc
 2104              		@ args = 0, pretend = 0, frame = 8
 2105              		@ frame_needed = 0, uses_anonymous_args = 0
2806:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2106              		.loc 1 2806 1 is_stmt 0 view .LVU645
 2107 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2108              	.LCFI10:
 2109              		.cfi_def_cfa_offset 20
 2110              		.cfi_offset 4, -20
 2111              		.cfi_offset 5, -16
 2112              		.cfi_offset 6, -12
 2113              		.cfi_offset 7, -8
 2114              		.cfi_offset 14, -4
 2115 0002 83B0     		sub	sp, sp, #12
 2116              	.LCFI11:
 2117              		.cfi_def_cfa_offset 32
2807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2118              		.loc 1 2807 3 is_stmt 1 view .LVU646
 2119              	.LVL148:
2808:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2120              		.loc 1 2808 3 view .LVU647
2809:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 2121              		.loc 1 2809 3 view .LVU648
2810:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 2122              		.loc 1 2810 3 view .LVU649
2810:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 2123              		.loc 1 2810 17 is_stmt 0 view .LVU650
 2124 0004 0022     		movs	r2, #0
 2125 0006 0192     		str	r2, [sp, #4]
2811:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 2126              		.loc 1 2811 3 is_stmt 1 view .LVU651
2812:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2127              		.loc 1 2812 3 view .LVU652
2815:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(pConfig->Rank));
 2128              		.loc 1 2815 3 view .LVU653
2816:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(pConfig->SamplingTime));
 2129              		.loc 1 2816 3 view .LVU654
2817:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(pConfig->SingleDiff));
 2130              		.loc 1 2817 3 view .LVU655
2818:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(pConfig->OffsetNumber));
 2131              		.loc 1 2818 3 view .LVU656
2819:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pConfig->Offset));
 2132              		.loc 1 2819 3 view .LVU657
2820:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2133              		.loc 1 2820 3 view .LVU658
2824:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2134              		.loc 1 2824 3 view .LVU659
2827:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 2135              		.loc 1 2827 3 view .LVU660
2833:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 2136              		.loc 1 2833 5 view .LVU661
2837:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2137              		.loc 1 2837 3 view .LVU662
2837:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2138              		.loc 1 2837 3 view .LVU663
ARM GAS  /tmp/cc46GlVT.s 			page 239


 2139 0008 90F85420 		ldrb	r2, [r0, #84]	@ zero_extendqisi2
 2140 000c 012A     		cmp	r2, #1
 2141 000e 00F07C82 		beq	.L199
 2142 0012 0346     		mov	r3, r0
2837:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2143              		.loc 1 2837 3 discriminator 2 view .LVU664
 2144 0014 0122     		movs	r2, #1
 2145 0016 80F85420 		strb	r2, [r0, #84]
2837:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2146              		.loc 1 2837 3 discriminator 2 view .LVU665
2844:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 2147              		.loc 1 2844 3 discriminator 2 view .LVU666
2844:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 2148              		.loc 1 2844 42 is_stmt 0 discriminator 2 view .LVU667
 2149 001a 0268     		ldr	r2, [r0]
 2150              	.LVL149:
 2151              	.LBB494:
 2152              	.LBI494:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2153              		.loc 2 6991 26 is_stmt 1 discriminator 2 view .LVU668
 2154              	.LBB495:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2155              		.loc 2 6993 3 discriminator 2 view .LVU669
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2156              		.loc 2 6993 12 is_stmt 0 discriminator 2 view .LVU670
 2157 001c 9268     		ldr	r2, [r2, #8]
 2158              	.LVL150:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2159              		.loc 2 6993 74 discriminator 2 view .LVU671
 2160 001e 12F0040F 		tst	r2, #4
 2161 0022 09D0     		beq	.L145
 2162              	.LVL151:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2163              		.loc 2 6993 74 discriminator 2 view .LVU672
 2164              	.LBE495:
 2165              	.LBE494:
3021:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2166              		.loc 1 3021 5 is_stmt 1 view .LVU673
 2167 0024 826D     		ldr	r2, [r0, #88]
 2168 0026 42F02002 		orr	r2, r2, #32
 2169 002a 8265     		str	r2, [r0, #88]
3023:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 2170              		.loc 1 3023 5 view .LVU674
 2171              	.LVL152:
3023:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 2172              		.loc 1 3023 20 is_stmt 0 view .LVU675
 2173 002c 0120     		movs	r0, #1
 2174              	.LVL153:
 2175              	.L146:
3027:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2176              		.loc 1 3027 3 is_stmt 1 view .LVU676
3027:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2177              		.loc 1 3027 3 view .LVU677
 2178 002e 0022     		movs	r2, #0
 2179 0030 83F85420 		strb	r2, [r3, #84]
3027:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2180              		.loc 1 3027 3 view .LVU678
ARM GAS  /tmp/cc46GlVT.s 			page 240


3030:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 2181              		.loc 1 3030 3 view .LVU679
 2182              	.LVL154:
 2183              	.L144:
3031:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2184              		.loc 1 3031 1 is_stmt 0 view .LVU680
 2185 0034 03B0     		add	sp, sp, #12
 2186              	.LCFI12:
 2187              		.cfi_remember_state
 2188              		.cfi_def_cfa_offset 20
 2189              		@ sp needed
 2190 0036 F0BD     		pop	{r4, r5, r6, r7, pc}
 2191              	.LVL155:
 2192              	.L145:
 2193              	.LCFI13:
 2194              		.cfi_restore_state
2846:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 2195              		.loc 1 2846 5 is_stmt 1 view .LVU681
2846:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 2196              		.loc 1 2846 16 is_stmt 0 view .LVU682
 2197 0038 0A68     		ldr	r2, [r1]
2846:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 2198              		.loc 1 2846 8 view .LVU683
 2199 003a 012A     		cmp	r2, #1
 2200 003c 00F0AD80 		beq	.L218
 2201              	.LVL156:
 2202              	.L147:
2852:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2203              		.loc 1 2852 5 is_stmt 1 view .LVU684
 2204 0040 1D68     		ldr	r5, [r3]
 2205 0042 4C68     		ldr	r4, [r1, #4]
 2206              	.LVL157:
 2207              	.LBB496:
 2208              	.LBI496:
4406:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2209              		.loc 2 4406 22 view .LVU685
 2210              	.LBB497:
4412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQRX_REGO
 2211              		.loc 2 4412 3 view .LVU686
4412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQRX_REGO
 2212              		.loc 2 4412 25 is_stmt 0 view .LVU687
 2213 0044 3035     		adds	r5, r5, #48
 2214              	.LVL158:
4412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQRX_REGO
 2215              		.loc 2 4412 25 view .LVU688
 2216 0046 220A     		lsrs	r2, r4, #8
 2217 0048 9200     		lsls	r2, r2, #2
 2218 004a 02F00C02 		and	r2, r2, #12
 2219              	.LVL159:
4415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2220              		.loc 2 4415 3 is_stmt 1 view .LVU689
 2221 004e A858     		ldr	r0, [r5, r2]
 2222 0050 04F01F0E 		and	lr, r4, #31
 2223 0054 1F24     		movs	r4, #31
 2224              	.LVL160:
4415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2225              		.loc 2 4415 3 is_stmt 0 view .LVU690
ARM GAS  /tmp/cc46GlVT.s 			page 241


 2226 0056 04FA0EF4 		lsl	r4, r4, lr
 2227 005a 20EA0400 		bic	r0, r0, r4
 2228 005e 0C68     		ldr	r4, [r1]
 2229 0060 C4F3846C 		ubfx	ip, r4, #26, #5
 2230 0064 0CFA0EFC 		lsl	ip, ip, lr
 2231 0068 40EA0C00 		orr	r0, r0, ip
 2232 006c A850     		str	r0, [r5, r2]
 2233              	.LVL161:
4415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2234              		.loc 2 4415 3 view .LVU691
 2235              	.LBE497:
 2236              	.LBE496:
2859:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 2237              		.loc 1 2859 5 is_stmt 1 view .LVU692
2859:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 2238              		.loc 1 2859 81 is_stmt 0 view .LVU693
 2239 006e 1868     		ldr	r0, [r3]
 2240              	.LVL162:
 2241              	.LBB498:
 2242              	.LBI498:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2243              		.loc 2 6991 26 is_stmt 1 view .LVU694
 2244              	.LBB499:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2245              		.loc 2 6993 3 view .LVU695
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2246              		.loc 2 6993 12 is_stmt 0 view .LVU696
 2247 0070 8268     		ldr	r2, [r0, #8]
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2248              		.loc 2 6993 74 view .LVU697
 2249 0072 12F00402 		ands	r2, r2, #4
 2250 0076 00D0     		beq	.L148
 2251 0078 0122     		movs	r2, #1
 2252              	.L148:
 2253              	.LVL163:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2254              		.loc 2 6993 74 view .LVU698
 2255              	.LBE499:
 2256              	.LBE498:
2860:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 2257              		.loc 1 2860 5 is_stmt 1 view .LVU699
 2258              	.LBB500:
 2259              	.LBI500:
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2260              		.loc 2 7217 26 view .LVU700
 2261              	.LBB501:
 2262              		.loc 2 7219 3 view .LVU701
 2263              		.loc 2 7219 12 is_stmt 0 view .LVU702
 2264 007a 8468     		ldr	r4, [r0, #8]
 2265              		.loc 2 7219 76 view .LVU703
 2266 007c 14F00804 		ands	r4, r4, #8
 2267 0080 00D0     		beq	.L149
 2268 0082 0124     		movs	r4, #1
 2269              	.L149:
 2270              	.LVL164:
 2271              		.loc 2 7219 76 view .LVU704
 2272              	.LBE501:
ARM GAS  /tmp/cc46GlVT.s 			page 242


 2273              	.LBE500:
2861:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 2274              		.loc 1 2861 5 is_stmt 1 view .LVU705
2861:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 2275              		.loc 1 2861 8 is_stmt 0 view .LVU706
 2276 0084 002A     		cmp	r2, #0
 2277 0086 50D1     		bne	.L150
2862:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        )
 2278              		.loc 1 2862 9 view .LVU707
 2279 0088 002C     		cmp	r4, #0
 2280 008a 4ED1     		bne	.L150
2866:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 2281              		.loc 1 2866 7 is_stmt 1 view .LVU708
2866:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 2282              		.loc 1 2866 18 is_stmt 0 view .LVU709
 2283 008c 8D68     		ldr	r5, [r1, #8]
2866:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 2284              		.loc 1 2866 10 view .LVU710
 2285 008e B5F1004F 		cmp	r5, #-2147483648
 2286 0092 00F08A80 		beq	.L219
2877:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2287              		.loc 1 2877 9 is_stmt 1 view .LVU711
 2288 0096 0F68     		ldr	r7, [r1]
 2289              	.LVL165:
 2290              	.LBB502:
 2291              	.LBI502:
5499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2292              		.loc 2 5499 22 view .LVU712
 2293              	.LBB503:
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 2294              		.loc 2 5505 3 view .LVU713
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 2295              		.loc 2 5505 25 is_stmt 0 view .LVU714
 2296 0098 1430     		adds	r0, r0, #20
 2297              	.LVL166:
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 2298              		.loc 2 5505 25 view .LVU715
 2299 009a 7A0E     		lsrs	r2, r7, #25
 2300              	.LVL167:
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 2301              		.loc 2 5505 25 view .LVU716
 2302 009c 9200     		lsls	r2, r2, #2
 2303 009e 02F00402 		and	r2, r2, #4
 2304              	.LVL168:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2305              		.loc 2 5508 3 is_stmt 1 view .LVU717
 2306 00a2 8658     		ldr	r6, [r0, r2]
 2307 00a4 C7F3045E 		ubfx	lr, r7, #20, #5
 2308 00a8 4FF0070C 		mov	ip, #7
 2309 00ac 0CFA0EFC 		lsl	ip, ip, lr
 2310 00b0 26EA0C0C 		bic	ip, r6, ip
 2311 00b4 05FA0EF5 		lsl	r5, r5, lr
 2312              	.LVL169:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2313              		.loc 2 5508 3 is_stmt 0 view .LVU718
 2314 00b8 4CEA0505 		orr	r5, ip, r5
 2315 00bc 8550     		str	r5, [r0, r2]
ARM GAS  /tmp/cc46GlVT.s 			page 243


 2316              	.LVL170:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2317              		.loc 2 5508 3 view .LVU719
 2318              	.LBE503:
 2319              	.LBE502:
2880:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 2320              		.loc 1 2880 9 is_stmt 1 view .LVU720
 2321 00be 1868     		ldr	r0, [r3]
 2322              	.LVL171:
 2323              	.LBB504:
 2324              	.LBI504:
3927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2325              		.loc 2 3927 22 view .LVU721
 2326              	.LBB505:
3929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2327              		.loc 2 3929 3 view .LVU722
 2328 00c0 4269     		ldr	r2, [r0, #20]
 2329 00c2 22F00042 		bic	r2, r2, #-2147483648
 2330 00c6 4261     		str	r2, [r0, #20]
 2331              	.LVL172:
 2332              	.L152:
3929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2333              		.loc 2 3929 3 is_stmt 0 view .LVU723
 2334              	.LBE505:
 2335              	.LBE504:
2887:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2336              		.loc 1 2887 7 is_stmt 1 view .LVU724
2887:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2337              		.loc 1 2887 26 is_stmt 0 view .LVU725
 2338 00c8 4D69     		ldr	r5, [r1, #20]
 2339 00ca 1868     		ldr	r0, [r3]
 2340 00cc C268     		ldr	r2, [r0, #12]
 2341 00ce C2F3C102 		ubfx	r2, r2, #3, #2
 2342 00d2 5200     		lsls	r2, r2, #1
2887:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2343              		.loc 1 2887 24 view .LVU726
 2344 00d4 05FA02F2 		lsl	r2, r5, r2
 2345              	.LVL173:
2889:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 2346              		.loc 1 2889 7 is_stmt 1 view .LVU727
2889:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 2347              		.loc 1 2889 18 is_stmt 0 view .LVU728
 2348 00d8 0E69     		ldr	r6, [r1, #16]
2889:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 2349              		.loc 1 2889 10 view .LVU729
 2350 00da 042E     		cmp	r6, #4
 2351 00dc 7DD0     		beq	.L153
2892:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2352              		.loc 1 2892 9 is_stmt 1 view .LVU730
 2353              	.LVL174:
 2354              	.LBB506:
 2355              	.LBI506:
3639:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2356              		.loc 2 3639 22 view .LVU731
 2357              	.LBB507:
3641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2358              		.loc 2 3641 3 view .LVU732
ARM GAS  /tmp/cc46GlVT.s 			page 244


3641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2359              		.loc 2 3641 25 is_stmt 0 view .LVU733
 2360 00de 6030     		adds	r0, r0, #96
 2361              	.LVL175:
3643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2362              		.loc 2 3643 3 is_stmt 1 view .LVU734
 2363 00e0 50F82670 		ldr	r7, [r0, r6, lsl #2]
 2364 00e4 AC4D     		ldr	r5, .L233
 2365 00e6 3D40     		ands	r5, r5, r7
 2366 00e8 0F68     		ldr	r7, [r1]
 2367 00ea 07F0F847 		and	r7, r7, #2080374784
 2368 00ee 3A43     		orrs	r2, r2, r7
 2369              	.LVL176:
3643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2370              		.loc 2 3643 3 is_stmt 0 view .LVU735
 2371 00f0 1543     		orrs	r5, r5, r2
 2372 00f2 45F00045 		orr	r5, r5, #-2147483648
 2373 00f6 40F82650 		str	r5, [r0, r6, lsl #2]
 2374              	.LVL177:
3643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2375              		.loc 2 3643 3 view .LVU736
 2376              	.LBE507:
 2377              	.LBE506:
2894:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         assert_param(IS_FUNCTIONAL_STATE(pConfig->OffsetSaturation));
 2378              		.loc 1 2894 9 is_stmt 1 view .LVU737
2895:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* Set ADC selected offset sign & saturation */
 2379              		.loc 1 2895 9 view .LVU738
2897:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         LL_ADC_SetOffsetSaturation(hadc->Instance, pConfig->OffsetNumber,
 2380              		.loc 1 2897 9 view .LVU739
 2381 00fa 1A68     		ldr	r2, [r3]
 2382 00fc 0E69     		ldr	r6, [r1, #16]
 2383 00fe 8869     		ldr	r0, [r1, #24]
 2384              	.LVL178:
 2385              	.LBB508:
 2386              	.LBI508:
3824:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2387              		.loc 2 3824 22 view .LVU740
 2388              	.LBB509:
3826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2389              		.loc 2 3826 3 view .LVU741
3826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2390              		.loc 2 3826 25 is_stmt 0 view .LVU742
 2391 0100 6032     		adds	r2, r2, #96
 2392              	.LVL179:
3828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
 2393              		.loc 2 3828 3 is_stmt 1 view .LVU743
 2394 0102 52F82650 		ldr	r5, [r2, r6, lsl #2]
 2395 0106 25F08075 		bic	r5, r5, #16777216
 2396 010a 2843     		orrs	r0, r0, r5
 2397              	.LVL180:
3828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
 2398              		.loc 2 3828 3 is_stmt 0 view .LVU744
 2399 010c 42F82600 		str	r0, [r2, r6, lsl #2]
 2400              	.LVL181:
3828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
 2401              		.loc 2 3828 3 view .LVU745
 2402              	.LBE509:
ARM GAS  /tmp/cc46GlVT.s 			page 245


 2403              	.LBE508:
2898:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                    (pConfig->OffsetSaturation == ENABLE) ?
 2404              		.loc 1 2898 9 is_stmt 1 view .LVU746
 2405 0110 1A68     		ldr	r2, [r3]
 2406 0112 0D69     		ldr	r5, [r1, #16]
2899:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                    LL_ADC_OFFSET_SATURATION_ENABLE : LL_ADC_OFFSET_SATURATION_DISAB
 2407              		.loc 1 2899 44 is_stmt 0 view .LVU747
 2408 0114 087F     		ldrb	r0, [r1, #28]	@ zero_extendqisi2
2898:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                    (pConfig->OffsetSaturation == ENABLE) ?
 2409              		.loc 1 2898 9 view .LVU748
 2410 0116 0128     		cmp	r0, #1
 2411 0118 5CD0     		beq	.L220
 2412              	.LVL182:
 2413              	.L154:
 2414              	.LBB510:
 2415              	.LBI510:
3879:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2416              		.loc 2 3879 22 is_stmt 1 discriminator 4 view .LVU749
 2417              	.LBB511:
3881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2418              		.loc 2 3881 3 discriminator 4 view .LVU750
3881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2419              		.loc 2 3881 25 is_stmt 0 discriminator 4 view .LVU751
 2420 011a 6032     		adds	r2, r2, #96
 2421              	.LVL183:
3883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_SATEN,
 2422              		.loc 2 3883 3 is_stmt 1 discriminator 4 view .LVU752
 2423 011c 52F82500 		ldr	r0, [r2, r5, lsl #2]
 2424 0120 20F00070 		bic	r0, r0, #33554432
 2425 0124 0443     		orrs	r4, r4, r0
 2426              	.LVL184:
3883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_SATEN,
 2427              		.loc 2 3883 3 is_stmt 0 discriminator 4 view .LVU753
 2428 0126 42F82540 		str	r4, [r2, r5, lsl #2]
 2429              	.LVL185:
 2430              	.L150:
3883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_SATEN,
 2431              		.loc 2 3883 3 discriminator 4 view .LVU754
 2432              	.LBE511:
 2433              	.LBE510:
2932:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 2434              		.loc 1 2932 5 is_stmt 1 view .LVU755
2932:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 2435              		.loc 1 2932 30 is_stmt 0 view .LVU756
 2436 012a 1868     		ldr	r0, [r3]
 2437              	.LVL186:
 2438              	.LBB512:
 2439              	.LBI512:
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2440              		.loc 2 6869 26 is_stmt 1 view .LVU757
 2441              	.LBB513:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2442              		.loc 2 6871 3 view .LVU758
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2443              		.loc 2 6871 12 is_stmt 0 view .LVU759
 2444 012c 8268     		ldr	r2, [r0, #8]
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
ARM GAS  /tmp/cc46GlVT.s 			page 246


 2445              		.loc 2 6871 68 view .LVU760
 2446 012e 12F0010F 		tst	r2, #1
 2447 0132 17D1     		bne	.L170
 2448              	.LVL187:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2449              		.loc 2 6871 68 view .LVU761
 2450              	.LBE513:
 2451              	.LBE512:
2935:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2452              		.loc 1 2935 7 is_stmt 1 view .LVU762
 2453 0134 0A68     		ldr	r2, [r1]
 2454 0136 CD68     		ldr	r5, [r1, #12]
 2455              	.LVL188:
 2456              	.LBB514:
 2457              	.LBI514:
5646:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2458              		.loc 2 5646 22 view .LVU763
 2459              	.LBB515:
5651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2460              		.loc 2 5651 3 view .LVU764
 2461 0138 D0F8B040 		ldr	r4, [r0, #176]
 2462 013c C2F3130C 		ubfx	ip, r2, #0, #20
 2463 0140 24EA0C04 		bic	r4, r4, ip
 2464 0144 05F0180C 		and	ip, r5, #24
 2465 0148 944D     		ldr	r5, .L233+4
 2466              	.LVL189:
5651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2467              		.loc 2 5651 3 is_stmt 0 view .LVU765
 2468 014a 25FA0CF5 		lsr	r5, r5, ip
 2469 014e 2A40     		ands	r2, r2, r5
 2470              	.LVL190:
5651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2471              		.loc 2 5651 3 view .LVU766
 2472 0150 C2F31302 		ubfx	r2, r2, #0, #20
 2473 0154 2243     		orrs	r2, r2, r4
 2474 0156 C0F8B020 		str	r2, [r0, #176]
 2475              	.LVL191:
5651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2476              		.loc 2 5651 3 view .LVU767
 2477              	.LBE515:
 2478              	.LBE514:
2938:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 2479              		.loc 1 2938 7 is_stmt 1 view .LVU768
2938:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 2480              		.loc 1 2938 18 is_stmt 0 view .LVU769
 2481 015a C868     		ldr	r0, [r1, #12]
2938:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 2482              		.loc 1 2938 10 view .LVU770
 2483 015c 904A     		ldr	r2, .L233+8
 2484 015e 9042     		cmp	r0, r2
 2485 0160 00F0A380 		beq	.L221
 2486              	.L170:
2957:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 2487              		.loc 1 2957 5 is_stmt 1 view .LVU771
2957:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 2488              		.loc 1 2957 9 is_stmt 0 view .LVU772
 2489 0164 0A68     		ldr	r2, [r1]
ARM GAS  /tmp/cc46GlVT.s 			page 247


2957:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 2490              		.loc 1 2957 8 view .LVU773
 2491 0166 8F49     		ldr	r1, .L233+12
 2492              	.LVL192:
2957:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 2493              		.loc 1 2957 8 view .LVU774
 2494 0168 0A42     		tst	r2, r1
 2495 016a 00F0CA81 		beq	.L211
2959:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2496              		.loc 1 2959 7 is_stmt 1 view .LVU775
 2497              	.LVL193:
 2498              	.LBB516:
 2499              	.LBI516:
3234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2500              		.loc 2 3234 26 view .LVU776
 2501              	.LBB517:
3236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2502              		.loc 2 3236 3 view .LVU777
3236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2503              		.loc 2 3236 21 is_stmt 0 view .LVU778
 2504 016e 8E49     		ldr	r1, .L233+16
 2505 0170 8968     		ldr	r1, [r1, #8]
3236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2506              		.loc 2 3236 10 view .LVU779
 2507 0172 01F0E074 		and	r4, r1, #29360128
 2508              	.LVL194:
3236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2509              		.loc 2 3236 10 view .LVU780
 2510              	.LBE517:
 2511              	.LBE516:
2963:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2512              		.loc 1 2963 7 is_stmt 1 view .LVU781
2963:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2513              		.loc 1 2963 10 is_stmt 0 view .LVU782
 2514 0176 8D48     		ldr	r0, .L233+20
 2515 0178 8242     		cmp	r2, r0
 2516 017a 00F06781 		beq	.L222
 2517              	.L194:
2983:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
 2518              		.loc 1 2983 12 is_stmt 1 view .LVU783
2983:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
 2519              		.loc 1 2983 15 is_stmt 0 view .LVU784
 2520 017e 8C48     		ldr	r0, .L233+24
 2521 0180 8242     		cmp	r2, r0
 2522 0182 00F08781 		beq	.L223
 2523              	.L197:
2992:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2524              		.loc 1 2992 12 is_stmt 1 view .LVU785
2992:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2525              		.loc 1 2992 15 is_stmt 0 view .LVU786
 2526 0186 8B48     		ldr	r0, .L233+28
 2527 0188 8242     		cmp	r2, r0
 2528 018a 00F09A81 		beq	.L224
 2529              	.L198:
3001:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 2530              		.loc 1 3001 12 is_stmt 1 view .LVU787
3001:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
ARM GAS  /tmp/cc46GlVT.s 			page 248


 2531              		.loc 1 3001 15 is_stmt 0 view .LVU788
 2532 018e 8A49     		ldr	r1, .L233+32
 2533 0190 8A42     		cmp	r2, r1
 2534 0192 00F0AA81 		beq	.L225
2807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2535              		.loc 1 2807 21 view .LVU789
 2536 0196 0020     		movs	r0, #0
 2537 0198 49E7     		b	.L146
 2538              	.LVL195:
 2539              	.L218:
2848:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 2540              		.loc 1 2848 7 is_stmt 1 view .LVU790
 2541              	.LBB518:
 2542              	.LBI518:
3309:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2543              		.loc 2 3309 22 view .LVU791
 2544              	.LBB519:
3312:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADC1->OR, ADC_OR_OP0);
 2545              		.loc 2 3312 3 view .LVU792
3313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2546              		.loc 2 3313 3 view .LVU793
 2547 019a 8848     		ldr	r0, .L233+36
 2548              	.LVL196:
3313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2549              		.loc 2 3313 3 is_stmt 0 view .LVU794
 2550 019c D0F8C820 		ldr	r2, [r0, #200]
 2551 01a0 42F00102 		orr	r2, r2, #1
 2552 01a4 C0F8C820 		str	r2, [r0, #200]
 2553              	.LVL197:
3314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2554              		.loc 2 3314 1 view .LVU795
 2555 01a8 4AE7     		b	.L147
 2556              	.LVL198:
 2557              	.L219:
3314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2558              		.loc 2 3314 1 view .LVU796
 2559              	.LBE519:
 2560              	.LBE518:
2869:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 2561              		.loc 1 2869 9 is_stmt 1 view .LVU797
 2562 01aa 0D68     		ldr	r5, [r1]
 2563              	.LVL199:
 2564              	.LBB520:
 2565              	.LBI520:
5499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2566              		.loc 2 5499 22 view .LVU798
 2567              	.LBB521:
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 2568              		.loc 2 5505 3 view .LVU799
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 2569              		.loc 2 5505 25 is_stmt 0 view .LVU800
 2570 01ac 1430     		adds	r0, r0, #20
 2571              	.LVL200:
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 2572              		.loc 2 5505 25 view .LVU801
 2573 01ae 6A0E     		lsrs	r2, r5, #25
 2574              	.LVL201:
ARM GAS  /tmp/cc46GlVT.s 			page 249


5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 2575              		.loc 2 5505 25 view .LVU802
 2576 01b0 9200     		lsls	r2, r2, #2
 2577 01b2 02F00402 		and	r2, r2, #4
 2578              	.LVL202:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2579              		.loc 2 5508 3 is_stmt 1 view .LVU803
 2580 01b6 8658     		ldr	r6, [r0, r2]
 2581 01b8 C5F30455 		ubfx	r5, r5, #20, #5
 2582              	.LVL203:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2583              		.loc 2 5508 3 is_stmt 0 view .LVU804
 2584 01bc 0727     		movs	r7, #7
 2585 01be 07FA05F5 		lsl	r5, r7, r5
 2586 01c2 26EA0505 		bic	r5, r6, r5
 2587 01c6 8550     		str	r5, [r0, r2]
 2588              	.LVL204:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2589              		.loc 2 5508 3 view .LVU805
 2590              	.LBE521:
 2591              	.LBE520:
2872:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 2592              		.loc 1 2872 9 is_stmt 1 view .LVU806
 2593 01c8 1868     		ldr	r0, [r3]
 2594              	.LVL205:
 2595              	.LBB522:
 2596              	.LBI522:
3927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2597              		.loc 2 3927 22 view .LVU807
 2598              	.LBB523:
3929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2599              		.loc 2 3929 3 view .LVU808
 2600 01ca 4269     		ldr	r2, [r0, #20]
 2601 01cc 42F00042 		orr	r2, r2, #-2147483648
 2602 01d0 4261     		str	r2, [r0, #20]
3930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2603              		.loc 2 3930 1 is_stmt 0 view .LVU809
 2604 01d2 79E7     		b	.L152
 2605              	.LVL206:
 2606              	.L220:
3930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2607              		.loc 2 3930 1 view .LVU810
 2608              	.LBE523:
 2609              	.LBE522:
2898:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                    (pConfig->OffsetSaturation == ENABLE) ?
 2610              		.loc 1 2898 9 view .LVU811
 2611 01d4 4FF00074 		mov	r4, #33554432
 2612              	.LVL207:
2898:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                    (pConfig->OffsetSaturation == ENABLE) ?
 2613              		.loc 1 2898 9 view .LVU812
 2614 01d8 9FE7     		b	.L154
 2615              	.LVL208:
 2616              	.L153:
2906:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 2617              		.loc 1 2906 9 is_stmt 1 view .LVU813
 2618              	.LBB524:
 2619              	.LBI524:
ARM GAS  /tmp/cc46GlVT.s 			page 250


3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2620              		.loc 2 3710 26 view .LVU814
 2621              	.LBB525:
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2622              		.loc 2 3712 3 view .LVU815
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2623              		.loc 2 3714 3 view .LVU816
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2624              		.loc 2 3714 10 is_stmt 0 view .LVU817
 2625 01da 026E     		ldr	r2, [r0, #96]
 2626              	.LVL209:
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2627              		.loc 2 3714 10 view .LVU818
 2628              	.LBE525:
 2629              	.LBE524:
 2630              	.LBB526:
 2631              	.LBI526:
3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2632              		.loc 2 3710 26 is_stmt 1 view .LVU819
 2633              	.LBB527:
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2634              		.loc 2 3712 3 view .LVU820
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2635              		.loc 2 3714 3 view .LVU821
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2636              		.loc 2 3714 10 is_stmt 0 view .LVU822
 2637 01dc 046E     		ldr	r4, [r0, #96]
 2638              	.LVL210:
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2639              		.loc 2 3714 10 view .LVU823
 2640              	.LBE527:
 2641              	.LBE526:
2906:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 2642              		.loc 1 2906 13 view .LVU824
 2643 01de C4F38464 		ubfx	r4, r4, #26, #5
2907:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 2644              		.loc 1 2907 16 view .LVU825
 2645 01e2 0A68     		ldr	r2, [r1]
 2646 01e4 C2F31305 		ubfx	r5, r2, #0, #20
2907:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 2647              		.loc 1 2907 16 view .LVU826
 2648 01e8 85BB     		cbnz	r5, .L155
2907:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 2649              		.loc 1 2907 16 discriminator 1 view .LVU827
 2650 01ea C2F38462 		ubfx	r2, r2, #26, #5
 2651              	.L156:
2906:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 2652              		.loc 1 2906 12 view .LVU828
 2653 01ee 9442     		cmp	r4, r2
 2654 01f0 34D0     		beq	.L226
 2655              	.L158:
2911:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 2656              		.loc 1 2911 9 is_stmt 1 view .LVU829
2911:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 2657              		.loc 1 2911 13 is_stmt 0 view .LVU830
 2658 01f2 1C68     		ldr	r4, [r3]
 2659              	.LVL211:
ARM GAS  /tmp/cc46GlVT.s 			page 251


 2660              	.LBB528:
 2661              	.LBI528:
3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2662              		.loc 2 3710 26 is_stmt 1 view .LVU831
 2663              	.LBB529:
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2664              		.loc 2 3712 3 view .LVU832
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2665              		.loc 2 3714 3 view .LVU833
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2666              		.loc 2 3714 10 is_stmt 0 view .LVU834
 2667 01f4 626E     		ldr	r2, [r4, #100]
 2668              	.LVL212:
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2669              		.loc 2 3714 10 view .LVU835
 2670              	.LBE529:
 2671              	.LBE528:
 2672              	.LBB530:
 2673              	.LBI530:
3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2674              		.loc 2 3710 26 is_stmt 1 view .LVU836
 2675              	.LBB531:
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2676              		.loc 2 3712 3 view .LVU837
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2677              		.loc 2 3714 3 view .LVU838
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2678              		.loc 2 3714 10 is_stmt 0 view .LVU839
 2679 01f6 606E     		ldr	r0, [r4, #100]
 2680              	.LVL213:
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2681              		.loc 2 3714 10 view .LVU840
 2682              	.LBE531:
 2683              	.LBE530:
2911:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 2684              		.loc 1 2911 13 view .LVU841
 2685 01f8 C0F38460 		ubfx	r0, r0, #26, #5
2912:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 2686              		.loc 1 2912 16 view .LVU842
 2687 01fc 0A68     		ldr	r2, [r1]
 2688 01fe C2F31305 		ubfx	r5, r2, #0, #20
 2689 0202 85BB     		cbnz	r5, .L159
2912:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 2690              		.loc 1 2912 16 discriminator 1 view .LVU843
 2691 0204 C2F38462 		ubfx	r2, r2, #26, #5
 2692              	.L160:
2911:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 2693              		.loc 1 2911 12 view .LVU844
 2694 0208 9042     		cmp	r0, r2
 2695 020a 34D0     		beq	.L227
 2696              	.L162:
2916:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 2697              		.loc 1 2916 9 is_stmt 1 view .LVU845
2916:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 2698              		.loc 1 2916 13 is_stmt 0 view .LVU846
 2699 020c 1C68     		ldr	r4, [r3]
 2700              	.LVL214:
ARM GAS  /tmp/cc46GlVT.s 			page 252


 2701              	.LBB532:
 2702              	.LBI532:
3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2703              		.loc 2 3710 26 is_stmt 1 view .LVU847
 2704              	.LBB533:
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2705              		.loc 2 3712 3 view .LVU848
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2706              		.loc 2 3714 3 view .LVU849
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2707              		.loc 2 3714 10 is_stmt 0 view .LVU850
 2708 020e A26E     		ldr	r2, [r4, #104]
 2709              	.LVL215:
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2710              		.loc 2 3714 10 view .LVU851
 2711              	.LBE533:
 2712              	.LBE532:
 2713              	.LBB534:
 2714              	.LBI534:
3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2715              		.loc 2 3710 26 is_stmt 1 view .LVU852
 2716              	.LBB535:
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2717              		.loc 2 3712 3 view .LVU853
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2718              		.loc 2 3714 3 view .LVU854
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2719              		.loc 2 3714 10 is_stmt 0 view .LVU855
 2720 0210 A06E     		ldr	r0, [r4, #104]
 2721              	.LVL216:
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2722              		.loc 2 3714 10 view .LVU856
 2723              	.LBE535:
 2724              	.LBE534:
2916:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 2725              		.loc 1 2916 13 view .LVU857
 2726 0212 C0F38460 		ubfx	r0, r0, #26, #5
2917:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 2727              		.loc 1 2917 16 view .LVU858
 2728 0216 0A68     		ldr	r2, [r1]
 2729 0218 C2F31305 		ubfx	r5, r2, #0, #20
 2730 021c 85BB     		cbnz	r5, .L163
2917:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 2731              		.loc 1 2917 16 discriminator 1 view .LVU859
 2732 021e C2F38462 		ubfx	r2, r2, #26, #5
 2733              	.L164:
2916:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 2734              		.loc 1 2916 12 view .LVU860
 2735 0222 9042     		cmp	r0, r2
 2736 0224 34D0     		beq	.L228
 2737              	.L166:
2921:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 2738              		.loc 1 2921 9 is_stmt 1 view .LVU861
2921:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 2739              		.loc 1 2921 13 is_stmt 0 view .LVU862
 2740 0226 1C68     		ldr	r4, [r3]
 2741              	.LVL217:
ARM GAS  /tmp/cc46GlVT.s 			page 253


 2742              	.LBB536:
 2743              	.LBI536:
3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2744              		.loc 2 3710 26 is_stmt 1 view .LVU863
 2745              	.LBB537:
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2746              		.loc 2 3712 3 view .LVU864
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2747              		.loc 2 3714 3 view .LVU865
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2748              		.loc 2 3714 10 is_stmt 0 view .LVU866
 2749 0228 E26E     		ldr	r2, [r4, #108]
 2750              	.LVL218:
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2751              		.loc 2 3714 10 view .LVU867
 2752              	.LBE537:
 2753              	.LBE536:
 2754              	.LBB538:
 2755              	.LBI538:
3710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2756              		.loc 2 3710 26 is_stmt 1 view .LVU868
 2757              	.LBB539:
3712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2758              		.loc 2 3712 3 view .LVU869
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2759              		.loc 2 3714 3 view .LVU870
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2760              		.loc 2 3714 10 is_stmt 0 view .LVU871
 2761 022a E06E     		ldr	r0, [r4, #108]
 2762              	.LVL219:
3714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 2763              		.loc 2 3714 10 view .LVU872
 2764              	.LBE539:
 2765              	.LBE538:
2921:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 2766              		.loc 1 2921 13 view .LVU873
 2767 022c C0F38460 		ubfx	r0, r0, #26, #5
2922:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 2768              		.loc 1 2922 16 view .LVU874
 2769 0230 0A68     		ldr	r2, [r1]
 2770 0232 C2F31305 		ubfx	r5, r2, #0, #20
 2771 0236 85BB     		cbnz	r5, .L167
2922:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 2772              		.loc 1 2922 16 discriminator 1 view .LVU875
 2773 0238 C2F38462 		ubfx	r2, r2, #26, #5
 2774              	.L168:
2921:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 2775              		.loc 1 2921 12 view .LVU876
 2776 023c 9042     		cmp	r0, r2
 2777 023e 7FF474AF 		bne	.L150
2924:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 2778              		.loc 1 2924 11 is_stmt 1 view .LVU877
 2779              	.LVL220:
 2780              	.LBB540:
 2781              	.LBI540:
3769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2782              		.loc 2 3769 22 view .LVU878
ARM GAS  /tmp/cc46GlVT.s 			page 254


 2783              	.LBB541:
3771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2784              		.loc 2 3771 3 view .LVU879
3773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2785              		.loc 2 3773 3 view .LVU880
 2786 0242 E26E     		ldr	r2, [r4, #108]
 2787 0244 22F00042 		bic	r2, r2, #-2147483648
 2788 0248 E266     		str	r2, [r4, #108]
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2789              		.loc 2 3776 1 is_stmt 0 view .LVU881
 2790 024a 6EE7     		b	.L150
 2791              	.LVL221:
 2792              	.L155:
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2793              		.loc 2 3776 1 view .LVU882
 2794              	.LBE541:
 2795              	.LBE540:
 2796              	.LBB542:
 2797              	.LBI542:
 2798              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc46GlVT.s 			page 255


  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  /tmp/cc46GlVT.s 			page 256


  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
ARM GAS  /tmp/cc46GlVT.s 			page 257


 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
ARM GAS  /tmp/cc46GlVT.s 			page 258


 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
ARM GAS  /tmp/cc46GlVT.s 			page 259


 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
ARM GAS  /tmp/cc46GlVT.s 			page 260


 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 2799              		.loc 3 373 31 is_stmt 1 discriminator 2 view .LVU883
 2800              	.LBB543:
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 2801              		.loc 3 375 3 discriminator 2 view .LVU884
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc46GlVT.s 			page 261


 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2802              		.loc 3 380 4 discriminator 2 view .LVU885
 2803              		.syntax unified
 2804              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2805 024c 92FAA2F2 		rbit r2, r2
 2806              	@ 0 "" 2
 2807              	.LVL222:
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 2808              		.loc 3 393 3 discriminator 2 view .LVU886
 2809              		.loc 3 393 3 is_stmt 0 discriminator 2 view .LVU887
 2810              		.thumb
 2811              		.syntax unified
 2812              	.LBE543:
 2813              	.LBE542:
 2814              	.LBB544:
 2815              	.LBI544:
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 2816              		.loc 3 403 30 is_stmt 1 discriminator 2 view .LVU888
 2817              	.LBB545:
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 2818              		.loc 3 414 3 discriminator 2 view .LVU889
 2819              		.loc 3 414 6 is_stmt 0 discriminator 2 view .LVU890
 2820 0250 12B1     		cbz	r2, .L200
ARM GAS  /tmp/cc46GlVT.s 			page 262


 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 2821              		.loc 3 418 3 is_stmt 1 view .LVU891
 2822              		.loc 3 418 10 is_stmt 0 view .LVU892
 2823 0252 B2FA82F2 		clz	r2, r2
 2824              	.LVL223:
 2825              		.loc 3 418 10 view .LVU893
 2826 0256 CAE7     		b	.L156
 2827              	.LVL224:
 2828              	.L200:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2829              		.loc 3 416 12 view .LVU894
 2830 0258 2022     		movs	r2, #32
 2831              	.LVL225:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2832              		.loc 3 416 12 view .LVU895
 2833 025a C8E7     		b	.L156
 2834              	.L226:
 2835              	.LBE545:
 2836              	.LBE544:
2909:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 2837              		.loc 1 2909 11 is_stmt 1 view .LVU896
 2838              	.LVL226:
 2839              	.LBB546:
 2840              	.LBI546:
3769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2841              		.loc 2 3769 22 view .LVU897
 2842              	.LBB547:
3771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2843              		.loc 2 3771 3 view .LVU898
3773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2844              		.loc 2 3773 3 view .LVU899
 2845 025c 026E     		ldr	r2, [r0, #96]
 2846 025e 22F00042 		bic	r2, r2, #-2147483648
 2847 0262 0266     		str	r2, [r0, #96]
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2848              		.loc 2 3776 1 is_stmt 0 view .LVU900
 2849 0264 C5E7     		b	.L158
 2850              	.LVL227:
 2851              	.L159:
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2852              		.loc 2 3776 1 view .LVU901
 2853              	.LBE547:
 2854              	.LBE546:
 2855              	.LBB548:
 2856              	.LBI548:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2857              		.loc 3 373 31 is_stmt 1 discriminator 2 view .LVU902
 2858              	.LBB549:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2859              		.loc 3 375 3 discriminator 2 view .LVU903
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2860              		.loc 3 380 4 discriminator 2 view .LVU904
 2861              		.syntax unified
 2862              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/cc46GlVT.s 			page 263


 2863 0266 92FAA2F2 		rbit r2, r2
 2864              	@ 0 "" 2
 2865              	.LVL228:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2866              		.loc 3 393 3 discriminator 2 view .LVU905
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2867              		.loc 3 393 3 is_stmt 0 discriminator 2 view .LVU906
 2868              		.thumb
 2869              		.syntax unified
 2870              	.LBE549:
 2871              	.LBE548:
 2872              	.LBB550:
 2873              	.LBI550:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2874              		.loc 3 403 30 is_stmt 1 discriminator 2 view .LVU907
 2875              	.LBB551:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2876              		.loc 3 414 3 discriminator 2 view .LVU908
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2877              		.loc 3 414 6 is_stmt 0 discriminator 2 view .LVU909
 2878 026a 12B1     		cbz	r2, .L201
 2879              		.loc 3 418 3 is_stmt 1 view .LVU910
 2880              		.loc 3 418 10 is_stmt 0 view .LVU911
 2881 026c B2FA82F2 		clz	r2, r2
 2882              	.LVL229:
 2883              		.loc 3 418 10 view .LVU912
 2884 0270 CAE7     		b	.L160
 2885              	.LVL230:
 2886              	.L201:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2887              		.loc 3 416 12 view .LVU913
 2888 0272 2022     		movs	r2, #32
 2889              	.LVL231:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2890              		.loc 3 416 12 view .LVU914
 2891 0274 C8E7     		b	.L160
 2892              	.L227:
 2893              	.LBE551:
 2894              	.LBE550:
2914:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 2895              		.loc 1 2914 11 is_stmt 1 view .LVU915
 2896              	.LVL232:
 2897              	.LBB552:
 2898              	.LBI552:
3769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2899              		.loc 2 3769 22 view .LVU916
 2900              	.LBB553:
3771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2901              		.loc 2 3771 3 view .LVU917
3773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2902              		.loc 2 3773 3 view .LVU918
 2903 0276 626E     		ldr	r2, [r4, #100]
 2904 0278 22F00042 		bic	r2, r2, #-2147483648
 2905 027c 6266     		str	r2, [r4, #100]
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2906              		.loc 2 3776 1 is_stmt 0 view .LVU919
 2907 027e C5E7     		b	.L162
ARM GAS  /tmp/cc46GlVT.s 			page 264


 2908              	.LVL233:
 2909              	.L163:
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2910              		.loc 2 3776 1 view .LVU920
 2911              	.LBE553:
 2912              	.LBE552:
 2913              	.LBB554:
 2914              	.LBI554:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2915              		.loc 3 373 31 is_stmt 1 discriminator 2 view .LVU921
 2916              	.LBB555:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2917              		.loc 3 375 3 discriminator 2 view .LVU922
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2918              		.loc 3 380 4 discriminator 2 view .LVU923
 2919              		.syntax unified
 2920              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2921 0280 92FAA2F2 		rbit r2, r2
 2922              	@ 0 "" 2
 2923              	.LVL234:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2924              		.loc 3 393 3 discriminator 2 view .LVU924
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2925              		.loc 3 393 3 is_stmt 0 discriminator 2 view .LVU925
 2926              		.thumb
 2927              		.syntax unified
 2928              	.LBE555:
 2929              	.LBE554:
 2930              	.LBB556:
 2931              	.LBI556:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2932              		.loc 3 403 30 is_stmt 1 discriminator 2 view .LVU926
 2933              	.LBB557:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2934              		.loc 3 414 3 discriminator 2 view .LVU927
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2935              		.loc 3 414 6 is_stmt 0 discriminator 2 view .LVU928
 2936 0284 12B1     		cbz	r2, .L202
 2937              		.loc 3 418 3 is_stmt 1 view .LVU929
 2938              		.loc 3 418 10 is_stmt 0 view .LVU930
 2939 0286 B2FA82F2 		clz	r2, r2
 2940              	.LVL235:
 2941              		.loc 3 418 10 view .LVU931
 2942 028a CAE7     		b	.L164
 2943              	.LVL236:
 2944              	.L202:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2945              		.loc 3 416 12 view .LVU932
 2946 028c 2022     		movs	r2, #32
 2947              	.LVL237:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2948              		.loc 3 416 12 view .LVU933
 2949 028e C8E7     		b	.L164
 2950              	.L228:
 2951              	.LBE557:
 2952              	.LBE556:
2919:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
ARM GAS  /tmp/cc46GlVT.s 			page 265


 2953              		.loc 1 2919 11 is_stmt 1 view .LVU934
 2954              	.LVL238:
 2955              	.LBB558:
 2956              	.LBI558:
3769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 2957              		.loc 2 3769 22 view .LVU935
 2958              	.LBB559:
3771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2959              		.loc 2 3771 3 view .LVU936
3773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2960              		.loc 2 3773 3 view .LVU937
 2961 0290 A26E     		ldr	r2, [r4, #104]
 2962 0292 22F00042 		bic	r2, r2, #-2147483648
 2963 0296 A266     		str	r2, [r4, #104]
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2964              		.loc 2 3776 1 is_stmt 0 view .LVU938
 2965 0298 C5E7     		b	.L166
 2966              	.LVL239:
 2967              	.L167:
3776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 2968              		.loc 2 3776 1 view .LVU939
 2969              	.LBE559:
 2970              	.LBE558:
 2971              	.LBB560:
 2972              	.LBI560:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2973              		.loc 3 373 31 is_stmt 1 discriminator 2 view .LVU940
 2974              	.LBB561:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2975              		.loc 3 375 3 discriminator 2 view .LVU941
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2976              		.loc 3 380 4 discriminator 2 view .LVU942
 2977              		.syntax unified
 2978              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2979 029a 92FAA2F2 		rbit r2, r2
 2980              	@ 0 "" 2
 2981              	.LVL240:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2982              		.loc 3 393 3 discriminator 2 view .LVU943
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2983              		.loc 3 393 3 is_stmt 0 discriminator 2 view .LVU944
 2984              		.thumb
 2985              		.syntax unified
 2986              	.LBE561:
 2987              	.LBE560:
 2988              	.LBB562:
 2989              	.LBI562:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2990              		.loc 3 403 30 is_stmt 1 discriminator 2 view .LVU945
 2991              	.LBB563:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2992              		.loc 3 414 3 discriminator 2 view .LVU946
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2993              		.loc 3 414 6 is_stmt 0 discriminator 2 view .LVU947
 2994 029e 12B1     		cbz	r2, .L203
 2995              		.loc 3 418 3 is_stmt 1 view .LVU948
 2996              		.loc 3 418 10 is_stmt 0 view .LVU949
ARM GAS  /tmp/cc46GlVT.s 			page 266


 2997 02a0 B2FA82F2 		clz	r2, r2
 2998              	.LVL241:
 2999              		.loc 3 418 10 view .LVU950
 3000 02a4 CAE7     		b	.L168
 3001              	.LVL242:
 3002              	.L203:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3003              		.loc 3 416 12 view .LVU951
 3004 02a6 2022     		movs	r2, #32
 3005              	.LVL243:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3006              		.loc 3 416 12 view .LVU952
 3007 02a8 C8E7     		b	.L168
 3008              	.L221:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3009              		.loc 3 416 12 view .LVU953
 3010              	.LBE563:
 3011              	.LBE562:
2942:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 3012              		.loc 1 2942 9 is_stmt 1 view .LVU954
 3013 02aa 1C68     		ldr	r4, [r3]
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3014              		.loc 1 2943 50 is_stmt 0 view .LVU955
 3015 02ac 0A68     		ldr	r2, [r1]
 3016 02ae C2F31305 		ubfx	r5, r2, #0, #20
 3017 02b2 002D     		cmp	r5, #0
 3018 02b4 38D1     		bne	.L171
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3019              		.loc 1 2943 50 discriminator 1 view .LVU956
 3020 02b6 900E     		lsrs	r0, r2, #26
 3021 02b8 0130     		adds	r0, r0, #1
 3022 02ba 00F01F00 		and	r0, r0, #31
 3023 02be 0928     		cmp	r0, #9
 3024 02c0 8CBF     		ite	hi
 3025 02c2 0020     		movhi	r0, #0
 3026 02c4 0120     		movls	r0, #1
 3027              	.L172:
2942:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 3028              		.loc 1 2942 9 view .LVU957
 3029 02c6 0028     		cmp	r0, #0
 3030 02c8 7AD0     		beq	.L174
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3031              		.loc 1 2943 50 view .LVU958
 3032 02ca 002D     		cmp	r5, #0
 3033 02cc 3BD1     		bne	.L175
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3034              		.loc 1 2943 50 discriminator 3 view .LVU959
 3035 02ce 900E     		lsrs	r0, r2, #26
 3036 02d0 0130     		adds	r0, r0, #1
 3037 02d2 8006     		lsls	r0, r0, #26
 3038 02d4 00F0F840 		and	r0, r0, #2080374784
 3039              	.L176:
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3040              		.loc 1 2943 50 discriminator 6 view .LVU960
 3041 02d8 002D     		cmp	r5, #0
 3042 02da 40D1     		bne	.L178
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
ARM GAS  /tmp/cc46GlVT.s 			page 267


 3043              		.loc 1 2943 50 discriminator 7 view .LVU961
 3044 02dc 960E     		lsrs	r6, r2, #26
 3045 02de 0136     		adds	r6, r6, #1
 3046 02e0 06F01F07 		and	r7, r6, #31
 3047 02e4 0126     		movs	r6, #1
 3048 02e6 BE40     		lsls	r6, r6, r7
 3049              	.L179:
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3050              		.loc 1 2943 50 discriminator 10 view .LVU962
 3051 02e8 3043     		orrs	r0, r0, r6
 3052 02ea 002D     		cmp	r5, #0
 3053 02ec 45D1     		bne	.L181
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3054              		.loc 1 2943 50 discriminator 11 view .LVU963
 3055 02ee 920E     		lsrs	r2, r2, #26
 3056 02f0 0132     		adds	r2, r2, #1
 3057 02f2 02F01F02 		and	r2, r2, #31
 3058 02f6 02EB4202 		add	r2, r2, r2, lsl #1
 3059 02fa 1205     		lsls	r2, r2, #20
 3060              	.L182:
2942:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 3061              		.loc 1 2942 9 view .LVU964
 3062 02fc 0243     		orrs	r2, r2, r0
 3063              	.L184:
2942:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 3064              		.loc 1 2942 9 discriminator 1 view .LVU965
 3065 02fe 8868     		ldr	r0, [r1, #8]
 3066              	.LVL244:
 3067              	.LBB564:
 3068              	.LBI564:
5499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3069              		.loc 2 5499 22 is_stmt 1 discriminator 1 view .LVU966
 3070              	.LBB565:
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 3071              		.loc 2 5505 3 discriminator 1 view .LVU967
5505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
 3072              		.loc 2 5505 25 is_stmt 0 discriminator 1 view .LVU968
 3073 0300 04F11406 		add	r6, r4, #20
 3074 0304 550E     		lsrs	r5, r2, #25
 3075 0306 AD00     		lsls	r5, r5, #2
 3076 0308 05F00405 		and	r5, r5, #4
 3077              	.LVL245:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 3078              		.loc 2 5508 3 is_stmt 1 discriminator 1 view .LVU969
 3079 030c 7459     		ldr	r4, [r6, r5]
 3080              	.LVL246:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 3081              		.loc 2 5508 3 is_stmt 0 discriminator 1 view .LVU970
 3082 030e C2F30452 		ubfx	r2, r2, #20, #5
 3083              	.LVL247:
5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 3084              		.loc 2 5508 3 discriminator 1 view .LVU971
 3085 0312 4FF0070C 		mov	ip, #7
 3086 0316 0CFA02FC 		lsl	ip, ip, r2
 3087 031a 24EA0C0C 		bic	ip, r4, ip
 3088 031e 9040     		lsls	r0, r0, r2
 3089              	.LVL248:
ARM GAS  /tmp/cc46GlVT.s 			page 268


5508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 3090              		.loc 2 5508 3 discriminator 1 view .LVU972
 3091 0320 4CEA0000 		orr	r0, ip, r0
 3092 0324 7051     		str	r0, [r6, r5]
 3093              	.LVL249:
5511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3094              		.loc 2 5511 1 discriminator 1 view .LVU973
 3095 0326 1DE7     		b	.L170
 3096              	.LVL250:
 3097              	.L171:
5511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3098              		.loc 2 5511 1 discriminator 1 view .LVU974
 3099              	.LBE565:
 3100              	.LBE564:
 3101              	.LBB566:
 3102              	.LBI566:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3103              		.loc 3 373 31 is_stmt 1 discriminator 2 view .LVU975
 3104              	.LBB567:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3105              		.loc 3 375 3 discriminator 2 view .LVU976
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3106              		.loc 3 380 4 discriminator 2 view .LVU977
 3107              		.syntax unified
 3108              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3109 0328 92FAA2F0 		rbit r0, r2
 3110              	@ 0 "" 2
 3111              	.LVL251:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3112              		.loc 3 393 3 discriminator 2 view .LVU978
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3113              		.loc 3 393 3 is_stmt 0 discriminator 2 view .LVU979
 3114              		.thumb
 3115              		.syntax unified
 3116              	.LBE567:
 3117              	.LBE566:
 3118              	.LBB568:
 3119              	.LBI568:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3120              		.loc 3 403 30 is_stmt 1 discriminator 2 view .LVU980
 3121              	.LBB569:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3122              		.loc 3 414 3 discriminator 2 view .LVU981
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3123              		.loc 3 414 6 is_stmt 0 discriminator 2 view .LVU982
 3124 032c 48B1     		cbz	r0, .L204
 3125              		.loc 3 418 3 is_stmt 1 view .LVU983
 3126              		.loc 3 418 10 is_stmt 0 view .LVU984
 3127 032e B0FA80F0 		clz	r0, r0
 3128              	.LVL252:
 3129              	.L173:
 3130              		.loc 3 418 10 view .LVU985
 3131              	.LBE569:
 3132              	.LBE568:
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3133              		.loc 1 2943 50 view .LVU986
 3134 0332 0130     		adds	r0, r0, #1
ARM GAS  /tmp/cc46GlVT.s 			page 269


 3135 0334 00F01F00 		and	r0, r0, #31
 3136 0338 0928     		cmp	r0, #9
 3137 033a 8CBF     		ite	hi
 3138 033c 0020     		movhi	r0, #0
 3139 033e 0120     		movls	r0, #1
 3140 0340 C1E7     		b	.L172
 3141              	.LVL253:
 3142              	.L204:
 3143              	.LBB571:
 3144              	.LBB570:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3145              		.loc 3 416 12 view .LVU987
 3146 0342 2020     		movs	r0, #32
 3147              	.LVL254:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3148              		.loc 3 416 12 view .LVU988
 3149 0344 F5E7     		b	.L173
 3150              	.L175:
 3151              	.LVL255:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3152              		.loc 3 416 12 view .LVU989
 3153              	.LBE570:
 3154              	.LBE571:
 3155              	.LBB572:
 3156              	.LBI572:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3157              		.loc 3 373 31 is_stmt 1 discriminator 4 view .LVU990
 3158              	.LBB573:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3159              		.loc 3 375 3 discriminator 4 view .LVU991
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3160              		.loc 3 380 4 discriminator 4 view .LVU992
 3161              		.syntax unified
 3162              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3163 0346 92FAA2F0 		rbit r0, r2
 3164              	@ 0 "" 2
 3165              	.LVL256:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3166              		.loc 3 393 3 discriminator 4 view .LVU993
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3167              		.loc 3 393 3 is_stmt 0 discriminator 4 view .LVU994
 3168              		.thumb
 3169              		.syntax unified
 3170              	.LBE573:
 3171              	.LBE572:
 3172              	.LBB574:
 3173              	.LBI574:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3174              		.loc 3 403 30 is_stmt 1 discriminator 4 view .LVU995
 3175              	.LBB575:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3176              		.loc 3 414 3 discriminator 4 view .LVU996
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3177              		.loc 3 414 6 is_stmt 0 discriminator 4 view .LVU997
 3178 034a 30B1     		cbz	r0, .L205
 3179              		.loc 3 418 3 is_stmt 1 view .LVU998
 3180              		.loc 3 418 10 is_stmt 0 view .LVU999
ARM GAS  /tmp/cc46GlVT.s 			page 270


 3181 034c B0FA80F0 		clz	r0, r0
 3182              	.LVL257:
 3183              	.L177:
 3184              		.loc 3 418 10 view .LVU1000
 3185              	.LBE575:
 3186              	.LBE574:
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3187              		.loc 1 2943 50 view .LVU1001
 3188 0350 0130     		adds	r0, r0, #1
 3189 0352 8006     		lsls	r0, r0, #26
 3190 0354 00F0F840 		and	r0, r0, #2080374784
 3191 0358 BEE7     		b	.L176
 3192              	.LVL258:
 3193              	.L205:
 3194              	.LBB577:
 3195              	.LBB576:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3196              		.loc 3 416 12 view .LVU1002
 3197 035a 2020     		movs	r0, #32
 3198              	.LVL259:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3199              		.loc 3 416 12 view .LVU1003
 3200 035c F8E7     		b	.L177
 3201              	.L178:
 3202              	.LVL260:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3203              		.loc 3 416 12 view .LVU1004
 3204              	.LBE576:
 3205              	.LBE577:
 3206              	.LBB578:
 3207              	.LBI578:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3208              		.loc 3 373 31 is_stmt 1 discriminator 8 view .LVU1005
 3209              	.LBB579:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3210              		.loc 3 375 3 discriminator 8 view .LVU1006
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3211              		.loc 3 380 4 discriminator 8 view .LVU1007
 3212              		.syntax unified
 3213              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3214 035e 92FAA2F6 		rbit r6, r2
 3215              	@ 0 "" 2
 3216              	.LVL261:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3217              		.loc 3 393 3 discriminator 8 view .LVU1008
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3218              		.loc 3 393 3 is_stmt 0 discriminator 8 view .LVU1009
 3219              		.thumb
 3220              		.syntax unified
 3221              	.LBE579:
 3222              	.LBE578:
 3223              	.LBB580:
 3224              	.LBI580:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3225              		.loc 3 403 30 is_stmt 1 discriminator 8 view .LVU1010
 3226              	.LBB581:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  /tmp/cc46GlVT.s 			page 271


 3227              		.loc 3 414 3 discriminator 8 view .LVU1011
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3228              		.loc 3 414 6 is_stmt 0 discriminator 8 view .LVU1012
 3229 0362 46B1     		cbz	r6, .L206
 3230              		.loc 3 418 3 is_stmt 1 view .LVU1013
 3231              		.loc 3 418 10 is_stmt 0 view .LVU1014
 3232 0364 B6FA86F6 		clz	r6, r6
 3233              	.LVL262:
 3234              	.L180:
 3235              		.loc 3 418 10 view .LVU1015
 3236              	.LBE581:
 3237              	.LBE580:
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3238              		.loc 1 2943 50 view .LVU1016
 3239 0368 0136     		adds	r6, r6, #1
 3240 036a 06F01F06 		and	r6, r6, #31
 3241 036e 0127     		movs	r7, #1
 3242 0370 07FA06F6 		lsl	r6, r7, r6
 3243 0374 B8E7     		b	.L179
 3244              	.LVL263:
 3245              	.L206:
 3246              	.LBB583:
 3247              	.LBB582:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3248              		.loc 3 416 12 view .LVU1017
 3249 0376 2026     		movs	r6, #32
 3250              	.LVL264:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3251              		.loc 3 416 12 view .LVU1018
 3252 0378 F6E7     		b	.L180
 3253              	.L181:
 3254              	.LVL265:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3255              		.loc 3 416 12 view .LVU1019
 3256              	.LBE582:
 3257              	.LBE583:
 3258              	.LBB584:
 3259              	.LBI584:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3260              		.loc 3 373 31 is_stmt 1 discriminator 12 view .LVU1020
 3261              	.LBB585:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3262              		.loc 3 375 3 discriminator 12 view .LVU1021
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3263              		.loc 3 380 4 discriminator 12 view .LVU1022
 3264              		.syntax unified
 3265              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3266 037a 92FAA2F2 		rbit r2, r2
 3267              	@ 0 "" 2
 3268              	.LVL266:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3269              		.loc 3 393 3 discriminator 12 view .LVU1023
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3270              		.loc 3 393 3 is_stmt 0 discriminator 12 view .LVU1024
 3271              		.thumb
 3272              		.syntax unified
 3273              	.LBE585:
ARM GAS  /tmp/cc46GlVT.s 			page 272


 3274              	.LBE584:
 3275              	.LBB586:
 3276              	.LBI586:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3277              		.loc 3 403 30 is_stmt 1 discriminator 12 view .LVU1025
 3278              	.LBB587:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3279              		.loc 3 414 3 discriminator 12 view .LVU1026
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3280              		.loc 3 414 6 is_stmt 0 discriminator 12 view .LVU1027
 3281 037e 42B1     		cbz	r2, .L207
 3282              		.loc 3 418 3 is_stmt 1 view .LVU1028
 3283              		.loc 3 418 10 is_stmt 0 view .LVU1029
 3284 0380 B2FA82F2 		clz	r2, r2
 3285              	.LVL267:
 3286              	.L183:
 3287              		.loc 3 418 10 view .LVU1030
 3288              	.LBE587:
 3289              	.LBE586:
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3290              		.loc 1 2943 50 view .LVU1031
 3291 0384 0132     		adds	r2, r2, #1
 3292 0386 02F01F02 		and	r2, r2, #31
 3293 038a 02EB4202 		add	r2, r2, r2, lsl #1
 3294 038e 1205     		lsls	r2, r2, #20
 3295 0390 B4E7     		b	.L182
 3296              	.LVL268:
 3297              	.L207:
 3298              	.LBB589:
 3299              	.LBB588:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3300              		.loc 3 416 12 view .LVU1032
 3301 0392 2022     		movs	r2, #32
 3302              	.LVL269:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3303              		.loc 3 416 12 view .LVU1033
 3304 0394 F6E7     		b	.L183
 3305              	.L234:
 3306 0396 00BF     		.align	2
 3307              	.L233:
 3308 0398 00F0FF03 		.word	67104768
 3309 039c FFFF0F00 		.word	1048575
 3310 03a0 00007F40 		.word	1082064896
 3311 03a4 00000880 		.word	-2146959360
 3312 03a8 00830242 		.word	1107460864
 3313 03ac 000021C3 		.word	-1021247488
 3314 03b0 00002943 		.word	1126760448
 3315 03b4 000052C7 		.word	-950927360
 3316 03b8 00005A47 		.word	1197080576
 3317 03bc 00800242 		.word	1107460096
 3318              	.L174:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3319              		.loc 3 416 12 view .LVU1034
 3320              	.LBE588:
 3321              	.LBE589:
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3322              		.loc 1 2943 50 view .LVU1035
ARM GAS  /tmp/cc46GlVT.s 			page 273


 3323 03c0 CDB9     		cbnz	r5, .L185
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3324              		.loc 1 2943 50 discriminator 13 view .LVU1036
 3325 03c2 900E     		lsrs	r0, r2, #26
 3326 03c4 0130     		adds	r0, r0, #1
 3327 03c6 8006     		lsls	r0, r0, #26
 3328 03c8 00F0F840 		and	r0, r0, #2080374784
 3329              	.L186:
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3330              		.loc 1 2943 50 discriminator 16 view .LVU1037
 3331 03cc FDB9     		cbnz	r5, .L188
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3332              		.loc 1 2943 50 discriminator 17 view .LVU1038
 3333 03ce 960E     		lsrs	r6, r2, #26
 3334 03d0 0136     		adds	r6, r6, #1
 3335 03d2 06F01F07 		and	r7, r6, #31
 3336 03d6 0126     		movs	r6, #1
 3337 03d8 BE40     		lsls	r6, r6, r7
 3338              	.L189:
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3339              		.loc 1 2943 50 discriminator 20 view .LVU1039
 3340 03da 3043     		orrs	r0, r0, r6
 3341 03dc 2DBB     		cbnz	r5, .L191
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3342              		.loc 1 2943 50 discriminator 21 view .LVU1040
 3343 03de 920E     		lsrs	r2, r2, #26
 3344 03e0 0132     		adds	r2, r2, #1
 3345 03e2 02F01F02 		and	r2, r2, #31
 3346 03e6 02EB4202 		add	r2, r2, r2, lsl #1
 3347 03ea 1E3A     		subs	r2, r2, #30
 3348 03ec 1205     		lsls	r2, r2, #20
 3349 03ee 42F00072 		orr	r2, r2, #33554432
 3350              	.L192:
2942:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 3351              		.loc 1 2942 9 discriminator 2 view .LVU1041
 3352 03f2 0243     		orrs	r2, r2, r0
 3353 03f4 83E7     		b	.L184
 3354              	.L185:
 3355              	.LVL270:
 3356              	.LBB590:
 3357              	.LBI590:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3358              		.loc 3 373 31 is_stmt 1 discriminator 14 view .LVU1042
 3359              	.LBB591:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3360              		.loc 3 375 3 discriminator 14 view .LVU1043
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3361              		.loc 3 380 4 discriminator 14 view .LVU1044
 3362              		.syntax unified
 3363              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3364 03f6 92FAA2F0 		rbit r0, r2
 3365              	@ 0 "" 2
 3366              	.LVL271:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3367              		.loc 3 393 3 discriminator 14 view .LVU1045
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3368              		.loc 3 393 3 is_stmt 0 discriminator 14 view .LVU1046
ARM GAS  /tmp/cc46GlVT.s 			page 274


 3369              		.thumb
 3370              		.syntax unified
 3371              	.LBE591:
 3372              	.LBE590:
 3373              	.LBB592:
 3374              	.LBI592:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3375              		.loc 3 403 30 is_stmt 1 discriminator 14 view .LVU1047
 3376              	.LBB593:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3377              		.loc 3 414 3 discriminator 14 view .LVU1048
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3378              		.loc 3 414 6 is_stmt 0 discriminator 14 view .LVU1049
 3379 03fa 30B1     		cbz	r0, .L208
 3380              		.loc 3 418 3 is_stmt 1 view .LVU1050
 3381              		.loc 3 418 10 is_stmt 0 view .LVU1051
 3382 03fc B0FA80F0 		clz	r0, r0
 3383              	.LVL272:
 3384              	.L187:
 3385              		.loc 3 418 10 view .LVU1052
 3386              	.LBE593:
 3387              	.LBE592:
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3388              		.loc 1 2943 50 view .LVU1053
 3389 0400 0130     		adds	r0, r0, #1
 3390 0402 8006     		lsls	r0, r0, #26
 3391 0404 00F0F840 		and	r0, r0, #2080374784
 3392 0408 E0E7     		b	.L186
 3393              	.LVL273:
 3394              	.L208:
 3395              	.LBB595:
 3396              	.LBB594:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3397              		.loc 3 416 12 view .LVU1054
 3398 040a 2020     		movs	r0, #32
 3399              	.LVL274:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3400              		.loc 3 416 12 view .LVU1055
 3401 040c F8E7     		b	.L187
 3402              	.L188:
 3403              	.LVL275:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3404              		.loc 3 416 12 view .LVU1056
 3405              	.LBE594:
 3406              	.LBE595:
 3407              	.LBB596:
 3408              	.LBI596:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3409              		.loc 3 373 31 is_stmt 1 discriminator 18 view .LVU1057
 3410              	.LBB597:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3411              		.loc 3 375 3 discriminator 18 view .LVU1058
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3412              		.loc 3 380 4 discriminator 18 view .LVU1059
 3413              		.syntax unified
 3414              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3415 040e 92FAA2F6 		rbit r6, r2
ARM GAS  /tmp/cc46GlVT.s 			page 275


 3416              	@ 0 "" 2
 3417              	.LVL276:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3418              		.loc 3 393 3 discriminator 18 view .LVU1060
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3419              		.loc 3 393 3 is_stmt 0 discriminator 18 view .LVU1061
 3420              		.thumb
 3421              		.syntax unified
 3422              	.LBE597:
 3423              	.LBE596:
 3424              	.LBB598:
 3425              	.LBI598:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3426              		.loc 3 403 30 is_stmt 1 discriminator 18 view .LVU1062
 3427              	.LBB599:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3428              		.loc 3 414 3 discriminator 18 view .LVU1063
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3429              		.loc 3 414 6 is_stmt 0 discriminator 18 view .LVU1064
 3430 0412 46B1     		cbz	r6, .L209
 3431              		.loc 3 418 3 is_stmt 1 view .LVU1065
 3432              		.loc 3 418 10 is_stmt 0 view .LVU1066
 3433 0414 B6FA86F6 		clz	r6, r6
 3434              	.LVL277:
 3435              	.L190:
 3436              		.loc 3 418 10 view .LVU1067
 3437              	.LBE599:
 3438              	.LBE598:
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3439              		.loc 1 2943 50 view .LVU1068
 3440 0418 0136     		adds	r6, r6, #1
 3441 041a 06F01F06 		and	r6, r6, #31
 3442 041e 0127     		movs	r7, #1
 3443 0420 07FA06F6 		lsl	r6, r7, r6
 3444 0424 D9E7     		b	.L189
 3445              	.LVL278:
 3446              	.L209:
 3447              	.LBB601:
 3448              	.LBB600:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3449              		.loc 3 416 12 view .LVU1069
 3450 0426 2026     		movs	r6, #32
 3451              	.LVL279:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3452              		.loc 3 416 12 view .LVU1070
 3453 0428 F6E7     		b	.L190
 3454              	.L191:
 3455              	.LVL280:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3456              		.loc 3 416 12 view .LVU1071
 3457              	.LBE600:
 3458              	.LBE601:
 3459              	.LBB602:
 3460              	.LBI602:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3461              		.loc 3 373 31 is_stmt 1 discriminator 22 view .LVU1072
 3462              	.LBB603:
ARM GAS  /tmp/cc46GlVT.s 			page 276


 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3463              		.loc 3 375 3 discriminator 22 view .LVU1073
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3464              		.loc 3 380 4 discriminator 22 view .LVU1074
 3465              		.syntax unified
 3466              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3467 042a 92FAA2F2 		rbit r2, r2
 3468              	@ 0 "" 2
 3469              	.LVL281:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3470              		.loc 3 393 3 discriminator 22 view .LVU1075
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3471              		.loc 3 393 3 is_stmt 0 discriminator 22 view .LVU1076
 3472              		.thumb
 3473              		.syntax unified
 3474              	.LBE603:
 3475              	.LBE602:
 3476              	.LBB604:
 3477              	.LBI604:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3478              		.loc 3 403 30 is_stmt 1 discriminator 22 view .LVU1077
 3479              	.LBB605:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3480              		.loc 3 414 3 discriminator 22 view .LVU1078
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3481              		.loc 3 414 6 is_stmt 0 discriminator 22 view .LVU1079
 3482 042e 5AB1     		cbz	r2, .L210
 3483              		.loc 3 418 3 is_stmt 1 view .LVU1080
 3484              		.loc 3 418 10 is_stmt 0 view .LVU1081
 3485 0430 B2FA82F2 		clz	r2, r2
 3486              	.LVL282:
 3487              	.L193:
 3488              		.loc 3 418 10 view .LVU1082
 3489              	.LBE605:
 3490              	.LBE604:
2943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
 3491              		.loc 1 2943 50 view .LVU1083
 3492 0434 0132     		adds	r2, r2, #1
 3493 0436 02F01F02 		and	r2, r2, #31
 3494 043a 02EB4202 		add	r2, r2, r2, lsl #1
 3495 043e 1E3A     		subs	r2, r2, #30
 3496 0440 1205     		lsls	r2, r2, #20
 3497 0442 42F00072 		orr	r2, r2, #33554432
 3498 0446 D4E7     		b	.L192
 3499              	.LVL283:
 3500              	.L210:
 3501              	.LBB607:
 3502              	.LBB606:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3503              		.loc 3 416 12 view .LVU1084
 3504 0448 2022     		movs	r2, #32
 3505              	.LVL284:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3506              		.loc 3 416 12 view .LVU1085
 3507 044a F3E7     		b	.L193
 3508              	.LVL285:
 3509              	.L222:
ARM GAS  /tmp/cc46GlVT.s 			page 277


 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3510              		.loc 3 416 12 view .LVU1086
 3511              	.LBE606:
 3512              	.LBE607:
2964:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 3513              		.loc 1 2964 11 view .LVU1087
 3514 044c 11F4000F 		tst	r1, #8388608
 3515 0450 7FF495AE 		bne	.L194
2966:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 3516              		.loc 1 2966 9 is_stmt 1 view .LVU1088
2966:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 3517              		.loc 1 2966 13 is_stmt 0 view .LVU1089
 3518 0454 1968     		ldr	r1, [r3]
2966:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 3519              		.loc 1 2966 12 view .LVU1090
 3520 0456 2E4A     		ldr	r2, .L235
 3521 0458 9142     		cmp	r1, r2
 3522 045a 01D0     		beq	.L229
2807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3523              		.loc 1 2807 21 view .LVU1091
 3524 045c 0020     		movs	r0, #0
 3525 045e E6E5     		b	.L146
 3526              	.L229:
2968:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
 3527              		.loc 1 2968 11 is_stmt 1 view .LVU1092
 3528 0460 44F40002 		orr	r2, r4, #8388608
 3529              	.LVL286:
 3530              	.LBB608:
 3531              	.LBI608:
3152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3532              		.loc 2 3152 22 view .LVU1093
 3533              	.LBB609:
3154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3534              		.loc 2 3154 3 view .LVU1094
 3535 0464 2B48     		ldr	r0, .L235+4
 3536 0466 8168     		ldr	r1, [r0, #8]
 3537 0468 21F0E071 		bic	r1, r1, #29360128
 3538 046c 0A43     		orrs	r2, r2, r1
 3539              	.LVL287:
3154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3540              		.loc 2 3154 3 is_stmt 0 view .LVU1095
 3541 046e 8260     		str	r2, [r0, #8]
 3542              	.LVL288:
3154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3543              		.loc 2 3154 3 view .LVU1096
 3544              	.LBE609:
 3545              	.LBE608:
2976:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3546              		.loc 1 2976 11 is_stmt 1 view .LVU1097
2976:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3547              		.loc 1 2976 91 is_stmt 0 view .LVU1098
 3548 0470 294A     		ldr	r2, .L235+8
 3549 0472 1268     		ldr	r2, [r2]
 3550 0474 9209     		lsrs	r2, r2, #6
 3551 0476 2949     		ldr	r1, .L235+12
 3552 0478 A1FB0212 		umull	r1, r2, r1, r2
 3553 047c 9209     		lsrs	r2, r2, #6
ARM GAS  /tmp/cc46GlVT.s 			page 278


2976:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3554              		.loc 1 2976 111 view .LVU1099
 3555 047e 0132     		adds	r2, r2, #1
2976:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3556              		.loc 1 2976 71 view .LVU1100
 3557 0480 5200     		lsls	r2, r2, #1
2976:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3558              		.loc 1 2976 27 view .LVU1101
 3559 0482 0192     		str	r2, [sp, #4]
2977:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 3560              		.loc 1 2977 11 is_stmt 1 view .LVU1102
 3561              	.L195:
2977:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 3562              		.loc 1 2977 17 view .LVU1103
2977:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 3563              		.loc 1 2977 34 is_stmt 0 view .LVU1104
 3564 0484 019A     		ldr	r2, [sp, #4]
2977:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 3565              		.loc 1 2977 17 view .LVU1105
 3566 0486 1AB1     		cbz	r2, .L230
2979:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
 3567              		.loc 1 2979 13 is_stmt 1 view .LVU1106
2979:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
 3568              		.loc 1 2979 28 is_stmt 0 view .LVU1107
 3569 0488 019A     		ldr	r2, [sp, #4]
 3570 048a 013A     		subs	r2, r2, #1
 3571 048c 0192     		str	r2, [sp, #4]
 3572 048e F9E7     		b	.L195
 3573              	.L230:
2807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3574              		.loc 1 2807 21 view .LVU1108
 3575 0490 0020     		movs	r0, #0
 3576 0492 CCE5     		b	.L146
 3577              	.L223:
2984:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 3578              		.loc 1 2984 16 view .LVU1109
 3579 0494 11F0807F 		tst	r1, #16777216
 3580 0498 7FF475AE 		bne	.L197
2986:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 3581              		.loc 1 2986 9 is_stmt 1 view .LVU1110
2986:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 3582              		.loc 1 2986 13 is_stmt 0 view .LVU1111
 3583 049c 1968     		ldr	r1, [r3]
2986:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 3584              		.loc 1 2986 12 view .LVU1112
 3585 049e 204A     		ldr	r2, .L235+16
 3586 04a0 9142     		cmp	r1, r2
 3587 04a2 01D0     		beq	.L231
2807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3588              		.loc 1 2807 21 view .LVU1113
 3589 04a4 0020     		movs	r0, #0
 3590 04a6 C2E5     		b	.L146
 3591              	.L231:
2988:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 3592              		.loc 1 2988 11 is_stmt 1 view .LVU1114
 3593 04a8 44F08072 		orr	r2, r4, #16777216
 3594              	.LVL289:
ARM GAS  /tmp/cc46GlVT.s 			page 279


 3595              	.LBB610:
 3596              	.LBI610:
3152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3597              		.loc 2 3152 22 view .LVU1115
 3598              	.LBB611:
3154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3599              		.loc 2 3154 3 view .LVU1116
 3600 04ac A0F19370 		sub	r0, r0, #19267584
 3601 04b0 A0F5FA40 		sub	r0, r0, #32000
 3602 04b4 8168     		ldr	r1, [r0, #8]
 3603 04b6 21F0E071 		bic	r1, r1, #29360128
 3604 04ba 0A43     		orrs	r2, r2, r1
 3605              	.LVL290:
3154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3606              		.loc 2 3154 3 is_stmt 0 view .LVU1117
 3607 04bc 8260     		str	r2, [r0, #8]
 3608              	.LBE611:
 3609              	.LBE610:
2807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3610              		.loc 1 2807 21 view .LVU1118
 3611 04be 0020     		movs	r0, #0
 3612              	.LBB613:
 3613              	.LBB612:
3155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3614              		.loc 2 3155 1 view .LVU1119
 3615 04c0 B5E5     		b	.L146
 3616              	.LVL291:
 3617              	.L224:
3155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3618              		.loc 2 3155 1 view .LVU1120
 3619              	.LBE612:
 3620              	.LBE613:
2993:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 3621              		.loc 1 2993 16 view .LVU1121
 3622 04c2 11F4800F 		tst	r1, #4194304
 3623 04c6 7FF462AE 		bne	.L198
2995:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 3624              		.loc 1 2995 9 is_stmt 1 view .LVU1122
2995:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 3625              		.loc 1 2995 13 is_stmt 0 view .LVU1123
 3626 04ca 1968     		ldr	r1, [r3]
2995:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 3627              		.loc 1 2995 12 view .LVU1124
 3628 04cc 104A     		ldr	r2, .L235
 3629 04ce 9142     		cmp	r1, r2
 3630 04d0 01D0     		beq	.L232
2807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3631              		.loc 1 2807 21 view .LVU1125
 3632 04d2 0020     		movs	r0, #0
 3633 04d4 ABE5     		b	.L146
 3634              	.L232:
2997:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
 3635              		.loc 1 2997 11 is_stmt 1 view .LVU1126
 3636 04d6 44F48002 		orr	r2, r4, #4194304
 3637              	.LVL292:
 3638              	.LBB614:
 3639              	.LBI614:
ARM GAS  /tmp/cc46GlVT.s 			page 280


3152:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3640              		.loc 2 3152 22 view .LVU1127
 3641              	.LBB615:
3154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3642              		.loc 2 3154 3 view .LVU1128
 3643 04da 0E48     		ldr	r0, .L235+4
 3644 04dc 8168     		ldr	r1, [r0, #8]
 3645 04de 21F0E071 		bic	r1, r1, #29360128
 3646 04e2 0A43     		orrs	r2, r2, r1
 3647              	.LVL293:
3154:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3648              		.loc 2 3154 3 is_stmt 0 view .LVU1129
 3649 04e4 8260     		str	r2, [r0, #8]
 3650              	.LBE615:
 3651              	.LBE614:
2807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3652              		.loc 1 2807 21 view .LVU1130
 3653 04e6 0020     		movs	r0, #0
 3654              	.LBB617:
 3655              	.LBB616:
3155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3656              		.loc 2 3155 1 view .LVU1131
 3657 04e8 A1E5     		b	.L146
 3658              	.LVL294:
 3659              	.L225:
3155:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3660              		.loc 2 3155 1 view .LVU1132
 3661              	.LBE616:
 3662              	.LBE617:
3003:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 3663              		.loc 1 3003 9 is_stmt 1 view .LVU1133
3003:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 3664              		.loc 1 3003 13 is_stmt 0 view .LVU1134
 3665 04ea 1A68     		ldr	r2, [r3]
3003:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 3666              		.loc 1 3003 12 view .LVU1135
 3667 04ec 0849     		ldr	r1, .L235
 3668 04ee 8A42     		cmp	r2, r1
 3669 04f0 09D0     		beq	.L216
3005:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 3670              		.loc 1 3005 11 is_stmt 1 view .LVU1136
 3671              	.LVL295:
 3672              	.LBB618:
 3673              	.LBI618:
3256:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3674              		.loc 2 3256 22 view .LVU1137
 3675              	.LBB619:
3258:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3676              		.loc 2 3258 3 view .LVU1138
 3677 04f2 D2F8C810 		ldr	r1, [r2, #200]
 3678 04f6 41F00101 		orr	r1, r1, #1
 3679 04fa C2F8C810 		str	r1, [r2, #200]
 3680              	.LBE619:
 3681              	.LBE618:
2807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3682              		.loc 1 2807 21 is_stmt 0 view .LVU1139
 3683 04fe 0020     		movs	r0, #0
ARM GAS  /tmp/cc46GlVT.s 			page 281


 3684              	.LBB621:
 3685              	.LBB620:
3259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
 3686              		.loc 2 3259 1 view .LVU1140
 3687 0500 95E5     		b	.L146
 3688              	.LVL296:
 3689              	.L211:
3259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #else
 3690              		.loc 2 3259 1 view .LVU1141
 3691              	.LBE620:
 3692              	.LBE621:
2807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3693              		.loc 1 2807 21 view .LVU1142
 3694 0502 0020     		movs	r0, #0
 3695 0504 93E5     		b	.L146
 3696              	.LVL297:
 3697              	.L216:
2807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3698              		.loc 1 2807 21 view .LVU1143
 3699 0506 0020     		movs	r0, #0
 3700 0508 91E5     		b	.L146
 3701              	.LVL298:
 3702              	.L199:
2837:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 3703              		.loc 1 2837 3 view .LVU1144
 3704 050a 0220     		movs	r0, #2
 3705              	.LVL299:
2837:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 3706              		.loc 1 2837 3 view .LVU1145
 3707 050c 92E5     		b	.L144
 3708              	.L236:
 3709 050e 00BF     		.align	2
 3710              	.L235:
 3711 0510 00800242 		.word	1107460096
 3712 0514 00830242 		.word	1107460864
 3713 0518 00000000 		.word	SystemCoreClock
 3714 051c 632D3E05 		.word	87960931
 3715 0520 00810242 		.word	1107460352
 3716              		.cfi_endproc
 3717              	.LFE381:
 3719              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 3720              		.align	1
 3721              		.global	HAL_ADC_AnalogWDGConfig
 3722              		.syntax unified
 3723              		.thumb
 3724              		.thumb_func
 3725              		.fpu fpv4-sp-d16
 3727              	HAL_ADC_AnalogWDGConfig:
 3728              	.LVL300:
 3729              	.LFB382:
3056:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3730              		.loc 1 3056 1 is_stmt 1 view -0
 3731              		.cfi_startproc
 3732              		@ args = 0, pretend = 0, frame = 0
 3733              		@ frame_needed = 0, uses_anonymous_args = 0
3057:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 3734              		.loc 1 3057 3 view .LVU1147
ARM GAS  /tmp/cc46GlVT.s 			page 282


3058:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_awd_low_threshold_shifted;
 3735              		.loc 1 3058 3 view .LVU1148
3059:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 3736              		.loc 1 3059 3 view .LVU1149
3060:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3737              		.loc 1 3060 3 view .LVU1150
3061:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 3738              		.loc 1 3061 3 view .LVU1151
3064:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(pAnalogWDGConfig->WatchdogNumber));
 3739              		.loc 1 3064 3 view .LVU1152
3065:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(pAnalogWDGConfig->WatchdogMode));
 3740              		.loc 1 3065 3 view .LVU1153
3066:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_FILTERING_MODE(pAnalogWDGConfig->FilteringConfig));
 3741              		.loc 1 3066 3 view .LVU1154
3067:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(pAnalogWDGConfig->ITMode));
 3742              		.loc 1 3067 3 view .LVU1155
3068:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 3743              		.loc 1 3068 3 view .LVU1156
3070:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       (pAnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 3744              		.loc 1 3070 3 view .LVU1157
3074:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 3745              		.loc 1 3074 5 view .LVU1158
3078:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 3746              		.loc 1 3078 3 view .LVU1159
3089:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pAnalogWDGConfig->LowThreshold));
 3747              		.loc 1 3089 5 view .LVU1160
3090:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 3748              		.loc 1 3090 5 view .LVU1161
3094:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 3749              		.loc 1 3094 3 view .LVU1162
3094:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 3750              		.loc 1 3094 3 view .LVU1163
 3751 0000 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 3752 0004 012B     		cmp	r3, #1
 3753 0006 00F09681 		beq	.L273
3056:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3754              		.loc 1 3056 1 is_stmt 0 discriminator 2 view .LVU1164
 3755 000a 30B5     		push	{r4, r5, lr}
 3756              	.LCFI14:
 3757              		.cfi_def_cfa_offset 12
 3758              		.cfi_offset 4, -12
 3759              		.cfi_offset 5, -8
 3760              		.cfi_offset 14, -4
3094:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 3761              		.loc 1 3094 3 is_stmt 1 discriminator 2 view .LVU1165
 3762 000c 0123     		movs	r3, #1
 3763 000e 80F85430 		strb	r3, [r0, #84]
3094:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 3764              		.loc 1 3094 3 discriminator 2 view .LVU1166
3100:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3765              		.loc 1 3100 3 discriminator 2 view .LVU1167
3100:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3766              		.loc 1 3100 79 is_stmt 0 discriminator 2 view .LVU1168
 3767 0012 0468     		ldr	r4, [r0]
 3768              	.LVL301:
 3769              	.LBB672:
 3770              	.LBI672:
ARM GAS  /tmp/cc46GlVT.s 			page 283


6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3771              		.loc 2 6991 26 is_stmt 1 discriminator 2 view .LVU1169
 3772              	.LBB673:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3773              		.loc 2 6993 3 discriminator 2 view .LVU1170
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3774              		.loc 2 6993 12 is_stmt 0 discriminator 2 view .LVU1171
 3775 0014 A368     		ldr	r3, [r4, #8]
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3776              		.loc 2 6993 74 discriminator 2 view .LVU1172
 3777 0016 13F00403 		ands	r3, r3, #4
 3778 001a 00D0     		beq	.L239
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3779              		.loc 2 6993 74 view .LVU1173
 3780 001c 0123     		movs	r3, #1
 3781              	.L239:
 3782              	.LVL302:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 3783              		.loc 2 6993 74 view .LVU1174
 3784              	.LBE673:
 3785              	.LBE672:
3101:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 3786              		.loc 1 3101 3 is_stmt 1 view .LVU1175
 3787              	.LBB674:
 3788              	.LBI674:
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3789              		.loc 2 7217 26 view .LVU1176
 3790              	.LBB675:
 3791              		.loc 2 7219 3 view .LVU1177
 3792              		.loc 2 7219 12 is_stmt 0 view .LVU1178
 3793 001e A268     		ldr	r2, [r4, #8]
 3794              		.loc 2 7219 76 view .LVU1179
 3795 0020 12F00802 		ands	r2, r2, #8
 3796 0024 00D0     		beq	.L240
 3797 0026 0122     		movs	r2, #1
 3798              	.L240:
 3799              	.LVL303:
 3800              		.loc 2 7219 76 view .LVU1180
 3801              	.LBE675:
 3802              	.LBE674:
3102:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3803              		.loc 1 3102 3 is_stmt 1 view .LVU1181
3102:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3804              		.loc 1 3102 6 is_stmt 0 view .LVU1182
 3805 0028 002B     		cmp	r3, #0
 3806 002a 40F01181 		bne	.L241
3103:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      )
 3807              		.loc 1 3103 7 view .LVU1183
 3808 002e 002A     		cmp	r2, #0
 3809 0030 40F00E81 		bne	.L241
3107:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 3810              		.loc 1 3107 5 is_stmt 1 view .LVU1184
3107:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 3811              		.loc 1 3107 25 is_stmt 0 view .LVU1185
 3812 0034 0B68     		ldr	r3, [r1]
 3813              	.LVL304:
3107:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
ARM GAS  /tmp/cc46GlVT.s 			page 284


 3814              		.loc 1 3107 8 view .LVU1186
 3815 0036 B24A     		ldr	r2, .L288
 3816              	.LVL305:
3107:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 3817              		.loc 1 3107 8 view .LVU1187
 3818 0038 9342     		cmp	r3, r2
 3819 003a 26D0     		beq	.L280
3176:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 3820              		.loc 1 3176 7 is_stmt 1 view .LVU1188
3176:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 3821              		.loc 1 3176 31 is_stmt 0 view .LVU1189
 3822 003c 4A68     		ldr	r2, [r1, #4]
3176:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 3823              		.loc 1 3176 7 view .LVU1190
 3824 003e B2F1A07F 		cmp	r2, #20971520
 3825 0042 00F0A280 		beq	.L253
 3826 0046 00F29980 		bhi	.L254
 3827 004a B2F5400F 		cmp	r2, #12582912
 3828 004e 00F09C80 		beq	.L253
 3829 0052 B2F1807F 		cmp	r2, #16777216
 3830 0056 00F0CF80 		beq	.L255
 3831 005a B2F5000F 		cmp	r2, #8388608
 3832 005e 00F0CB80 		beq	.L255
 3833              	.L256:
3203:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
 3834              		.loc 1 3203 11 is_stmt 1 view .LVU1191
 3835              	.LVL306:
 3836              	.LBB676:
 3837              	.LBI676:
5836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3838              		.loc 2 5836 22 view .LVU1192
 3839              	.LBB677:
5842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
 3840              		.loc 2 5842 3 view .LVU1193
5842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
 3841              		.loc 2 5842 25 is_stmt 0 view .LVU1194
 3842 0062 0C34     		adds	r4, r4, #12
 3843              	.LVL307:
5842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
 3844              		.loc 2 5842 25 view .LVU1195
 3845 0064 C3F30152 		ubfx	r2, r3, #20, #2
 3846 0068 03F00105 		and	r5, r3, #1
 3847 006c 05EBC505 		add	r5, r5, r5, lsl #3
 3848 0070 02EB8502 		add	r2, r2, r5, lsl #2
 3849              	.LVL308:
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3850              		.loc 2 5847 3 is_stmt 1 view .LVU1196
 3851 0074 54F82250 		ldr	r5, [r4, r2, lsl #2]
 3852 0078 23F00243 		bic	r3, r3, #-2113929216
 3853              	.LVL309:
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3854              		.loc 2 5847 3 is_stmt 0 view .LVU1197
 3855 007c 23F44013 		bic	r3, r3, #3145728
 3856 0080 25EA0303 		bic	r3, r5, r3
 3857 0084 44F82230 		str	r3, [r4, r2, lsl #2]
 3858              	.LVL310:
5850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
ARM GAS  /tmp/cc46GlVT.s 			page 285


 3859              		.loc 2 5850 1 view .LVU1198
 3860 0088 CEE0     		b	.L261
 3861              	.LVL311:
 3862              	.L280:
5850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3863              		.loc 2 5850 1 view .LVU1199
 3864              	.LBE677:
 3865              	.LBE676:
3112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 3866              		.loc 1 3112 7 is_stmt 1 view .LVU1200
3112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 3867              		.loc 1 3112 31 is_stmt 0 view .LVU1201
 3868 008a 4B68     		ldr	r3, [r1, #4]
3112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 3869              		.loc 1 3112 7 view .LVU1202
 3870 008c B3F1A07F 		cmp	r3, #20971520
 3871 0090 51D0     		beq	.L243
 3872 0092 1AD8     		bhi	.L244
 3873 0094 B3F5400F 		cmp	r3, #12582912
 3874 0098 2AD0     		beq	.L245
 3875 009a B3F1807F 		cmp	r3, #16777216
 3876 009e 08D1     		bne	.L281
3137:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
 3877              		.loc 1 3137 11 is_stmt 1 view .LVU1203
 3878              	.LVL312:
 3879              	.LBB678:
 3880              	.LBI678:
5836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3881              		.loc 2 5836 22 view .LVU1204
 3882              	.LBB679:
5842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
 3883              		.loc 2 5842 3 view .LVU1205
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3884              		.loc 2 5847 3 view .LVU1206
 3885 00a0 E368     		ldr	r3, [r4, #12]
 3886 00a2 23F0FB43 		bic	r3, r3, #2105540608
 3887 00a6 23F48003 		bic	r3, r3, #4194304
 3888 00aa 43F08073 		orr	r3, r3, #16777216
 3889 00ae E360     		str	r3, [r4, #12]
5850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3890              		.loc 2 5850 1 is_stmt 0 view .LVU1207
 3891 00b0 2AE0     		b	.L251
 3892              	.LVL313:
 3893              	.L281:
5850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3894              		.loc 2 5850 1 view .LVU1208
 3895              	.LBE679:
 3896              	.LBE678:
3112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 3897              		.loc 1 3112 7 view .LVU1209
 3898 00b2 B3F5000F 		cmp	r3, #8388608
 3899 00b6 54D1     		bne	.L248
3133:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
 3900              		.loc 1 3133 11 is_stmt 1 view .LVU1210
 3901              	.LVL314:
 3902              	.LBB680:
 3903              	.LBI680:
ARM GAS  /tmp/cc46GlVT.s 			page 286


5836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3904              		.loc 2 5836 22 view .LVU1211
 3905              	.LBB681:
5842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
 3906              		.loc 2 5842 3 view .LVU1212
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3907              		.loc 2 5847 3 view .LVU1213
 3908 00b8 E368     		ldr	r3, [r4, #12]
 3909 00ba 23F0FB43 		bic	r3, r3, #2105540608
 3910 00be 23F48003 		bic	r3, r3, #4194304
 3911 00c2 43F40003 		orr	r3, r3, #8388608
 3912 00c6 E360     		str	r3, [r4, #12]
5850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3913              		.loc 2 5850 1 is_stmt 0 view .LVU1214
 3914 00c8 1EE0     		b	.L251
 3915              	.LVL315:
 3916              	.L244:
5850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3917              		.loc 2 5850 1 view .LVU1215
 3918              	.LBE681:
 3919              	.LBE680:
3112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 3920              		.loc 1 3112 7 view .LVU1216
 3921 00ca B3F1C07F 		cmp	r3, #25165824
 3922 00ce 3FD0     		beq	.L249
 3923 00d0 B3F1E07F 		cmp	r3, #29360128
 3924 00d4 45D1     		bne	.L248
3127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
 3925              		.loc 1 3127 11 is_stmt 1 view .LVU1217
3128:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                                           LL_ADC_GROUP_REGULAR_INJE
 3926              		.loc 1 3128 43 is_stmt 0 view .LVU1218
 3927 00d6 8A68     		ldr	r2, [r1, #8]
 3928              	.LVL316:
 3929              	.LBB682:
 3930              	.LBI682:
5836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3931              		.loc 2 5836 22 is_stmt 1 view .LVU1219
 3932              	.LBB683:
5842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
 3933              		.loc 2 5842 3 view .LVU1220
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3934              		.loc 2 5847 3 view .LVU1221
 3935 00d8 E368     		ldr	r3, [r4, #12]
 3936 00da 23F0FB43 		bic	r3, r3, #2105540608
 3937 00de 23F48003 		bic	r3, r3, #4194304
 3938 00e2 02F0F842 		and	r2, r2, #2080374784
 3939              	.LVL317:
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3940              		.loc 2 5847 3 is_stmt 0 view .LVU1222
 3941 00e6 42F0E072 		orr	r2, r2, #29360128
 3942 00ea 1343     		orrs	r3, r3, r2
 3943 00ec E360     		str	r3, [r4, #12]
 3944              	.LVL318:
5850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3945              		.loc 2 5850 1 view .LVU1223
 3946 00ee 0BE0     		b	.L251
 3947              	.LVL319:
ARM GAS  /tmp/cc46GlVT.s 			page 287


 3948              	.L245:
5850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 3949              		.loc 2 5850 1 view .LVU1224
 3950              	.LBE683:
 3951              	.LBE682:
3115:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
 3952              		.loc 1 3115 11 is_stmt 1 view .LVU1225
3116:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                                           LL_ADC_GROUP_REGULAR));
 3953              		.loc 1 3116 43 is_stmt 0 view .LVU1226
 3954 00f0 8A68     		ldr	r2, [r1, #8]
 3955              	.LVL320:
 3956              	.LBB684:
 3957              	.LBI684:
5836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 3958              		.loc 2 5836 22 is_stmt 1 view .LVU1227
 3959              	.LBB685:
5842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
 3960              		.loc 2 5842 3 view .LVU1228
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3961              		.loc 2 5847 3 view .LVU1229
 3962 00f2 E368     		ldr	r3, [r4, #12]
 3963 00f4 23F0FB43 		bic	r3, r3, #2105540608
 3964 00f8 23F48003 		bic	r3, r3, #4194304
 3965 00fc 02F0F842 		and	r2, r2, #2080374784
 3966              	.LVL321:
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3967              		.loc 2 5847 3 is_stmt 0 view .LVU1230
 3968 0100 42F44002 		orr	r2, r2, #12582912
 3969 0104 1343     		orrs	r3, r3, r2
 3970 0106 E360     		str	r3, [r4, #12]
 3971              	.LVL322:
 3972              	.L251:
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3973              		.loc 2 5847 3 view .LVU1231
 3974              	.LBE685:
 3975              	.LBE684:
3150:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                  ADC_TR1_AWDFILT,
 3976              		.loc 1 3150 7 is_stmt 1 view .LVU1232
 3977 0108 0268     		ldr	r2, [r0]
 3978 010a 136A     		ldr	r3, [r2, #32]
 3979 010c 23F4E043 		bic	r3, r3, #28672
 3980 0110 8C69     		ldr	r4, [r1, #24]
 3981 0112 2343     		orrs	r3, r3, r4
 3982 0114 1362     		str	r3, [r2, #32]
3155:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 3983              		.loc 1 3155 7 view .LVU1233
 3984 0116 836D     		ldr	r3, [r0, #88]
 3985 0118 23F48033 		bic	r3, r3, #65536
 3986 011c 8365     		str	r3, [r0, #88]
3161:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 3987              		.loc 1 3161 7 view .LVU1234
 3988 011e 0368     		ldr	r3, [r0]
 3989              	.LVL323:
 3990              	.LBB686:
 3991              	.LBI686:
7220:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7221:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
ARM GAS  /tmp/cc46GlVT.s 			page 288


7222:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7223:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected command of conversion stop state
7224:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_IsStopConversionOngoing
7225:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7226:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group injected.
7227:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7228:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsStopConversionOngoing(const ADC_TypeDef *ADCx)
7229:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7230:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTP) == (ADC_CR_JADSTP)) ? 1UL : 0UL);
7231:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7232:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7233:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7235:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
7236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         all oversampling increased data width (for devices
7237:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         with feature oversampling).
7238:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData32\n
7239:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData32\n
7240:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData32\n
7241:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData32
7242:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7243:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7244:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7245:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7246:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7247:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7248:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7249:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7250:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_ReadConversionData32(const ADC_TypeDef *ADCx, uint32_t Rank)
7251:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7252:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1,
7253:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK) >> ADC_JDR
7254:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7255:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
7256:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7257:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                    );
7258:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7259:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7260:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7261:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7262:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC resolution 12 bits.
7263:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7264:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         can increase data width, function for extended range
7265:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7266:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData12\n
7267:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData12\n
7268:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData12\n
7269:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData12
7270:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7271:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7272:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7273:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7274:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7275:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7276:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
7277:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7278:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData12(const ADC_TypeDef *ADCx, uint32_t Rank)
ARM GAS  /tmp/cc46GlVT.s 			page 289


7279:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7280:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1,
7281:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK) >> ADC_JDR
7282:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7283:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7284:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7285:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                    );
7286:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7287:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7288:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7289:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7290:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC resolution 10 bits.
7291:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7292:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         can increase data width, function for extended range
7293:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7294:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData10\n
7295:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData10\n
7296:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData10\n
7297:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData10
7298:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7299:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7300:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7301:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7302:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7303:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7304:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
7305:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7306:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData10(const ADC_TypeDef *ADCx, uint32_t Rank)
7307:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7308:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1,
7309:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK) >> ADC_JDR
7310:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7311:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7312:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7313:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                    );
7314:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7315:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7316:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7317:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7318:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC resolution 8 bits.
7319:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7320:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         can increase data width, function for extended range
7321:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7322:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData8\n
7323:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData8\n
7324:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData8\n
7325:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData8
7326:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7327:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7328:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7329:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7330:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7331:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7332:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
7333:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7334:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData8(const ADC_TypeDef *ADCx, uint32_t Rank)
7335:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
ARM GAS  /tmp/cc46GlVT.s 			page 290


7336:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1,
7337:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK) >> ADC_JDR
7338:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7339:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
7340:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                             ADC_JDR1_JDATA)
7341:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                   );
7342:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7343:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7344:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7345:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7346:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         ADC resolution 6 bits.
7347:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7348:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         can increase data width, function for extended range
7349:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7350:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData6\n
7351:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData6\n
7352:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData6\n
7353:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData6
7354:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7355:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7356:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7357:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7358:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7359:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7360:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
7361:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7362:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData6(const ADC_TypeDef *ADCx, uint32_t Rank)
7363:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7364:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1,
7365:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                    ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK) >> ADC_JDR
7366:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7367:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
7368:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                             ADC_JDR1_JDATA)
7369:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                   );
7370:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7371:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7372:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7373:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
7374:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7375:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7376:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
7377:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
7378:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7379:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7380:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7381:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag ADC ready.
7382:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7383:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7384:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7385:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
7386:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7387:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7388:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7389:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(const ADC_TypeDef *ADCx)
7390:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7391:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
7392:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
ARM GAS  /tmp/cc46GlVT.s 			page 291


7393:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7394:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7395:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
7396:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
7397:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7398:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7399:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7400:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(const ADC_TypeDef *ADCx)
7401:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7402:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
7403:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7404:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7405:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7406:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
7407:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
7408:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7409:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7410:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7411:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(const ADC_TypeDef *ADCx)
7412:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7413:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
7414:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7415:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7416:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7417:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
7418:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
7419:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7420:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7421:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7422:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(const ADC_TypeDef *ADCx)
7423:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7424:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
7425:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7426:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7427:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7428:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
7429:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
7430:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7431:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7432:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7433:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(const ADC_TypeDef *ADCx)
7434:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7435:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
7436:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7437:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7438:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7439:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of unitary conversion.
7440:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_IsActiveFlag_JEOC
7441:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7442:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7443:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7444:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOC(const ADC_TypeDef *ADCx)
7445:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7446:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOC) == (LL_ADC_FLAG_JEOC)) ? 1UL : 0UL);
7447:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7448:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7449:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
ARM GAS  /tmp/cc46GlVT.s 			page 292


7450:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of sequence conversions.
7451:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_IsActiveFlag_JEOS
7452:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7453:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7454:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7455:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOS(const ADC_TypeDef *ADCx)
7456:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7457:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOS) == (LL_ADC_FLAG_JEOS)) ? 1UL : 0UL);
7458:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7459:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7460:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7461:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag ADC group injected contexts queue overflow.
7462:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_IsActiveFlag_JQOVF
7463:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7464:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7465:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7466:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JQOVF(const ADC_TypeDef *ADCx)
7467:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7468:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JQOVF) == (LL_ADC_FLAG_JQOVF)) ? 1UL : 0UL);
7469:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7470:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7471:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7472:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
7473:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
7474:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7475:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7476:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7477:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(const ADC_TypeDef *ADCx)
7478:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7479:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
7480:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7481:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7482:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7483:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
7484:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
7485:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7486:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7487:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7488:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(const ADC_TypeDef *ADCx)
7489:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7490:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
7491:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7492:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7493:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7494:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
7495:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
7496:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7497:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7498:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7499:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(const ADC_TypeDef *ADCx)
7500:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7501:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
7502:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7503:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7504:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7505:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
7506:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
ARM GAS  /tmp/cc46GlVT.s 			page 293


7507:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7508:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7509:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
7510:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7511:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7512:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7513:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
7514:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7515:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
7516:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7517:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7518:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7519:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
7520:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
7521:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7522:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7523:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7524:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
7525:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7526:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
7527:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7528:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7529:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7530:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
7531:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
7532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7533:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7535:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
7536:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7537:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
7538:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7539:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7540:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7541:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
7542:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
7543:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7544:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7545:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7546:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
7547:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7548:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
7549:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7550:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7551:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7552:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
7553:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
7554:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7555:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7556:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7557:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
7558:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7559:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
7560:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7561:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7562:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7563:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of unitary conversion.
ARM GAS  /tmp/cc46GlVT.s 			page 294


7564:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_ClearFlag_JEOC
7565:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7566:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7567:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7568:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOC(ADC_TypeDef *ADCx)
7569:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7570:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOC);
7571:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7572:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7573:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7574:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of sequence conversions.
7575:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_ClearFlag_JEOS
7576:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7577:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7578:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7579:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOS(ADC_TypeDef *ADCx)
7580:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7581:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOS);
7582:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7583:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7584:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7585:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Clear flag ADC group injected contexts queue overflow.
7586:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_ClearFlag_JQOVF
7587:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7588:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7589:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7590:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JQOVF(ADC_TypeDef *ADCx)
7591:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7592:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JQOVF);
7593:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7594:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7595:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7596:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
7597:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
7598:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7599:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7600:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7601:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
 3992              		.loc 2 7601 22 view .LVU1235
 3993              	.LBB687:
7602:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7603:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 3994              		.loc 2 7603 3 view .LVU1236
 3995 0120 8022     		movs	r2, #128
 3996 0122 1A60     		str	r2, [r3]
 3997              	.LVL324:
 3998              		.loc 2 7603 3 is_stmt 0 view .LVU1237
 3999              	.LBE687:
 4000              	.LBE686:
3164:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 4001              		.loc 1 3164 7 is_stmt 1 view .LVU1238
3164:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 4002              		.loc 1 3164 27 is_stmt 0 view .LVU1239
 4003 0124 0B7B     		ldrb	r3, [r1, #12]	@ zero_extendqisi2
3164:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 4004              		.loc 1 3164 10 view .LVU1240
 4005 0126 012B     		cmp	r3, #1
ARM GAS  /tmp/cc46GlVT.s 			page 295


 4006 0128 22D0     		beq	.L282
3170:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 4007              		.loc 1 3170 9 is_stmt 1 view .LVU1241
 4008 012a 0268     		ldr	r2, [r0]
 4009              	.LVL325:
 4010              	.LBB688:
 4011              	.LBI688:
7604:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7605:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7606:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7607:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
7608:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
7609:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7610:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7611:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7612:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
7613:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7614:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
7615:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7616:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7617:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7618:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
7619:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
7620:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7621:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7622:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7623:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
7624:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7625:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
7626:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7627:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7628:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
7629:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7630:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC master.
7631:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_MST      LL_ADC_IsActiveFlag_MST_ADRDY
7632:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7633:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7634:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7635:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7636:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_ADRDY(const ADC_Common_TypeDef *ADCxy_COMMON)
7637:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7638:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_MST) == (LL_ADC_FLAG_ADRDY_MST)) ? 1UL : 0
7639:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7640:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7641:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7642:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC slave.
7643:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_SLV      LL_ADC_IsActiveFlag_SLV_ADRDY
7644:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7645:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7646:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7647:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7648:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_ADRDY(const ADC_Common_TypeDef *ADCxy_COMMON)
7649:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7650:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_SLV) == (LL_ADC_FLAG_ADRDY_SLV)) ? 1UL : 0
7651:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7652:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7653:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
ARM GAS  /tmp/cc46GlVT.s 			page 296


7654:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC master.
7655:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      EOC_MST        LL_ADC_IsActiveFlag_MST_EOC
7656:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7657:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7658:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7659:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7660:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOC(const ADC_Common_TypeDef *ADCxy_COMMON)
7661:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7662:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
7663:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7664:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7665:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7666:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC slave.
7667:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      EOC_SLV        LL_ADC_IsActiveFlag_SLV_EOC
7668:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7669:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7670:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7671:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7672:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOC(const ADC_Common_TypeDef *ADCxy_COMMON)
7673:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7674:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
7675:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7676:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7677:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7678:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC master.
7679:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      EOS_MST        LL_ADC_IsActiveFlag_MST_EOS
7680:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7681:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7682:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7683:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7684:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOS(const ADC_Common_TypeDef *ADCxy_COMMON)
7685:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7686:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_MST) == (LL_ADC_FLAG_EOS_MST)) ? 1UL : 0UL);
7687:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7688:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7689:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7690:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC slave.
7691:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      EOS_SLV        LL_ADC_IsActiveFlag_SLV_EOS
7692:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7693:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7694:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7695:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7696:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOS(const ADC_Common_TypeDef *ADCxy_COMMON)
7697:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7698:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_SLV) == (LL_ADC_FLAG_EOS_SLV)) ? 1UL : 0UL);
7699:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7700:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7701:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7702:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC master.
7703:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      OVR_MST        LL_ADC_IsActiveFlag_MST_OVR
7704:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7705:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7706:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7707:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7708:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_OVR(const ADC_Common_TypeDef *ADCxy_COMMON)
7709:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7710:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_MST) == (LL_ADC_FLAG_OVR_MST)) ? 1UL : 0UL);
ARM GAS  /tmp/cc46GlVT.s 			page 297


7711:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7712:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7713:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7714:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC slave.
7715:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      OVR_SLV        LL_ADC_IsActiveFlag_SLV_OVR
7716:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7717:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7718:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7719:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7720:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_OVR(const ADC_Common_TypeDef *ADCxy_COMMON)
7721:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7722:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_SLV) == (LL_ADC_FLAG_OVR_SLV)) ? 1UL : 0UL);
7723:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7724:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7725:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7726:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC master.
7727:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_MST      LL_ADC_IsActiveFlag_MST_EOSMP
7728:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7729:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7730:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7731:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7732:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOSMP(const ADC_Common_TypeDef *ADCxy_COMMON)
7733:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7734:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_MST) == (LL_ADC_FLAG_EOSMP_MST)) ? 1UL : 0
7735:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7736:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7737:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7738:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC slave.
7739:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_SLV      LL_ADC_IsActiveFlag_SLV_EOSMP
7740:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7741:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7742:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7743:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7744:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOSMP(const ADC_Common_TypeDef *ADCxy_COMMON)
7745:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7746:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_SLV) == (LL_ADC_FLAG_EOSMP_SLV)) ? 1UL : 0
7747:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7748:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7749:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7750:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC master.
7751:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      JEOC_MST       LL_ADC_IsActiveFlag_MST_JEOC
7752:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7753:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7754:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7755:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7756:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOC(const ADC_Common_TypeDef *ADCxy_COMMON)
7757:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7758:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_MST) == (LL_ADC_FLAG_JEOC_MST)) ? 1UL : 0UL
7759:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7760:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7761:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7762:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC slave.
7763:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      JEOC_SLV       LL_ADC_IsActiveFlag_SLV_JEOC
7764:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7765:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7766:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7767:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc46GlVT.s 			page 298


7768:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOC(const ADC_Common_TypeDef *ADCxy_COMMON)
7769:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7770:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_SLV) == (LL_ADC_FLAG_JEOC_SLV)) ? 1UL : 0UL
7771:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7772:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7773:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7774:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC master.
7775:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      JEOS_MST       LL_ADC_IsActiveFlag_MST_JEOS
7776:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7777:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7778:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7779:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7780:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOS(const ADC_Common_TypeDef *ADCxy_COMMON)
7781:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7782:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_MST) == (LL_ADC_FLAG_JEOS_MST)) ? 1UL : 0UL
7783:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7784:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7785:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7786:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC slave.
7787:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      JEOS_SLV       LL_ADC_IsActiveFlag_SLV_JEOS
7788:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7789:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7790:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7791:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7792:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOS(const ADC_Common_TypeDef *ADCxy_COMMON)
7793:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7794:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_SLV) == (LL_ADC_FLAG_JEOS_SLV)) ? 1UL : 0UL
7795:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7796:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7797:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7798:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC master.
7799:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_MST      LL_ADC_IsActiveFlag_MST_JQOVF
7800:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7801:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7802:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7803:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7804:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JQOVF(const ADC_Common_TypeDef *ADCxy_COMMON)
7805:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7806:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_MST) == (LL_ADC_FLAG_JQOVF_MST)) ? 1UL : 0
7807:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7808:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7809:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7810:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC slave.
7811:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_SLV      LL_ADC_IsActiveFlag_SLV_JQOVF
7812:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7813:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7814:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7815:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7816:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JQOVF(const ADC_Common_TypeDef *ADCxy_COMMON)
7817:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7818:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_SLV) == (LL_ADC_FLAG_JQOVF_SLV)) ? 1UL : 0
7819:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7820:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7821:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7822:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 1 of the ADC master.
7823:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      AWD1_MST       LL_ADC_IsActiveFlag_MST_AWD1
7824:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
ARM GAS  /tmp/cc46GlVT.s 			page 299


7825:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7826:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7827:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7828:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD1(const ADC_Common_TypeDef *ADCxy_COMMON)
7829:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7830:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_MST) == (LL_ADC_FLAG_AWD1_MST)) ? 1UL : 0UL
7831:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7832:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7833:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7834:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode analog watchdog 1 of the ADC slave.
7835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      AWD1_SLV       LL_ADC_IsActiveFlag_SLV_AWD1
7836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7837:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7838:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7839:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7840:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD1(const ADC_Common_TypeDef *ADCxy_COMMON)
7841:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_SLV) == (LL_ADC_FLAG_AWD1_SLV)) ? 1UL : 0UL
7843:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7844:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7845:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7846:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC master.
7847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      AWD2_MST       LL_ADC_IsActiveFlag_MST_AWD2
7848:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7849:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7851:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7852:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD2(const ADC_Common_TypeDef *ADCxy_COMMON)
7853:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7854:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_MST) == (LL_ADC_FLAG_AWD2_MST)) ? 1UL : 0UL
7855:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7856:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7857:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7858:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC slave.
7859:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      AWD2_SLV       LL_ADC_IsActiveFlag_SLV_AWD2
7860:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7861:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7862:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7863:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7864:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD2(const ADC_Common_TypeDef *ADCxy_COMMON)
7865:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7866:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_SLV) == (LL_ADC_FLAG_AWD2_SLV)) ? 1UL : 0UL
7867:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7868:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7870:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC master.
7871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      AWD3_MST       LL_ADC_IsActiveFlag_MST_AWD3
7872:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7873:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7874:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7875:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7876:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD3(const ADC_Common_TypeDef *ADCxy_COMMON)
7877:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7878:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_MST) == (LL_ADC_FLAG_AWD3_MST)) ? 1UL : 0UL
7879:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7881:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
ARM GAS  /tmp/cc46GlVT.s 			page 300


7882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC slave.
7883:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll CSR      AWD3_SLV       LL_ADC_IsActiveFlag_SLV_AWD3
7884:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7885:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7886:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7887:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7888:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD3(const ADC_Common_TypeDef *ADCxy_COMMON)
7889:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7890:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_SLV) == (LL_ADC_FLAG_AWD3_SLV)) ? 1UL : 0UL
7891:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7892:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
7893:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7894:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7895:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @}
7896:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7897:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7898:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
7899:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @{
7900:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7901:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7902:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7903:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable ADC ready.
7904:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
7905:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7906:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7907:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7908:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
7909:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7910:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7911:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7912:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7913:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7914:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
7915:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
7916:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7917:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7918:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7919:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
7920:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7921:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
7922:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7923:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7924:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7925:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
7926:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
7927:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7928:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7929:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7930:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
7931:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7932:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
7933:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7934:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7935:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7936:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
7937:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
7938:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/cc46GlVT.s 			page 301


7939:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7940:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7941:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
7942:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7943:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
7944:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7945:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7946:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7947:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
7948:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
7949:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7950:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7951:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7952:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
7953:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7954:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7956:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7957:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7958:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of unitary conversion.
7959:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_EnableIT_JEOC
7960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7961:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7962:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOC(ADC_TypeDef *ADCx)
7964:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7965:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7966:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7967:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7968:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7969:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of sequence conversions.
7970:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_EnableIT_JEOS
7971:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7972:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7973:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7974:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOS(ADC_TypeDef *ADCx)
7975:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7976:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7977:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7978:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7979:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7980:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected context queue overflow.
7981:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_EnableIT_JQOVF
7982:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7983:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7984:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
7985:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JQOVF(ADC_TypeDef *ADCx)
7986:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7987:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7988:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
7989:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
7990:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
7991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
7992:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
7993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
7994:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
7995:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
ARM GAS  /tmp/cc46GlVT.s 			page 302


7996:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
7997:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
7998:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
7999:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
8000:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
8001:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
8002:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
8003:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
8004:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
8005:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
8006:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
8007:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
8008:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
8009:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
8010:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
8011:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
8012:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
8013:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
8014:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
8015:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
8016:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
8017:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
8018:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
8019:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
8020:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
8021:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
8022:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
8023:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
8024:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
8025:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
8026:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
8027:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
8028:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
8029:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
8030:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
8031:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
8032:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
8033:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
8034:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
8035:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
8036:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
8037:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
8038:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
8039:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
8040:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
8041:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
8042:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
8043:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
8044:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
8045:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
8046:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
8047:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
8048:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
8049:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
8050:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
8051:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
8052:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
ARM GAS  /tmp/cc46GlVT.s 			page 303


8053:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
8054:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
8055:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
8056:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
8057:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
8058:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
8059:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
8060:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
8061:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
8062:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
8063:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
8064:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
8065:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
8066:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
8067:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
8068:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
8069:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
8070:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
8071:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
8072:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
8073:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
8074:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
8075:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
8076:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
8077:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
8078:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
8079:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
8080:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_DisableIT_JEOC
8081:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
8082:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
8083:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
8084:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOC(ADC_TypeDef *ADCx)
8085:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
8086:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOC);
8087:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
8088:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
8089:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
8090:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected end of sequence conversions.
8091:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_DisableIT_JEOS
8092:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
8093:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
8094:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
8095:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOS(ADC_TypeDef *ADCx)
8096:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
8097:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOS);
8098:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
8099:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
8100:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
8101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected context queue overflow.
8102:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_DisableIT_JQOVF
8103:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
8104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
8105:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
8106:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JQOVF(ADC_TypeDef *ADCx)
8107:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
8108:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
8109:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
ARM GAS  /tmp/cc46GlVT.s 			page 304


8110:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
8111:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
8112:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
8113:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
8114:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
8115:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
8116:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
8117:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
 4012              		.loc 2 8117 22 view .LVU1242
 4013              	.LBB689:
8118:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
8119:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 4014              		.loc 2 8119 3 view .LVU1243
 4015 012c 5368     		ldr	r3, [r2, #4]
 4016 012e 23F08003 		bic	r3, r3, #128
 4017 0132 5360     		str	r3, [r2, #4]
8120:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4018              		.loc 2 8120 1 is_stmt 0 view .LVU1244
 4019 0134 8CE0     		b	.L241
 4020              	.LVL326:
 4021              	.L243:
 4022              		.loc 2 8120 1 view .LVU1245
 4023              	.LBE689:
 4024              	.LBE688:
3121:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
 4025              		.loc 1 3121 11 is_stmt 1 view .LVU1246
3122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                                                           LL_ADC_GROUP_INJECTED));
 4026              		.loc 1 3122 43 is_stmt 0 view .LVU1247
 4027 0136 8A68     		ldr	r2, [r1, #8]
 4028              	.LVL327:
 4029              	.LBB690:
 4030              	.LBI690:
5836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4031              		.loc 2 5836 22 is_stmt 1 view .LVU1248
 4032              	.LBB691:
5842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
 4033              		.loc 2 5842 3 view .LVU1249
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4034              		.loc 2 5847 3 view .LVU1250
 4035 0138 E368     		ldr	r3, [r4, #12]
 4036 013a 23F0FB43 		bic	r3, r3, #2105540608
 4037 013e 23F48003 		bic	r3, r3, #4194304
 4038 0142 02F0F842 		and	r2, r2, #2080374784
 4039              	.LVL328:
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4040              		.loc 2 5847 3 is_stmt 0 view .LVU1251
 4041 0146 42F0A072 		orr	r2, r2, #20971520
 4042 014a 1343     		orrs	r3, r3, r2
 4043 014c E360     		str	r3, [r4, #12]
 4044              	.LVL329:
5850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4045              		.loc 2 5850 1 view .LVU1252
 4046 014e DBE7     		b	.L251
 4047              	.LVL330:
 4048              	.L249:
5850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4049              		.loc 2 5850 1 view .LVU1253
ARM GAS  /tmp/cc46GlVT.s 			page 305


 4050              	.LBE691:
 4051              	.LBE690:
3141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
 4052              		.loc 1 3141 11 is_stmt 1 view .LVU1254
 4053              	.LBB692:
 4054              	.LBI692:
5836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4055              		.loc 2 5836 22 view .LVU1255
 4056              	.LBB693:
5842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
 4057              		.loc 2 5842 3 view .LVU1256
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4058              		.loc 2 5847 3 view .LVU1257
 4059 0150 E368     		ldr	r3, [r4, #12]
 4060 0152 23F0FB43 		bic	r3, r3, #2105540608
 4061 0156 23F48003 		bic	r3, r3, #4194304
 4062 015a 43F0C073 		orr	r3, r3, #25165824
 4063 015e E360     		str	r3, [r4, #12]
5850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4064              		.loc 2 5850 1 is_stmt 0 view .LVU1258
 4065 0160 D2E7     		b	.L251
 4066              	.LVL331:
 4067              	.L248:
5850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4068              		.loc 2 5850 1 view .LVU1259
 4069              	.LBE693:
 4070              	.LBE692:
3145:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
 4071              		.loc 1 3145 11 is_stmt 1 view .LVU1260
 4072              	.LBB694:
 4073              	.LBI694:
5836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4074              		.loc 2 5836 22 view .LVU1261
 4075              	.LBB695:
5842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
 4076              		.loc 2 5842 3 view .LVU1262
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4077              		.loc 2 5847 3 view .LVU1263
 4078 0162 E368     		ldr	r3, [r4, #12]
 4079 0164 23F0FB43 		bic	r3, r3, #2105540608
 4080 0168 23F48003 		bic	r3, r3, #4194304
 4081 016c E360     		str	r3, [r4, #12]
5850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4082              		.loc 2 5850 1 is_stmt 0 view .LVU1264
 4083 016e CBE7     		b	.L251
 4084              	.LVL332:
 4085              	.L282:
5850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4086              		.loc 2 5850 1 view .LVU1265
 4087              	.LBE695:
 4088              	.LBE694:
3166:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 4089              		.loc 1 3166 9 is_stmt 1 view .LVU1266
 4090 0170 0268     		ldr	r2, [r0]
 4091              	.LVL333:
 4092              	.LBB696:
 4093              	.LBI696:
ARM GAS  /tmp/cc46GlVT.s 			page 306


7996:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4094              		.loc 2 7996 22 view .LVU1267
 4095              	.LBB697:
7998:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4096              		.loc 2 7998 3 view .LVU1268
 4097 0172 5368     		ldr	r3, [r2, #4]
 4098 0174 43F08003 		orr	r3, r3, #128
 4099 0178 5360     		str	r3, [r2, #4]
7999:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4100              		.loc 2 7999 1 is_stmt 0 view .LVU1269
 4101 017a 69E0     		b	.L241
 4102              	.LVL334:
 4103              	.L254:
7999:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4104              		.loc 2 7999 1 view .LVU1270
 4105              	.LBE697:
 4106              	.LBE696:
3176:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 4107              		.loc 1 3176 7 view .LVU1271
 4108 017c B2F1C07F 		cmp	r2, #25165824
 4109 0180 3AD0     		beq	.L255
 4110 0182 B2F1E07F 		cmp	r2, #29360128
 4111 0186 7FF46CAF 		bne	.L256
 4112              	.L253:
3183:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 4113              		.loc 1 3183 11 is_stmt 1 view .LVU1272
3183:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 4114              		.loc 1 3183 14 is_stmt 0 view .LVU1273
 4115 018a 5E4A     		ldr	r2, .L288+4
 4116 018c 9342     		cmp	r3, r2
 4117 018e 0DD0     		beq	.L283
3190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                     (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig->Channel) & 0x1FUL)));
 4118              		.loc 1 3190 13 is_stmt 1 view .LVU1274
 4119 0190 8B68     		ldr	r3, [r1, #8]
 4120 0192 C3F31302 		ubfx	r2, r3, #0, #20
 4121 0196 1ABB     		cbnz	r2, .L262
3190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                     (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig->Channel) & 0x1FUL)));
 4122              		.loc 1 3190 13 is_stmt 0 discriminator 1 view .LVU1275
 4123 0198 C3F38463 		ubfx	r3, r3, #26, #5
 4124 019c 0122     		movs	r2, #1
 4125 019e 9A40     		lsls	r2, r2, r3
 4126              	.L263:
3190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                     (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig->Channel) & 0x1FUL)));
 4127              		.loc 1 3190 13 discriminator 4 view .LVU1276
 4128 01a0 D4F8A430 		ldr	r3, [r4, #164]
 4129 01a4 1343     		orrs	r3, r3, r2
 4130 01a6 C4F8A430 		str	r3, [r4, #164]
 4131 01aa 3DE0     		b	.L261
 4132              	.L283:
3185:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                     (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig->Channel) & 0x1FUL)));
 4133              		.loc 1 3185 13 is_stmt 1 view .LVU1277
 4134 01ac 8B68     		ldr	r3, [r1, #8]
 4135 01ae C3F31302 		ubfx	r2, r3, #0, #20
 4136 01b2 4AB9     		cbnz	r2, .L258
3185:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                     (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig->Channel) & 0x1FUL)));
 4137              		.loc 1 3185 13 is_stmt 0 discriminator 1 view .LVU1278
 4138 01b4 C3F38463 		ubfx	r3, r3, #26, #5
ARM GAS  /tmp/cc46GlVT.s 			page 307


 4139 01b8 0122     		movs	r2, #1
 4140 01ba 9A40     		lsls	r2, r2, r3
 4141              	.L259:
3185:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                     (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig->Channel) & 0x1FUL)));
 4142              		.loc 1 3185 13 discriminator 4 view .LVU1279
 4143 01bc D4F8A030 		ldr	r3, [r4, #160]
 4144 01c0 1343     		orrs	r3, r3, r2
 4145 01c2 C4F8A030 		str	r3, [r4, #160]
 4146 01c6 2FE0     		b	.L261
 4147              	.L258:
 4148              	.LVL335:
 4149              	.LBB698:
 4150              	.LBI698:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4151              		.loc 3 373 31 is_stmt 1 discriminator 2 view .LVU1280
 4152              	.LBB699:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4153              		.loc 3 375 3 discriminator 2 view .LVU1281
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4154              		.loc 3 380 4 discriminator 2 view .LVU1282
 4155              		.syntax unified
 4156              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4157 01c8 93FAA3F3 		rbit r3, r3
 4158              	@ 0 "" 2
 4159              	.LVL336:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4160              		.loc 3 393 3 discriminator 2 view .LVU1283
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4161              		.loc 3 393 3 is_stmt 0 discriminator 2 view .LVU1284
 4162              		.thumb
 4163              		.syntax unified
 4164              	.LBE699:
 4165              	.LBE698:
 4166              	.LBB700:
 4167              	.LBI700:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4168              		.loc 3 403 30 is_stmt 1 discriminator 2 view .LVU1285
 4169              	.LBB701:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4170              		.loc 3 414 3 discriminator 2 view .LVU1286
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4171              		.loc 3 414 6 is_stmt 0 discriminator 2 view .LVU1287
 4172 01cc 33B1     		cbz	r3, .L274
 4173              		.loc 3 418 3 is_stmt 1 view .LVU1288
 4174              		.loc 3 418 10 is_stmt 0 view .LVU1289
 4175 01ce B3FA83F3 		clz	r3, r3
 4176              	.LVL337:
 4177              	.L260:
 4178              		.loc 3 418 10 view .LVU1290
 4179              	.LBE701:
 4180              	.LBE700:
3185:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                     (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig->Channel) & 0x1FUL)));
 4181              		.loc 1 3185 13 view .LVU1291
 4182 01d2 03F01F03 		and	r3, r3, #31
 4183 01d6 0122     		movs	r2, #1
 4184 01d8 9A40     		lsls	r2, r2, r3
 4185 01da EFE7     		b	.L259
ARM GAS  /tmp/cc46GlVT.s 			page 308


 4186              	.LVL338:
 4187              	.L274:
 4188              	.LBB703:
 4189              	.LBB702:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4190              		.loc 3 416 12 view .LVU1292
 4191 01dc 2023     		movs	r3, #32
 4192              	.LVL339:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4193              		.loc 3 416 12 view .LVU1293
 4194 01de F8E7     		b	.L260
 4195              	.L262:
 4196              	.LVL340:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4197              		.loc 3 416 12 view .LVU1294
 4198              	.LBE702:
 4199              	.LBE703:
 4200              	.LBB704:
 4201              	.LBI704:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4202              		.loc 3 373 31 is_stmt 1 discriminator 2 view .LVU1295
 4203              	.LBB705:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4204              		.loc 3 375 3 discriminator 2 view .LVU1296
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4205              		.loc 3 380 4 discriminator 2 view .LVU1297
 4206              		.syntax unified
 4207              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4208 01e0 93FAA3F3 		rbit r3, r3
 4209              	@ 0 "" 2
 4210              	.LVL341:
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4211              		.loc 3 393 3 discriminator 2 view .LVU1298
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4212              		.loc 3 393 3 is_stmt 0 discriminator 2 view .LVU1299
 4213              		.thumb
 4214              		.syntax unified
 4215              	.LBE705:
 4216              	.LBE704:
 4217              	.LBB706:
 4218              	.LBI706:
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4219              		.loc 3 403 30 is_stmt 1 discriminator 2 view .LVU1300
 4220              	.LBB707:
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4221              		.loc 3 414 3 discriminator 2 view .LVU1301
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4222              		.loc 3 414 6 is_stmt 0 discriminator 2 view .LVU1302
 4223 01e4 33B1     		cbz	r3, .L275
 4224              		.loc 3 418 3 is_stmt 1 view .LVU1303
 4225              		.loc 3 418 10 is_stmt 0 view .LVU1304
 4226 01e6 B3FA83F3 		clz	r3, r3
 4227              	.LVL342:
 4228              	.L264:
 4229              		.loc 3 418 10 view .LVU1305
 4230              	.LBE707:
 4231              	.LBE706:
ARM GAS  /tmp/cc46GlVT.s 			page 309


3190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                     (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig->Channel) & 0x1FUL)));
 4232              		.loc 1 3190 13 view .LVU1306
 4233 01ea 03F01F03 		and	r3, r3, #31
 4234 01ee 0122     		movs	r2, #1
 4235 01f0 9A40     		lsls	r2, r2, r3
 4236 01f2 D5E7     		b	.L263
 4237              	.LVL343:
 4238              	.L275:
 4239              	.LBB709:
 4240              	.LBB708:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4241              		.loc 3 416 12 view .LVU1307
 4242 01f4 2023     		movs	r3, #32
 4243              	.LVL344:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4244              		.loc 3 416 12 view .LVU1308
 4245 01f6 F8E7     		b	.L264
 4246              	.L255:
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4247              		.loc 3 416 12 view .LVU1309
 4248              	.LBE708:
 4249              	.LBE709:
3198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                           pAnalogWDGConfig->WatchdogNumber, LL_ADC_AWD_ALL_CHANNELS
 4250              		.loc 1 3198 11 is_stmt 1 view .LVU1310
 4251              	.LVL345:
 4252              	.LBB710:
 4253              	.LBI710:
5836:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4254              		.loc 2 5836 22 view .LVU1311
 4255              	.LBB711:
5842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
 4256              		.loc 2 5842 3 view .LVU1312
5842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
 4257              		.loc 2 5842 25 is_stmt 0 view .LVU1313
 4258 01f8 0C34     		adds	r4, r4, #12
 4259              	.LVL346:
5842:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
 4260              		.loc 2 5842 25 view .LVU1314
 4261 01fa C3F30155 		ubfx	r5, r3, #20, #2
 4262 01fe 03F00102 		and	r2, r3, #1
 4263 0202 02EBC202 		add	r2, r2, r2, lsl #3
 4264 0206 05EB8205 		add	r5, r5, r2, lsl #2
 4265              	.LVL347:
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4266              		.loc 2 5847 3 is_stmt 1 view .LVU1315
 4267 020a 54F82520 		ldr	r2, [r4, r5, lsl #2]
 4268 020e 23F0024C 		bic	ip, r3, #-2113929216
 4269 0212 2CF4401C 		bic	ip, ip, #3145728
 4270 0216 22EA0C02 		bic	r2, r2, ip
 4271 021a 23F07E43 		bic	r3, r3, #-33554432
 4272              	.LVL348:
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4273              		.loc 2 5847 3 is_stmt 0 view .LVU1316
 4274 021e 23F4E003 		bic	r3, r3, #7340032
 4275 0222 1343     		orrs	r3, r3, r2
 4276 0224 44F82530 		str	r3, [r4, r5, lsl #2]
 4277              	.LVL349:
ARM GAS  /tmp/cc46GlVT.s 			page 310


 4278              	.L261:
5847:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4279              		.loc 2 5847 3 view .LVU1317
 4280              	.LBE711:
 4281              	.LBE710:
3207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 4282              		.loc 1 3207 7 is_stmt 1 view .LVU1318
3207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 4283              		.loc 1 3207 27 is_stmt 0 view .LVU1319
 4284 0228 0A68     		ldr	r2, [r1]
3207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 4285              		.loc 1 3207 10 view .LVU1320
 4286 022a 364B     		ldr	r3, .L288+4
 4287 022c 9A42     		cmp	r2, r3
 4288 022e 49D0     		beq	.L284
3232:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4289              		.loc 1 3232 9 is_stmt 1 view .LVU1321
 4290 0230 836D     		ldr	r3, [r0, #88]
 4291 0232 23F48023 		bic	r3, r3, #262144
 4292 0236 8365     		str	r3, [r0, #88]
3238:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4293              		.loc 1 3238 9 view .LVU1322
 4294 0238 0368     		ldr	r3, [r0]
 4295              	.LVL350:
 4296              	.LBB712:
 4297              	.LBI712:
7623:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4298              		.loc 2 7623 22 view .LVU1323
 4299              	.LBB713:
7625:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4300              		.loc 2 7625 3 view .LVU1324
 4301 023a 4FF40072 		mov	r2, #512
 4302 023e 1A60     		str	r2, [r3]
 4303              	.LVL351:
7625:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4304              		.loc 2 7625 3 is_stmt 0 view .LVU1325
 4305              	.LBE713:
 4306              	.LBE712:
3241:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 4307              		.loc 1 3241 9 is_stmt 1 view .LVU1326
3241:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 4308              		.loc 1 3241 29 is_stmt 0 view .LVU1327
 4309 0240 0B7B     		ldrb	r3, [r1, #12]	@ zero_extendqisi2
3241:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 4310              		.loc 1 3241 12 view .LVU1328
 4311 0242 012B     		cmp	r3, #1
 4312 0244 55D0     		beq	.L285
3247:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 4313              		.loc 1 3247 11 is_stmt 1 view .LVU1329
 4314 0246 0268     		ldr	r2, [r0]
 4315              	.LVL352:
 4316              	.LBB714:
 4317              	.LBI714:
8121:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
8122:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
8123:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
8124:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
ARM GAS  /tmp/cc46GlVT.s 			page 311


8125:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
8126:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
8127:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
8128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
8129:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
8130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
8131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
8132:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
8133:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** /**
8134:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
8135:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
8136:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @param  ADCx ADC instance
8137:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   * @retval None
8138:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   */
8139:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
 4318              		.loc 2 8139 22 view .LVU1330
 4319              	.LBB715:
8140:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
8141:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 4320              		.loc 2 8141 3 view .LVU1331
 4321 0248 5368     		ldr	r3, [r2, #4]
 4322 024a 23F40073 		bic	r3, r3, #512
 4323 024e 5360     		str	r3, [r2, #4]
 4324              	.LVL353:
 4325              	.L241:
 4326              		.loc 2 8141 3 is_stmt 0 view .LVU1332
 4327              	.LBE715:
 4328              	.LBE714:
3255:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 4329              		.loc 1 3255 3 is_stmt 1 view .LVU1333
3255:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 4330              		.loc 1 3255 23 is_stmt 0 view .LVU1334
 4331 0250 0B68     		ldr	r3, [r1]
3255:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 4332              		.loc 1 3255 6 view .LVU1335
 4333 0252 2B4A     		ldr	r2, .L288
 4334 0254 9342     		cmp	r3, r2
 4335 0256 57D0     		beq	.L286
3269:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Lo
 4336              		.loc 1 3269 5 is_stmt 1 view .LVU1336
3269:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Lo
 4337              		.loc 1 3269 38 is_stmt 0 view .LVU1337
 4338 0258 0568     		ldr	r5, [r0]
 4339 025a EA68     		ldr	r2, [r5, #12]
 4340 025c 02F01802 		and	r2, r2, #24
 4341 0260 182A     		cmp	r2, #24
 4342 0262 61D0     		beq	.L270
3269:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Lo
 4343              		.loc 1 3269 38 discriminator 1 view .LVU1338
 4344 0264 0A69     		ldr	r2, [r1, #16]
 4345 0266 EC68     		ldr	r4, [r5, #12]
 4346 0268 C4F3C10E 		ubfx	lr, r4, #3, #2
 4347 026c CEF1020E 		rsb	lr, lr, #2
 4348 0270 4FEA4E0E 		lsl	lr, lr, #1
 4349 0274 0EF01E0E 		and	lr, lr, #30
 4350 0278 22FA0EFE 		lsr	lr, r2, lr
 4351              	.L271:
ARM GAS  /tmp/cc46GlVT.s 			page 312


 4352              	.LVL354:
3270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 4353              		.loc 1 3270 5 is_stmt 1 discriminator 4 view .LVU1339
3270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 4354              		.loc 1 3270 38 is_stmt 0 discriminator 4 view .LVU1340
 4355 027c EA68     		ldr	r2, [r5, #12]
 4356 027e 02F01802 		and	r2, r2, #24
 4357 0282 182A     		cmp	r2, #24
 4358 0284 54D0     		beq	.L272
3270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 4359              		.loc 1 3270 38 discriminator 1 view .LVU1341
 4360 0286 4969     		ldr	r1, [r1, #20]
 4361              	.LVL355:
3270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 4362              		.loc 1 3270 38 discriminator 1 view .LVU1342
 4363 0288 EA68     		ldr	r2, [r5, #12]
 4364 028a C2F3C102 		ubfx	r2, r2, #3, #2
 4365 028e C2F10202 		rsb	r2, r2, #2
 4366 0292 5200     		lsls	r2, r2, #1
 4367 0294 02F01E02 		and	r2, r2, #30
 4368 0298 D140     		lsrs	r1, r1, r2
 4369              	.L269:
 4370              	.LVL356:
3274:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                   tmp_awd_low_threshold_shifted);
 4371              		.loc 1 3274 3 is_stmt 1 view .LVU1343
 4372 029a 0268     		ldr	r2, [r0]
 4373              	.LVL357:
 4374              	.LBB716:
 4375              	.LBI716:
6093:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
 4376              		.loc 2 6093 22 view .LVU1344
 4377              	.LBB717:
6101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
 4378              		.loc 2 6101 3 view .LVU1345
6101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
 4379              		.loc 2 6101 25 is_stmt 0 view .LVU1346
 4380 029c 02F1200C 		add	ip, r2, #32
 4381 02a0 1B0D     		lsrs	r3, r3, #20
 4382              	.LVL358:
6101:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
 4383              		.loc 2 6101 25 view .LVU1347
 4384 02a2 9B00     		lsls	r3, r3, #2
 4385 02a4 03F00C03 		and	r3, r3, #12
 4386              	.LVL359:
6104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 4387              		.loc 2 6104 3 is_stmt 1 view .LVU1348
 4388 02a8 5CF80320 		ldr	r2, [ip, r3]
 4389              	.LVL360:
6104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 4390              		.loc 2 6104 3 is_stmt 0 view .LVU1349
 4391 02ac 02F0F022 		and	r2, r2, #-268374016
 4392 02b0 41EA0E41 		orr	r1, r1, lr, lsl #16
 4393              	.LVL361:
6104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 4394              		.loc 2 6104 3 view .LVU1350
 4395 02b4 0A43     		orrs	r2, r2, r1
 4396 02b6 4CF80320 		str	r2, [ip, r3]
ARM GAS  /tmp/cc46GlVT.s 			page 313


 4397              	.LVL362:
6104:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 4398              		.loc 2 6104 3 view .LVU1351
 4399              	.LBE717:
 4400              	.LBE716:
3278:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4401              		.loc 1 3278 3 is_stmt 1 view .LVU1352
3278:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4402              		.loc 1 3278 3 view .LVU1353
 4403 02ba 0023     		movs	r3, #0
 4404 02bc 80F85430 		strb	r3, [r0, #84]
3278:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4405              		.loc 1 3278 3 view .LVU1354
3281:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 4406              		.loc 1 3281 3 view .LVU1355
3281:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 4407              		.loc 1 3281 10 is_stmt 0 view .LVU1356
 4408 02c0 1846     		mov	r0, r3
 4409              	.LVL363:
3282:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4410              		.loc 1 3282 1 view .LVU1357
 4411 02c2 30BD     		pop	{r4, r5, pc}
 4412              	.LVL364:
 4413              	.L284:
3210:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4414              		.loc 1 3210 9 is_stmt 1 view .LVU1358
 4415 02c4 836D     		ldr	r3, [r0, #88]
 4416 02c6 23F40033 		bic	r3, r3, #131072
 4417 02ca 8365     		str	r3, [r0, #88]
3216:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4418              		.loc 1 3216 9 view .LVU1359
 4419 02cc 0368     		ldr	r3, [r0]
 4420              	.LVL365:
 4421              	.LBB718:
 4422              	.LBI718:
7612:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4423              		.loc 2 7612 22 view .LVU1360
 4424              	.LBB719:
7614:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4425              		.loc 2 7614 3 view .LVU1361
 4426 02ce 4FF48072 		mov	r2, #256
 4427 02d2 1A60     		str	r2, [r3]
 4428              	.LVL366:
7614:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4429              		.loc 2 7614 3 is_stmt 0 view .LVU1362
 4430              	.LBE719:
 4431              	.LBE718:
3219:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 4432              		.loc 1 3219 9 is_stmt 1 view .LVU1363
3219:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 4433              		.loc 1 3219 29 is_stmt 0 view .LVU1364
 4434 02d4 0B7B     		ldrb	r3, [r1, #12]	@ zero_extendqisi2
3219:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 4435              		.loc 1 3219 12 view .LVU1365
 4436 02d6 012B     		cmp	r3, #1
 4437 02d8 05D0     		beq	.L287
3225:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
ARM GAS  /tmp/cc46GlVT.s 			page 314


 4438              		.loc 1 3225 11 is_stmt 1 view .LVU1366
 4439 02da 0268     		ldr	r2, [r0]
 4440              	.LVL367:
 4441              	.LBB720:
 4442              	.LBI720:
8128:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4443              		.loc 2 8128 22 view .LVU1367
 4444              	.LBB721:
8130:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4445              		.loc 2 8130 3 view .LVU1368
 4446 02dc 5368     		ldr	r3, [r2, #4]
 4447 02de 23F48073 		bic	r3, r3, #256
 4448 02e2 5360     		str	r3, [r2, #4]
8131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4449              		.loc 2 8131 1 is_stmt 0 view .LVU1369
 4450 02e4 B4E7     		b	.L241
 4451              	.LVL368:
 4452              	.L287:
8131:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4453              		.loc 2 8131 1 view .LVU1370
 4454              	.LBE721:
 4455              	.LBE720:
3221:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 4456              		.loc 1 3221 11 is_stmt 1 view .LVU1371
 4457 02e6 0268     		ldr	r2, [r0]
 4458              	.LVL369:
 4459              	.LBB722:
 4460              	.LBI722:
8007:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4461              		.loc 2 8007 22 view .LVU1372
 4462              	.LBB723:
8009:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4463              		.loc 2 8009 3 view .LVU1373
 4464 02e8 5368     		ldr	r3, [r2, #4]
 4465 02ea 43F48073 		orr	r3, r3, #256
 4466 02ee 5360     		str	r3, [r2, #4]
8010:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4467              		.loc 2 8010 1 is_stmt 0 view .LVU1374
 4468 02f0 AEE7     		b	.L241
 4469              	.LVL370:
 4470              	.L285:
8010:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4471              		.loc 2 8010 1 view .LVU1375
 4472              	.LBE723:
 4473              	.LBE722:
3243:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 4474              		.loc 1 3243 11 is_stmt 1 view .LVU1376
 4475 02f2 0268     		ldr	r2, [r0]
 4476              	.LVL371:
 4477              	.LBB724:
 4478              	.LBI724:
8018:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4479              		.loc 2 8018 22 view .LVU1377
 4480              	.LBB725:
8020:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4481              		.loc 2 8020 3 view .LVU1378
 4482 02f4 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/cc46GlVT.s 			page 315


 4483 02f6 43F40073 		orr	r3, r3, #512
 4484 02fa 5360     		str	r3, [r2, #4]
8021:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4485              		.loc 2 8021 1 is_stmt 0 view .LVU1379
 4486 02fc A8E7     		b	.L241
 4487              	.L289:
 4488 02fe 00BF     		.align	2
 4489              	.L288:
 4490 0300 0000C07D 		.word	2109734912
 4491 0304 FFFF1F00 		.word	2097151
 4492              	.LVL372:
 4493              	.L286:
8021:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 4494              		.loc 2 8021 1 view .LVU1380
 4495              	.LBE725:
 4496              	.LBE724:
3260:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
 4497              		.loc 1 3260 5 is_stmt 1 view .LVU1381
3260:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
 4498              		.loc 1 3260 38 is_stmt 0 view .LVU1382
 4499 0308 0A69     		ldr	r2, [r1, #16]
 4500 030a 0568     		ldr	r5, [r0]
 4501 030c EC68     		ldr	r4, [r5, #12]
 4502 030e C4F3C10E 		ubfx	lr, r4, #3, #2
 4503 0312 4FEA4E0E 		lsl	lr, lr, #1
3260:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
 4504              		.loc 1 3260 36 view .LVU1383
 4505 0316 02FA0EFE 		lsl	lr, r2, lr
 4506              	.LVL373:
3261:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 4507              		.loc 1 3261 5 is_stmt 1 view .LVU1384
3261:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 4508              		.loc 1 3261 38 is_stmt 0 view .LVU1385
 4509 031a 4969     		ldr	r1, [r1, #20]
 4510              	.LVL374:
3261:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 4511              		.loc 1 3261 38 view .LVU1386
 4512 031c EA68     		ldr	r2, [r5, #12]
 4513 031e C2F3C102 		ubfx	r2, r2, #3, #2
 4514 0322 5200     		lsls	r2, r2, #1
3261:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 4515              		.loc 1 3261 36 view .LVU1387
 4516 0324 9140     		lsls	r1, r1, r2
 4517              	.LVL375:
3261:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 4518              		.loc 1 3261 36 view .LVU1388
 4519 0326 B8E7     		b	.L269
 4520              	.LVL376:
 4521              	.L270:
3269:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Lo
 4522              		.loc 1 3269 38 discriminator 2 view .LVU1389
 4523 0328 0A69     		ldr	r2, [r1, #16]
 4524 032a 4FEA820E 		lsl	lr, r2, #2
 4525 032e A5E7     		b	.L271
 4526              	.LVL377:
 4527              	.L272:
3270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
ARM GAS  /tmp/cc46GlVT.s 			page 316


 4528              		.loc 1 3270 38 discriminator 2 view .LVU1390
 4529 0330 4969     		ldr	r1, [r1, #20]
 4530              	.LVL378:
3270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 4531              		.loc 1 3270 38 discriminator 2 view .LVU1391
 4532 0332 8900     		lsls	r1, r1, #2
 4533 0334 B1E7     		b	.L269
 4534              	.LVL379:
 4535              	.L273:
 4536              	.LCFI15:
 4537              		.cfi_def_cfa_offset 0
 4538              		.cfi_restore 4
 4539              		.cfi_restore 5
 4540              		.cfi_restore 14
3094:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4541              		.loc 1 3094 3 view .LVU1392
 4542 0336 0220     		movs	r0, #2
 4543              	.LVL380:
3282:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4544              		.loc 1 3282 1 view .LVU1393
 4545 0338 7047     		bx	lr
 4546              		.cfi_endproc
 4547              	.LFE382:
 4549 033a 00BF     		.section	.text.HAL_ADC_GetState,"ax",%progbits
 4550              		.align	1
 4551              		.global	HAL_ADC_GetState
 4552              		.syntax unified
 4553              		.thumb
 4554              		.thumb_func
 4555              		.fpu fpv4-sp-d16
 4557              	HAL_ADC_GetState:
 4558              	.LVL381:
 4559              	.LFB383:
3317:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
 4560              		.loc 1 3317 1 is_stmt 1 view -0
 4561              		.cfi_startproc
 4562              		@ args = 0, pretend = 0, frame = 0
 4563              		@ frame_needed = 0, uses_anonymous_args = 0
 4564              		@ link register save eliminated.
3319:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4565              		.loc 1 3319 3 view .LVU1395
3322:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 4566              		.loc 1 3322 3 view .LVU1396
3322:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 4567              		.loc 1 3322 14 is_stmt 0 view .LVU1397
 4568 0000 806D     		ldr	r0, [r0, #88]
 4569              	.LVL382:
3323:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4570              		.loc 1 3323 1 view .LVU1398
 4571 0002 7047     		bx	lr
 4572              		.cfi_endproc
 4573              	.LFE383:
 4575              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 4576              		.align	1
 4577              		.global	HAL_ADC_GetError
 4578              		.syntax unified
 4579              		.thumb
ARM GAS  /tmp/cc46GlVT.s 			page 317


 4580              		.thumb_func
 4581              		.fpu fpv4-sp-d16
 4583              	HAL_ADC_GetError:
 4584              	.LVL383:
 4585              	.LFB384:
3331:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Check the parameters */
 4586              		.loc 1 3331 1 is_stmt 1 view -0
 4587              		.cfi_startproc
 4588              		@ args = 0, pretend = 0, frame = 0
 4589              		@ frame_needed = 0, uses_anonymous_args = 0
 4590              		@ link register save eliminated.
3333:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4591              		.loc 1 3333 3 view .LVU1400
3335:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 4592              		.loc 1 3335 3 view .LVU1401
3335:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 4593              		.loc 1 3335 14 is_stmt 0 view .LVU1402
 4594 0000 C06D     		ldr	r0, [r0, #92]
 4595              	.LVL384:
3336:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4596              		.loc 1 3336 1 view .LVU1403
 4597 0002 7047     		bx	lr
 4598              		.cfi_endproc
 4599              	.LFE384:
 4601              		.section	.text.ADC_ConversionStop,"ax",%progbits
 4602              		.align	1
 4603              		.global	ADC_ConversionStop
 4604              		.syntax unified
 4605              		.thumb
 4606              		.thumb_func
 4607              		.fpu fpv4-sp-d16
 4609              	ADC_ConversionStop:
 4610              	.LVL385:
 4611              	.LFB385:
3361:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tickstart;
 4612              		.loc 1 3361 1 is_stmt 1 view -0
 4613              		.cfi_startproc
 4614              		@ args = 0, pretend = 0, frame = 0
 4615              		@ frame_needed = 0, uses_anonymous_args = 0
3361:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tickstart;
 4616              		.loc 1 3361 1 is_stmt 0 view .LVU1405
 4617 0000 70B5     		push	{r4, r5, r6, lr}
 4618              	.LCFI16:
 4619              		.cfi_def_cfa_offset 16
 4620              		.cfi_offset 4, -16
 4621              		.cfi_offset 5, -12
 4622              		.cfi_offset 6, -8
 4623              		.cfi_offset 14, -4
 4624 0002 0446     		mov	r4, r0
3362:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
 4625              		.loc 1 3362 3 is_stmt 1 view .LVU1406
3363:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
 4626              		.loc 1 3363 3 view .LVU1407
 4627              	.LVL386:
3364:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
 4628              		.loc 1 3364 3 view .LVU1408
3365:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
ARM GAS  /tmp/cc46GlVT.s 			page 318


 4629              		.loc 1 3365 3 view .LVU1409
3366:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 4630              		.loc 1 3366 3 view .LVU1410
3367:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4631              		.loc 1 3367 3 view .LVU1411
3370:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
 4632              		.loc 1 3370 3 view .LVU1412
3371:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4633              		.loc 1 3371 3 view .LVU1413
3375:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 4634              		.loc 1 3375 3 view .LVU1414
3375:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 4635              		.loc 1 3375 79 is_stmt 0 view .LVU1415
 4636 0004 0368     		ldr	r3, [r0]
 4637              	.LVL387:
 4638              	.LBB726:
 4639              	.LBI726:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4640              		.loc 2 6991 26 is_stmt 1 view .LVU1416
 4641              	.LBB727:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4642              		.loc 2 6993 3 view .LVU1417
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4643              		.loc 2 6993 12 is_stmt 0 view .LVU1418
 4644 0006 9A68     		ldr	r2, [r3, #8]
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4645              		.loc 2 6993 74 view .LVU1419
 4646 0008 12F00402 		ands	r2, r2, #4
 4647 000c 00D0     		beq	.L293
 4648 000e 0122     		movs	r2, #1
 4649              	.L293:
 4650              	.LVL388:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4651              		.loc 2 6993 74 view .LVU1420
 4652              	.LBE727:
 4653              	.LBE726:
3376:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
 4654              		.loc 1 3376 3 is_stmt 1 view .LVU1421
 4655              	.LBB728:
 4656              	.LBI728:
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4657              		.loc 2 7217 26 view .LVU1422
 4658              	.LBB729:
7219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4659              		.loc 2 7219 3 view .LVU1423
7219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4660              		.loc 2 7219 12 is_stmt 0 view .LVU1424
 4661 0010 9868     		ldr	r0, [r3, #8]
 4662              	.LVL389:
7219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4663              		.loc 2 7219 76 view .LVU1425
 4664 0012 10F00800 		ands	r0, r0, #8
 4665 0016 00D0     		beq	.L294
 4666 0018 0120     		movs	r0, #1
 4667              	.L294:
 4668              	.LVL390:
7219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
ARM GAS  /tmp/cc46GlVT.s 			page 319


 4669              		.loc 2 7219 76 view .LVU1426
 4670              	.LBE729:
 4671              	.LBE728:
3377:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 4672              		.loc 1 3377 3 is_stmt 1 view .LVU1427
3377:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 4673              		.loc 1 3377 6 is_stmt 0 view .LVU1428
 4674 001a 0AB9     		cbnz	r2, .L295
3378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      )
 4675              		.loc 1 3378 7 view .LVU1429
 4676 001c 0028     		cmp	r0, #0
 4677 001e 6BD0     		beq	.L307
 4678              	.L295:
3387:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4679              		.loc 1 3387 5 is_stmt 1 view .LVU1430
3387:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4680              		.loc 1 3387 25 is_stmt 0 view .LVU1431
 4681 0020 DA68     		ldr	r2, [r3, #12]
 4682              	.LVL391:
3387:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4683              		.loc 1 3387 8 view .LVU1432
 4684 0022 12F0007F 		tst	r2, #33554432
 4685 0026 04D0     		beq	.L297
3389:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        )
 4686              		.loc 1 3389 9 view .LVU1433
 4687 0028 208B     		ldrh	r0, [r4, #24]
 4688              	.LVL392:
3389:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        )
 4689              		.loc 1 3389 9 view .LVU1434
 4690 002a 40F20112 		movw	r2, #257
 4691 002e 9042     		cmp	r0, r2
 4692 0030 4ED0     		beq	.L312
 4693              	.L297:
3416:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 4694              		.loc 1 3416 5 is_stmt 1 view .LVU1435
3416:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 4695              		.loc 1 3416 8 is_stmt 0 view .LVU1436
 4696 0032 0229     		cmp	r1, #2
 4697 0034 10D0     		beq	.L302
 4698              	.LVL393:
 4699              	.L301:
3419:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 4700              		.loc 1 3419 7 is_stmt 1 view .LVU1437
3419:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 4701              		.loc 1 3419 46 is_stmt 0 view .LVU1438
 4702 0036 2368     		ldr	r3, [r4]
 4703              	.LVL394:
 4704              	.LBB730:
 4705              	.LBI730:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4706              		.loc 2 6991 26 is_stmt 1 view .LVU1439
 4707              	.LBB731:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4708              		.loc 2 6993 3 view .LVU1440
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4709              		.loc 2 6993 12 is_stmt 0 view .LVU1441
 4710 0038 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/cc46GlVT.s 			page 320


6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4711              		.loc 2 6993 74 view .LVU1442
 4712 003a 12F0040F 		tst	r2, #4
 4713 003e 0BD0     		beq	.L302
 4714              	.LVL395:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4715              		.loc 2 6993 74 view .LVU1443
 4716              	.LBE731:
 4717              	.LBE730:
3421:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 4718              		.loc 1 3421 9 is_stmt 1 view .LVU1444
 4719              	.LBB732:
 4720              	.LBI732:
6880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4721              		.loc 2 6880 26 view .LVU1445
 4722              	.LBB733:
6882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4723              		.loc 2 6882 3 view .LVU1446
6882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4724              		.loc 2 6882 12 is_stmt 0 view .LVU1447
 4725 0040 9A68     		ldr	r2, [r3, #8]
6882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4726              		.loc 2 6882 70 view .LVU1448
 4727 0042 12F0020F 		tst	r2, #2
 4728 0046 07D1     		bne	.L302
 4729              	.LVL396:
6882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4730              		.loc 2 6882 70 view .LVU1449
 4731              	.LBE733:
 4732              	.LBE732:
3424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 4733              		.loc 1 3424 11 is_stmt 1 view .LVU1450
 4734              	.LBB734:
 4735              	.LBI734:
6975:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4736              		.loc 2 6975 22 view .LVU1451
 4737              	.LBB735:
6980:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4738              		.loc 2 6980 3 view .LVU1452
 4739 0048 9A68     		ldr	r2, [r3, #8]
 4740 004a 22F00042 		bic	r2, r2, #-2147483648
 4741 004e 22F03F02 		bic	r2, r2, #63
 4742 0052 42F01002 		orr	r2, r2, #16
 4743 0056 9A60     		str	r2, [r3, #8]
 4744              	.LVL397:
 4745              	.L302:
6980:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4746              		.loc 2 6980 3 is_stmt 0 view .LVU1453
 4747              	.LBE735:
 4748              	.LBE734:
3430:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 4749              		.loc 1 3430 5 is_stmt 1 view .LVU1454
3430:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 4750              		.loc 1 3430 8 is_stmt 0 view .LVU1455
 4751 0058 0129     		cmp	r1, #1
 4752 005a 10D0     		beq	.L303
3433:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
ARM GAS  /tmp/cc46GlVT.s 			page 321


 4753              		.loc 1 3433 7 is_stmt 1 view .LVU1456
3433:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 4754              		.loc 1 3433 46 is_stmt 0 view .LVU1457
 4755 005c 2368     		ldr	r3, [r4]
 4756              	.LVL398:
 4757              	.LBB736:
 4758              	.LBI736:
7217:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4759              		.loc 2 7217 26 is_stmt 1 view .LVU1458
 4760              	.LBB737:
7219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4761              		.loc 2 7219 3 view .LVU1459
7219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4762              		.loc 2 7219 12 is_stmt 0 view .LVU1460
 4763 005e 9A68     		ldr	r2, [r3, #8]
7219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4764              		.loc 2 7219 76 view .LVU1461
 4765 0060 12F0080F 		tst	r2, #8
 4766 0064 0BD0     		beq	.L303
 4767              	.LVL399:
7219:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4768              		.loc 2 7219 76 view .LVU1462
 4769              	.LBE737:
 4770              	.LBE736:
3435:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 4771              		.loc 1 3435 9 is_stmt 1 view .LVU1463
 4772              	.LBB738:
 4773              	.LBI738:
6880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4774              		.loc 2 6880 26 view .LVU1464
 4775              	.LBB739:
6882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4776              		.loc 2 6882 3 view .LVU1465
6882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4777              		.loc 2 6882 12 is_stmt 0 view .LVU1466
 4778 0066 9A68     		ldr	r2, [r3, #8]
6882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4779              		.loc 2 6882 70 view .LVU1467
 4780 0068 12F0020F 		tst	r2, #2
 4781 006c 07D1     		bne	.L303
 4782              	.LVL400:
6882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4783              		.loc 2 6882 70 view .LVU1468
 4784              	.LBE739:
 4785              	.LBE738:
3438:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 4786              		.loc 1 3438 11 is_stmt 1 view .LVU1469
 4787              	.LBB740:
 4788              	.LBI740:
7201:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4789              		.loc 2 7201 22 view .LVU1470
 4790              	.LBB741:
7206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4791              		.loc 2 7206 3 view .LVU1471
 4792 006e 9A68     		ldr	r2, [r3, #8]
 4793 0070 22F00042 		bic	r2, r2, #-2147483648
 4794 0074 22F03F02 		bic	r2, r2, #63
ARM GAS  /tmp/cc46GlVT.s 			page 322


 4795 0078 42F02002 		orr	r2, r2, #32
 4796 007c 9A60     		str	r2, [r3, #8]
 4797              	.LVL401:
 4798              	.L303:
7206:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4799              		.loc 2 7206 3 is_stmt 0 view .LVU1472
 4800              	.LBE741:
 4801              	.LBE740:
3444:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 4802              		.loc 1 3444 5 is_stmt 1 view .LVU1473
 4803 007e 0229     		cmp	r1, #2
 4804 0080 34D0     		beq	.L309
 4805 0082 0329     		cmp	r1, #3
 4806 0084 34D1     		bne	.L310
 4807 0086 0C25     		movs	r5, #12
 4808              	.L304:
 4809              	.LVL402:
3459:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4810              		.loc 1 3459 5 view .LVU1474
3459:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4811              		.loc 1 3459 17 is_stmt 0 view .LVU1475
 4812 0088 FFF7FEFF 		bl	HAL_GetTick
 4813              	.LVL403:
 4814 008c 0646     		mov	r6, r0
 4815              	.LVL404:
3461:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 4816              		.loc 1 3461 5 is_stmt 1 view .LVU1476
 4817              	.L305:
3461:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 4818              		.loc 1 3461 11 view .LVU1477
3461:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 4819              		.loc 1 3461 17 is_stmt 0 view .LVU1478
 4820 008e 2368     		ldr	r3, [r4]
3461:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 4821              		.loc 1 3461 27 view .LVU1479
 4822 0090 9B68     		ldr	r3, [r3, #8]
3461:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 4823              		.loc 1 3461 11 view .LVU1480
 4824 0092 2B42     		tst	r3, r5
 4825 0094 2ED0     		beq	.L313
3463:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 4826              		.loc 1 3463 7 is_stmt 1 view .LVU1481
3463:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 4827              		.loc 1 3463 12 is_stmt 0 view .LVU1482
 4828 0096 FFF7FEFF 		bl	HAL_GetTick
 4829              	.LVL405:
3463:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 4830              		.loc 1 3463 26 view .LVU1483
 4831 009a 801B     		subs	r0, r0, r6
3463:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 4832              		.loc 1 3463 10 view .LVU1484
 4833 009c 0528     		cmp	r0, #5
 4834 009e F6D9     		bls	.L305
3466:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 4835              		.loc 1 3466 9 is_stmt 1 view .LVU1485
3466:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 4836              		.loc 1 3466 18 is_stmt 0 view .LVU1486
ARM GAS  /tmp/cc46GlVT.s 			page 323


 4837 00a0 2368     		ldr	r3, [r4]
3466:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 4838              		.loc 1 3466 28 view .LVU1487
 4839 00a2 9B68     		ldr	r3, [r3, #8]
3466:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 4840              		.loc 1 3466 12 view .LVU1488
 4841 00a4 2B42     		tst	r3, r5
 4842 00a6 F2D0     		beq	.L305
3469:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4843              		.loc 1 3469 11 is_stmt 1 view .LVU1489
 4844 00a8 A36D     		ldr	r3, [r4, #88]
 4845 00aa 43F01003 		orr	r3, r3, #16
 4846 00ae A365     		str	r3, [r4, #88]
3472:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4847              		.loc 1 3472 11 view .LVU1490
 4848 00b0 E36D     		ldr	r3, [r4, #92]
 4849 00b2 43F00103 		orr	r3, r3, #1
 4850 00b6 E365     		str	r3, [r4, #92]
3474:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 4851              		.loc 1 3474 11 view .LVU1491
3474:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 4852              		.loc 1 3474 18 is_stmt 0 view .LVU1492
 4853 00b8 0120     		movs	r0, #1
 4854 00ba 1CE0     		b	.L296
 4855              	.LVL406:
 4856              	.L315:
3401:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4857              		.loc 1 3401 11 is_stmt 1 view .LVU1493
 4858 00bc A36D     		ldr	r3, [r4, #88]
 4859 00be 43F01003 		orr	r3, r3, #16
 4860 00c2 A365     		str	r3, [r4, #88]
3404:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4861              		.loc 1 3404 11 view .LVU1494
 4862 00c4 E36D     		ldr	r3, [r4, #92]
 4863 00c6 43F00103 		orr	r3, r3, #1
 4864 00ca E365     		str	r3, [r4, #92]
3406:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 4865              		.loc 1 3406 11 view .LVU1495
3406:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 4866              		.loc 1 3406 18 is_stmt 0 view .LVU1496
 4867 00cc 0120     		movs	r0, #1
 4868 00ce 12E0     		b	.L296
 4869              	.LVL407:
 4870              	.L312:
3363:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
 4871              		.loc 1 3363 12 view .LVU1497
 4872 00d0 0022     		movs	r2, #0
 4873              	.LVL408:
 4874              	.L298:
3396:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 4875              		.loc 1 3396 13 is_stmt 1 view .LVU1498
3396:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 4876              		.loc 1 3396 14 is_stmt 0 view .LVU1499
 4877 00d2 1968     		ldr	r1, [r3]
3396:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 4878              		.loc 1 3396 13 view .LVU1500
 4879 00d4 11F0400F 		tst	r1, #64
ARM GAS  /tmp/cc46GlVT.s 			page 324


 4880 00d8 04D1     		bne	.L314
3398:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 4881              		.loc 1 3398 9 is_stmt 1 view .LVU1501
3398:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 4882              		.loc 1 3398 12 is_stmt 0 view .LVU1502
 4883 00da 0849     		ldr	r1, .L316
 4884 00dc 8A42     		cmp	r2, r1
 4885 00de EDD8     		bhi	.L315
3408:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 4886              		.loc 1 3408 9 is_stmt 1 view .LVU1503
3408:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 4887              		.loc 1 3408 39 is_stmt 0 view .LVU1504
 4888 00e0 0132     		adds	r2, r2, #1
 4889              	.LVL409:
3408:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 4890              		.loc 1 3408 39 view .LVU1505
 4891 00e2 F6E7     		b	.L298
 4892              	.L314:
3412:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 4893              		.loc 1 3412 7 is_stmt 1 view .LVU1506
 4894 00e4 4022     		movs	r2, #64
 4895              	.LVL410:
3412:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 4896              		.loc 1 3412 7 is_stmt 0 view .LVU1507
 4897 00e6 1A60     		str	r2, [r3]
 4898              	.LVL411:
3416:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 4899              		.loc 1 3416 5 is_stmt 1 view .LVU1508
3393:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4900              		.loc 1 3393 35 is_stmt 0 view .LVU1509
 4901 00e8 0121     		movs	r1, #1
 4902 00ea A4E7     		b	.L301
 4903              	.LVL412:
 4904              	.L309:
3450:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
 4905              		.loc 1 3450 37 view .LVU1510
 4906 00ec 0825     		movs	r5, #8
 4907 00ee CBE7     		b	.L304
 4908              	.L310:
3454:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         break;
 4909              		.loc 1 3454 37 view .LVU1511
 4910 00f0 0425     		movs	r5, #4
 4911 00f2 C9E7     		b	.L304
 4912              	.LVL413:
 4913              	.L313:
3482:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 4914              		.loc 1 3482 10 view .LVU1512
 4915 00f4 0020     		movs	r0, #0
 4916              	.LVL414:
 4917              	.L296:
3483:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4918              		.loc 1 3483 1 view .LVU1513
 4919 00f6 70BD     		pop	{r4, r5, r6, pc}
 4920              	.LVL415:
 4921              	.L307:
3482:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 4922              		.loc 1 3482 10 view .LVU1514
ARM GAS  /tmp/cc46GlVT.s 			page 325


 4923 00f8 0020     		movs	r0, #0
 4924              	.LVL416:
3482:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 4925              		.loc 1 3482 10 view .LVU1515
 4926 00fa FCE7     		b	.L296
 4927              	.L317:
 4928              		.align	2
 4929              	.L316:
 4930 00fc FFFF3FA3 		.word	-1556086785
 4931              		.cfi_endproc
 4932              	.LFE385:
 4934              		.section	.text.ADC_Enable,"ax",%progbits
 4935              		.align	1
 4936              		.global	ADC_Enable
 4937              		.syntax unified
 4938              		.thumb
 4939              		.thumb_func
 4940              		.fpu fpv4-sp-d16
 4942              	ADC_Enable:
 4943              	.LVL417:
 4944              	.LFB386:
3493:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tickstart;
 4945              		.loc 1 3493 1 is_stmt 1 view -0
 4946              		.cfi_startproc
 4947              		@ args = 0, pretend = 0, frame = 8
 4948              		@ frame_needed = 0, uses_anonymous_args = 0
3493:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tickstart;
 4949              		.loc 1 3493 1 is_stmt 0 view .LVU1517
 4950 0000 30B5     		push	{r4, r5, lr}
 4951              	.LCFI17:
 4952              		.cfi_def_cfa_offset 12
 4953              		.cfi_offset 4, -12
 4954              		.cfi_offset 5, -8
 4955              		.cfi_offset 14, -4
 4956 0002 83B0     		sub	sp, sp, #12
 4957              	.LCFI18:
 4958              		.cfi_def_cfa_offset 24
3494:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 4959              		.loc 1 3494 3 is_stmt 1 view .LVU1518
3495:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4960              		.loc 1 3495 3 view .LVU1519
3495:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4961              		.loc 1 3495 17 is_stmt 0 view .LVU1520
 4962 0004 0023     		movs	r3, #0
 4963 0006 0193     		str	r3, [sp, #4]
3501:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 4964              		.loc 1 3501 3 is_stmt 1 view .LVU1521
3501:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 4965              		.loc 1 3501 28 is_stmt 0 view .LVU1522
 4966 0008 0368     		ldr	r3, [r0]
 4967              	.LVL418:
 4968              	.LBB742:
 4969              	.LBI742:
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4970              		.loc 2 6869 26 is_stmt 1 view .LVU1523
 4971              	.LBB743:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
ARM GAS  /tmp/cc46GlVT.s 			page 326


 4972              		.loc 2 6871 3 view .LVU1524
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4973              		.loc 2 6871 12 is_stmt 0 view .LVU1525
 4974 000a 9A68     		ldr	r2, [r3, #8]
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4975              		.loc 2 6871 68 view .LVU1526
 4976 000c 12F0010F 		tst	r2, #1
 4977 0010 56D1     		bne	.L327
 4978 0012 0446     		mov	r4, r0
 4979              	.LVL419:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 4980              		.loc 2 6871 68 view .LVU1527
 4981              	.LBE743:
 4982              	.LBE742:
3504:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
 4983              		.loc 1 3504 5 is_stmt 1 view .LVU1528
3504:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
 4984              		.loc 1 3504 24 is_stmt 0 view .LVU1529
 4985 0014 9968     		ldr	r1, [r3, #8]
3504:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
 4986              		.loc 1 3504 8 view .LVU1530
 4987 0016 2C4A     		ldr	r2, .L331
 4988 0018 1142     		tst	r1, r2
 4989 001a 17D1     		bne	.L329
3517:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 4990              		.loc 1 3517 5 is_stmt 1 view .LVU1531
 4991              	.LVL420:
 4992              	.LBB744:
 4993              	.LBI744:
6830:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 4994              		.loc 2 6830 22 view .LVU1532
 4995              	.LBB745:
6835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4996              		.loc 2 6835 3 view .LVU1533
 4997 001c 9A68     		ldr	r2, [r3, #8]
 4998 001e 22F00042 		bic	r2, r2, #-2147483648
 4999 0022 22F03F02 		bic	r2, r2, #63
 5000 0026 42F00102 		orr	r2, r2, #1
 5001 002a 9A60     		str	r2, [r3, #8]
 5002              	.LVL421:
6835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5003              		.loc 2 6835 3 is_stmt 0 view .LVU1534
 5004              	.LBE745:
 5005              	.LBE744:
3519:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          & LL_ADC_PATH_INTERNAL_TEMPSENSOR) != 0UL)
 5006              		.loc 1 3519 5 is_stmt 1 view .LVU1535
 5007              	.LBB746:
 5008              	.LBI746:
3234:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5009              		.loc 2 3234 26 view .LVU1536
 5010              	.LBB747:
3236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5011              		.loc 2 3236 3 view .LVU1537
3236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5012              		.loc 2 3236 21 is_stmt 0 view .LVU1538
 5013 002c 274B     		ldr	r3, .L331+4
 5014 002e 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/cc46GlVT.s 			page 327


 5015              	.LVL422:
3236:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5016              		.loc 2 3236 21 view .LVU1539
 5017              	.LBE747:
 5018              	.LBE746:
3519:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          & LL_ADC_PATH_INTERNAL_TEMPSENSOR) != 0UL)
 5019              		.loc 1 3519 8 view .LVU1540
 5020 0030 13F4000F 		tst	r3, #8388608
 5021 0034 1AD0     		beq	.L321
3532:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       while (wait_loop_index != 0UL)
 5022              		.loc 1 3532 7 is_stmt 1 view .LVU1541
3532:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       while (wait_loop_index != 0UL)
 5023              		.loc 1 3532 87 is_stmt 0 view .LVU1542
 5024 0036 264B     		ldr	r3, .L331+8
 5025 0038 1B68     		ldr	r3, [r3]
 5026 003a 9B09     		lsrs	r3, r3, #6
 5027 003c 254A     		ldr	r2, .L331+12
 5028 003e A2FB0323 		umull	r2, r3, r2, r3
 5029 0042 9B09     		lsrs	r3, r3, #6
3532:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       while (wait_loop_index != 0UL)
 5030              		.loc 1 3532 107 view .LVU1543
 5031 0044 0133     		adds	r3, r3, #1
3532:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       while (wait_loop_index != 0UL)
 5032              		.loc 1 3532 67 view .LVU1544
 5033 0046 5B00     		lsls	r3, r3, #1
3532:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       while (wait_loop_index != 0UL)
 5034              		.loc 1 3532 23 view .LVU1545
 5035 0048 0193     		str	r3, [sp, #4]
3533:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5036              		.loc 1 3533 7 is_stmt 1 view .LVU1546
3533:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5037              		.loc 1 3533 13 is_stmt 0 view .LVU1547
 5038 004a 0CE0     		b	.L322
 5039              	.L329:
3508:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5040              		.loc 1 3508 7 is_stmt 1 view .LVU1548
 5041 004c 836D     		ldr	r3, [r0, #88]
 5042 004e 43F01003 		orr	r3, r3, #16
 5043 0052 8365     		str	r3, [r0, #88]
3511:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5044              		.loc 1 3511 7 view .LVU1549
 5045 0054 C36D     		ldr	r3, [r0, #92]
 5046 0056 43F00103 		orr	r3, r3, #1
 5047 005a C365     		str	r3, [r0, #92]
3513:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 5048              		.loc 1 3513 7 view .LVU1550
3513:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 5049              		.loc 1 3513 14 is_stmt 0 view .LVU1551
 5050 005c 0120     		movs	r0, #1
 5051              	.LVL423:
3513:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 5052              		.loc 1 3513 14 view .LVU1552
 5053 005e 30E0     		b	.L319
 5054              	.LVL424:
 5055              	.L323:
3535:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 5056              		.loc 1 3535 9 is_stmt 1 view .LVU1553
ARM GAS  /tmp/cc46GlVT.s 			page 328


3535:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 5057              		.loc 1 3535 24 is_stmt 0 view .LVU1554
 5058 0060 019B     		ldr	r3, [sp, #4]
 5059 0062 013B     		subs	r3, r3, #1
 5060 0064 0193     		str	r3, [sp, #4]
 5061              	.L322:
3533:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5062              		.loc 1 3533 13 is_stmt 1 view .LVU1555
3533:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5063              		.loc 1 3533 30 is_stmt 0 view .LVU1556
 5064 0066 019B     		ldr	r3, [sp, #4]
3533:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5065              		.loc 1 3533 13 view .LVU1557
 5066 0068 002B     		cmp	r3, #0
 5067 006a F9D1     		bne	.L323
 5068              	.L321:
3540:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5069              		.loc 1 3540 5 is_stmt 1 view .LVU1558
3540:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5070              		.loc 1 3540 17 is_stmt 0 view .LVU1559
 5071 006c FFF7FEFF 		bl	HAL_GetTick
 5072              	.LVL425:
3540:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5073              		.loc 1 3540 17 view .LVU1560
 5074 0070 0546     		mov	r5, r0
 5075              	.LVL426:
3542:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 5076              		.loc 1 3542 5 is_stmt 1 view .LVU1561
 5077              	.L324:
3542:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 5078              		.loc 1 3542 11 view .LVU1562
3542:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 5079              		.loc 1 3542 12 is_stmt 0 view .LVU1563
 5080 0072 2368     		ldr	r3, [r4]
 5081 0074 1A68     		ldr	r2, [r3]
3542:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 5082              		.loc 1 3542 11 view .LVU1564
 5083 0076 12F0010F 		tst	r2, #1
 5084 007a 1FD1     		bne	.L330
3552:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5085              		.loc 1 3552 7 is_stmt 1 view .LVU1565
 5086              	.LVL427:
 5087              	.LBB748:
 5088              	.LBI748:
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5089              		.loc 2 6869 26 view .LVU1566
 5090              	.LBB749:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5091              		.loc 2 6871 3 view .LVU1567
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5092              		.loc 2 6871 12 is_stmt 0 view .LVU1568
 5093 007c 9A68     		ldr	r2, [r3, #8]
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5094              		.loc 2 6871 68 view .LVU1569
 5095 007e 12F0010F 		tst	r2, #1
 5096 0082 07D1     		bne	.L325
 5097              	.LVL428:
ARM GAS  /tmp/cc46GlVT.s 			page 329


6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5098              		.loc 2 6871 68 view .LVU1570
 5099              	.LBE749:
 5100              	.LBE748:
3554:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 5101              		.loc 1 3554 9 is_stmt 1 view .LVU1571
 5102              	.LBB750:
 5103              	.LBI750:
6830:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5104              		.loc 2 6830 22 view .LVU1572
 5105              	.LBB751:
6835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5106              		.loc 2 6835 3 view .LVU1573
 5107 0084 9A68     		ldr	r2, [r3, #8]
 5108 0086 22F00042 		bic	r2, r2, #-2147483648
 5109 008a 22F03F02 		bic	r2, r2, #63
 5110 008e 42F00102 		orr	r2, r2, #1
 5111 0092 9A60     		str	r2, [r3, #8]
 5112              	.LVL429:
 5113              	.L325:
6835:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5114              		.loc 2 6835 3 is_stmt 0 view .LVU1574
 5115              	.LBE751:
 5116              	.LBE750:
3557:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5117              		.loc 1 3557 7 is_stmt 1 view .LVU1575
3557:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5118              		.loc 1 3557 12 is_stmt 0 view .LVU1576
 5119 0094 FFF7FEFF 		bl	HAL_GetTick
 5120              	.LVL430:
3557:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5121              		.loc 1 3557 26 view .LVU1577
 5122 0098 431B     		subs	r3, r0, r5
3557:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5123              		.loc 1 3557 10 view .LVU1578
 5124 009a 022B     		cmp	r3, #2
 5125 009c E9D9     		bls	.L324
3560:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5126              		.loc 1 3560 9 is_stmt 1 view .LVU1579
3560:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5127              		.loc 1 3560 13 is_stmt 0 view .LVU1580
 5128 009e 2368     		ldr	r3, [r4]
 5129 00a0 1B68     		ldr	r3, [r3]
3560:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5130              		.loc 1 3560 12 view .LVU1581
 5131 00a2 13F0010F 		tst	r3, #1
 5132 00a6 E4D1     		bne	.L324
3563:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5133              		.loc 1 3563 11 is_stmt 1 view .LVU1582
 5134 00a8 A36D     		ldr	r3, [r4, #88]
 5135 00aa 43F01003 		orr	r3, r3, #16
 5136 00ae A365     		str	r3, [r4, #88]
3566:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5137              		.loc 1 3566 11 view .LVU1583
 5138 00b0 E36D     		ldr	r3, [r4, #92]
 5139 00b2 43F00103 		orr	r3, r3, #1
 5140 00b6 E365     		str	r3, [r4, #92]
ARM GAS  /tmp/cc46GlVT.s 			page 330


3568:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 5141              		.loc 1 3568 11 view .LVU1584
3568:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 5142              		.loc 1 3568 18 is_stmt 0 view .LVU1585
 5143 00b8 0120     		movs	r0, #1
 5144 00ba 02E0     		b	.L319
 5145              	.L330:
3575:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 5146              		.loc 1 3575 10 view .LVU1586
 5147 00bc 0020     		movs	r0, #0
 5148 00be 00E0     		b	.L319
 5149              	.LVL431:
 5150              	.L327:
3575:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 5151              		.loc 1 3575 10 view .LVU1587
 5152 00c0 0020     		movs	r0, #0
 5153              	.LVL432:
 5154              	.L319:
3576:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5155              		.loc 1 3576 1 view .LVU1588
 5156 00c2 03B0     		add	sp, sp, #12
 5157              	.LCFI19:
 5158              		.cfi_def_cfa_offset 12
 5159              		@ sp needed
 5160 00c4 30BD     		pop	{r4, r5, pc}
 5161              	.L332:
 5162 00c6 00BF     		.align	2
 5163              	.L331:
 5164 00c8 3F000080 		.word	-2147483585
 5165 00cc 00830242 		.word	1107460864
 5166 00d0 00000000 		.word	SystemCoreClock
 5167 00d4 632D3E05 		.word	87960931
 5168              		.cfi_endproc
 5169              	.LFE386:
 5171              		.section	.text.HAL_ADC_Start,"ax",%progbits
 5172              		.align	1
 5173              		.global	HAL_ADC_Start
 5174              		.syntax unified
 5175              		.thumb
 5176              		.thumb_func
 5177              		.fpu fpv4-sp-d16
 5179              	HAL_ADC_Start:
 5180              	.LVL433:
 5181              	.LFB365:
1204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5182              		.loc 1 1204 1 is_stmt 1 view -0
 5183              		.cfi_startproc
 5184              		@ args = 0, pretend = 0, frame = 0
 5185              		@ frame_needed = 0, uses_anonymous_args = 0
1204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5186              		.loc 1 1204 1 is_stmt 0 view .LVU1590
 5187 0000 38B5     		push	{r3, r4, r5, lr}
 5188              	.LCFI20:
 5189              		.cfi_def_cfa_offset 16
 5190              		.cfi_offset 3, -16
 5191              		.cfi_offset 4, -12
 5192              		.cfi_offset 5, -8
ARM GAS  /tmp/cc46GlVT.s 			page 331


 5193              		.cfi_offset 14, -4
1205:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 5194              		.loc 1 1205 3 is_stmt 1 view .LVU1591
1207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 5195              		.loc 1 1207 3 view .LVU1592
1208:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 5196              		.loc 1 1208 3 view .LVU1593
 5197              	.LVL434:
 5198              	.LBB752:
 5199              	.LBI752:
6532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5200              		.loc 2 6532 26 view .LVU1594
 5201              	.LBB753:
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5202              		.loc 2 6534 3 view .LVU1595
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5203              		.loc 2 6534 21 is_stmt 0 view .LVU1596
 5204 0002 3A4B     		ldr	r3, .L352
 5205 0004 9D68     		ldr	r5, [r3, #8]
 5206              	.LVL435:
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5207              		.loc 2 6534 21 view .LVU1597
 5208              	.LBE753:
 5209              	.LBE752:
1212:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5210              		.loc 1 1212 3 is_stmt 1 view .LVU1598
1215:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 5211              		.loc 1 1215 3 view .LVU1599
1215:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 5212              		.loc 1 1215 42 is_stmt 0 view .LVU1600
 5213 0006 0368     		ldr	r3, [r0]
 5214              	.LVL436:
 5215              	.LBB754:
 5216              	.LBI754:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5217              		.loc 2 6991 26 is_stmt 1 view .LVU1601
 5218              	.LBB755:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5219              		.loc 2 6993 3 view .LVU1602
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5220              		.loc 2 6993 12 is_stmt 0 view .LVU1603
 5221 0008 9B68     		ldr	r3, [r3, #8]
 5222              	.LVL437:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5223              		.loc 2 6993 74 view .LVU1604
 5224 000a 13F0040F 		tst	r3, #4
 5225 000e 69D1     		bne	.L345
 5226 0010 0446     		mov	r4, r0
 5227 0012 05F01F05 		and	r5, r5, #31
 5228              	.LVL438:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5229              		.loc 2 6993 74 view .LVU1605
 5230              	.LBE755:
 5231              	.LBE754:
1218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5232              		.loc 1 1218 5 is_stmt 1 view .LVU1606
1218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 332


 5233              		.loc 1 1218 5 view .LVU1607
 5234 0016 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 5235 001a 012B     		cmp	r3, #1
 5236 001c 64D0     		beq	.L346
1218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5237              		.loc 1 1218 5 discriminator 2 view .LVU1608
 5238 001e 0123     		movs	r3, #1
 5239 0020 80F85430 		strb	r3, [r0, #84]
1218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5240              		.loc 1 1218 5 discriminator 2 view .LVU1609
1221:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5241              		.loc 1 1221 5 discriminator 2 view .LVU1610
1221:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5242              		.loc 1 1221 22 is_stmt 0 discriminator 2 view .LVU1611
 5243 0024 FFF7FEFF 		bl	ADC_Enable
 5244              	.LVL439:
1224:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 5245              		.loc 1 1224 5 is_stmt 1 discriminator 2 view .LVU1612
1224:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 5246              		.loc 1 1224 8 is_stmt 0 discriminator 2 view .LVU1613
 5247 0028 0028     		cmp	r0, #0
 5248 002a 57D1     		bne	.L335
1229:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 5249              		.loc 1 1229 7 is_stmt 1 view .LVU1614
 5250 002c A36D     		ldr	r3, [r4, #88]
 5251 002e 23F47063 		bic	r3, r3, #3840
 5252 0032 23F00103 		bic	r3, r3, #1
 5253 0036 43F48073 		orr	r3, r3, #256
 5254 003a A365     		str	r3, [r4, #88]
1237:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5255              		.loc 1 1237 7 view .LVU1615
1237:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5256              		.loc 1 1237 12 is_stmt 0 view .LVU1616
 5257 003c 2368     		ldr	r3, [r4]
 5258 003e 2C4A     		ldr	r2, .L352+4
 5259 0040 9342     		cmp	r3, r2
 5260 0042 2FD0     		beq	.L350
 5261 0044 1A46     		mov	r2, r3
 5262              	.L336:
1237:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5263              		.loc 1 1237 10 discriminator 4 view .LVU1617
 5264 0046 9342     		cmp	r3, r2
 5265 0048 00D0     		beq	.L337
1238:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          )
 5266              		.loc 1 1238 11 view .LVU1618
 5267 004a 1DB9     		cbnz	r5, .L338
 5268              	.L337:
1241:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 5269              		.loc 1 1241 9 is_stmt 1 view .LVU1619
 5270 004c A26D     		ldr	r2, [r4, #88]
 5271 004e 22F48012 		bic	r2, r2, #1048576
 5272 0052 A265     		str	r2, [r4, #88]
 5273              	.L338:
1247:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5274              		.loc 1 1247 7 view .LVU1620
1247:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5275              		.loc 1 1247 11 is_stmt 0 view .LVU1621
ARM GAS  /tmp/cc46GlVT.s 			page 333


 5276 0054 A26D     		ldr	r2, [r4, #88]
1247:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5277              		.loc 1 1247 10 view .LVU1622
 5278 0056 12F4805F 		tst	r2, #4096
 5279 005a 26D0     		beq	.L339
1250:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 5280              		.loc 1 1250 9 is_stmt 1 view .LVU1623
 5281 005c E26D     		ldr	r2, [r4, #92]
 5282 005e 22F00602 		bic	r2, r2, #6
 5283 0062 E265     		str	r2, [r4, #92]
 5284              	.L340:
1260:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5285              		.loc 1 1260 7 view .LVU1624
 5286 0064 1C22     		movs	r2, #28
 5287 0066 1A60     		str	r2, [r3]
1265:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5288              		.loc 1 1265 7 view .LVU1625
1265:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5289              		.loc 1 1265 7 view .LVU1626
 5290 0068 0023     		movs	r3, #0
 5291 006a 84F85430 		strb	r3, [r4, #84]
1265:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5292              		.loc 1 1265 7 view .LVU1627
1276:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5293              		.loc 1 1276 7 view .LVU1628
1276:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5294              		.loc 1 1276 12 is_stmt 0 view .LVU1629
 5295 006e 2268     		ldr	r2, [r4]
 5296 0070 1F4B     		ldr	r3, .L352+4
 5297 0072 9A42     		cmp	r2, r3
 5298 0074 1CD0     		beq	.L351
 5299 0076 1346     		mov	r3, r2
 5300              	.L341:
1276:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5301              		.loc 1 1276 10 discriminator 4 view .LVU1630
 5302 0078 9A42     		cmp	r2, r3
 5303 007a 1CD0     		beq	.L342
1277:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 5304              		.loc 1 1277 11 view .LVU1631
 5305 007c DDB1     		cbz	r5, .L342
1278:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 5306              		.loc 1 1278 11 view .LVU1632
 5307 007e 052D     		cmp	r5, #5
 5308 0080 19D0     		beq	.L342
1279:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          )
 5309              		.loc 1 1279 11 view .LVU1633
 5310 0082 092D     		cmp	r5, #9
 5311 0084 17D0     		beq	.L342
1294:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
 5312              		.loc 1 1294 9 is_stmt 1 view .LVU1634
 5313 0086 A26D     		ldr	r2, [r4, #88]
 5314 0088 42F48012 		orr	r2, r2, #1048576
 5315 008c A265     		str	r2, [r4, #88]
1297:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
 5316              		.loc 1 1297 9 view .LVU1635
 5317              	.LVL440:
1298:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
ARM GAS  /tmp/cc46GlVT.s 			page 334


 5318              		.loc 1 1298 9 view .LVU1636
1298:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5319              		.loc 1 1298 13 is_stmt 0 view .LVU1637
 5320 008e DB68     		ldr	r3, [r3, #12]
 5321              	.LVL441:
1298:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5322              		.loc 1 1298 12 view .LVU1638
 5323 0090 13F0007F 		tst	r3, #33554432
 5324 0094 27D0     		beq	.L334
1300:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 5325              		.loc 1 1300 11 is_stmt 1 view .LVU1639
 5326 0096 A36D     		ldr	r3, [r4, #88]
 5327 0098 23F44053 		bic	r3, r3, #12288
 5328 009c 43F48053 		orr	r3, r3, #4096
 5329 00a0 A365     		str	r3, [r4, #88]
 5330 00a2 20E0     		b	.L334
 5331              	.L350:
1237:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5332              		.loc 1 1237 12 is_stmt 0 view .LVU1640
 5333 00a4 A2F58072 		sub	r2, r2, #256
 5334 00a8 CDE7     		b	.L336
 5335              	.L339:
1255:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 5336              		.loc 1 1255 9 is_stmt 1 view .LVU1641
 5337 00aa 0022     		movs	r2, #0
 5338 00ac E265     		str	r2, [r4, #92]
 5339 00ae D9E7     		b	.L340
 5340              	.L351:
1276:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5341              		.loc 1 1276 12 is_stmt 0 view .LVU1642
 5342 00b0 A3F58073 		sub	r3, r3, #256
 5343 00b4 E0E7     		b	.L341
 5344              	.L342:
1283:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5345              		.loc 1 1283 9 is_stmt 1 view .LVU1643
1283:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5346              		.loc 1 1283 13 is_stmt 0 view .LVU1644
 5347 00b6 D368     		ldr	r3, [r2, #12]
1283:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5348              		.loc 1 1283 12 view .LVU1645
 5349 00b8 13F0007F 		tst	r3, #33554432
 5350 00bc 05D0     		beq	.L344
1285:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 5351              		.loc 1 1285 11 is_stmt 1 view .LVU1646
 5352 00be A36D     		ldr	r3, [r4, #88]
 5353 00c0 23F44053 		bic	r3, r3, #12288
 5354 00c4 43F48053 		orr	r3, r3, #4096
 5355 00c8 A365     		str	r3, [r4, #88]
 5356              	.L344:
1289:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 5357              		.loc 1 1289 9 view .LVU1647
 5358              	.LVL442:
 5359              	.LBB756:
 5360              	.LBI756:
6955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5361              		.loc 2 6955 22 view .LVU1648
 5362              	.LBB757:
ARM GAS  /tmp/cc46GlVT.s 			page 335


6960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5363              		.loc 2 6960 3 view .LVU1649
 5364 00ca 9368     		ldr	r3, [r2, #8]
 5365 00cc 23F00043 		bic	r3, r3, #-2147483648
 5366 00d0 23F03F03 		bic	r3, r3, #63
 5367 00d4 43F00403 		orr	r3, r3, #4
 5368 00d8 9360     		str	r3, [r2, #8]
6963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 5369              		.loc 2 6963 1 is_stmt 0 view .LVU1650
 5370 00da 04E0     		b	.L334
 5371              	.LVL443:
 5372              	.L335:
6963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 5373              		.loc 2 6963 1 view .LVU1651
 5374              	.LBE757:
 5375              	.LBE756:
1317:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 5376              		.loc 1 1317 7 is_stmt 1 discriminator 1 view .LVU1652
1317:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 5377              		.loc 1 1317 7 discriminator 1 view .LVU1653
 5378 00dc 0023     		movs	r3, #0
 5379 00de 84F85430 		strb	r3, [r4, #84]
 5380 00e2 00E0     		b	.L334
 5381              	.LVL444:
 5382              	.L345:
1322:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 5383              		.loc 1 1322 20 is_stmt 0 view .LVU1654
 5384 00e4 0220     		movs	r0, #2
 5385              	.LVL445:
 5386              	.L334:
1327:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5387              		.loc 1 1327 1 view .LVU1655
 5388 00e6 38BD     		pop	{r3, r4, r5, pc}
 5389              	.LVL446:
 5390              	.L346:
1218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5391              		.loc 1 1218 5 view .LVU1656
 5392 00e8 0220     		movs	r0, #2
 5393              	.LVL447:
1218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5394              		.loc 1 1218 5 view .LVU1657
 5395 00ea FCE7     		b	.L334
 5396              	.L353:
 5397              		.align	2
 5398              	.L352:
 5399 00ec 00830242 		.word	1107460864
 5400 00f0 00810242 		.word	1107460352
 5401              		.cfi_endproc
 5402              	.LFE365:
 5404              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 5405              		.align	1
 5406              		.global	HAL_ADC_Start_IT
 5407              		.syntax unified
 5408              		.thumb
 5409              		.thumb_func
 5410              		.fpu fpv4-sp-d16
 5412              	HAL_ADC_Start_IT:
ARM GAS  /tmp/cc46GlVT.s 			page 336


 5413              	.LVL448:
 5414              	.LFB369:
1728:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5415              		.loc 1 1728 1 is_stmt 1 view -0
 5416              		.cfi_startproc
 5417              		@ args = 0, pretend = 0, frame = 0
 5418              		@ frame_needed = 0, uses_anonymous_args = 0
1728:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5419              		.loc 1 1728 1 is_stmt 0 view .LVU1659
 5420 0000 38B5     		push	{r3, r4, r5, lr}
 5421              	.LCFI21:
 5422              		.cfi_def_cfa_offset 16
 5423              		.cfi_offset 3, -16
 5424              		.cfi_offset 4, -12
 5425              		.cfi_offset 5, -8
 5426              		.cfi_offset 14, -4
1729:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 5427              		.loc 1 1729 3 is_stmt 1 view .LVU1660
1731:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 5428              		.loc 1 1731 3 view .LVU1661
1732:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 5429              		.loc 1 1732 3 view .LVU1662
 5430              	.LVL449:
 5431              	.LBB758:
 5432              	.LBI758:
6532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5433              		.loc 2 6532 26 view .LVU1663
 5434              	.LBB759:
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5435              		.loc 2 6534 3 view .LVU1664
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5436              		.loc 2 6534 21 is_stmt 0 view .LVU1665
 5437 0002 5F4B     		ldr	r3, .L381
 5438 0004 9D68     		ldr	r5, [r3, #8]
 5439              	.LVL450:
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5440              		.loc 2 6534 21 view .LVU1666
 5441              	.LBE759:
 5442              	.LBE758:
1736:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5443              		.loc 1 1736 3 is_stmt 1 view .LVU1667
1739:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 5444              		.loc 1 1739 3 view .LVU1668
1739:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 5445              		.loc 1 1739 42 is_stmt 0 view .LVU1669
 5446 0006 0368     		ldr	r3, [r0]
 5447              	.LVL451:
 5448              	.LBB760:
 5449              	.LBI760:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5450              		.loc 2 6991 26 is_stmt 1 view .LVU1670
 5451              	.LBB761:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5452              		.loc 2 6993 3 view .LVU1671
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5453              		.loc 2 6993 12 is_stmt 0 view .LVU1672
 5454 0008 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/cc46GlVT.s 			page 337


 5455              	.LVL452:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5456              		.loc 2 6993 74 view .LVU1673
 5457 000a 13F0040F 		tst	r3, #4
 5458 000e 40F0B380 		bne	.L371
 5459 0012 0446     		mov	r4, r0
 5460 0014 05F01F05 		and	r5, r5, #31
 5461              	.LVL453:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5462              		.loc 2 6993 74 view .LVU1674
 5463              	.LBE761:
 5464              	.LBE760:
1742:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5465              		.loc 1 1742 5 is_stmt 1 view .LVU1675
1742:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5466              		.loc 1 1742 5 view .LVU1676
 5467 0018 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 5468 001c 012B     		cmp	r3, #1
 5469 001e 00F0AD80 		beq	.L372
1742:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5470              		.loc 1 1742 5 discriminator 2 view .LVU1677
 5471 0022 0123     		movs	r3, #1
 5472 0024 80F85430 		strb	r3, [r0, #84]
1742:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5473              		.loc 1 1742 5 discriminator 2 view .LVU1678
1745:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5474              		.loc 1 1745 5 discriminator 2 view .LVU1679
1745:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5475              		.loc 1 1745 22 is_stmt 0 discriminator 2 view .LVU1680
 5476 0028 FFF7FEFF 		bl	ADC_Enable
 5477              	.LVL454:
1748:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 5478              		.loc 1 1748 5 is_stmt 1 discriminator 2 view .LVU1681
1748:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 5479              		.loc 1 1748 8 is_stmt 0 discriminator 2 view .LVU1682
 5480 002c 0028     		cmp	r0, #0
 5481 002e 40F09F80 		bne	.L356
1753:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 5482              		.loc 1 1753 7 is_stmt 1 view .LVU1683
 5483 0032 A36D     		ldr	r3, [r4, #88]
 5484 0034 23F47063 		bic	r3, r3, #3840
 5485 0038 23F00103 		bic	r3, r3, #1
 5486 003c 43F48073 		orr	r3, r3, #256
 5487 0040 A365     		str	r3, [r4, #88]
1761:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5488              		.loc 1 1761 7 view .LVU1684
1761:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5489              		.loc 1 1761 12 is_stmt 0 view .LVU1685
 5490 0042 2368     		ldr	r3, [r4]
 5491 0044 4F4A     		ldr	r2, .L381+4
 5492 0046 9342     		cmp	r3, r2
 5493 0048 4FD0     		beq	.L376
 5494 004a 1A46     		mov	r2, r3
 5495              	.L357:
1761:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5496              		.loc 1 1761 10 discriminator 4 view .LVU1686
 5497 004c 9342     		cmp	r3, r2
ARM GAS  /tmp/cc46GlVT.s 			page 338


 5498 004e 00D0     		beq	.L358
1762:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          )
 5499              		.loc 1 1762 11 view .LVU1687
 5500 0050 1DB9     		cbnz	r5, .L359
 5501              	.L358:
1765:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 5502              		.loc 1 1765 9 is_stmt 1 view .LVU1688
 5503 0052 A26D     		ldr	r2, [r4, #88]
 5504 0054 22F48012 		bic	r2, r2, #1048576
 5505 0058 A265     		str	r2, [r4, #88]
 5506              	.L359:
1771:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5507              		.loc 1 1771 7 view .LVU1689
1771:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5508              		.loc 1 1771 16 is_stmt 0 view .LVU1690
 5509 005a A26D     		ldr	r2, [r4, #88]
1771:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5510              		.loc 1 1771 10 view .LVU1691
 5511 005c 12F4805F 		tst	r2, #4096
 5512 0060 46D0     		beq	.L360
1774:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 5513              		.loc 1 1774 9 is_stmt 1 view .LVU1692
 5514 0062 E26D     		ldr	r2, [r4, #92]
 5515 0064 22F00602 		bic	r2, r2, #6
 5516 0068 E265     		str	r2, [r4, #92]
 5517              	.L361:
1784:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5518              		.loc 1 1784 7 view .LVU1693
 5519 006a 1C22     		movs	r2, #28
 5520 006c 1A60     		str	r2, [r3]
1789:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5521              		.loc 1 1789 7 view .LVU1694
1789:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5522              		.loc 1 1789 7 view .LVU1695
 5523 006e 0023     		movs	r3, #0
 5524 0070 84F85430 		strb	r3, [r4, #84]
1789:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5525              		.loc 1 1789 7 view .LVU1696
1792:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5526              		.loc 1 1792 7 view .LVU1697
 5527 0074 2268     		ldr	r2, [r4]
 5528 0076 5368     		ldr	r3, [r2, #4]
 5529 0078 23F01C03 		bic	r3, r3, #28
 5530 007c 5360     		str	r3, [r2, #4]
1795:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5531              		.loc 1 1795 7 view .LVU1698
1795:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5532              		.loc 1 1795 25 is_stmt 0 view .LVU1699
 5533 007e 6369     		ldr	r3, [r4, #20]
1795:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5534              		.loc 1 1795 7 view .LVU1700
 5535 0080 082B     		cmp	r3, #8
 5536 0082 38D0     		beq	.L377
1802:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
 5537              		.loc 1 1802 11 is_stmt 1 view .LVU1701
 5538 0084 2268     		ldr	r2, [r4]
 5539 0086 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/cc46GlVT.s 			page 339


 5540 0088 43F00403 		orr	r3, r3, #4
 5541 008c 5360     		str	r3, [r2, #4]
1803:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 5542              		.loc 1 1803 11 view .LVU1702
 5543              	.L363:
1810:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5544              		.loc 1 1810 7 view .LVU1703
1810:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5545              		.loc 1 1810 21 is_stmt 0 view .LVU1704
 5546 008e A36B     		ldr	r3, [r4, #56]
1810:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5547              		.loc 1 1810 10 view .LVU1705
 5548 0090 23B9     		cbnz	r3, .L364
1812:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 5549              		.loc 1 1812 9 is_stmt 1 view .LVU1706
 5550 0092 2268     		ldr	r2, [r4]
 5551 0094 5368     		ldr	r3, [r2, #4]
 5552 0096 43F01003 		orr	r3, r3, #16
 5553 009a 5360     		str	r3, [r2, #4]
 5554              	.L364:
1824:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5555              		.loc 1 1824 7 view .LVU1707
1824:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5556              		.loc 1 1824 12 is_stmt 0 view .LVU1708
 5557 009c 2368     		ldr	r3, [r4]
 5558 009e 394A     		ldr	r2, .L381+4
 5559 00a0 9342     		cmp	r3, r2
 5560 00a2 2ED0     		beq	.L378
 5561 00a4 1A46     		mov	r2, r3
 5562              	.L365:
1824:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5563              		.loc 1 1824 10 discriminator 4 view .LVU1709
 5564 00a6 9342     		cmp	r3, r2
 5565 00a8 2ED0     		beq	.L366
1825:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 5566              		.loc 1 1825 11 view .LVU1710
 5567 00aa 6DB3     		cbz	r5, .L366
1826:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 5568              		.loc 1 1826 11 view .LVU1711
 5569 00ac 052D     		cmp	r5, #5
 5570 00ae 2BD0     		beq	.L366
1827:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****          )
 5571              		.loc 1 1827 11 view .LVU1712
 5572 00b0 092D     		cmp	r5, #9
 5573 00b2 29D0     		beq	.L366
1859:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
 5574              		.loc 1 1859 9 is_stmt 1 view .LVU1713
 5575 00b4 A16D     		ldr	r1, [r4, #88]
 5576 00b6 41F48011 		orr	r1, r1, #1048576
 5577 00ba A165     		str	r1, [r4, #88]
1862:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
 5578              		.loc 1 1862 9 view .LVU1714
 5579              	.LVL455:
1863:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5580              		.loc 1 1863 9 view .LVU1715
1863:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5581              		.loc 1 1863 13 is_stmt 0 view .LVU1716
ARM GAS  /tmp/cc46GlVT.s 			page 340


 5582 00bc D268     		ldr	r2, [r2, #12]
 5583              	.LVL456:
1863:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5584              		.loc 1 1863 12 view .LVU1717
 5585 00be 12F0007F 		tst	r2, #33554432
 5586 00c2 5AD0     		beq	.L355
1867:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
 5587              		.loc 1 1867 11 is_stmt 1 view .LVU1718
 5588 00c4 A26D     		ldr	r2, [r4, #88]
 5589 00c6 22F44052 		bic	r2, r2, #12288
 5590 00ca 42F48052 		orr	r2, r2, #4096
 5591 00ce A265     		str	r2, [r4, #88]
1869:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 5592              		.loc 1 1869 11 view .LVU1719
1869:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 5593              		.loc 1 1869 29 is_stmt 0 view .LVU1720
 5594 00d0 6269     		ldr	r2, [r4, #20]
1869:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 5595              		.loc 1 1869 11 view .LVU1721
 5596 00d2 082A     		cmp	r2, #8
 5597 00d4 42D0     		beq	.L379
1877:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 5598              		.loc 1 1877 15 is_stmt 1 view .LVU1722
 5599 00d6 5A68     		ldr	r2, [r3, #4]
 5600 00d8 22F04002 		bic	r2, r2, #64
 5601 00dc 5A60     		str	r2, [r3, #4]
1878:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               break;
 5602              		.loc 1 1878 15 view .LVU1723
 5603 00de 2268     		ldr	r2, [r4]
 5604 00e0 5368     		ldr	r3, [r2, #4]
 5605 00e2 43F02003 		orr	r3, r3, #32
 5606 00e6 5360     		str	r3, [r2, #4]
1879:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
 5607              		.loc 1 1879 15 view .LVU1724
 5608 00e8 47E0     		b	.L355
 5609              	.L376:
1761:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5610              		.loc 1 1761 12 is_stmt 0 view .LVU1725
 5611 00ea A2F58072 		sub	r2, r2, #256
 5612 00ee ADE7     		b	.L357
 5613              	.L360:
1779:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 5614              		.loc 1 1779 9 is_stmt 1 view .LVU1726
 5615 00f0 0022     		movs	r2, #0
 5616 00f2 E265     		str	r2, [r4, #92]
 5617 00f4 B9E7     		b	.L361
 5618              	.L377:
1798:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           break;
 5619              		.loc 1 1798 11 view .LVU1727
 5620 00f6 2268     		ldr	r2, [r4]
 5621 00f8 5368     		ldr	r3, [r2, #4]
 5622 00fa 43F00803 		orr	r3, r3, #8
 5623 00fe 5360     		str	r3, [r2, #4]
1799:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
 5624              		.loc 1 1799 11 view .LVU1728
 5625 0100 C5E7     		b	.L363
 5626              	.L378:
ARM GAS  /tmp/cc46GlVT.s 			page 341


1824:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5627              		.loc 1 1824 12 is_stmt 0 view .LVU1729
 5628 0102 A2F58072 		sub	r2, r2, #256
 5629 0106 CEE7     		b	.L365
 5630              	.L366:
1831:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5631              		.loc 1 1831 9 is_stmt 1 view .LVU1730
1831:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5632              		.loc 1 1831 13 is_stmt 0 view .LVU1731
 5633 0108 DA68     		ldr	r2, [r3, #12]
1831:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5634              		.loc 1 1831 12 view .LVU1732
 5635 010a 12F0007F 		tst	r2, #33554432
 5636 010e 11D0     		beq	.L368
1833:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5637              		.loc 1 1833 11 is_stmt 1 view .LVU1733
 5638 0110 A26D     		ldr	r2, [r4, #88]
 5639 0112 22F44052 		bic	r2, r2, #12288
 5640 0116 42F48052 		orr	r2, r2, #4096
 5641 011a A265     		str	r2, [r4, #88]
1839:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 5642              		.loc 1 1839 11 view .LVU1734
1839:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 5643              		.loc 1 1839 29 is_stmt 0 view .LVU1735
 5644 011c 6269     		ldr	r2, [r4, #20]
1839:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 5645              		.loc 1 1839 11 view .LVU1736
 5646 011e 082A     		cmp	r2, #8
 5647 0120 12D0     		beq	.L380
1847:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 5648              		.loc 1 1847 15 is_stmt 1 view .LVU1737
 5649 0122 5A68     		ldr	r2, [r3, #4]
 5650 0124 22F04002 		bic	r2, r2, #64
 5651 0128 5A60     		str	r2, [r3, #4]
1848:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               break;
 5652              		.loc 1 1848 15 view .LVU1738
 5653 012a 2268     		ldr	r2, [r4]
 5654 012c 5368     		ldr	r3, [r2, #4]
 5655 012e 43F02003 		orr	r3, r3, #32
 5656 0132 5360     		str	r3, [r2, #4]
1849:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
 5657              		.loc 1 1849 15 view .LVU1739
 5658              	.L368:
1854:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 5659              		.loc 1 1854 9 view .LVU1740
 5660 0134 2268     		ldr	r2, [r4]
 5661              	.LVL457:
 5662              	.LBB762:
 5663              	.LBI762:
6955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5664              		.loc 2 6955 22 view .LVU1741
 5665              	.LBB763:
6960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5666              		.loc 2 6960 3 view .LVU1742
 5667 0136 9368     		ldr	r3, [r2, #8]
 5668 0138 23F00043 		bic	r3, r3, #-2147483648
 5669 013c 23F03F03 		bic	r3, r3, #63
ARM GAS  /tmp/cc46GlVT.s 			page 342


 5670 0140 43F00403 		orr	r3, r3, #4
 5671 0144 9360     		str	r3, [r2, #8]
6963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 5672              		.loc 2 6963 1 is_stmt 0 view .LVU1743
 5673 0146 18E0     		b	.L355
 5674              	.LVL458:
 5675              	.L380:
6963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 5676              		.loc 2 6963 1 view .LVU1744
 5677              	.LBE763:
 5678              	.LBE762:
1842:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 5679              		.loc 1 1842 15 is_stmt 1 view .LVU1745
 5680 0148 5A68     		ldr	r2, [r3, #4]
 5681 014a 22F02002 		bic	r2, r2, #32
 5682 014e 5A60     		str	r2, [r3, #4]
1843:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               break;
 5683              		.loc 1 1843 15 view .LVU1746
 5684 0150 2268     		ldr	r2, [r4]
 5685 0152 5368     		ldr	r3, [r2, #4]
 5686 0154 43F04003 		orr	r3, r3, #64
 5687 0158 5360     		str	r3, [r2, #4]
1844:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
 5688              		.loc 1 1844 15 view .LVU1747
 5689 015a EBE7     		b	.L368
 5690              	.L379:
1872:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 5691              		.loc 1 1872 15 view .LVU1748
 5692 015c 5A68     		ldr	r2, [r3, #4]
 5693 015e 22F02002 		bic	r2, r2, #32
 5694 0162 5A60     		str	r2, [r3, #4]
1873:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****               break;
 5695              		.loc 1 1873 15 view .LVU1749
 5696 0164 2268     		ldr	r2, [r4]
 5697 0166 5368     		ldr	r3, [r2, #4]
 5698 0168 43F04003 		orr	r3, r3, #64
 5699 016c 5360     		str	r3, [r2, #4]
1874:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
 5700              		.loc 1 1874 15 view .LVU1750
 5701 016e 04E0     		b	.L355
 5702              	.L356:
1914:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 5703              		.loc 1 1914 7 view .LVU1751
1914:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 5704              		.loc 1 1914 7 view .LVU1752
 5705 0170 0023     		movs	r3, #0
 5706 0172 84F85430 		strb	r3, [r4, #84]
 5707 0176 00E0     		b	.L355
 5708              	.LVL459:
 5709              	.L371:
1920:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 5710              		.loc 1 1920 20 is_stmt 0 view .LVU1753
 5711 0178 0220     		movs	r0, #2
 5712              	.LVL460:
 5713              	.L355:
1925:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5714              		.loc 1 1925 1 view .LVU1754
ARM GAS  /tmp/cc46GlVT.s 			page 343


 5715 017a 38BD     		pop	{r3, r4, r5, pc}
 5716              	.LVL461:
 5717              	.L372:
1742:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5718              		.loc 1 1742 5 view .LVU1755
 5719 017c 0220     		movs	r0, #2
 5720              	.LVL462:
1742:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5721              		.loc 1 1742 5 view .LVU1756
 5722 017e FCE7     		b	.L355
 5723              	.L382:
 5724              		.align	2
 5725              	.L381:
 5726 0180 00830242 		.word	1107460864
 5727 0184 00810242 		.word	1107460352
 5728              		.cfi_endproc
 5729              	.LFE369:
 5731              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 5732              		.align	1
 5733              		.global	HAL_ADC_Start_DMA
 5734              		.syntax unified
 5735              		.thumb
 5736              		.thumb_func
 5737              		.fpu fpv4-sp-d16
 5739              	HAL_ADC_Start_DMA:
 5740              	.LVL463:
 5741              	.LFB371:
1988:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5742              		.loc 1 1988 1 is_stmt 1 view -0
 5743              		.cfi_startproc
 5744              		@ args = 0, pretend = 0, frame = 112
 5745              		@ frame_needed = 0, uses_anonymous_args = 0
1988:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5746              		.loc 1 1988 1 is_stmt 0 view .LVU1758
 5747 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5748              	.LCFI22:
 5749              		.cfi_def_cfa_offset 20
 5750              		.cfi_offset 4, -20
 5751              		.cfi_offset 5, -16
 5752              		.cfi_offset 6, -12
 5753              		.cfi_offset 7, -8
 5754              		.cfi_offset 14, -4
 5755 0002 9DB0     		sub	sp, sp, #116
 5756              	.LCFI23:
 5757              		.cfi_def_cfa_offset 136
 5758 0004 0446     		mov	r4, r0
1989:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 5759              		.loc 1 1989 3 is_stmt 1 view .LVU1759
1991:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
 5760              		.loc 1 1991 3 view .LVU1760
 5761              	.LVL464:
 5762              	.LBB764:
 5763              	.LBI764:
6532:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5764              		.loc 2 6532 26 view .LVU1761
 5765              	.LBB765:
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
ARM GAS  /tmp/cc46GlVT.s 			page 344


 5766              		.loc 2 6534 3 view .LVU1762
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5767              		.loc 2 6534 21 is_stmt 0 view .LVU1763
 5768 0006 584B     		ldr	r3, .L411
 5769 0008 9D68     		ldr	r5, [r3, #8]
 5770              	.LVL465:
6534:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5771              		.loc 2 6534 21 view .LVU1764
 5772              	.LBE765:
 5773              	.LBE764:
1993:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   DMA_NodeConfTypeDef node_conf;
 5774              		.loc 1 1993 3 is_stmt 1 view .LVU1765
1994:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5775              		.loc 1 1994 3 view .LVU1766
1997:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5776              		.loc 1 1997 3 view .LVU1767
2000:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 5777              		.loc 1 2000 3 view .LVU1768
2000:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 5778              		.loc 1 2000 42 is_stmt 0 view .LVU1769
 5779 000a 0068     		ldr	r0, [r0]
 5780              	.LVL466:
 5781              	.LBB766:
 5782              	.LBI766:
6991:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 5783              		.loc 2 6991 26 is_stmt 1 view .LVU1770
 5784              	.LBB767:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5785              		.loc 2 6993 3 view .LVU1771
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5786              		.loc 2 6993 12 is_stmt 0 view .LVU1772
 5787 000c 8068     		ldr	r0, [r0, #8]
 5788              	.LVL467:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5789              		.loc 2 6993 74 view .LVU1773
 5790 000e 10F0040F 		tst	r0, #4
 5791 0012 40F09E80 		bne	.L399
 5792 0016 0F46     		mov	r7, r1
 5793 0018 1646     		mov	r6, r2
 5794 001a 05F01F05 		and	r5, r5, #31
 5795              	.LVL468:
6993:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 5796              		.loc 2 6993 74 view .LVU1774
 5797              	.LBE767:
 5798              	.LBE766:
2003:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5799              		.loc 1 2003 5 is_stmt 1 view .LVU1775
2003:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5800              		.loc 1 2003 5 view .LVU1776
 5801 001e 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
 5802 0022 012B     		cmp	r3, #1
 5803 0024 00F09880 		beq	.L400
2003:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5804              		.loc 1 2003 5 discriminator 2 view .LVU1777
 5805 0028 0123     		movs	r3, #1
 5806 002a 84F85430 		strb	r3, [r4, #84]
2003:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 345


 5807              		.loc 1 2003 5 discriminator 2 view .LVU1778
2008:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 5808              		.loc 1 2008 5 discriminator 2 view .LVU1779
2008:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 5809              		.loc 1 2008 8 is_stmt 0 discriminator 2 view .LVU1780
 5810 002e 45B1     		cbz	r5, .L385
2009:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 5811              		.loc 1 2009 9 view .LVU1781
 5812 0030 052D     		cmp	r5, #5
 5813 0032 06D0     		beq	.L385
2010:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****        )
 5814              		.loc 1 2010 9 view .LVU1782
 5815 0034 092D     		cmp	r5, #9
 5816 0036 04D0     		beq	.L385
2162:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Process unlocked */
 5817              		.loc 1 2162 7 is_stmt 1 discriminator 1 view .LVU1783
 5818              	.LVL469:
2164:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 5819              		.loc 1 2164 7 discriminator 1 view .LVU1784
2164:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 5820              		.loc 1 2164 7 discriminator 1 view .LVU1785
 5821 0038 0023     		movs	r3, #0
 5822 003a 84F85430 		strb	r3, [r4, #84]
2162:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       /* Process unlocked */
 5823              		.loc 1 2162 22 is_stmt 0 discriminator 1 view .LVU1786
 5824 003e 0120     		movs	r0, #1
 5825 0040 88E0     		b	.L384
 5826              	.LVL470:
 5827              	.L385:
2015:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5828              		.loc 1 2015 7 is_stmt 1 view .LVU1787
2015:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5829              		.loc 1 2015 24 is_stmt 0 view .LVU1788
 5830 0042 2046     		mov	r0, r4
 5831 0044 FFF7FEFF 		bl	ADC_Enable
 5832              	.LVL471:
2018:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5833              		.loc 1 2018 7 is_stmt 1 view .LVU1789
2018:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 5834              		.loc 1 2018 10 is_stmt 0 view .LVU1790
 5835 0048 0028     		cmp	r0, #0
 5836 004a 7ED1     		bne	.L387
2023:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
 5837              		.loc 1 2023 9 is_stmt 1 view .LVU1791
 5838 004c A36D     		ldr	r3, [r4, #88]
 5839 004e 23F47063 		bic	r3, r3, #3840
 5840 0052 23F00103 		bic	r3, r3, #1
 5841 0056 43F48073 		orr	r3, r3, #256
 5842 005a A365     		str	r3, [r4, #88]
2031:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5843              		.loc 1 2031 9 view .LVU1792
2031:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5844              		.loc 1 2031 14 is_stmt 0 view .LVU1793
 5845 005c 2368     		ldr	r3, [r4]
 5846 005e 434A     		ldr	r2, .L411+4
 5847 0060 9342     		cmp	r3, r2
 5848 0062 4FD0     		beq	.L406
ARM GAS  /tmp/cc46GlVT.s 			page 346


 5849 0064 1A46     		mov	r2, r3
 5850              	.L388:
2031:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5851              		.loc 1 2031 12 discriminator 4 view .LVU1794
 5852 0066 9342     		cmp	r3, r2
 5853 0068 00D0     		beq	.L389
2032:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****            )
 5854              		.loc 1 2032 13 view .LVU1795
 5855 006a 1DB9     		cbnz	r5, .L390
 5856              	.L389:
2035:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 5857              		.loc 1 2035 11 is_stmt 1 view .LVU1796
 5858 006c A36D     		ldr	r3, [r4, #88]
 5859 006e 23F48013 		bic	r3, r3, #1048576
 5860 0072 A365     		str	r3, [r4, #88]
 5861              	.L390:
2040:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5862              		.loc 1 2040 9 view .LVU1797
2040:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5863              		.loc 1 2040 18 is_stmt 0 view .LVU1798
 5864 0074 A36D     		ldr	r3, [r4, #88]
2040:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5865              		.loc 1 2040 12 view .LVU1799
 5866 0076 13F4805F 		tst	r3, #4096
 5867 007a 46D0     		beq	.L391
2043:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 5868              		.loc 1 2043 11 is_stmt 1 view .LVU1800
 5869 007c E36D     		ldr	r3, [r4, #92]
 5870 007e 23F00603 		bic	r3, r3, #6
 5871 0082 E365     		str	r3, [r4, #92]
 5872              	.L392:
2052:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5873              		.loc 1 2052 9 view .LVU1801
2052:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5874              		.loc 1 2052 13 is_stmt 0 view .LVU1802
 5875 0084 236D     		ldr	r3, [r4, #80]
2052:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5876              		.loc 1 2052 44 view .LVU1803
 5877 0086 3A4A     		ldr	r2, .L411+8
 5878 0088 1A66     		str	r2, [r3, #96]
2055:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5879              		.loc 1 2055 9 is_stmt 1 view .LVU1804
2055:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5880              		.loc 1 2055 13 is_stmt 0 view .LVU1805
 5881 008a 236D     		ldr	r3, [r4, #80]
2055:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5882              		.loc 1 2055 48 view .LVU1806
 5883 008c 394A     		ldr	r2, .L411+12
 5884 008e 5A66     		str	r2, [r3, #100]
2058:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5885              		.loc 1 2058 9 is_stmt 1 view .LVU1807
2058:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5886              		.loc 1 2058 13 is_stmt 0 view .LVU1808
 5887 0090 236D     		ldr	r3, [r4, #80]
2058:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5888              		.loc 1 2058 45 view .LVU1809
 5889 0092 394A     		ldr	r2, .L411+16
ARM GAS  /tmp/cc46GlVT.s 			page 347


 5890 0094 9A66     		str	r2, [r3, #104]
2067:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5891              		.loc 1 2067 9 is_stmt 1 view .LVU1810
 5892 0096 2368     		ldr	r3, [r4]
 5893 0098 1C22     		movs	r2, #28
 5894 009a 1A60     		str	r2, [r3]
2072:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5895              		.loc 1 2072 9 view .LVU1811
2072:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5896              		.loc 1 2072 9 view .LVU1812
 5897 009c 0023     		movs	r3, #0
 5898 009e 84F85430 		strb	r3, [r4, #84]
2072:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5899              		.loc 1 2072 9 view .LVU1813
2077:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5900              		.loc 1 2077 9 view .LVU1814
 5901 00a2 2268     		ldr	r2, [r4]
 5902 00a4 5368     		ldr	r3, [r2, #4]
 5903 00a6 43F01003 		orr	r3, r3, #16
 5904 00aa 5360     		str	r3, [r2, #4]
2080:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 5905              		.loc 1 2080 9 view .LVU1815
 5906 00ac 2268     		ldr	r2, [r4]
 5907 00ae D368     		ldr	r3, [r2, #12]
 5908 00b0 43F00103 		orr	r3, r3, #1
 5909 00b4 D360     		str	r3, [r2, #12]
2083:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5910              		.loc 1 2083 9 view .LVU1816
2083:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5911              		.loc 1 2083 18 is_stmt 0 view .LVU1817
 5912 00b6 206D     		ldr	r0, [r4, #80]
 5913              	.LVL472:
2083:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5914              		.loc 1 2083 30 view .LVU1818
 5915 00b8 036D     		ldr	r3, [r0, #80]
2083:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 5916              		.loc 1 2083 12 view .LVU1819
 5917 00ba 13F0800F 		tst	r3, #128
 5918 00be 2BD0     		beq	.L393
2085:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 5919              		.loc 1 2085 11 is_stmt 1 view .LVU1820
2085:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 5920              		.loc 1 2085 32 is_stmt 0 view .LVU1821
 5921 00c0 436F     		ldr	r3, [r0, #116]
2085:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 5922              		.loc 1 2085 14 view .LVU1822
 5923 00c2 002B     		cmp	r3, #0
 5924 00c4 4AD0     		beq	.L402
2085:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 5925              		.loc 1 2085 96 discriminator 1 view .LVU1823
 5926 00c6 1968     		ldr	r1, [r3]
2085:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 5927              		.loc 1 2085 59 discriminator 1 view .LVU1824
 5928 00c8 0029     		cmp	r1, #0
 5929 00ca 49D0     		beq	.L403
2088:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
 5930              		.loc 1 2088 13 is_stmt 1 view .LVU1825
ARM GAS  /tmp/cc46GlVT.s 			page 348


2088:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
 5931              		.loc 1 2088 17 is_stmt 0 view .LVU1826
 5932 00cc 01A8     		add	r0, sp, #4
 5933 00ce FFF7FEFF 		bl	HAL_DMAEx_List_GetNodeConfig
 5934              	.LVL473:
2088:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
 5935              		.loc 1 2088 16 view .LVU1827
 5936 00d2 0028     		cmp	r0, #0
 5937 00d4 46D1     		bne	.L404
2094:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
 5938              		.loc 1 2094 13 is_stmt 1 view .LVU1828
2094:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
 5939              		.loc 1 2094 31 is_stmt 0 view .LVU1829
 5940 00d6 079B     		ldr	r3, [sp, #28]
2094:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
 5941              		.loc 1 2094 16 view .LVU1830
 5942 00d8 022B     		cmp	r3, #2
 5943 00da 19D0     		beq	.L407
2099:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
 5944              		.loc 1 2099 18 is_stmt 1 view .LVU1831
2099:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             {
 5945              		.loc 1 2099 21 is_stmt 0 view .LVU1832
 5946 00dc 012B     		cmp	r3, #1
 5947 00de 19D0     		beq	.L408
 5948              	.LVL474:
 5949              	.L395:
2110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             hadc->DMA_Handle->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] =     
 5950              		.loc 1 2110 13 is_stmt 1 view .LVU1833
2110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             hadc->DMA_Handle->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] =     
 5951              		.loc 1 2110 17 is_stmt 0 view .LVU1834
 5952 00e0 236D     		ldr	r3, [r4, #80]
2110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             hadc->DMA_Handle->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] =     
 5953              		.loc 1 2110 29 view .LVU1835
 5954 00e2 5B6F     		ldr	r3, [r3, #116]
2110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             hadc->DMA_Handle->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] =     
 5955              		.loc 1 2110 46 view .LVU1836
 5956 00e4 1B68     		ldr	r3, [r3]
2110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             hadc->DMA_Handle->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] =     
 5957              		.loc 1 2110 94 view .LVU1837
 5958 00e6 9E60     		str	r6, [r3, #8]
2111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 (uint32_t)&hadc->Instance->DR;
 5959              		.loc 1 2111 13 is_stmt 1 view .LVU1838
2112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             hadc->DMA_Handle->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uin
 5960              		.loc 1 2112 32 is_stmt 0 view .LVU1839
 5961 00e8 2368     		ldr	r3, [r4]
2112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             hadc->DMA_Handle->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uin
 5962              		.loc 1 2112 27 view .LVU1840
 5963 00ea 4033     		adds	r3, r3, #64
2111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 (uint32_t)&hadc->Instance->DR;
 5964              		.loc 1 2111 17 view .LVU1841
 5965 00ec 226D     		ldr	r2, [r4, #80]
2111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 (uint32_t)&hadc->Instance->DR;
 5966              		.loc 1 2111 29 view .LVU1842
 5967 00ee 526F     		ldr	r2, [r2, #116]
2111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 (uint32_t)&hadc->Instance->DR;
 5968              		.loc 1 2111 46 view .LVU1843
 5969 00f0 1268     		ldr	r2, [r2]
ARM GAS  /tmp/cc46GlVT.s 			page 349


2111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                 (uint32_t)&hadc->Instance->DR;
 5970              		.loc 1 2111 94 view .LVU1844
 5971 00f2 D360     		str	r3, [r2, #12]
2113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             tmp_hal_status = HAL_DMAEx_List_Start_IT(hadc->DMA_Handle);
 5972              		.loc 1 2113 13 is_stmt 1 view .LVU1845
2113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             tmp_hal_status = HAL_DMAEx_List_Start_IT(hadc->DMA_Handle);
 5973              		.loc 1 2113 17 is_stmt 0 view .LVU1846
 5974 00f4 236D     		ldr	r3, [r4, #80]
2113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             tmp_hal_status = HAL_DMAEx_List_Start_IT(hadc->DMA_Handle);
 5975              		.loc 1 2113 29 view .LVU1847
 5976 00f6 5B6F     		ldr	r3, [r3, #116]
2113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             tmp_hal_status = HAL_DMAEx_List_Start_IT(hadc->DMA_Handle);
 5977              		.loc 1 2113 46 view .LVU1848
 5978 00f8 1B68     		ldr	r3, [r3]
2113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             tmp_hal_status = HAL_DMAEx_List_Start_IT(hadc->DMA_Handle);
 5979              		.loc 1 2113 94 view .LVU1849
 5980 00fa 1F61     		str	r7, [r3, #16]
2114:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
 5981              		.loc 1 2114 13 is_stmt 1 view .LVU1850
2114:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
 5982              		.loc 1 2114 30 is_stmt 0 view .LVU1851
 5983 00fc 206D     		ldr	r0, [r4, #80]
 5984 00fe FFF7FEFF 		bl	HAL_DMAEx_List_Start_IT
 5985              	.LVL475:
2114:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
 5986              		.loc 1 2114 30 view .LVU1852
 5987 0102 14E0     		b	.L396
 5988              	.LVL476:
 5989              	.L406:
2031:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5990              		.loc 1 2031 14 view .LVU1853
 5991 0104 A2F58072 		sub	r2, r2, #256
 5992 0108 ADE7     		b	.L388
 5993              	.L391:
2048:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 5994              		.loc 1 2048 11 is_stmt 1 view .LVU1854
 5995 010a 0023     		movs	r3, #0
 5996 010c E365     		str	r3, [r4, #92]
 5997 010e B9E7     		b	.L392
 5998              	.LVL477:
 5999              	.L407:
2097:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             }
 6000              		.loc 1 2097 15 view .LVU1855
2097:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             }
 6001              		.loc 1 2097 28 is_stmt 0 view .LVU1856
 6002 0110 B600     		lsls	r6, r6, #2
 6003              	.LVL478:
2097:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             }
 6004              		.loc 1 2097 28 view .LVU1857
 6005 0112 E5E7     		b	.L395
 6006              	.LVL479:
 6007              	.L408:
2102:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             }
 6008              		.loc 1 2102 15 is_stmt 1 view .LVU1858
2102:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             }
 6009              		.loc 1 2102 28 is_stmt 0 view .LVU1859
 6010 0114 7600     		lsls	r6, r6, #1
ARM GAS  /tmp/cc46GlVT.s 			page 350


 6011              	.LVL480:
2102:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             }
 6012              		.loc 1 2102 28 view .LVU1860
 6013 0116 E3E7     		b	.L395
 6014              	.LVL481:
 6015              	.L393:
2124:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 6016              		.loc 1 2124 11 is_stmt 1 view .LVU1861
2124:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 6017              		.loc 1 2124 37 is_stmt 0 view .LVU1862
 6018 0118 8369     		ldr	r3, [r0, #24]
2124:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 6019              		.loc 1 2124 14 view .LVU1863
 6020 011a 022B     		cmp	r3, #2
 6021 011c 11D0     		beq	.L409
2129:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 6022              		.loc 1 2129 16 is_stmt 1 view .LVU1864
2129:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           {
 6023              		.loc 1 2129 19 is_stmt 0 view .LVU1865
 6024 011e 012B     		cmp	r3, #1
 6025 0120 11D0     		beq	.L410
 6026              	.LVL482:
 6027              	.L398:
2141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                             length_bytes);
 6028              		.loc 1 2141 11 is_stmt 1 view .LVU1866
2141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                             length_bytes);
 6029              		.loc 1 2141 78 is_stmt 0 view .LVU1867
 6030 0122 2168     		ldr	r1, [r4]
2141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                                             length_bytes);
 6031              		.loc 1 2141 28 view .LVU1868
 6032 0124 3346     		mov	r3, r6
 6033 0126 3A46     		mov	r2, r7
 6034 0128 4031     		adds	r1, r1, #64
 6035 012a FFF7FEFF 		bl	HAL_DMA_Start_IT
 6036              	.LVL483:
 6037              	.L396:
2150:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 6038              		.loc 1 2150 9 is_stmt 1 view .LVU1869
 6039 012e 2268     		ldr	r2, [r4]
 6040              	.LVL484:
 6041              	.LBB768:
 6042              	.LBI768:
6955:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 6043              		.loc 2 6955 22 view .LVU1870
 6044              	.LBB769:
6960:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 6045              		.loc 2 6960 3 view .LVU1871
 6046 0130 9368     		ldr	r3, [r2, #8]
 6047 0132 23F00043 		bic	r3, r3, #-2147483648
 6048 0136 23F03F03 		bic	r3, r3, #63
 6049 013a 43F00403 		orr	r3, r3, #4
 6050 013e 9360     		str	r3, [r2, #8]
6963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 6051              		.loc 2 6963 1 is_stmt 0 view .LVU1872
 6052 0140 08E0     		b	.L384
 6053              	.LVL485:
 6054              	.L409:
ARM GAS  /tmp/cc46GlVT.s 			page 351


6963:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** 
 6055              		.loc 2 6963 1 view .LVU1873
 6056              	.LBE769:
 6057              	.LBE768:
2127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
 6058              		.loc 1 2127 13 is_stmt 1 view .LVU1874
2127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
 6059              		.loc 1 2127 26 is_stmt 0 view .LVU1875
 6060 0142 B600     		lsls	r6, r6, #2
 6061              	.LVL486:
2127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
 6062              		.loc 1 2127 26 view .LVU1876
 6063 0144 EDE7     		b	.L398
 6064              	.LVL487:
 6065              	.L410:
2132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
 6066              		.loc 1 2132 13 is_stmt 1 view .LVU1877
2132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
 6067              		.loc 1 2132 26 is_stmt 0 view .LVU1878
 6068 0146 7600     		lsls	r6, r6, #1
 6069              	.LVL488:
2132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
 6070              		.loc 1 2132 26 view .LVU1879
 6071 0148 EBE7     		b	.L398
 6072              	.LVL489:
 6073              	.L387:
2155:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 6074              		.loc 1 2155 9 is_stmt 1 view .LVU1880
2155:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 6075              		.loc 1 2155 9 view .LVU1881
 6076 014a 0023     		movs	r3, #0
 6077 014c 84F85430 		strb	r3, [r4, #84]
 6078 0150 00E0     		b	.L384
 6079              	.LVL490:
 6080              	.L399:
2170:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 6081              		.loc 1 2170 20 is_stmt 0 view .LVU1882
 6082 0152 0220     		movs	r0, #2
 6083              	.LVL491:
 6084              	.L384:
2175:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6085              		.loc 1 2175 1 view .LVU1883
 6086 0154 1DB0     		add	sp, sp, #116
 6087              	.LCFI24:
 6088              		.cfi_remember_state
 6089              		.cfi_def_cfa_offset 20
 6090              		@ sp needed
 6091 0156 F0BD     		pop	{r4, r5, r6, r7, pc}
 6092              	.LVL492:
 6093              	.L400:
 6094              	.LCFI25:
 6095              		.cfi_restore_state
2003:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6096              		.loc 1 2003 5 view .LVU1884
 6097 0158 0220     		movs	r0, #2
 6098 015a FBE7     		b	.L384
 6099              	.LVL493:
ARM GAS  /tmp/cc46GlVT.s 			page 352


 6100              	.L402:
2118:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****           }
 6101              		.loc 1 2118 20 view .LVU1885
 6102 015c 0120     		movs	r0, #1
 6103 015e F9E7     		b	.L384
 6104              	.L403:
 6105 0160 0120     		movs	r0, #1
 6106 0162 F7E7     		b	.L384
 6107              	.L404:
2090:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             }
 6108              		.loc 1 2090 22 view .LVU1886
 6109 0164 0120     		movs	r0, #1
 6110 0166 F5E7     		b	.L384
 6111              	.L412:
 6112              		.align	2
 6113              	.L411:
 6114 0168 00830242 		.word	1107460864
 6115 016c 00810242 		.word	1107460352
 6116 0170 00000000 		.word	ADC_DMAConvCplt
 6117 0174 00000000 		.word	ADC_DMAHalfConvCplt
 6118 0178 00000000 		.word	ADC_DMAError
 6119              		.cfi_endproc
 6120              	.LFE371:
 6122              		.section	.text.ADC_Disable,"ax",%progbits
 6123              		.align	1
 6124              		.global	ADC_Disable
 6125              		.syntax unified
 6126              		.thumb
 6127              		.thumb_func
 6128              		.fpu fpv4-sp-d16
 6130              	ADC_Disable:
 6131              	.LVL494:
 6132              	.LFB387:
3586:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tickstart;
 6133              		.loc 1 3586 1 is_stmt 1 view -0
 6134              		.cfi_startproc
 6135              		@ args = 0, pretend = 0, frame = 0
 6136              		@ frame_needed = 0, uses_anonymous_args = 0
3586:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   uint32_t tickstart;
 6137              		.loc 1 3586 1 is_stmt 0 view .LVU1888
 6138 0000 38B5     		push	{r3, r4, r5, lr}
 6139              	.LCFI26:
 6140              		.cfi_def_cfa_offset 16
 6141              		.cfi_offset 3, -16
 6142              		.cfi_offset 4, -12
 6143              		.cfi_offset 5, -8
 6144              		.cfi_offset 14, -4
 6145 0002 0446     		mov	r4, r0
3587:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
 6146              		.loc 1 3587 3 is_stmt 1 view .LVU1889
3588:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6147              		.loc 1 3588 3 view .LVU1890
3588:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6148              		.loc 1 3588 76 is_stmt 0 view .LVU1891
 6149 0004 0268     		ldr	r2, [r0]
 6150              	.LVL495:
 6151              	.LBB770:
ARM GAS  /tmp/cc46GlVT.s 			page 353


 6152              	.LBI770:
6880:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 6153              		.loc 2 6880 26 is_stmt 1 view .LVU1892
 6154              	.LBB771:
6882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 6155              		.loc 2 6882 3 view .LVU1893
6882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 6156              		.loc 2 6882 12 is_stmt 0 view .LVU1894
 6157 0006 9368     		ldr	r3, [r2, #8]
6882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 6158              		.loc 2 6882 70 view .LVU1895
 6159 0008 13F00203 		ands	r3, r3, #2
 6160 000c 00D0     		beq	.L414
 6161 000e 0123     		movs	r3, #1
 6162              	.L414:
 6163              	.LVL496:
6882:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 6164              		.loc 2 6882 70 view .LVU1896
 6165              	.LBE771:
 6166              	.LBE770:
3593:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 6167              		.loc 1 3593 3 is_stmt 1 view .LVU1897
 6168              	.LBB772:
 6169              	.LBI772:
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 6170              		.loc 2 6869 26 view .LVU1898
 6171              	.LBB773:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 6172              		.loc 2 6871 3 view .LVU1899
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 6173              		.loc 2 6871 12 is_stmt 0 view .LVU1900
 6174 0010 9168     		ldr	r1, [r2, #8]
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 6175              		.loc 2 6871 68 view .LVU1901
 6176 0012 11F0010F 		tst	r1, #1
 6177 0016 39D0     		beq	.L419
 6178              	.LVL497:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 6179              		.loc 2 6871 68 view .LVU1902
 6180              	.LBE773:
 6181              	.LBE772:
3594:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****      )
 6182              		.loc 1 3594 7 view .LVU1903
 6183 0018 002B     		cmp	r3, #0
 6184 001a 39D1     		bne	.L420
3598:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6185              		.loc 1 3598 5 is_stmt 1 view .LVU1904
3598:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6186              		.loc 1 3598 24 is_stmt 0 view .LVU1905
 6187 001c 9368     		ldr	r3, [r2, #8]
 6188              	.LVL498:
3598:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6189              		.loc 1 3598 29 view .LVU1906
 6190 001e 03F00D03 		and	r3, r3, #13
3598:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6191              		.loc 1 3598 8 view .LVU1907
 6192 0022 012B     		cmp	r3, #1
ARM GAS  /tmp/cc46GlVT.s 			page 354


 6193 0024 09D0     		beq	.L422
3607:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6194              		.loc 1 3607 7 is_stmt 1 view .LVU1908
 6195 0026 A36D     		ldr	r3, [r4, #88]
 6196 0028 43F01003 		orr	r3, r3, #16
 6197 002c A365     		str	r3, [r4, #88]
3610:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6198              		.loc 1 3610 7 view .LVU1909
 6199 002e E36D     		ldr	r3, [r4, #92]
 6200 0030 43F00103 		orr	r3, r3, #1
 6201 0034 E365     		str	r3, [r4, #92]
3612:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 6202              		.loc 1 3612 7 view .LVU1910
3612:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 6203              		.loc 1 3612 14 is_stmt 0 view .LVU1911
 6204 0036 0120     		movs	r0, #1
 6205              	.LVL499:
3612:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 6206              		.loc 1 3612 14 view .LVU1912
 6207 0038 29E0     		b	.L415
 6208              	.LVL500:
 6209              	.L422:
3601:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 6210              		.loc 1 3601 7 is_stmt 1 view .LVU1913
 6211              	.LBB774:
 6212              	.LBI774:
6850:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 6213              		.loc 2 6850 22 view .LVU1914
 6214              	.LBB775:
6855:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 6215              		.loc 2 6855 3 view .LVU1915
 6216 003a 9368     		ldr	r3, [r2, #8]
 6217 003c 23F00043 		bic	r3, r3, #-2147483648
 6218 0040 23F03F03 		bic	r3, r3, #63
 6219 0044 43F00203 		orr	r3, r3, #2
 6220 0048 9360     		str	r3, [r2, #8]
 6221              	.LVL501:
6855:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 6222              		.loc 2 6855 3 is_stmt 0 view .LVU1916
 6223              	.LBE775:
 6224              	.LBE774:
3602:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 6225              		.loc 1 3602 7 is_stmt 1 view .LVU1917
 6226 004a 2368     		ldr	r3, [r4]
 6227 004c 0322     		movs	r2, #3
 6228 004e 1A60     		str	r2, [r3]
3617:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6229              		.loc 1 3617 5 view .LVU1918
3617:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6230              		.loc 1 3617 17 is_stmt 0 view .LVU1919
 6231 0050 FFF7FEFF 		bl	HAL_GetTick
 6232              	.LVL502:
3617:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6233              		.loc 1 3617 17 view .LVU1920
 6234 0054 0546     		mov	r5, r0
 6235              	.LVL503:
3619:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
ARM GAS  /tmp/cc46GlVT.s 			page 355


 6236              		.loc 1 3619 5 is_stmt 1 view .LVU1921
 6237              	.L417:
3619:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6238              		.loc 1 3619 11 view .LVU1922
3619:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6239              		.loc 1 3619 17 is_stmt 0 view .LVU1923
 6240 0056 2368     		ldr	r3, [r4]
3619:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6241              		.loc 1 3619 27 view .LVU1924
 6242 0058 9B68     		ldr	r3, [r3, #8]
3619:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6243              		.loc 1 3619 11 view .LVU1925
 6244 005a 13F0010F 		tst	r3, #1
 6245 005e 13D0     		beq	.L423
3621:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 6246              		.loc 1 3621 7 is_stmt 1 view .LVU1926
3621:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 6247              		.loc 1 3621 12 is_stmt 0 view .LVU1927
 6248 0060 FFF7FEFF 		bl	HAL_GetTick
 6249              	.LVL504:
3621:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 6250              		.loc 1 3621 26 view .LVU1928
 6251 0064 401B     		subs	r0, r0, r5
3621:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 6252              		.loc 1 3621 10 view .LVU1929
 6253 0066 0228     		cmp	r0, #2
 6254 0068 F5D9     		bls	.L417
3624:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 6255              		.loc 1 3624 9 is_stmt 1 view .LVU1930
3624:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 6256              		.loc 1 3624 18 is_stmt 0 view .LVU1931
 6257 006a 2368     		ldr	r3, [r4]
3624:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 6258              		.loc 1 3624 28 view .LVU1932
 6259 006c 9B68     		ldr	r3, [r3, #8]
3624:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         {
 6260              		.loc 1 3624 12 view .LVU1933
 6261 006e 13F0010F 		tst	r3, #1
 6262 0072 F0D0     		beq	.L417
3627:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6263              		.loc 1 3627 11 is_stmt 1 view .LVU1934
 6264 0074 A36D     		ldr	r3, [r4, #88]
 6265 0076 43F01003 		orr	r3, r3, #16
 6266 007a A365     		str	r3, [r4, #88]
3630:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6267              		.loc 1 3630 11 view .LVU1935
 6268 007c E36D     		ldr	r3, [r4, #92]
 6269 007e 43F00103 		orr	r3, r3, #1
 6270 0082 E365     		str	r3, [r4, #92]
3632:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 6271              		.loc 1 3632 11 view .LVU1936
3632:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****         }
 6272              		.loc 1 3632 18 is_stmt 0 view .LVU1937
 6273 0084 0120     		movs	r0, #1
 6274 0086 02E0     		b	.L415
 6275              	.L423:
3639:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
ARM GAS  /tmp/cc46GlVT.s 			page 356


 6276              		.loc 1 3639 10 view .LVU1938
 6277 0088 0020     		movs	r0, #0
 6278 008a 00E0     		b	.L415
 6279              	.LVL505:
 6280              	.L419:
3639:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 6281              		.loc 1 3639 10 view .LVU1939
 6282 008c 0020     		movs	r0, #0
 6283              	.LVL506:
 6284              	.L415:
3640:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6285              		.loc 1 3640 1 view .LVU1940
 6286 008e 38BD     		pop	{r3, r4, r5, pc}
 6287              	.LVL507:
 6288              	.L420:
3639:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 6289              		.loc 1 3639 10 view .LVU1941
 6290 0090 0020     		movs	r0, #0
 6291              	.LVL508:
3639:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 6292              		.loc 1 3639 10 view .LVU1942
 6293 0092 FCE7     		b	.L415
 6294              		.cfi_endproc
 6295              	.LFE387:
 6297              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 6298              		.align	1
 6299              		.global	HAL_ADC_DeInit
 6300              		.syntax unified
 6301              		.thumb
 6302              		.thumb_func
 6303              		.fpu fpv4-sp-d16
 6305              	HAL_ADC_DeInit:
 6306              	.LVL509:
 6307              	.LFB362:
 698:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6308              		.loc 1 698 1 is_stmt 1 view -0
 6309              		.cfi_startproc
 6310              		@ args = 0, pretend = 0, frame = 0
 6311              		@ frame_needed = 0, uses_anonymous_args = 0
 698:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6312              		.loc 1 698 1 is_stmt 0 view .LVU1944
 6313 0000 38B5     		push	{r3, r4, r5, lr}
 6314              	.LCFI27:
 6315              		.cfi_def_cfa_offset 16
 6316              		.cfi_offset 3, -16
 6317              		.cfi_offset 4, -12
 6318              		.cfi_offset 5, -8
 6319              		.cfi_offset 14, -4
 699:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6320              		.loc 1 699 3 is_stmt 1 view .LVU1945
 702:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 6321              		.loc 1 702 3 view .LVU1946
 702:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 6322              		.loc 1 702 6 is_stmt 0 view .LVU1947
 6323 0002 0028     		cmp	r0, #0
 6324 0004 00F0C880 		beq	.L430
 6325 0008 0446     		mov	r4, r0
ARM GAS  /tmp/cc46GlVT.s 			page 357


 708:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6326              		.loc 1 708 3 is_stmt 1 view .LVU1948
 711:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6327              		.loc 1 711 3 view .LVU1949
 6328 000a 836D     		ldr	r3, [r0, #88]
 6329 000c 43F00203 		orr	r3, r3, #2
 6330 0010 8365     		str	r3, [r0, #88]
 714:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6331              		.loc 1 714 3 view .LVU1950
 714:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6332              		.loc 1 714 20 is_stmt 0 view .LVU1951
 6333 0012 0321     		movs	r1, #3
 6334 0014 FFF7FEFF 		bl	ADC_ConversionStop
 6335              	.LVL510:
 722:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6336              		.loc 1 722 3 is_stmt 1 view .LVU1952
 6337 0018 2268     		ldr	r2, [r4]
 6338 001a D368     		ldr	r3, [r2, #12]
 6339 001c 43F40013 		orr	r3, r3, #2097152
 6340 0020 D360     		str	r3, [r2, #12]
 725:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 6341              		.loc 1 725 3 view .LVU1953
 725:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 6342              		.loc 1 725 6 is_stmt 0 view .LVU1954
 6343 0022 0546     		mov	r5, r0
 6344 0024 0028     		cmp	r0, #0
 6345 0026 00F09E80 		beq	.L432
 6346              	.L426:
 6347              	.LVL511:
 746:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 6348              		.loc 1 746 3 is_stmt 1 view .LVU1955
 6349 002a 2268     		ldr	r2, [r4]
 6350 002c 5368     		ldr	r3, [r2, #4]
 6351 002e 23F4FF63 		bic	r3, r3, #2040
 6352 0032 23F00703 		bic	r3, r3, #7
 6353 0036 5360     		str	r3, [r2, #4]
 753:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 6354              		.loc 1 753 3 view .LVU1956
 6355 0038 2368     		ldr	r3, [r4]
 6356 003a 40F2FF72 		movw	r2, #2047
 6357 003e 1A60     		str	r2, [r3]
 764:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 6358              		.loc 1 764 3 view .LVU1957
 6359 0040 2268     		ldr	r2, [r4]
 6360 0042 9368     		ldr	r3, [r2, #8]
 6361 0044 23F0A043 		bic	r3, r3, #1342177280
 6362 0048 9360     		str	r3, [r2, #8]
 765:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6363              		.loc 1 765 3 view .LVU1958
 6364 004a 2268     		ldr	r2, [r4]
 6365 004c 9368     		ldr	r3, [r2, #8]
 6366 004e 43F00053 		orr	r3, r3, #536870912
 6367 0052 9360     		str	r3, [r2, #8]
 768:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 6368              		.loc 1 768 3 view .LVU1959
 6369 0054 2268     		ldr	r2, [r4]
 6370 0056 D368     		ldr	r3, [r2, #12]
ARM GAS  /tmp/cc46GlVT.s 			page 358


 6371 0058 23F0FF43 		bic	r3, r3, #2139095040
 6372 005c 23F4FF03 		bic	r3, r3, #8355840
 6373 0060 23F4FF43 		bic	r3, r3, #32640
 6374 0064 23F07B03 		bic	r3, r3, #123
 6375 0068 D360     		str	r3, [r2, #12]
 769:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6376              		.loc 1 769 3 view .LVU1960
 6377 006a 2268     		ldr	r2, [r4]
 6378 006c D368     		ldr	r3, [r2, #12]
 6379 006e 43F00043 		orr	r3, r3, #-2147483648
 6380 0072 D360     		str	r3, [r2, #12]
 772:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 6381              		.loc 1 772 3 view .LVU1961
 6382 0074 2268     		ldr	r2, [r4]
 6383 0076 1369     		ldr	r3, [r2, #16]
 6384 0078 23F4FF63 		bic	r3, r3, #2040
 6385 007c 23F00703 		bic	r3, r3, #7
 6386 0080 1361     		str	r3, [r2, #16]
 776:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6387              		.loc 1 776 3 view .LVU1962
 6388 0082 2268     		ldr	r2, [r4]
 6389 0084 5369     		ldr	r3, [r2, #20]
 6390 0086 03F04043 		and	r3, r3, #-1073741824
 6391 008a 5361     		str	r3, [r2, #20]
 779:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 6392              		.loc 1 779 3 view .LVU1963
 6393 008c 2268     		ldr	r2, [r4]
 6394 008e 9369     		ldr	r3, [r2, #24]
 6395 0090 03F07843 		and	r3, r3, #-134217728
 6396 0094 9361     		str	r3, [r2, #24]
 784:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6397              		.loc 1 784 3 view .LVU1964
 6398 0096 2268     		ldr	r2, [r4]
 6399 0098 136A     		ldr	r3, [r2, #32]
 6400 009a 03F0F023 		and	r3, r3, #-268374016
 6401 009e 1362     		str	r3, [r2, #32]
 787:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6402              		.loc 1 787 3 view .LVU1965
 6403 00a0 2268     		ldr	r2, [r4]
 6404 00a2 536A     		ldr	r3, [r2, #36]
 6405 00a4 03F0FF23 		and	r3, r3, #-16711936
 6406 00a8 5362     		str	r3, [r2, #36]
 790:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6407              		.loc 1 790 3 view .LVU1966
 6408 00aa 2268     		ldr	r2, [r4]
 6409 00ac 936A     		ldr	r3, [r2, #40]
 6410 00ae 03F0FF23 		and	r3, r3, #-16711936
 6411 00b2 9362     		str	r3, [r2, #40]
 793:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 6412              		.loc 1 793 3 view .LVU1967
 6413 00b4 2268     		ldr	r2, [r4]
 6414 00b6 116B     		ldr	r1, [r2, #48]
 6415 00b8 384B     		ldr	r3, .L434
 6416 00ba 0B40     		ands	r3, r3, r1
 6417 00bc 1363     		str	r3, [r2, #48]
 797:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 6418              		.loc 1 797 3 view .LVU1968
ARM GAS  /tmp/cc46GlVT.s 			page 359


 6419 00be 2368     		ldr	r3, [r4]
 6420 00c0 5A6B     		ldr	r2, [r3, #52]
 6421 00c2 3749     		ldr	r1, .L434+4
 6422 00c4 0A40     		ands	r2, r2, r1
 6423 00c6 5A63     		str	r2, [r3, #52]
 801:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 6424              		.loc 1 801 3 view .LVU1969
 6425 00c8 2268     		ldr	r2, [r4]
 6426 00ca 936B     		ldr	r3, [r2, #56]
 6427 00cc 0B40     		ands	r3, r3, r1
 6428 00ce 9363     		str	r3, [r2, #56]
 805:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6429              		.loc 1 805 3 view .LVU1970
 6430 00d0 2268     		ldr	r2, [r4]
 6431 00d2 D36B     		ldr	r3, [r2, #60]
 6432 00d4 23F4FB63 		bic	r3, r3, #2008
 6433 00d8 23F00703 		bic	r3, r3, #7
 6434 00dc D363     		str	r3, [r2, #60]
 813:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register OFR2 */
 6435              		.loc 1 813 3 view .LVU1971
 6436 00de 2168     		ldr	r1, [r4]
 6437 00e0 0A6E     		ldr	r2, [r1, #96]
 6438 00e2 304B     		ldr	r3, .L434+8
 6439 00e4 1A40     		ands	r2, r2, r3
 6440 00e6 0A66     		str	r2, [r1, #96]
 815:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register OFR3 */
 6441              		.loc 1 815 3 view .LVU1972
 6442 00e8 2168     		ldr	r1, [r4]
 6443 00ea 4A6E     		ldr	r2, [r1, #100]
 6444 00ec 1A40     		ands	r2, r2, r3
 6445 00ee 4A66     		str	r2, [r1, #100]
 817:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   /* Reset register OFR4 */
 6446              		.loc 1 817 3 view .LVU1973
 6447 00f0 2168     		ldr	r1, [r4]
 6448 00f2 8A6E     		ldr	r2, [r1, #104]
 6449 00f4 1A40     		ands	r2, r2, r3
 6450 00f6 8A66     		str	r2, [r1, #104]
 819:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6451              		.loc 1 819 3 view .LVU1974
 6452 00f8 2168     		ldr	r1, [r4]
 6453 00fa CA6E     		ldr	r2, [r1, #108]
 6454 00fc 1340     		ands	r3, r3, r2
 6455 00fe CB66     		str	r3, [r1, #108]
 825:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6456              		.loc 1 825 3 view .LVU1975
 6457 0100 2268     		ldr	r2, [r4]
 6458 0102 D2F8A030 		ldr	r3, [r2, #160]
 6459 0106 1B0D     		lsrs	r3, r3, #20
 6460 0108 1B05     		lsls	r3, r3, #20
 6461 010a C2F8A030 		str	r3, [r2, #160]
 828:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6462              		.loc 1 828 3 view .LVU1976
 6463 010e 2268     		ldr	r2, [r4]
 6464 0110 D2F8A430 		ldr	r3, [r2, #164]
 6465 0114 1B0D     		lsrs	r3, r3, #20
 6466 0116 1B05     		lsls	r3, r3, #20
 6467 0118 C2F8A430 		str	r3, [r2, #164]
ARM GAS  /tmp/cc46GlVT.s 			page 360


 831:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6468              		.loc 1 831 3 view .LVU1977
 6469 011c 2268     		ldr	r2, [r4]
 6470 011e D2F8B030 		ldr	r3, [r2, #176]
 6471 0122 1B0D     		lsrs	r3, r3, #20
 6472 0124 1B05     		lsls	r3, r3, #20
 6473 0126 C2F8B030 		str	r3, [r2, #176]
 834:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6474              		.loc 1 834 3 view .LVU1978
 6475 012a 2268     		ldr	r2, [r4]
 6476 012c D2F8B430 		ldr	r3, [r2, #180]
 6477 0130 23F07F13 		bic	r3, r3, #8323199
 6478 0134 C2F8B430 		str	r3, [r2, #180]
 841:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 6479              		.loc 1 841 3 view .LVU1979
 6480              	.LVL512:
 6481              	.LBB776:
 6482              	.LBI776:
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 6483              		.loc 2 6869 26 view .LVU1980
 6484              	.LBB777:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 6485              		.loc 2 6871 3 view .LVU1981
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 6486              		.loc 2 6871 12 is_stmt 0 view .LVU1982
 6487 0138 1B4B     		ldr	r3, .L434+12
 6488 013a 9B68     		ldr	r3, [r3, #8]
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 6489              		.loc 2 6871 68 view .LVU1983
 6490 013c 13F00103 		ands	r3, r3, #1
 6491 0140 00D0     		beq	.L427
 6492 0142 0123     		movs	r3, #1
 6493              	.L427:
 6494              	.LVL513:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 6495              		.loc 2 6871 68 view .LVU1984
 6496              	.LBE777:
 6497              	.LBE776:
 6498              	.LBB778:
 6499              	.LBI778:
6869:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** {
 6500              		.loc 2 6869 26 is_stmt 1 view .LVU1985
 6501              	.LBB779:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 6502              		.loc 2 6871 3 view .LVU1986
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 6503              		.loc 2 6871 12 is_stmt 0 view .LVU1987
 6504 0144 194A     		ldr	r2, .L434+16
 6505 0146 9268     		ldr	r2, [r2, #8]
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
 6506              		.loc 2 6871 68 view .LVU1988
 6507 0148 12F00102 		ands	r2, r2, #1
 6508 014c 00D0     		beq	.L428
 6509 014e 0122     		movs	r2, #1
 6510              	.L428:
 6511              	.LVL514:
6871:Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_adc.h **** }
ARM GAS  /tmp/cc46GlVT.s 			page 361


 6512              		.loc 2 6871 68 view .LVU1989
 6513              	.LBE779:
 6514              	.LBE778:
 841:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 6515              		.loc 1 841 6 view .LVU1990
 6516 0150 1343     		orrs	r3, r2, r3
 6517 0152 12D0     		beq	.L433
 6518              	.L429:
 875:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6519              		.loc 1 875 3 is_stmt 1 view .LVU1991
 6520 0154 0023     		movs	r3, #0
 6521 0156 E365     		str	r3, [r4, #92]
 878:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 6522              		.loc 1 878 3 view .LVU1992
 878:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 6523              		.loc 1 878 38 is_stmt 0 view .LVU1993
 6524 0158 2366     		str	r3, [r4, #96]
 879:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6525              		.loc 1 879 3 is_stmt 1 view .LVU1994
 879:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6526              		.loc 1 879 38 is_stmt 0 view .LVU1995
 6527 015a 6366     		str	r3, [r4, #100]
 882:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6528              		.loc 1 882 3 is_stmt 1 view .LVU1996
 882:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6529              		.loc 1 882 15 is_stmt 0 view .LVU1997
 6530 015c A365     		str	r3, [r4, #88]
 885:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6531              		.loc 1 885 3 is_stmt 1 view .LVU1998
 885:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6532              		.loc 1 885 3 view .LVU1999
 6533 015e 84F85430 		strb	r3, [r4, #84]
 885:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6534              		.loc 1 885 3 view .LVU2000
 888:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 6535              		.loc 1 888 3 view .LVU2001
 6536              	.LVL515:
 6537              	.L425:
 889:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6538              		.loc 1 889 1 is_stmt 0 view .LVU2002
 6539 0162 2846     		mov	r0, r5
 6540 0164 38BD     		pop	{r3, r4, r5, pc}
 6541              	.LVL516:
 6542              	.L432:
 728:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6543              		.loc 1 728 5 is_stmt 1 view .LVU2003
 728:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6544              		.loc 1 728 22 is_stmt 0 view .LVU2004
 6545 0166 2046     		mov	r0, r4
 6546              	.LVL517:
 728:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6547              		.loc 1 728 22 view .LVU2005
 6548 0168 FFF7FEFF 		bl	ADC_Disable
 6549              	.LVL518:
 731:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6550              		.loc 1 731 5 is_stmt 1 view .LVU2006
 731:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
ARM GAS  /tmp/cc46GlVT.s 			page 362


 6551              		.loc 1 731 8 is_stmt 0 view .LVU2007
 6552 016c 0546     		mov	r5, r0
 6553 016e 0028     		cmp	r0, #0
 6554 0170 7FF45BAF 		bne	.L426
 734:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 6555              		.loc 1 734 7 is_stmt 1 view .LVU2008
 734:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 6556              		.loc 1 734 19 is_stmt 0 view .LVU2009
 6557 0174 0123     		movs	r3, #1
 6558 0176 A365     		str	r3, [r4, #88]
 6559 0178 57E7     		b	.L426
 6560              	.LVL519:
 6561              	.L433:
 850:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6562              		.loc 1 850 5 is_stmt 1 view .LVU2010
 6563 017a 0D4A     		ldr	r2, .L434+20
 6564 017c 9368     		ldr	r3, [r2, #8]
 6565 017e 23F0FF73 		bic	r3, r3, #33423360
 6566 0182 23F4F733 		bic	r3, r3, #126464
 6567 0186 23F48F73 		bic	r3, r3, #286
 6568 018a 23F00103 		bic	r3, r3, #1
 6569 018e 9360     		str	r3, [r2, #8]
 870:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 6570              		.loc 1 870 5 view .LVU2011
 6571 0190 2046     		mov	r0, r4
 6572 0192 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 6573              	.LVL520:
 6574 0196 DDE7     		b	.L429
 6575              	.LVL521:
 6576              	.L430:
 704:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   }
 6577              		.loc 1 704 12 is_stmt 0 view .LVU2012
 6578 0198 0125     		movs	r5, #1
 6579 019a E2E7     		b	.L425
 6580              	.L435:
 6581              		.align	2
 6582              	.L434:
 6583 019c 300882E0 		.word	-528349136
 6584 01a0 200882E0 		.word	-528349152
 6585 01a4 00F0FF03 		.word	67104768
 6586 01a8 00800242 		.word	1107460096
 6587 01ac 00810242 		.word	1107460352
 6588 01b0 00830242 		.word	1107460864
 6589              		.cfi_endproc
 6590              	.LFE362:
 6592              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 6593              		.align	1
 6594              		.global	HAL_ADC_Stop
 6595              		.syntax unified
 6596              		.thumb
 6597              		.thumb_func
 6598              		.fpu fpv4-sp-d16
 6600              	HAL_ADC_Stop:
 6601              	.LVL522:
 6602              	.LFB366:
1339:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6603              		.loc 1 1339 1 is_stmt 1 view -0
ARM GAS  /tmp/cc46GlVT.s 			page 363


 6604              		.cfi_startproc
 6605              		@ args = 0, pretend = 0, frame = 0
 6606              		@ frame_needed = 0, uses_anonymous_args = 0
1340:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6607              		.loc 1 1340 3 view .LVU2014
1343:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6608              		.loc 1 1343 3 view .LVU2015
1346:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6609              		.loc 1 1346 3 view .LVU2016
1346:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6610              		.loc 1 1346 3 view .LVU2017
 6611 0000 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 6612 0004 012B     		cmp	r3, #1
 6613 0006 1AD0     		beq	.L439
1339:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6614              		.loc 1 1339 1 is_stmt 0 discriminator 2 view .LVU2018
 6615 0008 10B5     		push	{r4, lr}
 6616              	.LCFI28:
 6617              		.cfi_def_cfa_offset 8
 6618              		.cfi_offset 4, -8
 6619              		.cfi_offset 14, -4
 6620 000a 0446     		mov	r4, r0
1346:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6621              		.loc 1 1346 3 is_stmt 1 discriminator 2 view .LVU2019
 6622 000c 0123     		movs	r3, #1
 6623 000e 80F85430 		strb	r3, [r0, #84]
1346:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6624              		.loc 1 1346 3 discriminator 2 view .LVU2020
1349:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6625              		.loc 1 1349 3 discriminator 2 view .LVU2021
1349:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6626              		.loc 1 1349 20 is_stmt 0 discriminator 2 view .LVU2022
 6627 0012 0321     		movs	r1, #3
 6628 0014 FFF7FEFF 		bl	ADC_ConversionStop
 6629              	.LVL523:
1352:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 6630              		.loc 1 1352 3 is_stmt 1 discriminator 2 view .LVU2023
1352:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 6631              		.loc 1 1352 6 is_stmt 0 discriminator 2 view .LVU2024
 6632 0018 18B1     		cbz	r0, .L444
 6633              	.L438:
1368:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6634              		.loc 1 1368 3 is_stmt 1 view .LVU2025
1368:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6635              		.loc 1 1368 3 view .LVU2026
 6636 001a 0023     		movs	r3, #0
 6637 001c 84F85430 		strb	r3, [r4, #84]
1368:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6638              		.loc 1 1368 3 view .LVU2027
1371:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 6639              		.loc 1 1371 3 view .LVU2028
1372:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6640              		.loc 1 1372 1 is_stmt 0 view .LVU2029
 6641 0020 10BD     		pop	{r4, pc}
 6642              	.LVL524:
 6643              	.L444:
1355:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
ARM GAS  /tmp/cc46GlVT.s 			page 364


 6644              		.loc 1 1355 5 is_stmt 1 view .LVU2030
1355:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6645              		.loc 1 1355 22 is_stmt 0 view .LVU2031
 6646 0022 2046     		mov	r0, r4
 6647              	.LVL525:
1355:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6648              		.loc 1 1355 22 view .LVU2032
 6649 0024 FFF7FEFF 		bl	ADC_Disable
 6650              	.LVL526:
1358:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6651              		.loc 1 1358 5 is_stmt 1 view .LVU2033
1358:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6652              		.loc 1 1358 8 is_stmt 0 view .LVU2034
 6653 0028 0028     		cmp	r0, #0
 6654 002a F6D1     		bne	.L438
1361:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 6655              		.loc 1 1361 7 is_stmt 1 view .LVU2035
 6656 002c A36D     		ldr	r3, [r4, #88]
 6657 002e 23F48853 		bic	r3, r3, #4352
 6658 0032 23F00103 		bic	r3, r3, #1
 6659 0036 43F00103 		orr	r3, r3, #1
 6660 003a A365     		str	r3, [r4, #88]
 6661 003c EDE7     		b	.L438
 6662              	.LVL527:
 6663              	.L439:
 6664              	.LCFI29:
 6665              		.cfi_def_cfa_offset 0
 6666              		.cfi_restore 4
 6667              		.cfi_restore 14
1346:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6668              		.loc 1 1346 3 is_stmt 0 view .LVU2036
 6669 003e 0220     		movs	r0, #2
 6670              	.LVL528:
1372:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6671              		.loc 1 1372 1 view .LVU2037
 6672 0040 7047     		bx	lr
 6673              		.cfi_endproc
 6674              	.LFE366:
 6676              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 6677              		.align	1
 6678              		.global	HAL_ADC_Stop_IT
 6679              		.syntax unified
 6680              		.thumb
 6681              		.thumb_func
 6682              		.fpu fpv4-sp-d16
 6684              	HAL_ADC_Stop_IT:
 6685              	.LVL529:
 6686              	.LFB370:
1935:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6687              		.loc 1 1935 1 is_stmt 1 view -0
 6688              		.cfi_startproc
 6689              		@ args = 0, pretend = 0, frame = 0
 6690              		@ frame_needed = 0, uses_anonymous_args = 0
1936:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6691              		.loc 1 1936 3 view .LVU2039
1939:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6692              		.loc 1 1939 3 view .LVU2040
ARM GAS  /tmp/cc46GlVT.s 			page 365


1942:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6693              		.loc 1 1942 3 view .LVU2041
1942:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6694              		.loc 1 1942 3 view .LVU2042
 6695 0000 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 6696 0004 012B     		cmp	r3, #1
 6697 0006 1FD0     		beq	.L448
1935:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6698              		.loc 1 1935 1 is_stmt 0 discriminator 2 view .LVU2043
 6699 0008 10B5     		push	{r4, lr}
 6700              	.LCFI30:
 6701              		.cfi_def_cfa_offset 8
 6702              		.cfi_offset 4, -8
 6703              		.cfi_offset 14, -4
 6704 000a 0446     		mov	r4, r0
1942:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6705              		.loc 1 1942 3 is_stmt 1 discriminator 2 view .LVU2044
 6706 000c 0123     		movs	r3, #1
 6707 000e 80F85430 		strb	r3, [r0, #84]
1942:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6708              		.loc 1 1942 3 discriminator 2 view .LVU2045
1945:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6709              		.loc 1 1945 3 discriminator 2 view .LVU2046
1945:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6710              		.loc 1 1945 20 is_stmt 0 discriminator 2 view .LVU2047
 6711 0012 0321     		movs	r1, #3
 6712 0014 FFF7FEFF 		bl	ADC_ConversionStop
 6713              	.LVL530:
1948:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 6714              		.loc 1 1948 3 is_stmt 1 discriminator 2 view .LVU2048
1948:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 6715              		.loc 1 1948 6 is_stmt 0 discriminator 2 view .LVU2049
 6716 0018 18B1     		cbz	r0, .L453
 6717              	.L447:
1968:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6718              		.loc 1 1968 3 is_stmt 1 view .LVU2050
1968:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6719              		.loc 1 1968 3 view .LVU2051
 6720 001a 0023     		movs	r3, #0
 6721 001c 84F85430 		strb	r3, [r4, #84]
1968:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6722              		.loc 1 1968 3 view .LVU2052
1971:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 6723              		.loc 1 1971 3 view .LVU2053
1972:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6724              		.loc 1 1972 1 is_stmt 0 view .LVU2054
 6725 0020 10BD     		pop	{r4, pc}
 6726              	.LVL531:
 6727              	.L453:
1952:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6728              		.loc 1 1952 5 is_stmt 1 view .LVU2055
 6729 0022 2268     		ldr	r2, [r4]
 6730 0024 5368     		ldr	r3, [r2, #4]
 6731 0026 23F01C03 		bic	r3, r3, #28
 6732 002a 5360     		str	r3, [r2, #4]
1955:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6733              		.loc 1 1955 5 view .LVU2056
ARM GAS  /tmp/cc46GlVT.s 			page 366


1955:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6734              		.loc 1 1955 22 is_stmt 0 view .LVU2057
 6735 002c 2046     		mov	r0, r4
 6736              	.LVL532:
1955:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6737              		.loc 1 1955 22 view .LVU2058
 6738 002e FFF7FEFF 		bl	ADC_Disable
 6739              	.LVL533:
1958:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6740              		.loc 1 1958 5 is_stmt 1 view .LVU2059
1958:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6741              		.loc 1 1958 8 is_stmt 0 view .LVU2060
 6742 0032 0028     		cmp	r0, #0
 6743 0034 F1D1     		bne	.L447
1961:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 6744              		.loc 1 1961 7 is_stmt 1 view .LVU2061
 6745 0036 A36D     		ldr	r3, [r4, #88]
 6746 0038 23F48853 		bic	r3, r3, #4352
 6747 003c 23F00103 		bic	r3, r3, #1
 6748 0040 43F00103 		orr	r3, r3, #1
 6749 0044 A365     		str	r3, [r4, #88]
 6750 0046 E8E7     		b	.L447
 6751              	.LVL534:
 6752              	.L448:
 6753              	.LCFI31:
 6754              		.cfi_def_cfa_offset 0
 6755              		.cfi_restore 4
 6756              		.cfi_restore 14
1942:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6757              		.loc 1 1942 3 is_stmt 0 view .LVU2062
 6758 0048 0220     		movs	r0, #2
 6759              	.LVL535:
1972:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6760              		.loc 1 1972 1 view .LVU2063
 6761 004a 7047     		bx	lr
 6762              		.cfi_endproc
 6763              	.LFE370:
 6765              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 6766              		.align	1
 6767              		.global	HAL_ADC_Stop_DMA
 6768              		.syntax unified
 6769              		.thumb
 6770              		.thumb_func
 6771              		.fpu fpv4-sp-d16
 6773              	HAL_ADC_Stop_DMA:
 6774              	.LVL536:
 6775              	.LFB372:
2191:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6776              		.loc 1 2191 1 is_stmt 1 view -0
 6777              		.cfi_startproc
 6778              		@ args = 0, pretend = 0, frame = 0
 6779              		@ frame_needed = 0, uses_anonymous_args = 0
2191:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6780              		.loc 1 2191 1 is_stmt 0 view .LVU2065
 6781 0000 38B5     		push	{r3, r4, r5, lr}
 6782              	.LCFI32:
 6783              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc46GlVT.s 			page 367


 6784              		.cfi_offset 3, -16
 6785              		.cfi_offset 4, -12
 6786              		.cfi_offset 5, -8
 6787              		.cfi_offset 14, -4
2192:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6788              		.loc 1 2192 3 is_stmt 1 view .LVU2066
2195:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6789              		.loc 1 2195 3 view .LVU2067
2198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6790              		.loc 1 2198 3 view .LVU2068
2198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6791              		.loc 1 2198 3 view .LVU2069
 6792 0002 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 6793 0006 012B     		cmp	r3, #1
 6794 0008 39D0     		beq	.L460
 6795 000a 0446     		mov	r4, r0
2198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6796              		.loc 1 2198 3 discriminator 2 view .LVU2070
 6797 000c 0123     		movs	r3, #1
 6798 000e 80F85430 		strb	r3, [r0, #84]
2198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6799              		.loc 1 2198 3 discriminator 2 view .LVU2071
2201:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6800              		.loc 1 2201 3 discriminator 2 view .LVU2072
2201:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6801              		.loc 1 2201 20 is_stmt 0 discriminator 2 view .LVU2073
 6802 0012 0321     		movs	r1, #3
 6803 0014 FFF7FEFF 		bl	ADC_ConversionStop
 6804              	.LVL537:
2204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 6805              		.loc 1 2204 3 is_stmt 1 discriminator 2 view .LVU2074
2204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****   {
 6806              		.loc 1 2204 6 is_stmt 0 discriminator 2 view .LVU2075
 6807 0018 0546     		mov	r5, r0
 6808 001a E8B9     		cbnz	r0, .L456
2207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6809              		.loc 1 2207 5 is_stmt 1 view .LVU2076
 6810 001c 2268     		ldr	r2, [r4]
 6811 001e D368     		ldr	r3, [r2, #12]
 6812 0020 23F00103 		bic	r3, r3, #1
 6813 0024 D360     		str	r3, [r2, #12]
2211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6814              		.loc 1 2211 5 view .LVU2077
2211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6815              		.loc 1 2211 13 is_stmt 0 view .LVU2078
 6816 0026 206D     		ldr	r0, [r4, #80]
 6817              	.LVL538:
2211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6818              		.loc 1 2211 25 view .LVU2079
 6819 0028 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 6820 002c DBB2     		uxtb	r3, r3
2211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6821              		.loc 1 2211 8 view .LVU2080
 6822 002e 022B     		cmp	r3, #2
 6823 0030 17D0     		beq	.L462
 6824              	.L457:
 6825              	.LVL539:
ARM GAS  /tmp/cc46GlVT.s 			page 368


2224:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6826              		.loc 1 2224 5 is_stmt 1 view .LVU2081
 6827 0032 2268     		ldr	r2, [r4]
 6828 0034 5368     		ldr	r3, [r2, #4]
 6829 0036 23F01003 		bic	r3, r3, #16
 6830 003a 5360     		str	r3, [r2, #4]
2229:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6831              		.loc 1 2229 5 view .LVU2082
2229:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6832              		.loc 1 2229 8 is_stmt 0 view .LVU2083
 6833 003c DDB9     		cbnz	r5, .L458
2231:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 6834              		.loc 1 2231 7 is_stmt 1 view .LVU2084
2231:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 6835              		.loc 1 2231 24 is_stmt 0 view .LVU2085
 6836 003e 2046     		mov	r0, r4
 6837 0040 FFF7FEFF 		bl	ADC_Disable
 6838              	.LVL540:
 6839 0044 0546     		mov	r5, r0
 6840              	.LVL541:
 6841              	.L459:
2239:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6842              		.loc 1 2239 5 is_stmt 1 view .LVU2086
2239:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     {
 6843              		.loc 1 2239 8 is_stmt 0 view .LVU2087
 6844 0046 3DB9     		cbnz	r5, .L456
2242:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 6845              		.loc 1 2242 7 is_stmt 1 view .LVU2088
 6846 0048 A36D     		ldr	r3, [r4, #88]
 6847 004a 23F48853 		bic	r3, r3, #4352
 6848 004e 23F00103 		bic	r3, r3, #1
 6849 0052 43F00103 		orr	r3, r3, #1
 6850 0056 A365     		str	r3, [r4, #88]
 6851              	.LVL542:
 6852              	.L456:
2250:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6853              		.loc 1 2250 3 view .LVU2089
2250:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6854              		.loc 1 2250 3 view .LVU2090
 6855 0058 0023     		movs	r3, #0
 6856 005a 84F85430 		strb	r3, [r4, #84]
2250:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6857              		.loc 1 2250 3 view .LVU2091
2253:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** }
 6858              		.loc 1 2253 3 view .LVU2092
 6859              	.LVL543:
 6860              	.L455:
2254:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6861              		.loc 1 2254 1 is_stmt 0 view .LVU2093
 6862 005e 2846     		mov	r0, r5
 6863 0060 38BD     		pop	{r3, r4, r5, pc}
 6864              	.LVL544:
 6865              	.L462:
2213:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6866              		.loc 1 2213 7 is_stmt 1 view .LVU2094
2213:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6867              		.loc 1 2213 24 is_stmt 0 view .LVU2095
ARM GAS  /tmp/cc46GlVT.s 			page 369


 6868 0062 FFF7FEFF 		bl	HAL_DMA_Abort
 6869              	.LVL545:
2216:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 6870              		.loc 1 2216 7 is_stmt 1 view .LVU2096
2216:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       {
 6871              		.loc 1 2216 10 is_stmt 0 view .LVU2097
 6872 0066 0546     		mov	r5, r0
 6873 0068 0028     		cmp	r0, #0
 6874 006a E2D0     		beq	.L457
2219:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****       }
 6875              		.loc 1 2219 9 is_stmt 1 view .LVU2098
 6876 006c A36D     		ldr	r3, [r4, #88]
 6877 006e 43F04003 		orr	r3, r3, #64
 6878 0072 A365     		str	r3, [r4, #88]
 6879 0074 DDE7     		b	.L457
 6880              	.LVL546:
 6881              	.L458:
2235:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 6882              		.loc 1 2235 7 view .LVU2099
2235:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c ****     }
 6883              		.loc 1 2235 13 is_stmt 0 view .LVU2100
 6884 0076 2046     		mov	r0, r4
 6885 0078 FFF7FEFF 		bl	ADC_Disable
 6886              	.LVL547:
 6887 007c E3E7     		b	.L459
 6888              	.LVL548:
 6889              	.L460:
2198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c **** 
 6890              		.loc 1 2198 3 view .LVU2101
 6891 007e 0225     		movs	r5, #2
 6892 0080 EDE7     		b	.L455
 6893              		.cfi_endproc
 6894              	.LFE372:
 6896              		.text
 6897              	.Letext0:
 6898              		.file 4 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 6899              		.file 5 "Drivers/CMSIS/Device/ST/STM32H5xx/Include/stm32h533xx.h"
 6900              		.file 6 "Drivers/CMSIS/Device/ST/STM32H5xx/Include/stm32h5xx.h"
 6901              		.file 7 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_def.h"
 6902              		.file 8 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_dma.h"
 6903              		.file 9 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_dma_ex.h"
 6904              		.file 10 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_adc.h"
 6905              		.file 11 "Drivers/CMSIS/Device/ST/STM32H5xx/Include/system_stm32h5xx.h"
 6906              		.file 12 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal.h"
 6907              		.file 13 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_adc_ex.h"
ARM GAS  /tmp/cc46GlVT.s 			page 370


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h5xx_hal_adc.c
     /tmp/cc46GlVT.s:18     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/cc46GlVT.s:27     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/cc46GlVT.s:43     .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/cc46GlVT.s:50     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/cc46GlVT.s:565    .text.HAL_ADC_Init:00000000000001dc $d
     /tmp/cc46GlVT.s:575    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/cc46GlVT.s:582    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/cc46GlVT.s:597    .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/cc46GlVT.s:604    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/cc46GlVT.s:891    .text.HAL_ADC_PollForConversion:0000000000000108 $d
     /tmp/cc46GlVT.s:897    .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/cc46GlVT.s:904    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/cc46GlVT.s:1092   .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/cc46GlVT.s:1099   .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/cc46GlVT.s:1120   .text.HAL_ADC_StartSampling:0000000000000000 $t
     /tmp/cc46GlVT.s:1127   .text.HAL_ADC_StartSampling:0000000000000000 HAL_ADC_StartSampling
     /tmp/cc46GlVT.s:1151   .text.HAL_ADC_StopSampling:0000000000000000 $t
     /tmp/cc46GlVT.s:1158   .text.HAL_ADC_StopSampling:0000000000000000 HAL_ADC_StopSampling
     /tmp/cc46GlVT.s:1182   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/cc46GlVT.s:1189   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/cc46GlVT.s:1204   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/cc46GlVT.s:1211   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/cc46GlVT.s:1226   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/cc46GlVT.s:1233   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/cc46GlVT.s:1260   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/cc46GlVT.s:1267   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/cc46GlVT.s:1282   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/cc46GlVT.s:1289   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/cc46GlVT.s:1304   .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/cc46GlVT.s:1311   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/cc46GlVT.s:1883   .text.HAL_ADC_IRQHandler:000000000000026c $d
     /tmp/cc46GlVT.s:1888   .text.HAL_ADC_IRQHandler:0000000000000274 $t
     /tmp/cc46GlVT.s:1909   .text.ADC_DMAConvCplt:0000000000000000 $t
     /tmp/cc46GlVT.s:1916   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/cc46GlVT.s:2051   .text.ADC_DMAError:0000000000000000 $t
     /tmp/cc46GlVT.s:2058   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/cc46GlVT.s:2092   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/cc46GlVT.s:2099   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/cc46GlVT.s:3308   .text.HAL_ADC_ConfigChannel:0000000000000398 $d
     /tmp/cc46GlVT.s:3323   .text.HAL_ADC_ConfigChannel:00000000000003c0 $t
     /tmp/cc46GlVT.s:3711   .text.HAL_ADC_ConfigChannel:0000000000000510 $d
     /tmp/cc46GlVT.s:3720   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/cc46GlVT.s:3727   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/cc46GlVT.s:4490   .text.HAL_ADC_AnalogWDGConfig:0000000000000300 $d
     /tmp/cc46GlVT.s:4499   .text.HAL_ADC_AnalogWDGConfig:0000000000000308 $t
     /tmp/cc46GlVT.s:4550   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/cc46GlVT.s:4557   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/cc46GlVT.s:4576   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/cc46GlVT.s:4583   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/cc46GlVT.s:4602   .text.ADC_ConversionStop:0000000000000000 $t
     /tmp/cc46GlVT.s:4609   .text.ADC_ConversionStop:0000000000000000 ADC_ConversionStop
     /tmp/cc46GlVT.s:4930   .text.ADC_ConversionStop:00000000000000fc $d
     /tmp/cc46GlVT.s:4935   .text.ADC_Enable:0000000000000000 $t
     /tmp/cc46GlVT.s:4942   .text.ADC_Enable:0000000000000000 ADC_Enable
     /tmp/cc46GlVT.s:5164   .text.ADC_Enable:00000000000000c8 $d
ARM GAS  /tmp/cc46GlVT.s 			page 371


     /tmp/cc46GlVT.s:5172   .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/cc46GlVT.s:5179   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/cc46GlVT.s:5399   .text.HAL_ADC_Start:00000000000000ec $d
     /tmp/cc46GlVT.s:5405   .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/cc46GlVT.s:5412   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/cc46GlVT.s:5726   .text.HAL_ADC_Start_IT:0000000000000180 $d
     /tmp/cc46GlVT.s:5732   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/cc46GlVT.s:5739   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/cc46GlVT.s:6114   .text.HAL_ADC_Start_DMA:0000000000000168 $d
     /tmp/cc46GlVT.s:6123   .text.ADC_Disable:0000000000000000 $t
     /tmp/cc46GlVT.s:6130   .text.ADC_Disable:0000000000000000 ADC_Disable
     /tmp/cc46GlVT.s:6298   .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/cc46GlVT.s:6305   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/cc46GlVT.s:6583   .text.HAL_ADC_DeInit:000000000000019c $d
     /tmp/cc46GlVT.s:6593   .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/cc46GlVT.s:6600   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/cc46GlVT.s:6677   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/cc46GlVT.s:6684   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/cc46GlVT.s:6766   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/cc46GlVT.s:6773   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_InjectedConvCpltCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_InjectedQueueOverflowCallback
HAL_DMAEx_List_GetNodeConfig
HAL_DMAEx_List_Start_IT
HAL_DMA_Start_IT
HAL_DMA_Abort
