ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 1


   1              		.cpu cortex-m33
   2              		.arch armv8-m.main
   3              		.fpu fpv4-sp-d16
   4              		.arch_extension dsp
   5              		.eabi_attribute 27, 1
   6              		.eabi_attribute 28, 1
   7              		.eabi_attribute 20, 1
   8              		.eabi_attribute 21, 1
   9              		.eabi_attribute 23, 3
  10              		.eabi_attribute 24, 1
  11              		.eabi_attribute 25, 1
  12              		.eabi_attribute 26, 1
  13              		.eabi_attribute 30, 1
  14              		.eabi_attribute 34, 1
  15              		.eabi_attribute 18, 4
  16              		.file	"stm32h5xx_hal.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.file 1 "Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c"
  21              		.section	.text.HAL_MspInit,"ax",%progbits
  22              		.align	1
  23              		.weak	HAL_MspInit
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  28              	HAL_MspInit:
  29              	.LFB332:
   1:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
   2:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *************************************************************************************************
   3:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @file    stm32h5xx_hal.c
   4:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
   8:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   @verbatim
   9:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   =================================================================================================
  10:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   =================================================================================================
  12:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]
  13:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]
  16:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     The HAL contains two APIs' categories:
  17:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  20:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   @endverbatim
  21:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *************************************************************************************************
  22:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @attention
  23:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
  24:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * Copyright (c) 2023 STMicroelectronics.
  25:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * All rights reserved.
  26:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
  27:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * This software is licensed under terms that can be found in the LICENSE file
  28:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * in the root directory of this software component.
  29:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 2


  30:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
  31:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *************************************************************************************************
  32:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
  33:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  34:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Includes ---------------------------------------------------------------------------------------
  35:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #include "stm32h5xx_hal.h"
  36:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  37:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @addtogroup STM32H5xx_HAL_Driver
  38:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
  39:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
  40:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  41:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL HAL
  42:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief HAL module driver
  43:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
  44:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
  45:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  46:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  47:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  48:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Private typedef --------------------------------------------------------------------------------
  49:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Private define ---------------------------------------------------------------------------------
  50:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
  51:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief STM32H5xx HAL Driver version number 1.3.0
  52:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****    */
  53:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define __STM32H5XX_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  54:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define __STM32H5XX_HAL_VERSION_SUB1   (0x03U) /*!< [23:16] sub1 version */
  55:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define __STM32H5XX_HAL_VERSION_SUB2   (0x00U) /*!< [15:8]  sub2 version */
  56:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define __STM32H5XX_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  57:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define __STM32H5XX_HAL_VERSION         ((__STM32H5XX_HAL_VERSION_MAIN << 24U)\
  58:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                          |(__STM32H5XX_HAL_VERSION_SUB1 << 16U)\
  59:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                          |(__STM32H5XX_HAL_VERSION_SUB2 << 8U )\
  60:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                          |(__STM32H5XX_HAL_VERSION_RC))
  61:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  62:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined(VREFBUF)
  63:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define VREFBUF_TIMEOUT_VALUE           10U   /* 10 ms */
  64:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* VREFBUF */
  65:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  66:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Value used to increment hide protection level */
  67:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define SBS_HDPL_INCREMENT_VALUE  (uint8_t)0x6A
  68:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  69:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Value used to lock/unlock debug functionalities */
  70:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define SBS_DEBUG_LOCK_VALUE      (uint8_t)0xC3
  71:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #define SBS_DEBUG_UNLOCK_VALUE    (uint8_t)0xB4
  72:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  73:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Private macro ----------------------------------------------------------------------------------
  74:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Private variables ------------------------------------------------------------------------------
  75:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Exported variables -----------------------------------------------------------------------------
  76:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  77:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Variables HAL Exported Variables
  78:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
  79:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
  80:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __IO uint32_t uwTick;
  81:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  82:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  83:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
  84:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
  85:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
  86:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 3


  87:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Private function prototypes --------------------------------------------------------------------
  88:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /* Exported functions -----------------------------------------------------------------------------
  89:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  90:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  91:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
  92:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
  93:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  94:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions
  95:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief    Initialization and de-initialization functions
  96:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
  97:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
  98:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
  99:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****               ##### Initialization and de-initialization functions #####
 100:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 101:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]  This section provides functions allowing to:
 102:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock
 103:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
 104:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****           and the backup domain when enabled.
 105:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) De-Initializes common part of the HAL.
 106:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
 107:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****           Tick interrupt priority.
 108:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 109:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              handled in milliseconds basis.
 113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 114:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 115:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 116:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 117:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 118:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 119:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 120:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****             ISR process will be blocked.
 121:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 123:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
 124:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
 125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 126:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 128:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Configure the Flash prefetch, the time base source, NVIC and any required global low
 129:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         level hardware by calling the HAL_MspInit() callback function to be optionally defined
 130:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         in user file stm32h5xx_hal_msp.c.
 131:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   HAL_Init() function is called at the beginning of program after reset and before
 133:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         the clock configuration.
 134:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 135:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   In the default implementation the System Timer (SysTick) is used as source of time base
 136:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         The SysTick configuration is based on HSI clock, as HSI is the clock
 137:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         used after a system Reset and the NVIC configuration is set to Priority group 4.
 138:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         Once done, time base tick starts incrementing: the tick variable counter is incremented
 139:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         each 1ms in the SysTick_Handler() interrupt handler.
 140:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval HAL status
 142:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 143:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 4


 144:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 145:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Configure Flash prefetch */
 146:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 147:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 148:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* PREFETCH_ENABLE */
 149:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 150:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Set Interrupt Group Priority */
 151:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 152:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 153:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Update the SystemCoreClock global variable */
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC
 155:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 156:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Select HCLK as SysTick clock source */
 157:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 158:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 159:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 161:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 162:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     return HAL_ERROR;
 163:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 164:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 165:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Init the low level hardware */
 166:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   HAL_MspInit();
 167:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 168:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Return function status */
 169:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return HAL_OK;
 170:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 171:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 172:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 173:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 174:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This function is optional.
 175:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval HAL status
 176:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 177:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 178:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 179:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Reset of all peripherals */
 180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 182:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 183:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 184:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 185:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB3_FORCE_RESET();
 187:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB3_RELEASE_RESET();
 188:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 189:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 191:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 192:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 193:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 194:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 195:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined(AHB4PERIPH_BASE)
 196:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_AHB4_FORCE_RESET();
 197:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_AHB4_RELEASE_RESET();
 198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* AHB4PERIPH_BASE */
 199:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 200:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* De-Init the low level hardware */
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 5


 201:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   HAL_MspDeInit();
 202:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 203:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Return function status */
 204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return HAL_OK;
 205:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 206:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 208:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Initializes the MSP.
 209:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 210:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __weak void HAL_MspInit(void)
 212:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
  30              		.loc 1 212 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 213:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 214:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 215:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****    */
 216:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
  35              		.loc 1 216 1 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE332:
  40              		.section	.text.HAL_MspDeInit,"ax",%progbits
  41              		.align	1
  42              		.weak	HAL_MspDeInit
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  47              	HAL_MspDeInit:
  48              	.LFB333:
 217:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 219:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  DeInitializes the MSP.
 220:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 221:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 222:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __weak void HAL_MspDeInit(void)
 223:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
  49              		.loc 1 223 1 view -0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
 224:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 225:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 226:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****    */
 227:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
  54              		.loc 1 227 1 view .LVU3
  55 0000 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE333:
  59              		.section	.text.HAL_DeInit,"ax",%progbits
  60              		.align	1
  61              		.global	HAL_DeInit
  62              		.syntax unified
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 6


  63              		.thumb
  64              		.thumb_func
  66              	HAL_DeInit:
  67              	.LFB331:
 178:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Reset of all peripherals */
  68              		.loc 1 178 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 10B5     		push	{r4, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 4, -8
  76              		.cfi_offset 14, -4
 180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  77              		.loc 1 180 3 view .LVU5
 180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  78              		.loc 1 180 3 view .LVU6
  79 0002 0D4B     		ldr	r3, .L5
  80 0004 0D4A     		ldr	r2, .L5+4
  81 0006 5A67     		str	r2, [r3, #116]
 180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  82              		.loc 1 180 3 view .LVU7
  83 0008 0D4A     		ldr	r2, .L5+8
  84 000a 9A67     		str	r2, [r3, #120]
 180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  85              		.loc 1 180 3 view .LVU8
 181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  86              		.loc 1 181 3 view .LVU9
 181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  87              		.loc 1 181 3 view .LVU10
  88 000c 0024     		movs	r4, #0
  89 000e 5C67     		str	r4, [r3, #116]
 181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  90              		.loc 1 181 3 view .LVU11
  91 0010 9C67     		str	r4, [r3, #120]
 181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  92              		.loc 1 181 3 view .LVU12
 183:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  93              		.loc 1 183 3 view .LVU13
  94 0012 0C4A     		ldr	r2, .L5+12
  95 0014 DA67     		str	r2, [r3, #124]
 184:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
  96              		.loc 1 184 3 view .LVU14
  97 0016 DC67     		str	r4, [r3, #124]
 186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_APB3_RELEASE_RESET();
  98              		.loc 1 186 3 view .LVU15
  99 0018 0B4A     		ldr	r2, .L5+16
 100 001a C3F88020 		str	r2, [r3, #128]
 187:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 101              		.loc 1 187 3 view .LVU16
 102 001e C3F88040 		str	r4, [r3, #128]
 189:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 103              		.loc 1 189 3 view .LVU17
 104 0022 0A4A     		ldr	r2, .L5+20
 105 0024 1A66     		str	r2, [r3, #96]
 190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 7


 106              		.loc 1 190 3 view .LVU18
 107 0026 1C66     		str	r4, [r3, #96]
 192:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 108              		.loc 1 192 3 view .LVU19
 109 0028 094A     		ldr	r2, .L5+24
 110 002a 5A66     		str	r2, [r3, #100]
 193:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 111              		.loc 1 193 3 view .LVU20
 112 002c 5C66     		str	r4, [r3, #100]
 201:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 113              		.loc 1 201 3 view .LVU21
 114 002e FFF7FEFF 		bl	HAL_MspDeInit
 115              	.LVL0:
 204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 116              		.loc 1 204 3 view .LVU22
 205:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 117              		.loc 1 205 1 is_stmt 0 view .LVU23
 118 0032 2046     		mov	r0, r4
 119 0034 10BD     		pop	{r4, pc}
 120              	.L6:
 121 0036 00BF     		.align	2
 122              	.L5:
 123 0038 000C0244 		.word	1140984832
 124 003c FFC1FEDF 		.word	-536952321
 125 0040 2B068040 		.word	1082132011
 126 0044 00787F01 		.word	25131008
 127 0048 E0081000 		.word	1050848
 128 004c 03D00A01 		.word	17485827
 129 0050 FF1D1F00 		.word	2039295
 130              		.cfi_endproc
 131              	.LFE331:
 133              		.section	.text.HAL_InitTick,"ax",%progbits
 134              		.align	1
 135              		.weak	HAL_InitTick
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	HAL_InitTick:
 141              	.LVL1:
 142              	.LFB334:
 228:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 229:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 230:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief This function configures the source of the time base.
 231:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *        The time source is configured to have 1ms time base with a dedicated
 232:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *        Tick interrupt priority.
 233:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 234:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 235:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 236:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 237:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 238:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 239:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 240:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 241:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       implementation  in user file.
 242:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param TickPriority: Tick interrupt priority.
 243:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval HAL status
 244:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 8


 245:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 246:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 143              		.loc 1 246 1 is_stmt 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		.loc 1 246 1 is_stmt 0 view .LVU25
 148 0000 38B5     		push	{r3, r4, r5, lr}
 149              	.LCFI1:
 150              		.cfi_def_cfa_offset 16
 151              		.cfi_offset 3, -16
 152              		.cfi_offset 4, -12
 153              		.cfi_offset 5, -8
 154              		.cfi_offset 14, -4
 247:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   uint32_t ticknumber = 0U;
 155              		.loc 1 247 3 is_stmt 1 view .LVU26
 156              	.LVL2:
 248:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   uint32_t systicksel;
 157              		.loc 1 248 3 view .LVU27
 249:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 250:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value 
 251:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   if ((uint32_t)uwTickFreq == 0UL)
 158              		.loc 1 251 3 view .LVU28
 159              		.loc 1 251 28 is_stmt 0 view .LVU29
 160 0002 274B     		ldr	r3, .L17
 161 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 162              		.loc 1 251 6 view .LVU30
 163 0006 002A     		cmp	r2, #0
 164 0008 47D0     		beq	.L13
 165 000a 0546     		mov	r5, r0
 252:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 253:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     return HAL_ERROR;
 254:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 255:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 256:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check Clock source to calculate the tickNumber */
 257:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   if (READ_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk) == SysTick_CTRL_CLKSOURCE_Msk)
 166              		.loc 1 257 3 is_stmt 1 view .LVU31
 167              		.loc 1 257 7 is_stmt 0 view .LVU32
 168 000c 4FF0E023 		mov	r3, #-536813568
 169 0010 1C69     		ldr	r4, [r3, #16]
 170              		.loc 1 257 6 view .LVU33
 171 0012 14F00404 		ands	r4, r4, #4
 172 0016 0DD0     		beq	.L9
 258:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 259:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     /* HCLK selected as SysTick clock source */
 260:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     ticknumber = SystemCoreClock / (1000UL / (uint32_t)uwTickFreq);
 173              		.loc 1 260 5 is_stmt 1 view .LVU34
 174              		.loc 1 260 34 is_stmt 0 view .LVU35
 175 0018 224B     		ldr	r3, .L17+4
 176 001a 1C68     		ldr	r4, [r3]
 177              		.loc 1 260 44 view .LVU36
 178 001c 4FF47A71 		mov	r1, #1000
 179 0020 B1FBF2F2 		udiv	r2, r1, r2
 180              		.loc 1 260 16 view .LVU37
 181 0024 B4FBF2F4 		udiv	r4, r4, r2
 182              	.LVL3:
 183              	.L10:
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 9


 261:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 262:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   else
 263:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 264:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     systicksel = HAL_SYSTICK_GetCLKSourceConfig();
 265:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     switch (systicksel)
 266:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     {
 267:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       /* HCLK_DIV8 selected as SysTick clock source */
 268:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       case SYSTICK_CLKSOURCE_HCLK_DIV8:
 269:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         /* Calculate tick value */
 270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         ticknumber = (SystemCoreClock / (8000UL / (uint32_t)uwTickFreq));
 271:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 272:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       /* LSI selected as SysTick clock source */
 273:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       case SYSTICK_CLKSOURCE_LSI:
 274:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         /* Calculate tick value */
 275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         ticknumber = (LSI_VALUE / (1000UL / (uint32_t)uwTickFreq));
 276:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 277:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       /* LSE selected as SysTick clock source */
 278:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       case SYSTICK_CLKSOURCE_LSE:
 279:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         /* Calculate tick value */
 280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         ticknumber = (LSE_VALUE / (1000UL / (uint32_t)uwTickFreq));
 281:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 282:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       default:
 283:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         /* Nothing to do */
 284:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 285:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     }
 286:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 287:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 288:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 289:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   if (HAL_SYSTICK_Config(ticknumber) > 0U)
 184              		.loc 1 289 3 is_stmt 1 view .LVU38
 185              		.loc 1 289 7 is_stmt 0 view .LVU39
 186 0028 2046     		mov	r0, r4
 187 002a FFF7FEFF 		bl	HAL_SYSTICK_Config
 188              	.LVL4:
 189              		.loc 1 289 6 discriminator 1 view .LVU40
 190 002e 50B3     		cbz	r0, .L16
 290:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 291:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     return HAL_ERROR;
 191              		.loc 1 291 12 view .LVU41
 192 0030 0120     		movs	r0, #1
 193 0032 33E0     		b	.L8
 194              	.LVL5:
 195              	.L9:
 264:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     switch (systicksel)
 196              		.loc 1 264 5 is_stmt 1 view .LVU42
 264:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     switch (systicksel)
 197              		.loc 1 264 18 is_stmt 0 view .LVU43
 198 0034 FFF7FEFF 		bl	HAL_SYSTICK_GetCLKSourceConfig
 199              	.LVL6:
 265:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     {
 200              		.loc 1 265 5 is_stmt 1 view .LVU44
 201 0038 0128     		cmp	r0, #1
 202 003a 0ED0     		beq	.L11
 203 003c 0228     		cmp	r0, #2
 204 003e 17D0     		beq	.L12
 205 0040 0028     		cmp	r0, #0
 206 0042 F1D1     		bne	.L10
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 10


 270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 207              		.loc 1 270 9 view .LVU45
 270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 208              		.loc 1 270 39 is_stmt 0 view .LVU46
 209 0044 174B     		ldr	r3, .L17+4
 210 0046 1C68     		ldr	r4, [r3]
 270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 211              		.loc 1 270 51 view .LVU47
 212 0048 154A     		ldr	r2, .L17
 213 004a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 214              		.loc 1 270 49 view .LVU48
 215 004c 4FF4FA52 		mov	r2, #8000
 216 0050 B2FBF1F2 		udiv	r2, r2, r1
 270:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 217              		.loc 1 270 20 view .LVU49
 218 0054 B4FBF2F4 		udiv	r4, r4, r2
 219              	.LVL7:
 271:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       /* LSI selected as SysTick clock source */
 220              		.loc 1 271 9 is_stmt 1 view .LVU50
 221 0058 E6E7     		b	.L10
 222              	.LVL8:
 223              	.L11:
 275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 224              		.loc 1 275 9 view .LVU51
 275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 225              		.loc 1 275 45 is_stmt 0 view .LVU52
 226 005a 114B     		ldr	r3, .L17
 227 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 228              		.loc 1 275 43 view .LVU53
 229 005e 4FF47A72 		mov	r2, #1000
 230 0062 B2FBF3F2 		udiv	r2, r2, r3
 275:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 231              		.loc 1 275 20 view .LVU54
 232 0066 4FF4FA43 		mov	r3, #32000
 233 006a B3FBF2F4 		udiv	r4, r3, r2
 234              	.LVL9:
 276:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       /* LSE selected as SysTick clock source */
 235              		.loc 1 276 9 is_stmt 1 view .LVU55
 236 006e DBE7     		b	.L10
 237              	.LVL10:
 238              	.L12:
 280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 239              		.loc 1 280 9 view .LVU56
 280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 240              		.loc 1 280 45 is_stmt 0 view .LVU57
 241 0070 0B4B     		ldr	r3, .L17
 242 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 243              		.loc 1 280 43 view .LVU58
 244 0074 4FF47A72 		mov	r2, #1000
 245 0078 B2FBF3F2 		udiv	r2, r2, r3
 280:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****         break;
 246              		.loc 1 280 20 view .LVU59
 247 007c 4FF40043 		mov	r3, #32768
 248 0080 B3FBF2F4 		udiv	r4, r3, r2
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 11


 249              	.LVL11:
 281:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       default:
 250              		.loc 1 281 9 is_stmt 1 view .LVU60
 251 0084 D0E7     		b	.L10
 252              	.LVL12:
 253              	.L16:
 292:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 293:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 294:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Configure the SysTick IRQ priority */
 295:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 254              		.loc 1 295 3 view .LVU61
 255 0086 0022     		movs	r2, #0
 256 0088 2946     		mov	r1, r5
 257 008a 4FF0FF30 		mov	r0, #-1
 258 008e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 259              	.LVL13:
 296:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   uwTickPrio = TickPriority;
 260              		.loc 1 296 3 view .LVU62
 261              		.loc 1 296 14 is_stmt 0 view .LVU63
 262 0092 054B     		ldr	r3, .L17+8
 263 0094 1D60     		str	r5, [r3]
 297:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 298:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Return function status */
 299:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return HAL_OK;
 264              		.loc 1 299 3 is_stmt 1 view .LVU64
 265              		.loc 1 299 10 is_stmt 0 view .LVU65
 266 0096 0020     		movs	r0, #0
 267 0098 00E0     		b	.L8
 268              	.LVL14:
 269              	.L13:
 253:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 270              		.loc 1 253 12 view .LVU66
 271 009a 0120     		movs	r0, #1
 272              	.LVL15:
 273              	.L8:
 300:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 274              		.loc 1 300 1 view .LVU67
 275 009c 38BD     		pop	{r3, r4, r5, pc}
 276              	.L18:
 277 009e 00BF     		.align	2
 278              	.L17:
 279 00a0 00000000 		.word	uwTickFreq
 280 00a4 00000000 		.word	SystemCoreClock
 281 00a8 00000000 		.word	uwTickPrio
 282              		.cfi_endproc
 283              	.LFE334:
 285              		.section	.text.HAL_Init,"ax",%progbits
 286              		.align	1
 287              		.global	HAL_Init
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 292              	HAL_Init:
 293              	.LFB330:
 144:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Configure Flash prefetch */
 294              		.loc 1 144 1 is_stmt 1 view -0
 295              		.cfi_startproc
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 12


 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298 0000 10B5     		push	{r4, lr}
 299              	.LCFI2:
 300              		.cfi_def_cfa_offset 8
 301              		.cfi_offset 4, -8
 302              		.cfi_offset 14, -4
 151:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 303              		.loc 1 151 3 view .LVU69
 304 0002 0320     		movs	r0, #3
 305 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 306              	.LVL16:
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 307              		.loc 1 154 3 view .LVU70
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 308              		.loc 1 154 21 is_stmt 0 view .LVU71
 309 0008 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 310              	.LVL17:
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 311              		.loc 1 154 68 discriminator 1 view .LVU72
 312 000c 0B4B     		ldr	r3, .L24
 313 000e 1B6A     		ldr	r3, [r3, #32]
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 314              		.loc 1 154 94 discriminator 1 view .LVU73
 315 0010 03F00F03 		and	r3, r3, #15
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 316              		.loc 1 154 63 discriminator 1 view .LVU74
 317 0014 0A4A     		ldr	r2, .L24+4
 318 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 319              		.loc 1 154 47 discriminator 1 view .LVU75
 320 0018 D840     		lsrs	r0, r0, r3
 154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 321              		.loc 1 154 19 discriminator 1 view .LVU76
 322 001a 0A4B     		ldr	r3, .L24+8
 323 001c 1860     		str	r0, [r3]
 157:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 324              		.loc 1 157 3 is_stmt 1 view .LVU77
 325 001e 0420     		movs	r0, #4
 326 0020 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 327              	.LVL18:
 160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 328              		.loc 1 160 3 view .LVU78
 160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 329              		.loc 1 160 7 is_stmt 0 view .LVU79
 330 0024 0F20     		movs	r0, #15
 331 0026 FFF7FEFF 		bl	HAL_InitTick
 332              	.LVL19:
 160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 333              		.loc 1 160 6 discriminator 1 view .LVU80
 334 002a 10B1     		cbz	r0, .L23
 162:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 335              		.loc 1 162 12 view .LVU81
 336 002c 0124     		movs	r4, #1
 337              	.L20:
 170:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 338              		.loc 1 170 1 view .LVU82
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 13


 339 002e 2046     		mov	r0, r4
 340 0030 10BD     		pop	{r4, pc}
 341              	.L23:
 342 0032 0446     		mov	r4, r0
 166:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 343              		.loc 1 166 3 is_stmt 1 view .LVU83
 344 0034 FFF7FEFF 		bl	HAL_MspInit
 345              	.LVL20:
 169:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 346              		.loc 1 169 3 view .LVU84
 169:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 347              		.loc 1 169 10 is_stmt 0 view .LVU85
 348 0038 F9E7     		b	.L20
 349              	.L25:
 350 003a 00BF     		.align	2
 351              	.L24:
 352 003c 000C0244 		.word	1140984832
 353 0040 00000000 		.word	AHBPrescTable
 354 0044 00000000 		.word	SystemCoreClock
 355              		.cfi_endproc
 356              	.LFE330:
 358              		.section	.text.HAL_IncTick,"ax",%progbits
 359              		.align	1
 360              		.weak	HAL_IncTick
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 365              	HAL_IncTick:
 366              	.LFB335:
 301:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 302:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 303:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
 304:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 305:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 306:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Group2 HAL Control functions
 307:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief    HAL Control functions
 308:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 309:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
 310:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 311:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                        ##### HAL Control functions #####
 312:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 313:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]  This section provides functions allowing to:
 314:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Provide a tick value in millisecond
 315:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Provide a blocking delay in millisecond
 316:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Suspend the time base source interrupt
 317:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Resume the time base source interrupt
 318:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Get the HAL API driver version
 319:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Get the device identifier
 320:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Get the device revision identifier
 321:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 322:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
 323:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
 324:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 325:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 326:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 327:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief This function is called to increment a global variable "uwTick"
 328:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *        used as application time base.
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 14


 329:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 330:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       in SysTick ISR.
 331:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 332:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *      implementations in user file.
 333:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 334:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 335:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __weak void HAL_IncTick(void)
 336:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 367              		.loc 1 336 1 is_stmt 1 view -0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 337:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   uwTick += (uint32_t)uwTickFreq;
 372              		.loc 1 337 3 view .LVU87
 373              		.loc 1 337 13 is_stmt 0 view .LVU88
 374 0000 034B     		ldr	r3, .L27
 375 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 376              		.loc 1 337 10 view .LVU89
 377 0004 034A     		ldr	r2, .L27+4
 378 0006 1168     		ldr	r1, [r2]
 379 0008 0B44     		add	r3, r3, r1
 380 000a 1360     		str	r3, [r2]
 338:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 381              		.loc 1 338 1 view .LVU90
 382 000c 7047     		bx	lr
 383              	.L28:
 384 000e 00BF     		.align	2
 385              	.L27:
 386 0010 00000000 		.word	uwTickFreq
 387 0014 00000000 		.word	uwTick
 388              		.cfi_endproc
 389              	.LFE335:
 391              		.section	.text.HAL_GetTick,"ax",%progbits
 392              		.align	1
 393              		.weak	HAL_GetTick
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 398              	HAL_GetTick:
 399              	.LFB336:
 339:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 340:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 341:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief Provides a tick value in millisecond.
 342:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 343:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       implementations in user file.
 344:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval tick value
 345:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 346:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 347:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 400              		.loc 1 347 1 is_stmt 1 view -0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              		@ link register save eliminated.
 348:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return uwTick;
 405              		.loc 1 348 3 view .LVU92
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 15


 406              		.loc 1 348 10 is_stmt 0 view .LVU93
 407 0000 014B     		ldr	r3, .L30
 408 0002 1868     		ldr	r0, [r3]
 349:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 409              		.loc 1 349 1 view .LVU94
 410 0004 7047     		bx	lr
 411              	.L31:
 412 0006 00BF     		.align	2
 413              	.L30:
 414 0008 00000000 		.word	uwTick
 415              		.cfi_endproc
 416              	.LFE336:
 418              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 419              		.align	1
 420              		.global	HAL_GetTickPrio
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 425              	HAL_GetTickPrio:
 426              	.LFB337:
 350:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 351:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 352:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief This function returns a tick priority.
 353:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval tick priority
 354:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 355:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 356:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 427              		.loc 1 356 1 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              		@ link register save eliminated.
 357:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return uwTickPrio;
 432              		.loc 1 357 3 view .LVU96
 358:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 433              		.loc 1 358 1 is_stmt 0 view .LVU97
 434 0000 014B     		ldr	r3, .L33
 435 0002 1868     		ldr	r0, [r3]
 436 0004 7047     		bx	lr
 437              	.L34:
 438 0006 00BF     		.align	2
 439              	.L33:
 440 0008 00000000 		.word	uwTickPrio
 441              		.cfi_endproc
 442              	.LFE337:
 444              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 445              		.align	1
 446              		.global	HAL_SetTickFreq
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 451              	HAL_SetTickFreq:
 452              	.LVL21:
 453              	.LFB338:
 359:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 360:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 361:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief Set new tick Freq.
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 16


 362:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval HAL status
 363:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 364:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 365:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 454              		.loc 1 365 1 is_stmt 1 view -0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              		.loc 1 365 1 is_stmt 0 view .LVU99
 459 0000 10B5     		push	{r4, lr}
 460              	.LCFI3:
 461              		.cfi_def_cfa_offset 8
 462              		.cfi_offset 4, -8
 463              		.cfi_offset 14, -4
 366:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 464              		.loc 1 366 3 is_stmt 1 view .LVU100
 465              	.LVL22:
 367:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 466              		.loc 1 367 3 view .LVU101
 368:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 369:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 467              		.loc 1 369 3 view .LVU102
 370:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 371:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   if (uwTickFreq != Freq)
 468              		.loc 1 371 3 view .LVU103
 469              		.loc 1 371 18 is_stmt 0 view .LVU104
 470 0002 084B     		ldr	r3, .L40
 471 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 472              		.loc 1 371 6 view .LVU105
 473 0006 8442     		cmp	r4, r0
 474 0008 01D1     		bne	.L39
 366:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 475              		.loc 1 366 21 view .LVU106
 476 000a 0020     		movs	r0, #0
 477              	.LVL23:
 478              	.L36:
 372:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 373:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 374:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     /* Back up uwTickFreq frequency */
 375:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     prevTickFreq = uwTickFreq;
 376:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 377:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     uwTickFreq = Freq;
 379:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 380:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     /* Apply the new tick Freq  */
 381:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 382:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     if (status != HAL_OK)
 383:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     {
 384:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       /* Restore previous tick frequency */
 385:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       uwTickFreq = prevTickFreq;
 386:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     }
 387:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 388:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 389:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return status;
 479              		.loc 1 389 3 is_stmt 1 view .LVU107
 390:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 480              		.loc 1 390 1 is_stmt 0 view .LVU108
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 17


 481 000c 10BD     		pop	{r4, pc}
 482              	.LVL24:
 483              	.L39:
 375:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 484              		.loc 1 375 5 is_stmt 1 view .LVU109
 378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 485              		.loc 1 378 5 view .LVU110
 378:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 486              		.loc 1 378 16 is_stmt 0 view .LVU111
 487 000e 1870     		strb	r0, [r3]
 381:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     if (status != HAL_OK)
 488              		.loc 1 381 5 is_stmt 1 view .LVU112
 381:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     if (status != HAL_OK)
 489              		.loc 1 381 14 is_stmt 0 view .LVU113
 490 0010 054B     		ldr	r3, .L40+4
 491 0012 1868     		ldr	r0, [r3]
 492              	.LVL25:
 381:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     if (status != HAL_OK)
 493              		.loc 1 381 14 view .LVU114
 494 0014 FFF7FEFF 		bl	HAL_InitTick
 495              	.LVL26:
 382:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     {
 496              		.loc 1 382 5 is_stmt 1 view .LVU115
 382:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     {
 497              		.loc 1 382 8 is_stmt 0 view .LVU116
 498 0018 0028     		cmp	r0, #0
 499 001a F7D0     		beq	.L36
 385:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     }
 500              		.loc 1 385 7 is_stmt 1 view .LVU117
 385:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     }
 501              		.loc 1 385 18 is_stmt 0 view .LVU118
 502 001c 014B     		ldr	r3, .L40
 503 001e 1C70     		strb	r4, [r3]
 504 0020 F4E7     		b	.L36
 505              	.L41:
 506 0022 00BF     		.align	2
 507              	.L40:
 508 0024 00000000 		.word	uwTickFreq
 509 0028 00000000 		.word	uwTickPrio
 510              		.cfi_endproc
 511              	.LFE338:
 513              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 514              		.align	1
 515              		.global	HAL_GetTickFreq
 516              		.syntax unified
 517              		.thumb
 518              		.thumb_func
 520              	HAL_GetTickFreq:
 521              	.LFB339:
 391:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 392:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 393:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief Return tick frequency.
 394:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Tick frequency.
 395:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         Value of @ref HAL_TickFreqTypeDef.
 396:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 397:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 398:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 18


 522              		.loc 1 398 1 is_stmt 1 view -0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 399:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return uwTickFreq;
 527              		.loc 1 399 3 view .LVU120
 400:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 528              		.loc 1 400 1 is_stmt 0 view .LVU121
 529 0000 014B     		ldr	r3, .L43
 530 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 531 0004 7047     		bx	lr
 532              	.L44:
 533 0006 00BF     		.align	2
 534              	.L43:
 535 0008 00000000 		.word	uwTickFreq
 536              		.cfi_endproc
 537              	.LFE339:
 539              		.section	.text.HAL_Delay,"ax",%progbits
 540              		.align	1
 541              		.weak	HAL_Delay
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
 546              	HAL_Delay:
 547              	.LVL27:
 548              	.LFB340:
 401:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 402:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 403:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 404:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *        on variable incremented.
 405:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 406:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 407:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       is incremented.
 408:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 409:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       implementations in user file.
 410:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 411:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 412:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 413:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 414:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 549              		.loc 1 414 1 is_stmt 1 view -0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              		.loc 1 414 1 is_stmt 0 view .LVU123
 554 0000 38B5     		push	{r3, r4, r5, lr}
 555              	.LCFI4:
 556              		.cfi_def_cfa_offset 16
 557              		.cfi_offset 3, -16
 558              		.cfi_offset 4, -12
 559              		.cfi_offset 5, -8
 560              		.cfi_offset 14, -4
 561 0002 0446     		mov	r4, r0
 415:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 562              		.loc 1 415 3 is_stmt 1 view .LVU124
 563              		.loc 1 415 24 is_stmt 0 view .LVU125
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 19


 564 0004 FFF7FEFF 		bl	HAL_GetTick
 565              	.LVL28:
 566              		.loc 1 415 24 view .LVU126
 567 0008 0546     		mov	r5, r0
 568              	.LVL29:
 416:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   uint32_t wait = Delay;
 569              		.loc 1 416 3 is_stmt 1 view .LVU127
 417:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 418:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 419:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 570              		.loc 1 419 3 view .LVU128
 571              		.loc 1 419 6 is_stmt 0 view .LVU129
 572 000a B4F1FF3F 		cmp	r4, #-1
 573 000e 02D0     		beq	.L47
 420:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 421:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 574              		.loc 1 421 5 is_stmt 1 view .LVU130
 575              		.loc 1 421 13 is_stmt 0 view .LVU131
 576 0010 044B     		ldr	r3, .L49
 577 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 578              		.loc 1 421 10 view .LVU132
 579 0014 1C44     		add	r4, r4, r3
 580              	.LVL30:
 581              	.L47:
 422:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 423:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 425:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 426:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 582              		.loc 1 426 3 is_stmt 1 view .LVU133
 424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 583              		.loc 1 424 38 discriminator 1 view .LVU134
 424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 584              		.loc 1 424 11 is_stmt 0 discriminator 1 view .LVU135
 585 0016 FFF7FEFF 		bl	HAL_GetTick
 586              	.LVL31:
 424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 587              		.loc 1 424 25 discriminator 1 view .LVU136
 588 001a 401B     		subs	r0, r0, r5
 424:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 589              		.loc 1 424 38 discriminator 1 view .LVU137
 590 001c A042     		cmp	r0, r4
 591 001e FAD3     		bcc	.L47
 427:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 592              		.loc 1 427 1 view .LVU138
 593 0020 38BD     		pop	{r3, r4, r5, pc}
 594              	.LVL32:
 595              	.L50:
 596              		.loc 1 427 1 view .LVU139
 597 0022 00BF     		.align	2
 598              	.L49:
 599 0024 00000000 		.word	uwTickFreq
 600              		.cfi_endproc
 601              	.LFE340:
 603              		.section	.text.HAL_SuspendTick,"ax",%progbits
 604              		.align	1
 605              		.weak	HAL_SuspendTick
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 20


 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 610              	HAL_SuspendTick:
 611              	.LFB341:
 428:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 429:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 430:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief Suspend Tick increment.
 431:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 432:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 433:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 434:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       is suspended.
 435:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 436:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       implementations in user file.
 437:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 438:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 439:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __weak void HAL_SuspendTick(void)
 440:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 612              		.loc 1 440 1 is_stmt 1 view -0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              		@ link register save eliminated.
 441:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Disable SysTick Interrupt */
 442:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 617              		.loc 1 442 3 view .LVU141
 618              		.loc 1 442 10 is_stmt 0 view .LVU142
 619 0000 4FF0E022 		mov	r2, #-536813568
 620 0004 1369     		ldr	r3, [r2, #16]
 621              		.loc 1 442 17 view .LVU143
 622 0006 23F00203 		bic	r3, r3, #2
 623 000a 1361     		str	r3, [r2, #16]
 443:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 624              		.loc 1 443 1 view .LVU144
 625 000c 7047     		bx	lr
 626              		.cfi_endproc
 627              	.LFE341:
 629              		.section	.text.HAL_ResumeTick,"ax",%progbits
 630              		.align	1
 631              		.weak	HAL_ResumeTick
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 636              	HAL_ResumeTick:
 637              	.LFB342:
 444:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 445:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 446:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief Resume Tick increment.
 447:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 448:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 449:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 450:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       is resumed.
 451:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 452:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *       implementations in user file.
 453:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 454:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 455:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** __weak void HAL_ResumeTick(void)
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 21


 456:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 638              		.loc 1 456 1 is_stmt 1 view -0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              		@ link register save eliminated.
 457:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Enable SysTick Interrupt */
 458:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 643              		.loc 1 458 3 view .LVU146
 644              		.loc 1 458 10 is_stmt 0 view .LVU147
 645 0000 4FF0E022 		mov	r2, #-536813568
 646 0004 1369     		ldr	r3, [r2, #16]
 647              		.loc 1 458 18 view .LVU148
 648 0006 43F00203 		orr	r3, r3, #2
 649 000a 1361     		str	r3, [r2, #16]
 459:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 650              		.loc 1 459 1 view .LVU149
 651 000c 7047     		bx	lr
 652              		.cfi_endproc
 653              	.LFE342:
 655              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 656              		.align	1
 657              		.global	HAL_GetHalVersion
 658              		.syntax unified
 659              		.thumb
 660              		.thumb_func
 662              	HAL_GetHalVersion:
 663              	.LFB343:
 460:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 461:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 462:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Returns the HAL revision
 463:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 464:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 465:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 466:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 664              		.loc 1 466 1 is_stmt 1 view -0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 467:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return __STM32H5XX_HAL_VERSION;
 669              		.loc 1 467 3 view .LVU151
 468:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 670              		.loc 1 468 1 is_stmt 0 view .LVU152
 671 0000 0048     		ldr	r0, .L54
 672 0002 7047     		bx	lr
 673              	.L55:
 674              		.align	2
 675              	.L54:
 676 0004 00000301 		.word	16973824
 677              		.cfi_endproc
 678              	.LFE343:
 680              		.section	.text.HAL_GetREVID,"ax",%progbits
 681              		.align	1
 682              		.global	HAL_GetREVID
 683              		.syntax unified
 684              		.thumb
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 22


 685              		.thumb_func
 687              	HAL_GetREVID:
 688              	.LFB344:
 469:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 470:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 471:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Returns the device revision identifier.
 472:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Device revision identifier
 473:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 474:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_GetREVID(void)
 475:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 689              		.loc 1 475 1 is_stmt 1 view -0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693              		@ link register save eliminated.
 476:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return ((DBGMCU->IDCODE & DBGMCU_IDCODE_REV_ID) >> 16);
 694              		.loc 1 476 3 view .LVU154
 695              		.loc 1 476 18 is_stmt 0 view .LVU155
 696 0000 014B     		ldr	r3, .L57
 697 0002 1868     		ldr	r0, [r3]
 477:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 698              		.loc 1 477 1 view .LVU156
 699 0004 000C     		lsrs	r0, r0, #16
 700 0006 7047     		bx	lr
 701              	.L58:
 702              		.align	2
 703              	.L57:
 704 0008 00400244 		.word	1140998144
 705              		.cfi_endproc
 706              	.LFE344:
 708              		.section	.text.HAL_GetDEVID,"ax",%progbits
 709              		.align	1
 710              		.global	HAL_GetDEVID
 711              		.syntax unified
 712              		.thumb
 713              		.thumb_func
 715              	HAL_GetDEVID:
 716              	.LFB345:
 478:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 479:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 480:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Returns the device identifier.
 481:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Device identifier
 482:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 483:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_GetDEVID(void)
 484:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 717              		.loc 1 484 1 is_stmt 1 view -0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              		@ link register save eliminated.
 485:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (DBGMCU->IDCODE & DBGMCU_IDCODE_DEV_ID);
 722              		.loc 1 485 3 view .LVU158
 723              		.loc 1 485 17 is_stmt 0 view .LVU159
 724 0000 024B     		ldr	r3, .L60
 725 0002 1868     		ldr	r0, [r3]
 486:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 726              		.loc 1 486 1 view .LVU160
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 23


 727 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 728 0008 7047     		bx	lr
 729              	.L61:
 730 000a 00BF     		.align	2
 731              	.L60:
 732 000c 00400244 		.word	1140998144
 733              		.cfi_endproc
 734              	.LFE345:
 736              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 737              		.align	1
 738              		.global	HAL_GetUIDw0
 739              		.syntax unified
 740              		.thumb
 741              		.thumb_func
 743              	HAL_GetUIDw0:
 744              	.LFB346:
 487:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 488:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 489:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Return the first word of the unique device identifier (UID based on 96 bits)
 490:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Device identifier
 491:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 492:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 493:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 745              		.loc 1 493 1 is_stmt 1 view -0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749              		@ link register save eliminated.
 494:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (READ_REG(*((uint32_t *)UID_BASE)));
 750              		.loc 1 494 3 view .LVU162
 495:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 751              		.loc 1 495 1 is_stmt 0 view .LVU163
 752 0000 014B     		ldr	r3, .L63
 753 0002 D3F80008 		ldr	r0, [r3, #2048]
 754 0006 7047     		bx	lr
 755              	.L64:
 756              		.align	2
 757              	.L63:
 758 0008 00F0FF08 		.word	150990848
 759              		.cfi_endproc
 760              	.LFE346:
 762              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 763              		.align	1
 764              		.global	HAL_GetUIDw1
 765              		.syntax unified
 766              		.thumb
 767              		.thumb_func
 769              	HAL_GetUIDw1:
 770              	.LFB347:
 496:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 497:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 498:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Return the second word of the unique device identifier (UID based on 96 bits)
 499:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Device identifier
 500:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 501:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 502:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 771              		.loc 1 502 1 is_stmt 1 view -0
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 24


 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 775              		@ link register save eliminated.
 503:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 776              		.loc 1 503 3 view .LVU165
 504:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 777              		.loc 1 504 1 is_stmt 0 view .LVU166
 778 0000 014B     		ldr	r3, .L66
 779 0002 D3F80408 		ldr	r0, [r3, #2052]
 780 0006 7047     		bx	lr
 781              	.L67:
 782              		.align	2
 783              	.L66:
 784 0008 00F0FF08 		.word	150990848
 785              		.cfi_endproc
 786              	.LFE347:
 788              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 789              		.align	1
 790              		.global	HAL_GetUIDw2
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 795              	HAL_GetUIDw2:
 796              	.LFB348:
 505:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 506:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 507:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Return the third word of the unique device identifier (UID based on 96 bits)
 508:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Device identifier
 509:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 510:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 511:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 797              		.loc 1 511 1 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 512:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 802              		.loc 1 512 3 view .LVU168
 513:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 803              		.loc 1 513 1 is_stmt 0 view .LVU169
 804 0000 014B     		ldr	r3, .L69
 805 0002 D3F80808 		ldr	r0, [r3, #2056]
 806 0006 7047     		bx	lr
 807              	.L70:
 808              		.align	2
 809              	.L69:
 810 0008 00F0FF08 		.word	150990848
 811              		.cfi_endproc
 812              	.LFE348:
 814              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 815              		.align	1
 816              		.global	HAL_DBGMCU_EnableDBGStopMode
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 821              	HAL_DBGMCU_EnableDBGStopMode:
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 25


 822              	.LFB349:
 514:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 515:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 516:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
 517:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 518:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 519:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 520:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group3 HAL Debug functions
 521:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief    HAL Debug functions
 522:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 523:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
 524:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 525:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                        ##### HAL Debug functions #####
 526:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 527:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]  This section provides functions allowing to:
 528:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 529:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 530:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 531:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
 532:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
 533:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 534:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 535:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 536:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode.
 537:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 538:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 539:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 540:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 823              		.loc 1 540 1 is_stmt 1 view -0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 541:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 828              		.loc 1 541 3 view .LVU171
 829 0000 024A     		ldr	r2, .L72
 830 0002 5368     		ldr	r3, [r2, #4]
 831 0004 43F00203 		orr	r3, r3, #2
 832 0008 5360     		str	r3, [r2, #4]
 542:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 833              		.loc 1 542 1 is_stmt 0 view .LVU172
 834 000a 7047     		bx	lr
 835              	.L73:
 836              		.align	2
 837              	.L72:
 838 000c 00400244 		.word	1140998144
 839              		.cfi_endproc
 840              	.LFE349:
 842              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 843              		.align	1
 844              		.global	HAL_DBGMCU_DisableDBGStopMode
 845              		.syntax unified
 846              		.thumb
 847              		.thumb_func
 849              	HAL_DBGMCU_DisableDBGStopMode:
 850              	.LFB350:
 543:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 26


 544:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 545:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode.
 546:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 547:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 548:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 549:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 851              		.loc 1 549 1 is_stmt 1 view -0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 0
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 855              		@ link register save eliminated.
 550:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 856              		.loc 1 550 3 view .LVU174
 857 0000 024A     		ldr	r2, .L75
 858 0002 5368     		ldr	r3, [r2, #4]
 859 0004 23F00203 		bic	r3, r3, #2
 860 0008 5360     		str	r3, [r2, #4]
 551:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 861              		.loc 1 551 1 is_stmt 0 view .LVU175
 862 000a 7047     		bx	lr
 863              	.L76:
 864              		.align	2
 865              	.L75:
 866 000c 00400244 		.word	1140998144
 867              		.cfi_endproc
 868              	.LFE350:
 870              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 871              		.align	1
 872              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 873              		.syntax unified
 874              		.thumb
 875              		.thumb_func
 877              	HAL_DBGMCU_EnableDBGStandbyMode:
 878              	.LFB351:
 552:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 553:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 554:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode.
 555:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 556:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 557:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 558:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 879              		.loc 1 558 1 is_stmt 1 view -0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
 883              		@ link register save eliminated.
 559:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 884              		.loc 1 559 3 view .LVU177
 885 0000 024A     		ldr	r2, .L78
 886 0002 5368     		ldr	r3, [r2, #4]
 887 0004 43F00403 		orr	r3, r3, #4
 888 0008 5360     		str	r3, [r2, #4]
 560:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 889              		.loc 1 560 1 is_stmt 0 view .LVU178
 890 000a 7047     		bx	lr
 891              	.L79:
 892              		.align	2
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 27


 893              	.L78:
 894 000c 00400244 		.word	1140998144
 895              		.cfi_endproc
 896              	.LFE351:
 898              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 899              		.align	1
 900              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 901              		.syntax unified
 902              		.thumb
 903              		.thumb_func
 905              	HAL_DBGMCU_DisableDBGStandbyMode:
 906              	.LFB352:
 561:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 562:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 563:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode.
 564:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 565:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 566:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 567:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 907              		.loc 1 567 1 is_stmt 1 view -0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 0, uses_anonymous_args = 0
 911              		@ link register save eliminated.
 568:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 912              		.loc 1 568 3 view .LVU180
 913 0000 024A     		ldr	r2, .L81
 914 0002 5368     		ldr	r3, [r2, #4]
 915 0004 23F00403 		bic	r3, r3, #4
 916 0008 5360     		str	r3, [r2, #4]
 569:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 917              		.loc 1 569 1 is_stmt 0 view .LVU181
 918 000a 7047     		bx	lr
 919              	.L82:
 920              		.align	2
 921              	.L81:
 922 000c 00400244 		.word	1140998144
 923              		.cfi_endproc
 924              	.LFE352:
 926              		.section	.text.HAL_SBS_EnableVddIO1CompensationCell,"ax",%progbits
 927              		.align	1
 928              		.global	HAL_SBS_EnableVddIO1CompensationCell
 929              		.syntax unified
 930              		.thumb
 931              		.thumb_func
 933              	HAL_SBS_EnableVddIO1CompensationCell:
 934              	.LFB353:
 570:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 571:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 572:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
 573:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 574:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 575:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group4 HAL VREFBUF Control functions
 576:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief    HAL VREFBUF Control functions
 577:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 578:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
 579:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 28


 580:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                        ##### HAL VREFBUF Control functions #####
 581:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 582:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]  This section provides functions allowing to:
 583:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Configure the Voltage reference buffer
 584:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Enable/Disable the Voltage reference buffer
 585:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 586:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
 587:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
 588:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 589:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 590:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined(VREFBUF)
 591:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 592:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief Configure the internal voltage reference buffer voltage scale.
 593:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  VoltageScaling: specifies the output voltage to achieve
 594:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          This parameter can be one of the following values:
 595:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg VREFBUF_VOLTAGE_SCALE0: VREF_OUT1 around 2.5 V.
 596:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.8 V
 597:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg VREFBUF_VOLTAGE_SCALE1: VREF_OUT2 around 2.048 V.
 598:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.4 V
 599:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg VREFBUF_VOLTAGE_SCALE2: VREF_OUT3 around 1.8 V.
 600:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.1 V
 601:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg VREFBUF_VOLTAGE_SCALE3: VREF_OUT4 around 1.5 V.
 602:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *                                                This requires VDDA equal to or higher than 1.8 V
 603:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 604:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 605:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_VREFBUF_VoltageScalingConfig(uint32_t VoltageScaling)
 606:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 607:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameters */
 608:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_VREFBUF_VOLTAGE_SCALE(VoltageScaling));
 609:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 610:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_VRS, VoltageScaling);
 611:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 612:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 613:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 614:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief Configure the internal voltage reference buffer high impedance mode.
 615:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  Mode: specifies the high impedance mode
 616:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          This parameter can be one of the following values:
 617:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg VREFBUF_HIGH_IMPEDANCE_DISABLE: VREF+ pin is internally connect to VREFINT outp
 618:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg VREFBUF_HIGH_IMPEDANCE_ENABLE: VREF+ pin is high impedance.
 619:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 620:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 621:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_VREFBUF_HighImpedanceConfig(uint32_t Mode)
 622:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 623:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameters */
 624:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_VREFBUF_HIGH_IMPEDANCE(Mode));
 625:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 626:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_HIZ, Mode);
 627:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 628:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 629:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 630:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Tune the Internal Voltage Reference buffer (VREFBUF).
 631:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 632:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 633:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_VREFBUF_TrimmingConfig(uint32_t TrimmingValue)
 634:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 635:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameters */
 636:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_VREFBUF_TRIMMING(TrimmingValue));
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 29


 637:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 638:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(VREFBUF->CCR, VREFBUF_CCR_TRIM, TrimmingValue);
 639:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 640:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 641:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 642:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Enable the Internal Voltage Reference buffer (VREFBUF).
 643:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval HAL_OK/HAL_TIMEOUT
 644:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 645:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** HAL_StatusTypeDef HAL_EnableVREFBUF(void)
 646:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 647:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   uint32_t  tickstart;
 648:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 649:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SET_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 650:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 651:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Get Start Tick*/
 652:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   tickstart = HAL_GetTick();
 653:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 654:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Wait for VRR bit  */
 655:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   while (READ_BIT(VREFBUF->CSR, VREFBUF_CSR_VRR) == 0UL)
 656:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
 657:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     if ((HAL_GetTick() - tickstart) > VREFBUF_TIMEOUT_VALUE)
 658:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     {
 659:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       return HAL_TIMEOUT;
 660:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     }
 661:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 662:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 663:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return HAL_OK;
 664:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 665:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 666:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 667:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Disable the Internal Voltage Reference buffer (VREFBUF).
 668:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 669:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 670:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 671:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_DisableVREFBUF(void)
 672:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 673:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   CLEAR_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 674:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 675:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* VREFBUF */
 676:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 677:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 678:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
 679:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 680:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 681:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group5 HAL SBS configuration functions
 682:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief    HAL SBS configuration functions
 683:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 684:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
 685:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 686:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                        ##### HAL SBS configuration functions #####
 687:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 688:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]  This section provides functions allowing to:
 689:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Select the Ethernet PHY Interface
 690:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Enable/Disable the VDD I/Os Compensation Cell
 691:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Code selection/configuration for the VDD I/O Compensation cell
 692:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Get ready flag status of VDD I/Os Compensation cell
 693:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Get PMOS/NMOS compensation value of the I/Os supplied by VDD
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 30


 694:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Enable/Disable the NMI in case of double ECC error in FLASH Interface
 695:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 696:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
 697:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
 698:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 699:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 700:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined(SBS_PMCR_ETH_SEL_PHY)
 701:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 702:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Ethernet PHY Interface Selection either MII or RMII
 703:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  SBS_ETHInterface: Selects the Ethernet PHY interface
 704:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *   This parameter can be one of the following values:
 705:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *   @arg SBS_ETH_MII : Select the Media Independent Interface
 706:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *   @arg SBS_ETH_RMII: Select the Reduced Media Independent Interface
 707:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 708:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 709:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_ETHInterfaceSelect(uint32_t SBS_ETHInterface)
 710:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 711:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameter */
 712:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_ETHERNET_CONFIG(SBS_ETHInterface));
 713:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 714:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->PMCR, SBS_PMCR_ETH_SEL_PHY, (uint32_t)(SBS_ETHInterface));
 715:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 716:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* SBS_PMCR_ETH_SEL_PHY */
 717:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 718:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 719:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Enables the VDD I/Os Compensation Cell.
 720:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 721:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.
 722:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 723:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 724:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_EnableVddIO1CompensationCell(void)
 725:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 935              		.loc 1 725 1 is_stmt 1 view -0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
 939              		@ link register save eliminated.
 726:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SET_BIT(SBS->CCCSR, SBS_CCCSR_EN1) ;
 940              		.loc 1 726 3 view .LVU183
 941 0000 034A     		ldr	r2, .L84
 942 0002 D2F81031 		ldr	r3, [r2, #272]
 943 0006 43F00103 		orr	r3, r3, #1
 944 000a C2F81031 		str	r3, [r2, #272]
 727:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 945              		.loc 1 727 1 is_stmt 0 view .LVU184
 946 000e 7047     		bx	lr
 947              	.L85:
 948              		.align	2
 949              	.L84:
 950 0010 00040044 		.word	1140851712
 951              		.cfi_endproc
 952              	.LFE353:
 954              		.section	.text.HAL_SBS_DisableVddIO1CompensationCell,"ax",%progbits
 955              		.align	1
 956              		.global	HAL_SBS_DisableVddIO1CompensationCell
 957              		.syntax unified
 958              		.thumb
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 31


 959              		.thumb_func
 961              	HAL_SBS_DisableVddIO1CompensationCell:
 962              	.LFB354:
 728:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 729:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 730:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Power-down the VDD I/Os Compensation Cell.
 731:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 732:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.
 733:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 734:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 735:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_DisableVddIO1CompensationCell(void)
 736:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 963              		.loc 1 736 1 is_stmt 1 view -0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967              		@ link register save eliminated.
 737:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   CLEAR_BIT(SBS->CCCSR, SBS_CCCSR_EN1);
 968              		.loc 1 737 3 view .LVU186
 969 0000 034A     		ldr	r2, .L87
 970 0002 D2F81031 		ldr	r3, [r2, #272]
 971 0006 23F00103 		bic	r3, r3, #1
 972 000a C2F81031 		str	r3, [r2, #272]
 738:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 973              		.loc 1 738 1 is_stmt 0 view .LVU187
 974 000e 7047     		bx	lr
 975              	.L88:
 976              		.align	2
 977              	.L87:
 978 0010 00040044 		.word	1140851712
 979              		.cfi_endproc
 980              	.LFE354:
 982              		.section	.text.HAL_SBS_EnableVddIO2CompensationCell,"ax",%progbits
 983              		.align	1
 984              		.global	HAL_SBS_EnableVddIO2CompensationCell
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 989              	HAL_SBS_EnableVddIO2CompensationCell:
 990              	.LFB355:
 739:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 740:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 741:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Enables the VDDIO2 I/Os Compensation Cell.
 742:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 743:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.
 744:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 745:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 746:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_EnableVddIO2CompensationCell(void)
 747:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 991              		.loc 1 747 1 is_stmt 1 view -0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995              		@ link register save eliminated.
 748:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SET_BIT(SBS->CCCSR, SBS_CCCSR_EN2) ;
 996              		.loc 1 748 3 view .LVU189
 997 0000 034A     		ldr	r2, .L90
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 32


 998 0002 D2F81031 		ldr	r3, [r2, #272]
 999 0006 43F00403 		orr	r3, r3, #4
 1000 000a C2F81031 		str	r3, [r2, #272]
 749:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1001              		.loc 1 749 1 is_stmt 0 view .LVU190
 1002 000e 7047     		bx	lr
 1003              	.L91:
 1004              		.align	2
 1005              	.L90:
 1006 0010 00040044 		.word	1140851712
 1007              		.cfi_endproc
 1008              	.LFE355:
 1010              		.section	.text.HAL_SBS_DisableVddIO2CompensationCell,"ax",%progbits
 1011              		.align	1
 1012              		.global	HAL_SBS_DisableVddIO2CompensationCell
 1013              		.syntax unified
 1014              		.thumb
 1015              		.thumb_func
 1017              	HAL_SBS_DisableVddIO2CompensationCell:
 1018              	.LFB356:
 750:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 751:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 752:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Power-down the VDDIO2 I/Os Compensation Cell.
 753:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 754:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.
 755:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 756:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 757:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_DisableVddIO2CompensationCell(void)
 758:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1019              		.loc 1 758 1 is_stmt 1 view -0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 1023              		@ link register save eliminated.
 759:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   CLEAR_BIT(SBS->CCCSR, SBS_CCCSR_EN2);
 1024              		.loc 1 759 3 view .LVU192
 1025 0000 034A     		ldr	r2, .L93
 1026 0002 D2F81031 		ldr	r3, [r2, #272]
 1027 0006 23F00403 		bic	r3, r3, #4
 1028 000a C2F81031 		str	r3, [r2, #272]
 760:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1029              		.loc 1 760 1 is_stmt 0 view .LVU193
 1030 000e 7047     		bx	lr
 1031              	.L94:
 1032              		.align	2
 1033              	.L93:
 1034 0010 00040044 		.word	1140851712
 1035              		.cfi_endproc
 1036              	.LFE356:
 1038              		.section	.text.HAL_SBS_VDDCompensationCodeSelect,"ax",%progbits
 1039              		.align	1
 1040              		.global	HAL_SBS_VDDCompensationCodeSelect
 1041              		.syntax unified
 1042              		.thumb
 1043              		.thumb_func
 1045              	HAL_SBS_VDDCompensationCodeSelect:
 1046              	.LVL33:
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 33


 1047              	.LFB357:
 761:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 762:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 763:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Code selection for the VDD I/O Compensation cell
 764:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  SBS_CompCode: Selects the code to be applied for the I/O compensation cell
 765:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This parameter can be one of the following values:
 766:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_VDD_CELL_CODE : Select Code from the cell (available in the SBS_CCVALR)
 767:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_VDD_REGISTER_CODE: Select Code from the SBS compensation cell code register 
 768:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 769:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 770:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_VDDCompensationCodeSelect(uint32_t SBS_CompCode)
 771:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1048              		.loc 1 771 1 is_stmt 1 view -0
 1049              		.cfi_startproc
 1050              		@ args = 0, pretend = 0, frame = 0
 1051              		@ frame_needed = 0, uses_anonymous_args = 0
 1052              		@ link register save eliminated.
 772:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameter */
 773:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_VDD_CODE_SELECT(SBS_CompCode));
 1053              		.loc 1 773 3 view .LVU195
 774:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->CCCSR, SBS_CCCSR_CS1, (uint32_t)(SBS_CompCode));
 1054              		.loc 1 774 3 view .LVU196
 1055 0000 044A     		ldr	r2, .L96
 1056 0002 D2F81031 		ldr	r3, [r2, #272]
 1057 0006 23F00203 		bic	r3, r3, #2
 1058 000a 0343     		orrs	r3, r3, r0
 1059 000c C2F81031 		str	r3, [r2, #272]
 775:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1060              		.loc 1 775 1 is_stmt 0 view .LVU197
 1061 0010 7047     		bx	lr
 1062              	.L97:
 1063 0012 00BF     		.align	2
 1064              	.L96:
 1065 0014 00040044 		.word	1140851712
 1066              		.cfi_endproc
 1067              	.LFE357:
 1069              		.section	.text.HAL_SBS_VDDIOCompensationCodeSelect,"ax",%progbits
 1070              		.align	1
 1071              		.global	HAL_SBS_VDDIOCompensationCodeSelect
 1072              		.syntax unified
 1073              		.thumb
 1074              		.thumb_func
 1076              	HAL_SBS_VDDIOCompensationCodeSelect:
 1077              	.LVL34:
 1078              	.LFB358:
 776:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 777:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 778:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Code selection for the VDDIO I/O Compensation cell
 779:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  SBS_CompCode: Selects the code to be applied for the I/O compensation cell
 780:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This parameter can be one of the following values:
 781:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_VDDIO_CELL_CODE : Select Code from the cell (available in the SBS_CCVALR)
 782:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_VDDIO_REGISTER_CODE: Select Code from the SBS compensation cell code registe
 783:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 784:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 785:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_VDDIOCompensationCodeSelect(uint32_t SBS_CompCode)
 786:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1079              		.loc 1 786 1 is_stmt 1 view -0
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 34


 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083              		@ link register save eliminated.
 787:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameter */
 788:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_VDDIO_CODE_SELECT(SBS_CompCode));
 1084              		.loc 1 788 3 view .LVU199
 789:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->CCCSR, SBS_CCCSR_CS2, (uint32_t)(SBS_CompCode));
 1085              		.loc 1 789 3 view .LVU200
 1086 0000 044A     		ldr	r2, .L99
 1087 0002 D2F81031 		ldr	r3, [r2, #272]
 1088 0006 23F00803 		bic	r3, r3, #8
 1089 000a 0343     		orrs	r3, r3, r0
 1090 000c C2F81031 		str	r3, [r2, #272]
 790:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1091              		.loc 1 790 1 is_stmt 0 view .LVU201
 1092 0010 7047     		bx	lr
 1093              	.L100:
 1094 0012 00BF     		.align	2
 1095              	.L99:
 1096 0014 00040044 		.word	1140851712
 1097              		.cfi_endproc
 1098              	.LFE358:
 1100              		.section	.text.HAL_SBS_GetVddIO1CompensationCellReadyFlag,"ax",%progbits
 1101              		.align	1
 1102              		.global	HAL_SBS_GetVddIO1CompensationCellReadyFlag
 1103              		.syntax unified
 1104              		.thumb
 1105              		.thumb_func
 1107              	HAL_SBS_GetVddIO1CompensationCellReadyFlag:
 1108              	.LFB359:
 791:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 792:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 793:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  VDDIO1 I/O Compensation cell get ready flag status
 794:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval State of bit (1 or 0).
 795:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 796:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetVddIO1CompensationCellReadyFlag(void)
 797:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1109              		.loc 1 797 1 is_stmt 1 view -0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 0
 1112              		@ frame_needed = 0, uses_anonymous_args = 0
 1113              		@ link register save eliminated.
 798:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return ((READ_BIT(SBS->CCCSR, SBS_CCCSR_RDY1) == SBS_CCCSR_RDY1) ? 1UL : 0UL);
 1114              		.loc 1 798 3 view .LVU203
 1115              		.loc 1 798 12 is_stmt 0 view .LVU204
 1116 0000 034B     		ldr	r3, .L103
 1117 0002 D3F81001 		ldr	r0, [r3, #272]
 1118              		.loc 1 798 74 view .LVU205
 1119 0006 10F48070 		ands	r0, r0, #256
 1120 000a 00D0     		beq	.L101
 1121              		.loc 1 798 74 discriminator 1 view .LVU206
 1122 000c 0120     		movs	r0, #1
 1123              	.L101:
 799:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1124              		.loc 1 799 1 view .LVU207
 1125 000e 7047     		bx	lr
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 35


 1126              	.L104:
 1127              		.align	2
 1128              	.L103:
 1129 0010 00040044 		.word	1140851712
 1130              		.cfi_endproc
 1131              	.LFE359:
 1133              		.section	.text.HAL_SBS_GetVddIO2CompensationCellReadyFlag,"ax",%progbits
 1134              		.align	1
 1135              		.global	HAL_SBS_GetVddIO2CompensationCellReadyFlag
 1136              		.syntax unified
 1137              		.thumb
 1138              		.thumb_func
 1140              	HAL_SBS_GetVddIO2CompensationCellReadyFlag:
 1141              	.LFB360:
 800:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 801:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 802:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  VDDIO2 I/O Compensation cell get ready flag status
 803:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval State of bit (1 or 0).
 804:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 805:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetVddIO2CompensationCellReadyFlag(void)
 806:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1142              		.loc 1 806 1 is_stmt 1 view -0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 0
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 1146              		@ link register save eliminated.
 807:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return ((READ_BIT(SBS->CCCSR, SBS_CCCSR_RDY2) == SBS_CCCSR_RDY2) ? 1UL : 0UL);
 1147              		.loc 1 807 3 view .LVU209
 1148              		.loc 1 807 12 is_stmt 0 view .LVU210
 1149 0000 034B     		ldr	r3, .L107
 1150 0002 D3F81001 		ldr	r0, [r3, #272]
 1151              		.loc 1 807 74 view .LVU211
 1152 0006 10F40070 		ands	r0, r0, #512
 1153 000a 00D0     		beq	.L105
 1154              		.loc 1 807 74 discriminator 1 view .LVU212
 1155 000c 0120     		movs	r0, #1
 1156              	.L105:
 808:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1157              		.loc 1 808 1 view .LVU213
 1158 000e 7047     		bx	lr
 1159              	.L108:
 1160              		.align	2
 1161              	.L107:
 1162 0010 00040044 		.word	1140851712
 1163              		.cfi_endproc
 1164              	.LFE360:
 1166              		.section	.text.HAL_SBS_VDDCompensationCodeConfig,"ax",%progbits
 1167              		.align	1
 1168              		.global	HAL_SBS_VDDCompensationCodeConfig
 1169              		.syntax unified
 1170              		.thumb
 1171              		.thumb_func
 1173              	HAL_SBS_VDDCompensationCodeConfig:
 1174              	.LVL35:
 1175              	.LFB361:
 809:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 810:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 36


 811:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Code configuration for the VDD I/O Compensation cell
 812:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  SBS_PMOSCode: PMOS compensation code
 813:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This code is applied to the VDD I/O compensation cell when the CS1 bit of the
 814:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          SBS_CCSR is set
 815:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  SBS_NMOSCode: NMOS compensation code
 816:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This code is applied to the VDD I/O compensation cell when the CS1 bit of the
 817:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          SBS_CCSR is set
 818:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 819:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 820:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_VDDCompensationCodeConfig(uint32_t SBS_PMOSCode, uint32_t SBS_NMOSCode)
 821:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1176              		.loc 1 821 1 is_stmt 1 view -0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 0
 1179              		@ frame_needed = 0, uses_anonymous_args = 0
 1180              		@ link register save eliminated.
 822:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameter */
 823:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_CODE_CONFIG(SBS_PMOSCode));
 1181              		.loc 1 823 3 view .LVU215
 824:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_CODE_CONFIG(SBS_NMOSCode));
 1182              		.loc 1 824 3 view .LVU216
 825:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->CCSWCR, SBS_CCSWCR_SW_ANSRC1 | SBS_CCSWCR_SW_APSRC1, (((uint32_t)(SBS_PMOSCode) <
 1183              		.loc 1 825 3 view .LVU217
 1184 0000 054A     		ldr	r2, .L110
 1185 0002 D2F81831 		ldr	r3, [r2, #280]
 1186 0006 23F0FF03 		bic	r3, r3, #255
 1187 000a 41EA0011 		orr	r1, r1, r0, lsl #4
 1188              	.LVL36:
 1189              		.loc 1 825 3 is_stmt 0 view .LVU218
 1190 000e 0B43     		orrs	r3, r3, r1
 1191 0010 C2F81831 		str	r3, [r2, #280]
 826:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                                                         (uint32_t)(SBS_NMOSCode)));
 827:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1192              		.loc 1 827 1 view .LVU219
 1193 0014 7047     		bx	lr
 1194              	.L111:
 1195 0016 00BF     		.align	2
 1196              	.L110:
 1197 0018 00040044 		.word	1140851712
 1198              		.cfi_endproc
 1199              	.LFE361:
 1201              		.section	.text.HAL_SBS_VDDIOCompensationCodeConfig,"ax",%progbits
 1202              		.align	1
 1203              		.global	HAL_SBS_VDDIOCompensationCodeConfig
 1204              		.syntax unified
 1205              		.thumb
 1206              		.thumb_func
 1208              	HAL_SBS_VDDIOCompensationCodeConfig:
 1209              	.LVL37:
 1210              	.LFB362:
 828:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 829:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 830:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Code configuration for the VDDIO I/O Compensation cell
 831:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  SBS_PMOSCode: PMOS compensation code
 832:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This code is applied to the VDDIO I/O compensation cell when the CS2 bit of the
 833:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          SBS_CCSR is set
 834:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  SBS_NMOSCode: NMOS compensation code
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 37


 835:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This code is applied to the VDDIO I/O compensation cell when the CS2 bit of the
 836:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          SBS_CCSR is set
 837:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 838:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 839:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_VDDIOCompensationCodeConfig(uint32_t SBS_PMOSCode, uint32_t SBS_NMOSCode)
 840:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1211              		.loc 1 840 1 is_stmt 1 view -0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215              		@ link register save eliminated.
 841:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameter */
 842:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_CODE_CONFIG(SBS_PMOSCode));
 1216              		.loc 1 842 3 view .LVU221
 843:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_CODE_CONFIG(SBS_NMOSCode));
 1217              		.loc 1 843 3 view .LVU222
 844:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->CCSWCR, SBS_CCSWCR_SW_ANSRC2 | SBS_CCSWCR_SW_APSRC2, (((uint32_t)(SBS_PMOSCode) <
 1218              		.loc 1 844 3 view .LVU223
 1219 0000 054A     		ldr	r2, .L113
 1220 0002 D2F81831 		ldr	r3, [r2, #280]
 1221 0006 23F47F43 		bic	r3, r3, #65280
 1222 000a 0902     		lsls	r1, r1, #8
 1223              	.LVL38:
 1224              		.loc 1 844 3 is_stmt 0 view .LVU224
 1225 000c 41EA0031 		orr	r1, r1, r0, lsl #12
 1226 0010 0B43     		orrs	r3, r3, r1
 1227 0012 C2F81831 		str	r3, [r2, #280]
 845:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                                                         ((uint32_t)(SBS_NMOSCode) <
 846:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1228              		.loc 1 846 1 view .LVU225
 1229 0016 7047     		bx	lr
 1230              	.L114:
 1231              		.align	2
 1232              	.L113:
 1233 0018 00040044 		.word	1140851712
 1234              		.cfi_endproc
 1235              	.LFE362:
 1237              		.section	.text.HAL_SBS_GetNMOSVddCompensationValue,"ax",%progbits
 1238              		.align	1
 1239              		.global	HAL_SBS_GetNMOSVddCompensationValue
 1240              		.syntax unified
 1241              		.thumb
 1242              		.thumb_func
 1244              	HAL_SBS_GetNMOSVddCompensationValue:
 1245              	.LFB363:
 847:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 848:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 849:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get NMOS compensation value of the I/Os supplied by VDD
 850:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 851:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 852:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetNMOSVddCompensationValue(void)
 853:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1246              		.loc 1 853 1 is_stmt 1 view -0
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 0
 1249              		@ frame_needed = 0, uses_anonymous_args = 0
 1250              		@ link register save eliminated.
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 38


 854:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (uint32_t)(READ_BIT(SBS->CCVALR, SBS_CCVALR_ANSRC1));
 1251              		.loc 1 854 3 view .LVU227
 1252              		.loc 1 854 21 is_stmt 0 view .LVU228
 1253 0000 024B     		ldr	r3, .L116
 1254 0002 D3F81401 		ldr	r0, [r3, #276]
 855:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1255              		.loc 1 855 1 view .LVU229
 1256 0006 00F00F00 		and	r0, r0, #15
 1257 000a 7047     		bx	lr
 1258              	.L117:
 1259              		.align	2
 1260              	.L116:
 1261 000c 00040044 		.word	1140851712
 1262              		.cfi_endproc
 1263              	.LFE363:
 1265              		.section	.text.HAL_SBS_GetPMOSVddCompensationValue,"ax",%progbits
 1266              		.align	1
 1267              		.global	HAL_SBS_GetPMOSVddCompensationValue
 1268              		.syntax unified
 1269              		.thumb
 1270              		.thumb_func
 1272              	HAL_SBS_GetPMOSVddCompensationValue:
 1273              	.LFB364:
 856:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 857:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 858:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get PMOS compensation value of the I/Os supplied by VDD
 859:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 860:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 861:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetPMOSVddCompensationValue(void)
 862:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1274              		.loc 1 862 1 is_stmt 1 view -0
 1275              		.cfi_startproc
 1276              		@ args = 0, pretend = 0, frame = 0
 1277              		@ frame_needed = 0, uses_anonymous_args = 0
 1278              		@ link register save eliminated.
 863:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (uint32_t)(READ_BIT(SBS->CCVALR, SBS_CCVALR_APSRC1) >>  SBS_CCVALR_APSRC1_Pos);
 1279              		.loc 1 863 3 view .LVU231
 1280              		.loc 1 863 21 is_stmt 0 view .LVU232
 1281 0000 024B     		ldr	r3, .L119
 1282 0002 D3F81401 		ldr	r0, [r3, #276]
 864:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1283              		.loc 1 864 1 view .LVU233
 1284 0006 C0F30310 		ubfx	r0, r0, #4, #4
 1285 000a 7047     		bx	lr
 1286              	.L120:
 1287              		.align	2
 1288              	.L119:
 1289 000c 00040044 		.word	1140851712
 1290              		.cfi_endproc
 1291              	.LFE364:
 1293              		.section	.text.HAL_SBS_GetNMOSVddIO2CompensationValue,"ax",%progbits
 1294              		.align	1
 1295              		.global	HAL_SBS_GetNMOSVddIO2CompensationValue
 1296              		.syntax unified
 1297              		.thumb
 1298              		.thumb_func
 1300              	HAL_SBS_GetNMOSVddIO2CompensationValue:
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 39


 1301              	.LFB365:
 865:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 866:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 867:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get NMOS compensation value of the I/Os supplied by VDDIO2
 868:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 869:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 870:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetNMOSVddIO2CompensationValue(void)
 871:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1302              		.loc 1 871 1 is_stmt 1 view -0
 1303              		.cfi_startproc
 1304              		@ args = 0, pretend = 0, frame = 0
 1305              		@ frame_needed = 0, uses_anonymous_args = 0
 1306              		@ link register save eliminated.
 872:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (uint32_t)(READ_BIT(SBS->CCVALR, SBS_CCVALR_ANSRC2) >>  SBS_CCVALR_ANSRC2_Pos);
 1307              		.loc 1 872 3 view .LVU235
 1308              		.loc 1 872 21 is_stmt 0 view .LVU236
 1309 0000 024B     		ldr	r3, .L122
 1310 0002 D3F81401 		ldr	r0, [r3, #276]
 873:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1311              		.loc 1 873 1 view .LVU237
 1312 0006 C0F30320 		ubfx	r0, r0, #8, #4
 1313 000a 7047     		bx	lr
 1314              	.L123:
 1315              		.align	2
 1316              	.L122:
 1317 000c 00040044 		.word	1140851712
 1318              		.cfi_endproc
 1319              	.LFE365:
 1321              		.section	.text.HAL_SBS_GetPMOSVddIO2CompensationValue,"ax",%progbits
 1322              		.align	1
 1323              		.global	HAL_SBS_GetPMOSVddIO2CompensationValue
 1324              		.syntax unified
 1325              		.thumb
 1326              		.thumb_func
 1328              	HAL_SBS_GetPMOSVddIO2CompensationValue:
 1329              	.LFB366:
 874:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 875:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 876:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 877:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get PMOS compensation value of the I/Os supplied by VDDIO2
 878:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 879:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 880:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetPMOSVddIO2CompensationValue(void)
 881:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1330              		.loc 1 881 1 is_stmt 1 view -0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 0
 1333              		@ frame_needed = 0, uses_anonymous_args = 0
 1334              		@ link register save eliminated.
 882:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (uint32_t)(READ_BIT(SBS->CCVALR, SBS_CCVALR_APSRC2) >>  SBS_CCVALR_APSRC2_Pos);
 1335              		.loc 1 882 3 view .LVU239
 1336              		.loc 1 882 21 is_stmt 0 view .LVU240
 1337 0000 024B     		ldr	r3, .L125
 1338 0002 D3F81401 		ldr	r0, [r3, #276]
 883:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1339              		.loc 1 883 1 view .LVU241
 1340 0006 C0F30330 		ubfx	r0, r0, #12, #4
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 40


 1341 000a 7047     		bx	lr
 1342              	.L126:
 1343              		.align	2
 1344              	.L125:
 1345 000c 00040044 		.word	1140851712
 1346              		.cfi_endproc
 1347              	.LFE366:
 1349              		.section	.text.HAL_SBS_FLASH_DisableECCNMI,"ax",%progbits
 1350              		.align	1
 1351              		.global	HAL_SBS_FLASH_DisableECCNMI
 1352              		.syntax unified
 1353              		.thumb
 1354              		.thumb_func
 1356              	HAL_SBS_FLASH_DisableECCNMI:
 1357              	.LFB367:
 884:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 885:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 886:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Disable the NMI in case of double ECC error in FLASH Interface.
 887:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 888:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 889:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 890:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_FLASH_DisableECCNMI(void)
 891:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1358              		.loc 1 891 1 is_stmt 1 view -0
 1359              		.cfi_startproc
 1360              		@ args = 0, pretend = 0, frame = 0
 1361              		@ frame_needed = 0, uses_anonymous_args = 0
 1362              		@ link register save eliminated.
 892:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SET_BIT(SBS->ECCNMIR, SBS_ECCNMIR_ECCNMI_MASK_EN);
 1363              		.loc 1 892 3 view .LVU243
 1364 0000 034A     		ldr	r2, .L128
 1365 0002 D2F84C31 		ldr	r3, [r2, #332]
 1366 0006 43F00103 		orr	r3, r3, #1
 1367 000a C2F84C31 		str	r3, [r2, #332]
 893:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1368              		.loc 1 893 1 is_stmt 0 view .LVU244
 1369 000e 7047     		bx	lr
 1370              	.L129:
 1371              		.align	2
 1372              	.L128:
 1373 0010 00040044 		.word	1140851712
 1374              		.cfi_endproc
 1375              	.LFE367:
 1377              		.section	.text.HAL_SBS_FLASH_EnableECCNMI,"ax",%progbits
 1378              		.align	1
 1379              		.global	HAL_SBS_FLASH_EnableECCNMI
 1380              		.syntax unified
 1381              		.thumb
 1382              		.thumb_func
 1384              	HAL_SBS_FLASH_EnableECCNMI:
 1385              	.LFB368:
 894:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 895:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 896:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Enable the NMI in case of double ECC error in FLASH Interface.
 897:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 898:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 899:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 41


 900:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_FLASH_EnableECCNMI(void)
 901:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1386              		.loc 1 901 1 is_stmt 1 view -0
 1387              		.cfi_startproc
 1388              		@ args = 0, pretend = 0, frame = 0
 1389              		@ frame_needed = 0, uses_anonymous_args = 0
 1390              		@ link register save eliminated.
 902:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   CLEAR_BIT(SBS->ECCNMIR, SBS_ECCNMIR_ECCNMI_MASK_EN);
 1391              		.loc 1 902 3 view .LVU246
 1392 0000 034A     		ldr	r2, .L131
 1393 0002 D2F84C31 		ldr	r3, [r2, #332]
 1394 0006 23F00103 		bic	r3, r3, #1
 1395 000a C2F84C31 		str	r3, [r2, #332]
 903:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1396              		.loc 1 903 1 is_stmt 0 view .LVU247
 1397 000e 7047     		bx	lr
 1398              	.L132:
 1399              		.align	2
 1400              	.L131:
 1401 0010 00040044 		.word	1140851712
 1402              		.cfi_endproc
 1403              	.LFE368:
 1405              		.section	.text.HAL_SBS_FLASH_ECCNMI_IsDisabled,"ax",%progbits
 1406              		.align	1
 1407              		.global	HAL_SBS_FLASH_ECCNMI_IsDisabled
 1408              		.syntax unified
 1409              		.thumb
 1410              		.thumb_func
 1412              	HAL_SBS_FLASH_ECCNMI_IsDisabled:
 1413              	.LFB369:
 904:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 905:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 906:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Check if the NMI is Enabled in case of double ECC error in FLASH Interface.
 907:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 908:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval State of bit (1 or 0).
 909:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 910:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_FLASH_ECCNMI_IsDisabled(void)
 911:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1414              		.loc 1 911 1 is_stmt 1 view -0
 1415              		.cfi_startproc
 1416              		@ args = 0, pretend = 0, frame = 0
 1417              		@ frame_needed = 0, uses_anonymous_args = 0
 1418              		@ link register save eliminated.
 912:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return ((READ_BIT(SBS->ECCNMIR, SBS_ECCNMIR_ECCNMI_MASK_EN) == SBS_ECCNMIR_ECCNMI_MASK_EN) ? 1UL 
 1419              		.loc 1 912 3 view .LVU249
 1420              		.loc 1 912 12 is_stmt 0 view .LVU250
 1421 0000 034B     		ldr	r3, .L135
 1422 0002 D3F84C01 		ldr	r0, [r3, #332]
 1423              		.loc 1 912 100 view .LVU251
 1424 0006 10F00100 		ands	r0, r0, #1
 1425 000a 00D0     		beq	.L133
 1426              		.loc 1 912 100 discriminator 1 view .LVU252
 1427 000c 0120     		movs	r0, #1
 1428              	.L133:
 913:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1429              		.loc 1 913 1 view .LVU253
 1430 000e 7047     		bx	lr
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 42


 1431              	.L136:
 1432              		.align	2
 1433              	.L135:
 1434 0010 00040044 		.word	1140851712
 1435              		.cfi_endproc
 1436              	.LFE369:
 1438              		.section	.text.HAL_SBS_IncrementHDPLValue,"ax",%progbits
 1439              		.align	1
 1440              		.global	HAL_SBS_IncrementHDPLValue
 1441              		.syntax unified
 1442              		.thumb
 1443              		.thumb_func
 1445              	HAL_SBS_IncrementHDPLValue:
 1446              	.LFB370:
 914:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 915:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 916:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
 917:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 918:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 919:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group6 HAL SBS Boot control functions
 920:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief    HAL SBS Boot functions
 921:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 922:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
 923:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 924:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                        ##### HAL SBS Boot control functions #####
 925:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 926:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]  This section provides functions allowing to:
 927:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Increment the HDPL value
 928:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Get the HDPL value
 929:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 930:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
 931:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
 932:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 933:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 934:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 935:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Increment by 1 the HDPL value
 936:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 937:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 938:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_IncrementHDPLValue(void)
 939:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1447              		.loc 1 939 1 is_stmt 1 view -0
 1448              		.cfi_startproc
 1449              		@ args = 0, pretend = 0, frame = 0
 1450              		@ frame_needed = 0, uses_anonymous_args = 0
 1451              		@ link register save eliminated.
 940:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->HDPLCR, SBS_HDPLCR_INCR_HDPL, SBS_HDPL_INCREMENT_VALUE);
 1452              		.loc 1 940 3 view .LVU255
 1453 0000 034A     		ldr	r2, .L138
 1454 0002 1369     		ldr	r3, [r2, #16]
 1455 0004 23F0FF03 		bic	r3, r3, #255
 1456 0008 43F06A03 		orr	r3, r3, #106
 1457 000c 1361     		str	r3, [r2, #16]
 941:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1458              		.loc 1 941 1 is_stmt 0 view .LVU256
 1459 000e 7047     		bx	lr
 1460              	.L139:
 1461              		.align	2
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 43


 1462              	.L138:
 1463 0010 00040044 		.word	1140851712
 1464              		.cfi_endproc
 1465              	.LFE370:
 1467              		.section	.text.HAL_SBS_GetHDPLValue,"ax",%progbits
 1468              		.align	1
 1469              		.global	HAL_SBS_GetHDPLValue
 1470              		.syntax unified
 1471              		.thumb
 1472              		.thumb_func
 1474              	HAL_SBS_GetHDPLValue:
 1475              	.LFB371:
 942:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 943:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 944:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get the HDPL Value.
 945:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 946:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval  Returns the HDPL value
 947:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          This return value can be one of the following values:
 948:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_HDPL_VALUE_0: HDPL0
 949:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_HDPL_VALUE_1: HDPL1
 950:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_HDPL_VALUE_2: HDPL2
 951:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_HDPL_VALUE_3: HDPL3
 952:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 953:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetHDPLValue(void)
 954:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1476              		.loc 1 954 1 is_stmt 1 view -0
 1477              		.cfi_startproc
 1478              		@ args = 0, pretend = 0, frame = 0
 1479              		@ frame_needed = 0, uses_anonymous_args = 0
 1480              		@ link register save eliminated.
 955:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (uint32_t)(READ_BIT(SBS->HDPLSR, SBS_HDPLSR_HDPL));
 1481              		.loc 1 955 3 view .LVU258
 1482              		.loc 1 955 21 is_stmt 0 view .LVU259
 1483 0000 014B     		ldr	r3, .L141
 1484 0002 5869     		ldr	r0, [r3, #20]
 956:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1485              		.loc 1 956 1 view .LVU260
 1486 0004 C0B2     		uxtb	r0, r0
 1487 0006 7047     		bx	lr
 1488              	.L142:
 1489              		.align	2
 1490              	.L141:
 1491 0008 00040044 		.word	1140851712
 1492              		.cfi_endproc
 1493              	.LFE371:
 1495              		.section	.text.HAL_SBS_OpenAccessPort,"ax",%progbits
 1496              		.align	1
 1497              		.global	HAL_SBS_OpenAccessPort
 1498              		.syntax unified
 1499              		.thumb
 1500              		.thumb_func
 1502              	HAL_SBS_OpenAccessPort:
 1503              	.LFB372:
 957:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 958:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 959:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
 960:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 44


 961:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 962:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group7 HAL SBS Hardware secure storage control functions
 963:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief    HAL SBS Hardware secure storage functions
 964:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
 965:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
 966:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 967:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                        ##### HAL SBS Hardware secure storage control functions ####
 968:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
 969:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]  This section provides functions allowing to:
 970:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Select EPOCH security sent to SAES IP
 971:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Set/Get EPOCH security selection
 972:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Set/Get the OBK-HDPL Value
 973:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 974:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
 975:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
 976:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 977:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 978:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined(SBS_EPOCHSELCR_EPOCH_SEL)
 979:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 980:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Select EPOCH security sent to SAES IP to encrypt/decrypt keys
 981:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  Epoch_Selection: Select EPOCH security
 982:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This parameter can be one of the following values:
 983:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_EPOCH_SEL_SECURE    : EPOCH secure selected.
 984:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_EPOCH_SEL_NONSECURE : EPOCH non secure selected.
 985:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_EPOCH_SEL_PUFCHECK  : EPOCH all zeros for PUF integrity check.
 986:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
 987:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
 988:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_EPOCHSelection(uint32_t Epoch_Selection)
 989:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 990:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameter */
 991:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_EPOCH_SELECTION(Epoch_Selection));
 992:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 993:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->EPOCHSELCR, SBS_EPOCHSELCR_EPOCH_SEL, (uint32_t)(Epoch_Selection));
 994:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 995:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
 996:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
 997:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get EPOCH security selection
 998:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Returned value can be one of the following values:
 999:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_EPOCH_SEL_SECURE    : EPOCH secure selected.
1000:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_EPOCH_SEL_NONSECURE : EPOCH non secure selected.
1001:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_EPOCH_SEL_PUFCHECK  : EPOCH all zeros for PUF integrity check.
1002:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1003:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetEPOCHSelection(void)
1004:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
1005:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (uint32_t)(READ_BIT(SBS->EPOCHSELCR, SBS_EPOCHSELCR_EPOCH_SEL));
1006:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
1007:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* SBS_EPOCHSELCR_EPOCH_SEL */
1008:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1009:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined(SBS_NEXTHDPLCR_NEXTHDPL)
1010:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1011:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Set the OBK-HDPL Value.
1012:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  OBKHDPL_Value Value of the increment to add to HDPL value to generate the OBK-HDPL.
1013:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This parameter can be one of the following values:
1014:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_OBKHDPL_INCR_0 : HDPL
1015:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_OBKHDPL_INCR_1 : HDPL + 1
1016:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_OBKHDPL_INCR_2 : HDPL + 2
1017:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *           @arg SBS_OBKHDPL_INCR_3 : HDPL + 3
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 45


1018:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
1019:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1020:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_SetOBKHDPL(uint32_t OBKHDPL_Value)
1021:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
1022:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameter */
1023:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_OBKHDPL_SELECTION(OBKHDPL_Value));
1024:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1025:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->NEXTHDPLCR, SBS_NEXTHDPLCR_NEXTHDPL, (uint32_t)(OBKHDPL_Value));
1026:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
1027:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1028:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1029:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get the OBK-HDPL Value.
1030:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval  Returns the incremement to add to HDPL value to generate OBK-HDPL
1031:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *          This return value can be one of the following values:
1032:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_OBKHDPL_INCR_0: HDPL
1033:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_OBKHDPL_INCR_1: HDPL + 1
1034:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_OBKHDPL_INCR_2: HDPL + 2
1035:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_OBKHDPL_INCR_3: HDPL + 3
1036:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1037:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetOBKHDPL(void)
1038:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
1039:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return (uint32_t)(READ_BIT(SBS->NEXTHDPLCR, SBS_NEXTHDPLCR_NEXTHDPL));
1040:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
1041:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* SBS_NEXTHDPLCR_NEXTHDPL */
1042:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1043:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1044:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
1045:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1046:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1047:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group8 HAL SBS Debug control functions
1048:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief    HAL SBS Debug functions
1049:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
1050:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
1051:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
1052:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                        ##### SBS Debug control functions #####
1053:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
1054:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     [..]  This section provides functions allowing to:
1055:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Open the device access port
1056:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Open the debug
1057:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Configure the authenticated debug HDPL
1058:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Get the current value of the hide protection level
1059:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Lock the access to the debug control register
1060:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****       (+) Configure/Get the authenticated debug security access
1061:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1062:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
1063:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
1064:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1065:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1066:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1067:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Open the device access port.
1068:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   This function can be only used when device state is Closed.
1069:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
1070:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1071:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_OpenAccessPort(void)
1072:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1504              		.loc 1 1072 1 is_stmt 1 view -0
 1505              		.cfi_startproc
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 46


 1506              		@ args = 0, pretend = 0, frame = 0
 1507              		@ frame_needed = 0, uses_anonymous_args = 0
 1508              		@ link register save eliminated.
1073:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->DBGCR, SBS_DBGCR_AP_UNLOCK, SBS_DEBUG_UNLOCK_VALUE);
 1509              		.loc 1 1073 3 view .LVU262
 1510 0000 034A     		ldr	r2, .L144
 1511 0002 136A     		ldr	r3, [r2, #32]
 1512 0004 23F0FF03 		bic	r3, r3, #255
 1513 0008 43F0B403 		orr	r3, r3, #180
 1514 000c 1362     		str	r3, [r2, #32]
1074:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1515              		.loc 1 1074 1 is_stmt 0 view .LVU263
 1516 000e 7047     		bx	lr
 1517              	.L145:
 1518              		.align	2
 1519              	.L144:
 1520 0010 00040044 		.word	1140851712
 1521              		.cfi_endproc
 1522              	.LFE372:
 1524              		.section	.text.HAL_SBS_OpenDebug,"ax",%progbits
 1525              		.align	1
 1526              		.global	HAL_SBS_OpenDebug
 1527              		.syntax unified
 1528              		.thumb
 1529              		.thumb_func
 1531              	HAL_SBS_OpenDebug:
 1532              	.LFB373:
1075:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1076:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1077:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Open the debug when the hide protection level is authorized.
1078:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   This function can be only used when device state is Closed.
1079:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
1080:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1081:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_OpenDebug(void)
1082:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1533              		.loc 1 1082 1 is_stmt 1 view -0
 1534              		.cfi_startproc
 1535              		@ args = 0, pretend = 0, frame = 0
 1536              		@ frame_needed = 0, uses_anonymous_args = 0
 1537              		@ link register save eliminated.
1083:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->DBGCR, SBS_DBGCR_DBG_UNLOCK, (SBS_DEBUG_UNLOCK_VALUE << SBS_DBGCR_DBG_UNLOCK_Pos)
 1538              		.loc 1 1083 3 view .LVU265
 1539 0000 034A     		ldr	r2, .L147
 1540 0002 136A     		ldr	r3, [r2, #32]
 1541 0004 23F47F43 		bic	r3, r3, #65280
 1542 0008 43F43443 		orr	r3, r3, #46080
 1543 000c 1362     		str	r3, [r2, #32]
1084:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1544              		.loc 1 1084 1 is_stmt 0 view .LVU266
 1545 000e 7047     		bx	lr
 1546              	.L148:
 1547              		.align	2
 1548              	.L147:
 1549 0010 00040044 		.word	1140851712
 1550              		.cfi_endproc
 1551              	.LFE373:
 1553              		.section	.text.HAL_SBS_ConfigDebugLevel,"ax",%progbits
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 47


 1554              		.align	1
 1555              		.global	HAL_SBS_ConfigDebugLevel
 1556              		.syntax unified
 1557              		.thumb
 1558              		.thumb_func
 1560              	HAL_SBS_ConfigDebugLevel:
 1561              	.LVL39:
 1562              	.LFB374:
1085:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1086:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1087:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Configure the authenticated debug hide protection level.
1088:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   This function can be only used when device state is Closed.
1089:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  Level Hide protection level where the authenticated debug opens
1090:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            This value is one of @ref SBS_HDPL_Value (except SBS_HDPL_VALUE_0)
1091:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval HAL_OK if parameter is correct
1092:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         HAL_ERROR otherwise
1093:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1094:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** HAL_StatusTypeDef HAL_SBS_ConfigDebugLevel(uint32_t Level)
1095:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1563              		.loc 1 1095 1 is_stmt 1 view -0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 0
 1566              		@ frame_needed = 0, uses_anonymous_args = 0
 1567              		@ link register save eliminated.
1096:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameter */
1097:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_HDPL(Level));
 1568              		.loc 1 1097 3 view .LVU268
1098:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1099:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   if (Level != SBS_HDPL_VALUE_0)
 1569              		.loc 1 1099 3 view .LVU269
 1570              		.loc 1 1099 6 is_stmt 0 view .LVU270
 1571 0000 B428     		cmp	r0, #180
 1572 0002 08D0     		beq	.L151
1100:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
1101:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     MODIFY_REG(SBS->DBGCR, SBS_DBGCR_DBG_AUTH_HDPL, (Level << SBS_DBGCR_DBG_AUTH_HDPL_Pos));
 1573              		.loc 1 1101 5 is_stmt 1 view .LVU271
 1574 0004 054A     		ldr	r2, .L152
 1575 0006 136A     		ldr	r3, [r2, #32]
 1576 0008 23F47F03 		bic	r3, r3, #16711680
 1577 000c 43EA0043 		orr	r3, r3, r0, lsl #16
 1578 0010 1362     		str	r3, [r2, #32]
1102:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     return HAL_OK;
 1579              		.loc 1 1102 5 view .LVU272
 1580              		.loc 1 1102 12 is_stmt 0 view .LVU273
 1581 0012 0020     		movs	r0, #0
 1582              	.LVL40:
 1583              		.loc 1 1102 12 view .LVU274
 1584 0014 7047     		bx	lr
 1585              	.LVL41:
 1586              	.L151:
1103:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
1104:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   else
1105:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
1106:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     return HAL_ERROR;
 1587              		.loc 1 1106 12 view .LVU275
 1588 0016 0120     		movs	r0, #1
 1589              	.LVL42:
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 48


1107:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
1108:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1590              		.loc 1 1108 1 view .LVU276
 1591 0018 7047     		bx	lr
 1592              	.L153:
 1593 001a 00BF     		.align	2
 1594              	.L152:
 1595 001c 00040044 		.word	1140851712
 1596              		.cfi_endproc
 1597              	.LFE374:
 1599              		.section	.text.HAL_SBS_GetDebugLevel,"ax",%progbits
 1600              		.align	1
 1601              		.global	HAL_SBS_GetDebugLevel
 1602              		.syntax unified
 1603              		.thumb
 1604              		.thumb_func
 1606              	HAL_SBS_GetDebugLevel:
 1607              	.LFB375:
1109:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1110:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1111:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get the current value of the hide protection level.
1112:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   This function can be only used when device state is Closed.
1113:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Current hide protection level
1114:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            This value is one of @ref SBS_HDPL_Value
1115:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1116:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetDebugLevel(void)
1117:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1608              		.loc 1 1117 1 is_stmt 1 view -0
 1609              		.cfi_startproc
 1610              		@ args = 0, pretend = 0, frame = 0
 1611              		@ frame_needed = 0, uses_anonymous_args = 0
 1612              		@ link register save eliminated.
1118:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return ((SBS->DBGCR & SBS_DBGCR_DBG_AUTH_HDPL) >> SBS_DBGCR_DBG_AUTH_HDPL_Pos);
 1613              		.loc 1 1118 3 view .LVU278
 1614              		.loc 1 1118 15 is_stmt 0 view .LVU279
 1615 0000 024B     		ldr	r3, .L155
 1616 0002 186A     		ldr	r0, [r3, #32]
1119:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1617              		.loc 1 1119 1 view .LVU280
 1618 0004 C0F30740 		ubfx	r0, r0, #16, #8
 1619 0008 7047     		bx	lr
 1620              	.L156:
 1621 000a 00BF     		.align	2
 1622              	.L155:
 1623 000c 00040044 		.word	1140851712
 1624              		.cfi_endproc
 1625              	.LFE375:
 1627              		.section	.text.HAL_SBS_LockDebugConfig,"ax",%progbits
 1628              		.align	1
 1629              		.global	HAL_SBS_LockDebugConfig
 1630              		.syntax unified
 1631              		.thumb
 1632              		.thumb_func
 1634              	HAL_SBS_LockDebugConfig:
 1635              	.LFB376:
1120:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1121:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 49


1122:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Lock the access to the debug control register.
1123:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   This function can be only used when device state is Closed.
1124:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   locking the current debug configuration is released only by a reset.
1125:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
1126:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1127:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_LockDebugConfig(void)
1128:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1636              		.loc 1 1128 1 is_stmt 1 view -0
 1637              		.cfi_startproc
 1638              		@ args = 0, pretend = 0, frame = 0
 1639              		@ frame_needed = 0, uses_anonymous_args = 0
 1640              		@ link register save eliminated.
1129:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->DBGLOCKR, SBS_DBGLOCKR_DBGCFG_LOCK, SBS_DEBUG_LOCK_VALUE);
 1641              		.loc 1 1129 3 view .LVU282
 1642 0000 034A     		ldr	r2, .L158
 1643 0002 536A     		ldr	r3, [r2, #36]
 1644 0004 23F0FF03 		bic	r3, r3, #255
 1645 0008 43F0C303 		orr	r3, r3, #195
 1646 000c 5362     		str	r3, [r2, #36]
1130:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1647              		.loc 1 1130 1 is_stmt 0 view .LVU283
 1648 000e 7047     		bx	lr
 1649              	.L159:
 1650              		.align	2
 1651              	.L158:
 1652 0010 00040044 		.word	1140851712
 1653              		.cfi_endproc
 1654              	.LFE376:
 1656              		.section	.text.HAL_SBS_Lock,"ax",%progbits
 1657              		.align	1
 1658              		.global	HAL_SBS_Lock
 1659              		.syntax unified
 1660              		.thumb
 1661              		.thumb_func
 1663              	HAL_SBS_Lock:
 1664              	.LVL43:
 1665              	.LFB377:
1131:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1132:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined(SBS_DBGCR_DBG_AUTH_SEC)
1133:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1134:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Configure the authenticated debug security access.
1135:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  Control debug opening secure/non-secure or non-secure only
1136:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This parameter can be one of the following values:
1137:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_DEBUG_SEC_NSEC: debug opening for secure and non-secure.
1138:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_DEBUG_NSEC: debug opening for non-secure only.
1139:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
1140:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1141:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_ConfigDebugSecurity(uint32_t Security)
1142:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
1143:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   MODIFY_REG(SBS->DBGCR, SBS_DBGCR_DBG_AUTH_SEC, (Security << SBS_DBGCR_DBG_AUTH_SEC_Pos));
1144:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
1145:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1146:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1147:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get the current value of the hide protection level.
1148:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   This function can be only used when device state is Closed.
1149:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval Returned value can be one of the following values:
1150:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_DEBUG_SEC_NSEC: debug opening for secure and non-secure.
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 50


1151:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *            @arg SBS_DEBUG_NSEC: debug opening for non-secure only.
1152:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1153:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** uint32_t HAL_SBS_GetDebugSecurity(void)
1154:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
1155:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return ((SBS->DBGCR & SBS_DBGCR_DBG_AUTH_SEC) >> SBS_DBGCR_DBG_AUTH_SEC_Pos);
1156:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
1157:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* SBS_DBGCR_DBG_AUTH_SEC */
1158:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1159:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1160:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @}
1161:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1162:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1163:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group9 HAL SBS lock management functions
1164:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *  @brief SBS lock management functions.
1165:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *
1166:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @verbatim
1167:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
1168:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****                                         ##### SBS lock functions #####
1169:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****  ==================================================================================================
1170:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1171:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** @endverbatim
1172:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @{
1173:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1174:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1175:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1176:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Lock the SBS item(s).
1177:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   Setting lock(s) depends on privilege mode in secure/non-secure code
1178:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         Lock(s) cleared only at system reset
1179:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  Item Item(s) to set lock on.
1180:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         This parameter can be a combination of @ref SBS_Lock_items
1181:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval None
1182:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1183:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** void HAL_SBS_Lock(uint32_t Item)
1184:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1666              		.loc 1 1184 1 is_stmt 1 view -0
 1667              		.cfi_startproc
 1668              		@ args = 0, pretend = 0, frame = 0
 1669              		@ frame_needed = 0, uses_anonymous_args = 0
 1670              		@ link register save eliminated.
1185:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check the parameters */
1186:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   assert_param(IS_SBS_LOCK_ITEMS(Item));
 1671              		.loc 1 1186 3 view .LVU285
1187:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1188:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Privilege secure/non-secure locks */
1189:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SBS->CNSLCKR = (0xFFFFU & Item);  /* non-secure lock item in 16 lowest bits */
 1672              		.loc 1 1189 3 view .LVU286
 1673              		.loc 1 1189 27 is_stmt 0 view .LVU287
 1674 0000 80B2     		uxth	r0, r0
 1675              	.LVL44:
 1676              		.loc 1 1189 16 view .LVU288
 1677 0002 024B     		ldr	r3, .L161
 1678 0004 C3F84401 		str	r0, [r3, #324]
1190:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1191:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
1192:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Privilege secure only locks */
1193:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   SBS->CSLCKR = ((0xFFFF0000U & Item) >> 16U);  /* Secure-only lock item in 16 highest bits */
1194:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* __ARM_FEATURE_CMSE */
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 51


1195:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1679              		.loc 1 1195 1 view .LVU289
 1680 0008 7047     		bx	lr
 1681              	.L162:
 1682 000a 00BF     		.align	2
 1683              	.L161:
 1684 000c 00040044 		.word	1140851712
 1685              		.cfi_endproc
 1686              	.LFE377:
 1688              		.section	.text.HAL_SBS_GetLock,"ax",%progbits
 1689              		.align	1
 1690              		.global	HAL_SBS_GetLock
 1691              		.syntax unified
 1692              		.thumb
 1693              		.thumb_func
 1695              	HAL_SBS_GetLock:
 1696              	.LVL45:
 1697              	.LFB378:
1196:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1197:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** /**
1198:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @brief  Get the lock state of SBS items.
1199:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @note   Getting lock(s) depends on privilege mode in secure/non-secure code
1200:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @param  pItem pointer to return locked items
1201:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *         the return value can be a combination of @ref SBS_Lock_items
1202:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   * @retval HAL status
1203:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   */
1204:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** HAL_StatusTypeDef HAL_SBS_GetLock(uint32_t *pItem)
1205:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** {
 1698              		.loc 1 1205 1 is_stmt 1 view -0
 1699              		.cfi_startproc
 1700              		@ args = 0, pretend = 0, frame = 0
 1701              		@ frame_needed = 0, uses_anonymous_args = 0
 1702              		@ link register save eliminated.
1206:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   uint32_t tmp_lock;
 1703              		.loc 1 1206 3 view .LVU291
1207:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1208:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Check null pointer */
1209:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   if (pItem == NULL)
 1704              		.loc 1 1209 3 view .LVU292
 1705              		.loc 1 1209 6 is_stmt 0 view .LVU293
 1706 0000 28B1     		cbz	r0, .L165
1210:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   {
1211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****     return HAL_ERROR;
1212:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
1213:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1214:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Get the non-secure lock state */
1215:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   tmp_lock = SBS->CNSLCKR;
 1707              		.loc 1 1215 3 is_stmt 1 view .LVU294
 1708              		.loc 1 1215 12 is_stmt 0 view .LVU295
 1709 0002 044A     		ldr	r2, .L166
 1710 0004 D2F84421 		ldr	r2, [r2, #324]
 1711              	.LVL46:
1216:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1217:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Get the secure lock state in secure code */
1218:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
1219:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   tmp_lock |= (SBS->CSLCKR << 16U);
1220:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** #endif /* __ARM_FEATURE_CMSE */
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 52


1221:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1222:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   /* Return overall lock status */
1223:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   *pItem = tmp_lock;
 1712              		.loc 1 1223 3 is_stmt 1 view .LVU296
 1713              		.loc 1 1223 10 is_stmt 0 view .LVU297
 1714 0008 0260     		str	r2, [r0]
1224:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** 
1225:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   return HAL_OK;
 1715              		.loc 1 1225 3 is_stmt 1 view .LVU298
 1716              		.loc 1 1225 10 is_stmt 0 view .LVU299
 1717 000a 0020     		movs	r0, #0
 1718              	.LVL47:
 1719              		.loc 1 1225 10 view .LVU300
 1720 000c 7047     		bx	lr
 1721              	.LVL48:
 1722              	.L165:
1211:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c ****   }
 1723              		.loc 1 1211 12 view .LVU301
 1724 000e 0120     		movs	r0, #1
 1725              	.LVL49:
1226:Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c **** }
 1726              		.loc 1 1226 1 view .LVU302
 1727 0010 7047     		bx	lr
 1728              	.L167:
 1729 0012 00BF     		.align	2
 1730              	.L166:
 1731 0014 00040044 		.word	1140851712
 1732              		.cfi_endproc
 1733              	.LFE378:
 1735              		.global	uwTickFreq
 1736              		.section	.data.uwTickFreq,"aw"
 1739              	uwTickFreq:
 1740 0000 01       		.byte	1
 1741              		.global	uwTickPrio
 1742              		.section	.data.uwTickPrio,"aw"
 1743              		.align	2
 1746              	uwTickPrio:
 1747 0000 10000000 		.word	16
 1748              		.global	uwTick
 1749              		.section	.bss.uwTick,"aw",%nobits
 1750              		.align	2
 1753              	uwTick:
 1754 0000 00000000 		.space	4
 1755              		.text
 1756              	.Letext0:
 1757              		.file 2 "/opt/local/arm-none-eabi/include/machine/_default_types.h"
 1758              		.file 3 "Drivers/CMSIS/Device/ST/STM32H5xx/Include/stm32h503xx.h"
 1759              		.file 4 "/opt/local/arm-none-eabi/include/sys/_stdint.h"
 1760              		.file 5 "Drivers/CMSIS/Include/core_cm33.h"
 1761              		.file 6 "Drivers/CMSIS/Device/ST/STM32H5xx/Include/system_stm32h5xx.h"
 1762              		.file 7 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_def.h"
 1763              		.file 8 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal.h"
 1764              		.file 9 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_cortex.h"
 1765              		.file 10 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_rcc.h"
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 53


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h5xx_hal.c
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:22     .text.HAL_MspInit:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:28     .text.HAL_MspInit:00000000 HAL_MspInit
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:41     .text.HAL_MspDeInit:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:47     .text.HAL_MspDeInit:00000000 HAL_MspDeInit
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:60     .text.HAL_DeInit:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:66     .text.HAL_DeInit:00000000 HAL_DeInit
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:123    .text.HAL_DeInit:00000038 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:134    .text.HAL_InitTick:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:140    .text.HAL_InitTick:00000000 HAL_InitTick
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:279    .text.HAL_InitTick:000000a0 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1739   .data.uwTickFreq:00000000 uwTickFreq
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1746   .data.uwTickPrio:00000000 uwTickPrio
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:286    .text.HAL_Init:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:292    .text.HAL_Init:00000000 HAL_Init
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:352    .text.HAL_Init:0000003c $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:359    .text.HAL_IncTick:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:365    .text.HAL_IncTick:00000000 HAL_IncTick
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:386    .text.HAL_IncTick:00000010 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1753   .bss.uwTick:00000000 uwTick
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:392    .text.HAL_GetTick:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:398    .text.HAL_GetTick:00000000 HAL_GetTick
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:414    .text.HAL_GetTick:00000008 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:419    .text.HAL_GetTickPrio:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:425    .text.HAL_GetTickPrio:00000000 HAL_GetTickPrio
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:440    .text.HAL_GetTickPrio:00000008 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:445    .text.HAL_SetTickFreq:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:451    .text.HAL_SetTickFreq:00000000 HAL_SetTickFreq
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:508    .text.HAL_SetTickFreq:00000024 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:514    .text.HAL_GetTickFreq:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:520    .text.HAL_GetTickFreq:00000000 HAL_GetTickFreq
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:535    .text.HAL_GetTickFreq:00000008 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:540    .text.HAL_Delay:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:546    .text.HAL_Delay:00000000 HAL_Delay
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:599    .text.HAL_Delay:00000024 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:604    .text.HAL_SuspendTick:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:610    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:630    .text.HAL_ResumeTick:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:636    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:656    .text.HAL_GetHalVersion:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:662    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:676    .text.HAL_GetHalVersion:00000004 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:681    .text.HAL_GetREVID:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:687    .text.HAL_GetREVID:00000000 HAL_GetREVID
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:704    .text.HAL_GetREVID:00000008 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:709    .text.HAL_GetDEVID:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:715    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:732    .text.HAL_GetDEVID:0000000c $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:737    .text.HAL_GetUIDw0:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:743    .text.HAL_GetUIDw0:00000000 HAL_GetUIDw0
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:758    .text.HAL_GetUIDw0:00000008 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:763    .text.HAL_GetUIDw1:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:769    .text.HAL_GetUIDw1:00000000 HAL_GetUIDw1
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:784    .text.HAL_GetUIDw1:00000008 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:789    .text.HAL_GetUIDw2:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:795    .text.HAL_GetUIDw2:00000000 HAL_GetUIDw2
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 54


/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:810    .text.HAL_GetUIDw2:00000008 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:815    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:821    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:838    .text.HAL_DBGMCU_EnableDBGStopMode:0000000c $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:843    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:849    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:866    .text.HAL_DBGMCU_DisableDBGStopMode:0000000c $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:871    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:877    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:894    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000c $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:899    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:905    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:922    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000c $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:927    .text.HAL_SBS_EnableVddIO1CompensationCell:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:933    .text.HAL_SBS_EnableVddIO1CompensationCell:00000000 HAL_SBS_EnableVddIO1CompensationCell
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:950    .text.HAL_SBS_EnableVddIO1CompensationCell:00000010 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:955    .text.HAL_SBS_DisableVddIO1CompensationCell:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:961    .text.HAL_SBS_DisableVddIO1CompensationCell:00000000 HAL_SBS_DisableVddIO1CompensationCell
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:978    .text.HAL_SBS_DisableVddIO1CompensationCell:00000010 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:983    .text.HAL_SBS_EnableVddIO2CompensationCell:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:989    .text.HAL_SBS_EnableVddIO2CompensationCell:00000000 HAL_SBS_EnableVddIO2CompensationCell
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1006   .text.HAL_SBS_EnableVddIO2CompensationCell:00000010 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1011   .text.HAL_SBS_DisableVddIO2CompensationCell:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1017   .text.HAL_SBS_DisableVddIO2CompensationCell:00000000 HAL_SBS_DisableVddIO2CompensationCell
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1034   .text.HAL_SBS_DisableVddIO2CompensationCell:00000010 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1039   .text.HAL_SBS_VDDCompensationCodeSelect:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1045   .text.HAL_SBS_VDDCompensationCodeSelect:00000000 HAL_SBS_VDDCompensationCodeSelect
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1065   .text.HAL_SBS_VDDCompensationCodeSelect:00000014 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1070   .text.HAL_SBS_VDDIOCompensationCodeSelect:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1076   .text.HAL_SBS_VDDIOCompensationCodeSelect:00000000 HAL_SBS_VDDIOCompensationCodeSelect
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1096   .text.HAL_SBS_VDDIOCompensationCodeSelect:00000014 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1101   .text.HAL_SBS_GetVddIO1CompensationCellReadyFlag:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1107   .text.HAL_SBS_GetVddIO1CompensationCellReadyFlag:00000000 HAL_SBS_GetVddIO1CompensationCellReadyFlag
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1129   .text.HAL_SBS_GetVddIO1CompensationCellReadyFlag:00000010 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1134   .text.HAL_SBS_GetVddIO2CompensationCellReadyFlag:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1140   .text.HAL_SBS_GetVddIO2CompensationCellReadyFlag:00000000 HAL_SBS_GetVddIO2CompensationCellReadyFlag
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1162   .text.HAL_SBS_GetVddIO2CompensationCellReadyFlag:00000010 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1167   .text.HAL_SBS_VDDCompensationCodeConfig:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1173   .text.HAL_SBS_VDDCompensationCodeConfig:00000000 HAL_SBS_VDDCompensationCodeConfig
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1197   .text.HAL_SBS_VDDCompensationCodeConfig:00000018 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1202   .text.HAL_SBS_VDDIOCompensationCodeConfig:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1208   .text.HAL_SBS_VDDIOCompensationCodeConfig:00000000 HAL_SBS_VDDIOCompensationCodeConfig
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1233   .text.HAL_SBS_VDDIOCompensationCodeConfig:00000018 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1238   .text.HAL_SBS_GetNMOSVddCompensationValue:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1244   .text.HAL_SBS_GetNMOSVddCompensationValue:00000000 HAL_SBS_GetNMOSVddCompensationValue
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1261   .text.HAL_SBS_GetNMOSVddCompensationValue:0000000c $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1266   .text.HAL_SBS_GetPMOSVddCompensationValue:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1272   .text.HAL_SBS_GetPMOSVddCompensationValue:00000000 HAL_SBS_GetPMOSVddCompensationValue
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1289   .text.HAL_SBS_GetPMOSVddCompensationValue:0000000c $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1294   .text.HAL_SBS_GetNMOSVddIO2CompensationValue:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1300   .text.HAL_SBS_GetNMOSVddIO2CompensationValue:00000000 HAL_SBS_GetNMOSVddIO2CompensationValue
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1317   .text.HAL_SBS_GetNMOSVddIO2CompensationValue:0000000c $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1322   .text.HAL_SBS_GetPMOSVddIO2CompensationValue:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1328   .text.HAL_SBS_GetPMOSVddIO2CompensationValue:00000000 HAL_SBS_GetPMOSVddIO2CompensationValue
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1345   .text.HAL_SBS_GetPMOSVddIO2CompensationValue:0000000c $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1350   .text.HAL_SBS_FLASH_DisableECCNMI:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1356   .text.HAL_SBS_FLASH_DisableECCNMI:00000000 HAL_SBS_FLASH_DisableECCNMI
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s 			page 55


/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1373   .text.HAL_SBS_FLASH_DisableECCNMI:00000010 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1378   .text.HAL_SBS_FLASH_EnableECCNMI:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1384   .text.HAL_SBS_FLASH_EnableECCNMI:00000000 HAL_SBS_FLASH_EnableECCNMI
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1401   .text.HAL_SBS_FLASH_EnableECCNMI:00000010 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1406   .text.HAL_SBS_FLASH_ECCNMI_IsDisabled:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1412   .text.HAL_SBS_FLASH_ECCNMI_IsDisabled:00000000 HAL_SBS_FLASH_ECCNMI_IsDisabled
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1434   .text.HAL_SBS_FLASH_ECCNMI_IsDisabled:00000010 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1439   .text.HAL_SBS_IncrementHDPLValue:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1445   .text.HAL_SBS_IncrementHDPLValue:00000000 HAL_SBS_IncrementHDPLValue
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1463   .text.HAL_SBS_IncrementHDPLValue:00000010 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1468   .text.HAL_SBS_GetHDPLValue:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1474   .text.HAL_SBS_GetHDPLValue:00000000 HAL_SBS_GetHDPLValue
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1491   .text.HAL_SBS_GetHDPLValue:00000008 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1496   .text.HAL_SBS_OpenAccessPort:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1502   .text.HAL_SBS_OpenAccessPort:00000000 HAL_SBS_OpenAccessPort
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1520   .text.HAL_SBS_OpenAccessPort:00000010 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1525   .text.HAL_SBS_OpenDebug:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1531   .text.HAL_SBS_OpenDebug:00000000 HAL_SBS_OpenDebug
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1549   .text.HAL_SBS_OpenDebug:00000010 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1554   .text.HAL_SBS_ConfigDebugLevel:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1560   .text.HAL_SBS_ConfigDebugLevel:00000000 HAL_SBS_ConfigDebugLevel
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1595   .text.HAL_SBS_ConfigDebugLevel:0000001c $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1600   .text.HAL_SBS_GetDebugLevel:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1606   .text.HAL_SBS_GetDebugLevel:00000000 HAL_SBS_GetDebugLevel
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1623   .text.HAL_SBS_GetDebugLevel:0000000c $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1628   .text.HAL_SBS_LockDebugConfig:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1634   .text.HAL_SBS_LockDebugConfig:00000000 HAL_SBS_LockDebugConfig
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1652   .text.HAL_SBS_LockDebugConfig:00000010 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1657   .text.HAL_SBS_Lock:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1663   .text.HAL_SBS_Lock:00000000 HAL_SBS_Lock
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1684   .text.HAL_SBS_Lock:0000000c $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1689   .text.HAL_SBS_GetLock:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1695   .text.HAL_SBS_GetLock:00000000 HAL_SBS_GetLock
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1731   .text.HAL_SBS_GetLock:00000014 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1743   .data.uwTickPrio:00000000 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccGWKduv.s:1750   .bss.uwTick:00000000 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_SYSTICK_GetCLKSourceConfig
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
HAL_RCC_GetSysClockFreq
HAL_SYSTICK_CLKSourceConfig
AHBPrescTable
