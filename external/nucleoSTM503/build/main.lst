ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 1


   1              		.cpu cortex-m33
   2              		.arch armv8-m.main
   3              		.fpu fpv4-sp-d16
   4              		.arch_extension dsp
   5              		.eabi_attribute 27, 1
   6              		.eabi_attribute 28, 1
   7              		.eabi_attribute 20, 1
   8              		.eabi_attribute 21, 1
   9              		.eabi_attribute 23, 3
  10              		.eabi_attribute 24, 1
  11              		.eabi_attribute 25, 1
  12              		.eabi_attribute 26, 1
  13              		.eabi_attribute 30, 1
  14              		.eabi_attribute 34, 1
  15              		.eabi_attribute 18, 4
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.file 1 "Core/Src/main.c"
  21              		.section	.text.MX_GPIO_Init,"ax",%progbits
  22              		.align	1
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	MX_GPIO_Init:
  28              	.LFB342:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** /* USER CODE END Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END PTD */
  30:Core/Src/main.c **** 
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 2


  31:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** COM_InitTypeDef BspCOMInit;
  44:Core/Src/main.c **** __IO uint32_t BspButtonState = BUTTON_RELEASED;
  45:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  50:Core/Src/main.c **** DMA_HandleTypeDef handle_GPDMA1_Channel5;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** PCD_HandleTypeDef hpcd_USB_DRD_FS;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/main.c **** void SystemClock_Config(void);
  60:Core/Src/main.c **** void PeriphCommonClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** static void MX_GPDMA1_Init(void);
  63:Core/Src/main.c **** static void MX_SPI2_Init(void);
  64:Core/Src/main.c **** static void MX_TIM1_Init(void);
  65:Core/Src/main.c **** static void MX_ICACHE_Init(void);
  66:Core/Src/main.c **** static void MX_USB_PCD_Init(void);
  67:Core/Src/main.c **** static void MX_ADC1_Init(void);
  68:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  73:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /**
  78:Core/Src/main.c ****   * @brief  The application entry point.
  79:Core/Src/main.c ****   * @retval int
  80:Core/Src/main.c ****   */
  81:Core/Src/main.c **** int main(void)
  82:Core/Src/main.c **** {
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END 1 */
  87:Core/Src/main.c **** 
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 3


  88:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  91:Core/Src/main.c ****   HAL_Init();
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END Init */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Configure the system clock */
  98:Core/Src/main.c ****   SystemClock_Config();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Configure the peripherals common clocks */
 101:Core/Src/main.c ****   PeriphCommonClock_Config();
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE END SysInit */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Initialize all configured peripherals */
 108:Core/Src/main.c ****   MX_GPIO_Init();
 109:Core/Src/main.c ****   MX_GPDMA1_Init();
 110:Core/Src/main.c ****   MX_SPI2_Init();
 111:Core/Src/main.c ****   MX_TIM1_Init();
 112:Core/Src/main.c ****   MX_ICACHE_Init();
 113:Core/Src/main.c ****   MX_USB_PCD_Init();
 114:Core/Src/main.c ****   MX_ADC1_Init();
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE END 2 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* Initialize led */
 120:Core/Src/main.c ****   BSP_LED_Init(LED_GREEN);
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Initialize USER push-button, will be used to trigger an interrupt each time it's pressed.*/
 123:Core/Src/main.c ****   BSP_PB_Init(BUTTON_USER, BUTTON_MODE_EXTI);
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* Initialize COM1 port (115200, 8 bits (7-bit data + 1 stop bit), no parity */
 126:Core/Src/main.c ****   BspCOMInit.BaudRate   = 115200;
 127:Core/Src/main.c ****   BspCOMInit.WordLength = COM_WORDLENGTH_8B;
 128:Core/Src/main.c ****   BspCOMInit.StopBits   = COM_STOPBITS_1;
 129:Core/Src/main.c ****   BspCOMInit.Parity     = COM_PARITY_NONE;
 130:Core/Src/main.c ****   BspCOMInit.HwFlowCtl  = COM_HWCONTROL_NONE;
 131:Core/Src/main.c ****   if (BSP_COM_Init(COM1, &BspCOMInit) != BSP_ERROR_NONE)
 132:Core/Src/main.c ****   {
 133:Core/Src/main.c ****     Error_Handler();
 134:Core/Src/main.c ****   }
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE BEGIN BSP */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* -- Sample board code to send message over COM1 port ---- */
 139:Core/Src/main.c ****   printf("Nucleo STM32\r\n");
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* -- Sample board code to switch on led ---- */
 142:Core/Src/main.c ****   BSP_LED_On(LED_GREEN);
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* USER CODE END BSP */
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 4


 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   /* Infinite loop */
 147:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 148:Core/Src/main.c ****   while (1)
 149:Core/Src/main.c ****   {
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****     /* -- Sample board code for User push-button in interrupt mode ---- */
 152:Core/Src/main.c ****     if (BspButtonState == BUTTON_PRESSED)
 153:Core/Src/main.c ****     {
 154:Core/Src/main.c ****       /* Update button state */
 155:Core/Src/main.c ****       BspButtonState = BUTTON_RELEASED;
 156:Core/Src/main.c ****       /* -- Sample board code to toggle led ---- */
 157:Core/Src/main.c ****       BSP_LED_Toggle(LED_GREEN);
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****       /* ..... Perform your action ..... */
 160:Core/Src/main.c ****       uint32_t tick = HAL_GetTick();
 161:Core/Src/main.c ****       uint32_t load = SysTick->LOAD;
 162:Core/Src/main.c ****       printf("Tick %lu  load=%lX\r\n", tick, load);
 163:Core/Src/main.c ****     }
 164:Core/Src/main.c ****     /* USER CODE END WHILE */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 167:Core/Src/main.c ****   }
 168:Core/Src/main.c ****   /* USER CODE END 3 */
 169:Core/Src/main.c **** }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /**
 172:Core/Src/main.c ****   * @brief System Clock Configuration
 173:Core/Src/main.c ****   * @retval None
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c **** void SystemClock_Config(void)
 176:Core/Src/main.c **** {
 177:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 187:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 190:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLL1_SOURCE_HSE;
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 8;
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1_VCIRANGE_3;
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1_VCORANGE_WIDE;
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 201:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 5


 202:Core/Src/main.c ****   {
 203:Core/Src/main.c ****     Error_Handler();
 204:Core/Src/main.c ****   }
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 207:Core/Src/main.c ****   */
 208:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 209:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 210:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK3;
 211:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 212:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 213:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 215:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_HCLK_DIV1;
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 218:Core/Src/main.c ****   {
 219:Core/Src/main.c ****     Error_Handler();
 220:Core/Src/main.c ****   }
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /** Configure the programming delay
 223:Core/Src/main.c ****   */
 224:Core/Src/main.c ****   __HAL_FLASH_SET_PROGRAM_DELAY(FLASH_PROGRAMMING_DELAY_2);
 225:Core/Src/main.c **** }
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** /**
 228:Core/Src/main.c ****   * @brief Peripherals Common Clock Configuration
 229:Core/Src/main.c ****   * @retval None
 230:Core/Src/main.c ****   */
 231:Core/Src/main.c **** void PeriphCommonClock_Config(void)
 232:Core/Src/main.c **** {
 233:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /** Initializes the peripherals clock
 236:Core/Src/main.c ****   */
 237:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USB|RCC_PERIPHCLK_ADCDAC;
 238:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2Source = RCC_PLL2_SOURCE_HSE;
 239:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2M = 2;
 240:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2N = 16;
 241:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2P = 4;
 242:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2Q = 4;
 243:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2R = 4;
 244:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2_VCIRANGE_3;
 245:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2_VCORANGE_WIDE;
 246:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 247:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2ClockOut = RCC_PLL2_DIVR;
 248:Core/Src/main.c ****   PeriphClkInitStruct.AdcDacClockSelection = RCC_ADCDACCLKSOURCE_PLL2R;
 249:Core/Src/main.c ****   PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_PLL2Q;
 250:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 251:Core/Src/main.c ****   {
 252:Core/Src/main.c ****     Error_Handler();
 253:Core/Src/main.c ****   }
 254:Core/Src/main.c **** }
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** /**
 257:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 258:Core/Src/main.c ****   * @param None
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 6


 259:Core/Src/main.c ****   * @retval None
 260:Core/Src/main.c ****   */
 261:Core/Src/main.c **** static void MX_ADC1_Init(void)
 262:Core/Src/main.c **** {
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /** Common config
 275:Core/Src/main.c ****   */
 276:Core/Src/main.c ****   hadc1.Instance = ADC1;
 277:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV2;
 278:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 279:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 280:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 281:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 282:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 283:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 284:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 285:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 286:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 287:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 288:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 289:Core/Src/main.c ****   hadc1.Init.SamplingMode = ADC_SAMPLING_MODE_NORMAL;
 290:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 291:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 292:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 293:Core/Src/main.c ****   {
 294:Core/Src/main.c ****     Error_Handler();
 295:Core/Src/main.c ****   }
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /** Configure Regular Channel
 298:Core/Src/main.c ****   */
 299:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 300:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 301:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 302:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 303:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 304:Core/Src/main.c ****   sConfig.Offset = 0;
 305:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 306:Core/Src/main.c ****   {
 307:Core/Src/main.c ****     Error_Handler();
 308:Core/Src/main.c ****   }
 309:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** }
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** /**
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 7


 316:Core/Src/main.c ****   * @brief GPDMA1 Initialization Function
 317:Core/Src/main.c ****   * @param None
 318:Core/Src/main.c ****   * @retval None
 319:Core/Src/main.c ****   */
 320:Core/Src/main.c **** static void MX_GPDMA1_Init(void)
 321:Core/Src/main.c **** {
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   /* USER CODE BEGIN GPDMA1_Init 0 */
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   /* USER CODE END GPDMA1_Init 0 */
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /* Peripheral clock enable */
 328:Core/Src/main.c ****   __HAL_RCC_GPDMA1_CLK_ENABLE();
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /* GPDMA1 interrupt Init */
 331:Core/Src/main.c ****     HAL_NVIC_SetPriority(GPDMA1_Channel5_IRQn, 0, 0);
 332:Core/Src/main.c ****     HAL_NVIC_EnableIRQ(GPDMA1_Channel5_IRQn);
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   /* USER CODE BEGIN GPDMA1_Init 1 */
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /* USER CODE END GPDMA1_Init 1 */
 337:Core/Src/main.c ****   /* USER CODE BEGIN GPDMA1_Init 2 */
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   /* USER CODE END GPDMA1_Init 2 */
 340:Core/Src/main.c **** 
 341:Core/Src/main.c **** }
 342:Core/Src/main.c **** 
 343:Core/Src/main.c **** /**
 344:Core/Src/main.c ****   * @brief ICACHE Initialization Function
 345:Core/Src/main.c ****   * @param None
 346:Core/Src/main.c ****   * @retval None
 347:Core/Src/main.c ****   */
 348:Core/Src/main.c **** static void MX_ICACHE_Init(void)
 349:Core/Src/main.c **** {
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /* USER CODE BEGIN ICACHE_Init 0 */
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /* USER CODE END ICACHE_Init 0 */
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /* USER CODE BEGIN ICACHE_Init 1 */
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****   /* USER CODE END ICACHE_Init 1 */
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /** Enable instruction cache (default 2-ways set associative cache)
 360:Core/Src/main.c ****   */
 361:Core/Src/main.c ****   if (HAL_ICACHE_Enable() != HAL_OK)
 362:Core/Src/main.c ****   {
 363:Core/Src/main.c ****     Error_Handler();
 364:Core/Src/main.c ****   }
 365:Core/Src/main.c ****   /* USER CODE BEGIN ICACHE_Init 2 */
 366:Core/Src/main.c **** 
 367:Core/Src/main.c ****   /* USER CODE END ICACHE_Init 2 */
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** }
 370:Core/Src/main.c **** 
 371:Core/Src/main.c **** /**
 372:Core/Src/main.c ****   * @brief SPI2 Initialization Function
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 8


 373:Core/Src/main.c ****   * @param None
 374:Core/Src/main.c ****   * @retval None
 375:Core/Src/main.c ****   */
 376:Core/Src/main.c **** static void MX_SPI2_Init(void)
 377:Core/Src/main.c **** {
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 386:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 387:Core/Src/main.c ****   hspi2.Instance = SPI2;
 388:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 389:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES_TXONLY;
 390:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 391:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 392:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 393:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_HARD_OUTPUT;
 394:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 395:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 396:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 397:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 398:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 0x7;
 399:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 400:Core/Src/main.c ****   hspi2.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 401:Core/Src/main.c ****   hspi2.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 402:Core/Src/main.c ****   hspi2.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 403:Core/Src/main.c ****   hspi2.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 404:Core/Src/main.c ****   hspi2.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 405:Core/Src/main.c ****   hspi2.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 406:Core/Src/main.c ****   hspi2.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 407:Core/Src/main.c ****   hspi2.Init.ReadyMasterManagement = SPI_RDY_MASTER_MANAGEMENT_INTERNALLY;
 408:Core/Src/main.c ****   hspi2.Init.ReadyPolarity = SPI_RDY_POLARITY_HIGH;
 409:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 410:Core/Src/main.c ****   {
 411:Core/Src/main.c ****     Error_Handler();
 412:Core/Src/main.c ****   }
 413:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 416:Core/Src/main.c **** 
 417:Core/Src/main.c **** }
 418:Core/Src/main.c **** 
 419:Core/Src/main.c **** /**
 420:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 421:Core/Src/main.c ****   * @param None
 422:Core/Src/main.c ****   * @retval None
 423:Core/Src/main.c ****   */
 424:Core/Src/main.c **** static void MX_TIM1_Init(void)
 425:Core/Src/main.c **** {
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 9


 430:Core/Src/main.c **** 
 431:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 432:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 433:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 434:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 435:Core/Src/main.c **** 
 436:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 439:Core/Src/main.c ****   htim1.Instance = TIM1;
 440:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 441:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 442:Core/Src/main.c ****   htim1.Init.Period = 5000;
 443:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 444:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 445:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 446:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 447:Core/Src/main.c ****   {
 448:Core/Src/main.c ****     Error_Handler();
 449:Core/Src/main.c ****   }
 450:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 451:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 452:Core/Src/main.c ****   {
 453:Core/Src/main.c ****     Error_Handler();
 454:Core/Src/main.c ****   }
 455:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 456:Core/Src/main.c ****   {
 457:Core/Src/main.c ****     Error_Handler();
 458:Core/Src/main.c ****   }
 459:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 460:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 461:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 462:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 463:Core/Src/main.c ****   {
 464:Core/Src/main.c ****     Error_Handler();
 465:Core/Src/main.c ****   }
 466:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 467:Core/Src/main.c ****   sConfigOC.Pulse = 2500;
 468:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 469:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 470:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 471:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 472:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 473:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 474:Core/Src/main.c ****   {
 475:Core/Src/main.c ****     Error_Handler();
 476:Core/Src/main.c ****   }
 477:Core/Src/main.c ****   sConfigOC.Pulse = 500;
 478:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 479:Core/Src/main.c ****   {
 480:Core/Src/main.c ****     Error_Handler();
 481:Core/Src/main.c ****   }
 482:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 483:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 484:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 485:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 486:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 10


 487:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 488:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 489:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 490:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 491:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 492:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 493:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 494:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 495:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 496:Core/Src/main.c ****   {
 497:Core/Src/main.c ****     Error_Handler();
 498:Core/Src/main.c ****   }
 499:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 500:Core/Src/main.c **** 
 501:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 502:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 503:Core/Src/main.c **** 
 504:Core/Src/main.c **** }
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** /**
 507:Core/Src/main.c ****   * @brief USB Initialization Function
 508:Core/Src/main.c ****   * @param None
 509:Core/Src/main.c ****   * @retval None
 510:Core/Src/main.c ****   */
 511:Core/Src/main.c **** static void MX_USB_PCD_Init(void)
 512:Core/Src/main.c **** {
 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****   /* USER CODE BEGIN USB_Init 0 */
 515:Core/Src/main.c **** 
 516:Core/Src/main.c ****   /* USER CODE END USB_Init 0 */
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****   /* USER CODE BEGIN USB_Init 1 */
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****   /* USER CODE END USB_Init 1 */
 521:Core/Src/main.c ****   hpcd_USB_DRD_FS.Instance = USB_DRD_FS;
 522:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.dev_endpoints = 8;
 523:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.speed = USBD_FS_SPEED;
 524:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 525:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.Sof_enable = DISABLE;
 526:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.low_power_enable = DISABLE;
 527:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.lpm_enable = DISABLE;
 528:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.battery_charging_enable = DISABLE;
 529:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.vbus_sensing_enable = DISABLE;
 530:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.bulk_doublebuffer_enable = DISABLE;
 531:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.iso_singlebuffer_enable = DISABLE;
 532:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_DRD_FS) != HAL_OK)
 533:Core/Src/main.c ****   {
 534:Core/Src/main.c ****     Error_Handler();
 535:Core/Src/main.c ****   }
 536:Core/Src/main.c ****   /* USER CODE BEGIN USB_Init 2 */
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   /* USER CODE END USB_Init 2 */
 539:Core/Src/main.c **** 
 540:Core/Src/main.c **** }
 541:Core/Src/main.c **** 
 542:Core/Src/main.c **** /**
 543:Core/Src/main.c ****   * @brief GPIO Initialization Function
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 11


 544:Core/Src/main.c ****   * @param None
 545:Core/Src/main.c ****   * @retval None
 546:Core/Src/main.c ****   */
 547:Core/Src/main.c **** static void MX_GPIO_Init(void)
 548:Core/Src/main.c **** {
  29              		.loc 1 548 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 40
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  40 0002 8AB0     		sub	sp, sp, #40
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 56
 549:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 549 3 view .LVU1
  44              		.loc 1 549 20 is_stmt 0 view .LVU2
  45 0004 05AD     		add	r5, sp, #20
  46 0006 0024     		movs	r4, #0
  47 0008 0594     		str	r4, [sp, #20]
  48 000a 0694     		str	r4, [sp, #24]
  49 000c 0794     		str	r4, [sp, #28]
  50 000e 0894     		str	r4, [sp, #32]
  51 0010 0994     		str	r4, [sp, #36]
 550:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 551:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 552:Core/Src/main.c **** 
 553:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 554:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  52              		.loc 1 554 3 is_stmt 1 view .LVU3
  53              	.LBB4:
  54              		.loc 1 554 3 view .LVU4
  55              		.loc 1 554 3 view .LVU5
  56 0012 2B4B     		ldr	r3, .L3
  57 0014 D3F88C20 		ldr	r2, [r3, #140]
  58 0018 42F00402 		orr	r2, r2, #4
  59 001c C3F88C20 		str	r2, [r3, #140]
  60              		.loc 1 554 3 view .LVU6
  61 0020 D3F88C20 		ldr	r2, [r3, #140]
  62 0024 02F00402 		and	r2, r2, #4
  63 0028 0192     		str	r2, [sp, #4]
  64              		.loc 1 554 3 view .LVU7
  65 002a 019A     		ldr	r2, [sp, #4]
  66              	.LBE4:
  67              		.loc 1 554 3 view .LVU8
 555:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  68              		.loc 1 555 3 view .LVU9
  69              	.LBB5:
  70              		.loc 1 555 3 view .LVU10
  71              		.loc 1 555 3 view .LVU11
  72 002c D3F88C20 		ldr	r2, [r3, #140]
  73 0030 42F08002 		orr	r2, r2, #128
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 12


  74 0034 C3F88C20 		str	r2, [r3, #140]
  75              		.loc 1 555 3 view .LVU12
  76 0038 D3F88C20 		ldr	r2, [r3, #140]
  77 003c 02F08002 		and	r2, r2, #128
  78 0040 0292     		str	r2, [sp, #8]
  79              		.loc 1 555 3 view .LVU13
  80 0042 029A     		ldr	r2, [sp, #8]
  81              	.LBE5:
  82              		.loc 1 555 3 view .LVU14
 556:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  83              		.loc 1 556 3 view .LVU15
  84              	.LBB6:
  85              		.loc 1 556 3 view .LVU16
  86              		.loc 1 556 3 view .LVU17
  87 0044 D3F88C20 		ldr	r2, [r3, #140]
  88 0048 42F00102 		orr	r2, r2, #1
  89 004c C3F88C20 		str	r2, [r3, #140]
  90              		.loc 1 556 3 view .LVU18
  91 0050 D3F88C20 		ldr	r2, [r3, #140]
  92 0054 02F00102 		and	r2, r2, #1
  93 0058 0392     		str	r2, [sp, #12]
  94              		.loc 1 556 3 view .LVU19
  95 005a 039A     		ldr	r2, [sp, #12]
  96              	.LBE6:
  97              		.loc 1 556 3 view .LVU20
 557:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  98              		.loc 1 557 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 557 3 view .LVU22
 101              		.loc 1 557 3 view .LVU23
 102 005c D3F88C20 		ldr	r2, [r3, #140]
 103 0060 42F00202 		orr	r2, r2, #2
 104 0064 C3F88C20 		str	r2, [r3, #140]
 105              		.loc 1 557 3 view .LVU24
 106 0068 D3F88C30 		ldr	r3, [r3, #140]
 107 006c 03F00203 		and	r3, r3, #2
 108 0070 0493     		str	r3, [sp, #16]
 109              		.loc 1 557 3 view .LVU25
 110 0072 049B     		ldr	r3, [sp, #16]
 111              	.LBE7:
 112              		.loc 1 557 3 view .LVU26
 558:Core/Src/main.c **** 
 559:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 560:Core/Src/main.c ****   HAL_GPIO_WritePin(DisplayCMD_GPIO_Port, DisplayCMD_Pin, GPIO_PIN_RESET);
 113              		.loc 1 560 3 view .LVU27
 114 0074 134E     		ldr	r6, .L3+4
 115 0076 2246     		mov	r2, r4
 116 0078 4FF48041 		mov	r1, #16384
 117 007c 3046     		mov	r0, r6
 118 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 119              	.LVL0:
 561:Core/Src/main.c **** 
 562:Core/Src/main.c ****   /*Configure GPIO pin : DisplayCMD_Pin */
 563:Core/Src/main.c ****   GPIO_InitStruct.Pin = DisplayCMD_Pin;
 120              		.loc 1 563 3 view .LVU28
 121              		.loc 1 563 23 is_stmt 0 view .LVU29
 122 0082 4FF48043 		mov	r3, #16384
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 13


 123 0086 0593     		str	r3, [sp, #20]
 564:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 124              		.loc 1 564 3 is_stmt 1 view .LVU30
 125              		.loc 1 564 24 is_stmt 0 view .LVU31
 126 0088 0123     		movs	r3, #1
 127 008a 0693     		str	r3, [sp, #24]
 565:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 128              		.loc 1 565 3 is_stmt 1 view .LVU32
 129              		.loc 1 565 24 is_stmt 0 view .LVU33
 130 008c 0794     		str	r4, [sp, #28]
 566:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 131              		.loc 1 566 3 is_stmt 1 view .LVU34
 132              		.loc 1 566 25 is_stmt 0 view .LVU35
 133 008e 0894     		str	r4, [sp, #32]
 567:Core/Src/main.c ****   HAL_GPIO_Init(DisplayCMD_GPIO_Port, &GPIO_InitStruct);
 134              		.loc 1 567 3 is_stmt 1 view .LVU36
 135 0090 2946     		mov	r1, r5
 136 0092 3046     		mov	r0, r6
 137 0094 FFF7FEFF 		bl	HAL_GPIO_Init
 138              	.LVL1:
 568:Core/Src/main.c **** 
 569:Core/Src/main.c ****   /*Configure GPIO pin : TE_Pin */
 570:Core/Src/main.c ****   GPIO_InitStruct.Pin = TE_Pin;
 139              		.loc 1 570 3 view .LVU37
 140              		.loc 1 570 23 is_stmt 0 view .LVU38
 141 0098 4FF48073 		mov	r3, #256
 142 009c 0593     		str	r3, [sp, #20]
 571:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 143              		.loc 1 571 3 is_stmt 1 view .LVU39
 144              		.loc 1 571 24 is_stmt 0 view .LVU40
 145 009e 0A4B     		ldr	r3, .L3+8
 146 00a0 0693     		str	r3, [sp, #24]
 572:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 147              		.loc 1 572 3 is_stmt 1 view .LVU41
 148              		.loc 1 572 24 is_stmt 0 view .LVU42
 149 00a2 0794     		str	r4, [sp, #28]
 573:Core/Src/main.c ****   HAL_GPIO_Init(TE_GPIO_Port, &GPIO_InitStruct);
 150              		.loc 1 573 3 is_stmt 1 view .LVU43
 151 00a4 2946     		mov	r1, r5
 152 00a6 0948     		ldr	r0, .L3+12
 153 00a8 FFF7FEFF 		bl	HAL_GPIO_Init
 154              	.LVL2:
 574:Core/Src/main.c **** 
 575:Core/Src/main.c ****   /* EXTI interrupt init*/
 576:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI8_IRQn, 0, 0);
 155              		.loc 1 576 3 view .LVU44
 156 00ac 2246     		mov	r2, r4
 157 00ae 2146     		mov	r1, r4
 158 00b0 1320     		movs	r0, #19
 159 00b2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 160              	.LVL3:
 577:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI8_IRQn);
 161              		.loc 1 577 3 view .LVU45
 162 00b6 1320     		movs	r0, #19
 163 00b8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 164              	.LVL4:
 578:Core/Src/main.c **** 
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 14


 579:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 580:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 581:Core/Src/main.c **** }
 165              		.loc 1 581 1 is_stmt 0 view .LVU46
 166 00bc 0AB0     		add	sp, sp, #40
 167              	.LCFI2:
 168              		.cfi_def_cfa_offset 16
 169              		@ sp needed
 170 00be 70BD     		pop	{r4, r5, r6, pc}
 171              	.L4:
 172              		.align	2
 173              	.L3:
 174 00c0 000C0244 		.word	1140984832
 175 00c4 00040242 		.word	1107428352
 176 00c8 00001110 		.word	269549568
 177 00cc 00000242 		.word	1107427328
 178              		.cfi_endproc
 179              	.LFE342:
 181              		.section	.text.MX_GPDMA1_Init,"ax",%progbits
 182              		.align	1
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 187              	MX_GPDMA1_Init:
 188              	.LFB337:
 321:Core/Src/main.c **** 
 189              		.loc 1 321 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193 0000 00B5     		push	{lr}
 194              	.LCFI3:
 195              		.cfi_def_cfa_offset 4
 196              		.cfi_offset 14, -4
 197 0002 83B0     		sub	sp, sp, #12
 198              	.LCFI4:
 199              		.cfi_def_cfa_offset 16
 328:Core/Src/main.c **** 
 200              		.loc 1 328 3 view .LVU48
 201              	.LBB8:
 328:Core/Src/main.c **** 
 202              		.loc 1 328 3 view .LVU49
 328:Core/Src/main.c **** 
 203              		.loc 1 328 3 view .LVU50
 204 0004 0B4B     		ldr	r3, .L7
 205 0006 D3F88820 		ldr	r2, [r3, #136]
 206 000a 42F00102 		orr	r2, r2, #1
 207 000e C3F88820 		str	r2, [r3, #136]
 328:Core/Src/main.c **** 
 208              		.loc 1 328 3 view .LVU51
 209 0012 D3F88830 		ldr	r3, [r3, #136]
 210 0016 03F00103 		and	r3, r3, #1
 211 001a 0193     		str	r3, [sp, #4]
 328:Core/Src/main.c **** 
 212              		.loc 1 328 3 view .LVU52
 213 001c 019B     		ldr	r3, [sp, #4]
 214              	.LBE8:
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 15


 328:Core/Src/main.c **** 
 215              		.loc 1 328 3 view .LVU53
 331:Core/Src/main.c ****     HAL_NVIC_EnableIRQ(GPDMA1_Channel5_IRQn);
 216              		.loc 1 331 5 view .LVU54
 217 001e 0022     		movs	r2, #0
 218 0020 1146     		mov	r1, r2
 219 0022 2020     		movs	r0, #32
 220 0024 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 221              	.LVL5:
 332:Core/Src/main.c **** 
 222              		.loc 1 332 5 view .LVU55
 223 0028 2020     		movs	r0, #32
 224 002a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 225              	.LVL6:
 341:Core/Src/main.c **** 
 226              		.loc 1 341 1 is_stmt 0 view .LVU56
 227 002e 03B0     		add	sp, sp, #12
 228              	.LCFI5:
 229              		.cfi_def_cfa_offset 4
 230              		@ sp needed
 231 0030 5DF804FB 		ldr	pc, [sp], #4
 232              	.L8:
 233              		.align	2
 234              	.L7:
 235 0034 000C0244 		.word	1140984832
 236              		.cfi_endproc
 237              	.LFE337:
 239              		.section	.text.BSP_PB_Callback,"ax",%progbits
 240              		.align	1
 241              		.global	BSP_PB_Callback
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 246              	BSP_PB_Callback:
 247              	.LVL7:
 248              	.LFB343:
 582:Core/Src/main.c **** 
 583:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 584:Core/Src/main.c **** 
 585:Core/Src/main.c **** /* USER CODE END 4 */
 586:Core/Src/main.c **** 
 587:Core/Src/main.c **** /**
 588:Core/Src/main.c ****   * @brief BSP Push Button callback
 589:Core/Src/main.c ****   * @param Button Specifies the pressed button
 590:Core/Src/main.c ****   * @retval None
 591:Core/Src/main.c ****   */
 592:Core/Src/main.c **** void BSP_PB_Callback(Button_TypeDef Button)
 593:Core/Src/main.c **** {
 249              		.loc 1 593 1 is_stmt 1 view -0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 594:Core/Src/main.c ****   if (Button == BUTTON_USER)
 254              		.loc 1 594 3 view .LVU58
 255              		.loc 1 594 6 is_stmt 0 view .LVU59
 256 0000 10B9     		cbnz	r0, .L9
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 16


 595:Core/Src/main.c ****   {
 596:Core/Src/main.c ****     BspButtonState = BUTTON_PRESSED;
 257              		.loc 1 596 5 is_stmt 1 view .LVU60
 258              		.loc 1 596 20 is_stmt 0 view .LVU61
 259 0002 024B     		ldr	r3, .L11
 260 0004 0122     		movs	r2, #1
 261 0006 1A60     		str	r2, [r3]
 262              	.L9:
 597:Core/Src/main.c ****   }
 598:Core/Src/main.c **** }
 263              		.loc 1 598 1 view .LVU62
 264 0008 7047     		bx	lr
 265              	.L12:
 266 000a 00BF     		.align	2
 267              	.L11:
 268 000c 00000000 		.word	BspButtonState
 269              		.cfi_endproc
 270              	.LFE343:
 272              		.section	.text.Error_Handler,"ax",%progbits
 273              		.align	1
 274              		.global	Error_Handler
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 279              	Error_Handler:
 280              	.LFB344:
 599:Core/Src/main.c **** 
 600:Core/Src/main.c **** /**
 601:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 602:Core/Src/main.c ****   * @retval None
 603:Core/Src/main.c ****   */
 604:Core/Src/main.c **** void Error_Handler(void)
 605:Core/Src/main.c **** {
 281              		.loc 1 605 1 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ Volatile: function does not return.
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 606:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 607:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 608:Core/Src/main.c ****   __disable_irq();
 287              		.loc 1 608 3 view .LVU64
 288              	.LBB9:
 289              	.LBI9:
 290              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 17


  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 18


  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 19


 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 20


 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 21


 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 22


 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 23


 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 24


 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 25


 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 26


 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 27


 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 28


 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 29


 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 30


 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 31


 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 32


 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 33


 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 291              		.loc 2 960 27 view .LVU65
 292              	.LBB10:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 293              		.loc 2 962 3 view .LVU66
 294              		.syntax unified
 295              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 296 0000 72B6     		cpsid i
 297              	@ 0 "" 2
 298              		.thumb
 299              		.syntax unified
 300              	.L14:
 301              	.LBE10:
 302              	.LBE9:
 609:Core/Src/main.c ****   while (1)
 303              		.loc 1 609 3 view .LVU67
 610:Core/Src/main.c ****   {
 611:Core/Src/main.c ****   }
 304              		.loc 1 611 3 view .LVU68
 609:Core/Src/main.c ****   while (1)
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 34


 305              		.loc 1 609 9 view .LVU69
 306 0002 FEE7     		b	.L14
 307              		.cfi_endproc
 308              	.LFE344:
 310              		.section	.text.MX_SPI2_Init,"ax",%progbits
 311              		.align	1
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 316              	MX_SPI2_Init:
 317              	.LFB339:
 377:Core/Src/main.c **** 
 318              		.loc 1 377 1 view -0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322 0000 08B5     		push	{r3, lr}
 323              	.LCFI6:
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 3, -8
 326              		.cfi_offset 14, -4
 387:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 327              		.loc 1 387 3 view .LVU71
 387:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 328              		.loc 1 387 18 is_stmt 0 view .LVU72
 329 0002 1448     		ldr	r0, .L19
 330 0004 144B     		ldr	r3, .L19+4
 331 0006 0360     		str	r3, [r0]
 388:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES_TXONLY;
 332              		.loc 1 388 3 is_stmt 1 view .LVU73
 388:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES_TXONLY;
 333              		.loc 1 388 19 is_stmt 0 view .LVU74
 334 0008 4FF48003 		mov	r3, #4194304
 335 000c 4360     		str	r3, [r0, #4]
 389:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 336              		.loc 1 389 3 is_stmt 1 view .LVU75
 389:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 337              		.loc 1 389 24 is_stmt 0 view .LVU76
 338 000e 4FF40033 		mov	r3, #131072
 339 0012 8360     		str	r3, [r0, #8]
 390:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 340              		.loc 1 390 3 is_stmt 1 view .LVU77
 390:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 341              		.loc 1 390 23 is_stmt 0 view .LVU78
 342 0014 0323     		movs	r3, #3
 343 0016 C360     		str	r3, [r0, #12]
 391:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 344              		.loc 1 391 3 is_stmt 1 view .LVU79
 391:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 345              		.loc 1 391 26 is_stmt 0 view .LVU80
 346 0018 0023     		movs	r3, #0
 347 001a 0361     		str	r3, [r0, #16]
 392:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_HARD_OUTPUT;
 348              		.loc 1 392 3 is_stmt 1 view .LVU81
 392:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_HARD_OUTPUT;
 349              		.loc 1 392 23 is_stmt 0 view .LVU82
 350 001c 4361     		str	r3, [r0, #20]
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 35


 393:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 351              		.loc 1 393 3 is_stmt 1 view .LVU83
 393:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 352              		.loc 1 393 18 is_stmt 0 view .LVU84
 353 001e 4FF00052 		mov	r2, #536870912
 354 0022 8261     		str	r2, [r0, #24]
 394:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 355              		.loc 1 394 3 is_stmt 1 view .LVU85
 394:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 356              		.loc 1 394 32 is_stmt 0 view .LVU86
 357 0024 C361     		str	r3, [r0, #28]
 395:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 358              		.loc 1 395 3 is_stmt 1 view .LVU87
 395:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 359              		.loc 1 395 23 is_stmt 0 view .LVU88
 360 0026 0362     		str	r3, [r0, #32]
 396:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 361              		.loc 1 396 3 is_stmt 1 view .LVU89
 396:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 362              		.loc 1 396 21 is_stmt 0 view .LVU90
 363 0028 4362     		str	r3, [r0, #36]
 397:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 0x7;
 364              		.loc 1 397 3 is_stmt 1 view .LVU91
 397:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 0x7;
 365              		.loc 1 397 29 is_stmt 0 view .LVU92
 366 002a 8362     		str	r3, [r0, #40]
 398:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 367              		.loc 1 398 3 is_stmt 1 view .LVU93
 398:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 368              		.loc 1 398 28 is_stmt 0 view .LVU94
 369 002c 0722     		movs	r2, #7
 370 002e C262     		str	r2, [r0, #44]
 399:Core/Src/main.c ****   hspi2.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 371              		.loc 1 399 3 is_stmt 1 view .LVU95
 399:Core/Src/main.c ****   hspi2.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 372              		.loc 1 399 23 is_stmt 0 view .LVU96
 373 0030 4FF08042 		mov	r2, #1073741824
 374 0034 4263     		str	r2, [r0, #52]
 400:Core/Src/main.c ****   hspi2.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 375              		.loc 1 400 3 is_stmt 1 view .LVU97
 400:Core/Src/main.c ****   hspi2.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 376              		.loc 1 400 26 is_stmt 0 view .LVU98
 377 0036 8363     		str	r3, [r0, #56]
 401:Core/Src/main.c ****   hspi2.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 378              		.loc 1 401 3 is_stmt 1 view .LVU99
 401:Core/Src/main.c ****   hspi2.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 379              		.loc 1 401 28 is_stmt 0 view .LVU100
 380 0038 C363     		str	r3, [r0, #60]
 402:Core/Src/main.c ****   hspi2.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 381              		.loc 1 402 3 is_stmt 1 view .LVU101
 402:Core/Src/main.c ****   hspi2.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 382              		.loc 1 402 31 is_stmt 0 view .LVU102
 383 003a 8364     		str	r3, [r0, #72]
 403:Core/Src/main.c ****   hspi2.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 384              		.loc 1 403 3 is_stmt 1 view .LVU103
 403:Core/Src/main.c ****   hspi2.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 385              		.loc 1 403 38 is_stmt 0 view .LVU104
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 36


 386 003c C364     		str	r3, [r0, #76]
 404:Core/Src/main.c ****   hspi2.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 387              		.loc 1 404 3 is_stmt 1 view .LVU105
 404:Core/Src/main.c ****   hspi2.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 388              		.loc 1 404 37 is_stmt 0 view .LVU106
 389 003e 0365     		str	r3, [r0, #80]
 405:Core/Src/main.c ****   hspi2.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 390              		.loc 1 405 3 is_stmt 1 view .LVU107
 405:Core/Src/main.c ****   hspi2.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 391              		.loc 1 405 32 is_stmt 0 view .LVU108
 392 0040 4365     		str	r3, [r0, #84]
 406:Core/Src/main.c ****   hspi2.Init.ReadyMasterManagement = SPI_RDY_MASTER_MANAGEMENT_INTERNALLY;
 393              		.loc 1 406 3 is_stmt 1 view .LVU109
 406:Core/Src/main.c ****   hspi2.Init.ReadyMasterManagement = SPI_RDY_MASTER_MANAGEMENT_INTERNALLY;
 394              		.loc 1 406 21 is_stmt 0 view .LVU110
 395 0042 8365     		str	r3, [r0, #88]
 407:Core/Src/main.c ****   hspi2.Init.ReadyPolarity = SPI_RDY_POLARITY_HIGH;
 396              		.loc 1 407 3 is_stmt 1 view .LVU111
 407:Core/Src/main.c ****   hspi2.Init.ReadyPolarity = SPI_RDY_POLARITY_HIGH;
 397              		.loc 1 407 36 is_stmt 0 view .LVU112
 398 0044 C365     		str	r3, [r0, #92]
 408:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 399              		.loc 1 408 3 is_stmt 1 view .LVU113
 408:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 400              		.loc 1 408 28 is_stmt 0 view .LVU114
 401 0046 0366     		str	r3, [r0, #96]
 409:Core/Src/main.c ****   {
 402              		.loc 1 409 3 is_stmt 1 view .LVU115
 409:Core/Src/main.c ****   {
 403              		.loc 1 409 7 is_stmt 0 view .LVU116
 404 0048 FFF7FEFF 		bl	HAL_SPI_Init
 405              	.LVL8:
 409:Core/Src/main.c ****   {
 406              		.loc 1 409 6 discriminator 1 view .LVU117
 407 004c 00B9     		cbnz	r0, .L18
 417:Core/Src/main.c **** 
 408              		.loc 1 417 1 view .LVU118
 409 004e 08BD     		pop	{r3, pc}
 410              	.L18:
 411:Core/Src/main.c ****   }
 411              		.loc 1 411 5 is_stmt 1 view .LVU119
 412 0050 FFF7FEFF 		bl	Error_Handler
 413              	.LVL9:
 414              	.L20:
 415              		.align	2
 416              	.L19:
 417 0054 00000000 		.word	hspi2
 418 0058 00380040 		.word	1073756160
 419              		.cfi_endproc
 420              	.LFE339:
 422              		.section	.text.MX_TIM1_Init,"ax",%progbits
 423              		.align	1
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 428              	MX_TIM1_Init:
 429              	.LFB340:
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 37


 425:Core/Src/main.c **** 
 430              		.loc 1 425 1 view -0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 112
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434 0000 10B5     		push	{r4, lr}
 435              	.LCFI7:
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 4, -8
 438              		.cfi_offset 14, -4
 439 0002 9CB0     		sub	sp, sp, #112
 440              	.LCFI8:
 441              		.cfi_def_cfa_offset 120
 431:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 442              		.loc 1 431 3 view .LVU121
 431:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 443              		.loc 1 431 26 is_stmt 0 view .LVU122
 444 0004 0024     		movs	r4, #0
 445 0006 1894     		str	r4, [sp, #96]
 446 0008 1994     		str	r4, [sp, #100]
 447 000a 1A94     		str	r4, [sp, #104]
 448 000c 1B94     		str	r4, [sp, #108]
 432:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 449              		.loc 1 432 3 is_stmt 1 view .LVU123
 432:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 450              		.loc 1 432 27 is_stmt 0 view .LVU124
 451 000e 1594     		str	r4, [sp, #84]
 452 0010 1694     		str	r4, [sp, #88]
 453 0012 1794     		str	r4, [sp, #92]
 433:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 454              		.loc 1 433 3 is_stmt 1 view .LVU125
 433:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 455              		.loc 1 433 22 is_stmt 0 view .LVU126
 456 0014 0E94     		str	r4, [sp, #56]
 457 0016 0F94     		str	r4, [sp, #60]
 458 0018 1094     		str	r4, [sp, #64]
 459 001a 1194     		str	r4, [sp, #68]
 460 001c 1294     		str	r4, [sp, #72]
 461 001e 1394     		str	r4, [sp, #76]
 462 0020 1494     		str	r4, [sp, #80]
 434:Core/Src/main.c **** 
 463              		.loc 1 434 3 is_stmt 1 view .LVU127
 434:Core/Src/main.c **** 
 464              		.loc 1 434 34 is_stmt 0 view .LVU128
 465 0022 3422     		movs	r2, #52
 466 0024 2146     		mov	r1, r4
 467 0026 01A8     		add	r0, sp, #4
 468 0028 FFF7FEFF 		bl	memset
 469              	.LVL10:
 439:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 470              		.loc 1 439 3 is_stmt 1 view .LVU129
 439:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 471              		.loc 1 439 18 is_stmt 0 view .LVU130
 472 002c 3648     		ldr	r0, .L37
 473 002e 374B     		ldr	r3, .L37+4
 474 0030 0360     		str	r3, [r0]
 440:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 38


 475              		.loc 1 440 3 is_stmt 1 view .LVU131
 440:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 476              		.loc 1 440 24 is_stmt 0 view .LVU132
 477 0032 4460     		str	r4, [r0, #4]
 441:Core/Src/main.c ****   htim1.Init.Period = 5000;
 478              		.loc 1 441 3 is_stmt 1 view .LVU133
 441:Core/Src/main.c ****   htim1.Init.Period = 5000;
 479              		.loc 1 441 26 is_stmt 0 view .LVU134
 480 0034 8460     		str	r4, [r0, #8]
 442:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 481              		.loc 1 442 3 is_stmt 1 view .LVU135
 442:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 482              		.loc 1 442 21 is_stmt 0 view .LVU136
 483 0036 41F28833 		movw	r3, #5000
 484 003a C360     		str	r3, [r0, #12]
 443:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 485              		.loc 1 443 3 is_stmt 1 view .LVU137
 443:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 486              		.loc 1 443 28 is_stmt 0 view .LVU138
 487 003c 0461     		str	r4, [r0, #16]
 444:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 488              		.loc 1 444 3 is_stmt 1 view .LVU139
 444:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 489              		.loc 1 444 32 is_stmt 0 view .LVU140
 490 003e 4461     		str	r4, [r0, #20]
 445:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 491              		.loc 1 445 3 is_stmt 1 view .LVU141
 445:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 492              		.loc 1 445 32 is_stmt 0 view .LVU142
 493 0040 8461     		str	r4, [r0, #24]
 446:Core/Src/main.c ****   {
 494              		.loc 1 446 3 is_stmt 1 view .LVU143
 446:Core/Src/main.c ****   {
 495              		.loc 1 446 7 is_stmt 0 view .LVU144
 496 0042 FFF7FEFF 		bl	HAL_TIM_Base_Init
 497              	.LVL11:
 446:Core/Src/main.c ****   {
 498              		.loc 1 446 6 discriminator 1 view .LVU145
 499 0046 0028     		cmp	r0, #0
 500 0048 4FD1     		bne	.L30
 450:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 501              		.loc 1 450 3 is_stmt 1 view .LVU146
 450:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 502              		.loc 1 450 34 is_stmt 0 view .LVU147
 503 004a 4FF48053 		mov	r3, #4096
 504 004e 1893     		str	r3, [sp, #96]
 451:Core/Src/main.c ****   {
 505              		.loc 1 451 3 is_stmt 1 view .LVU148
 451:Core/Src/main.c ****   {
 506              		.loc 1 451 7 is_stmt 0 view .LVU149
 507 0050 18A9     		add	r1, sp, #96
 508 0052 2D48     		ldr	r0, .L37
 509 0054 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 510              	.LVL12:
 451:Core/Src/main.c ****   {
 511              		.loc 1 451 6 discriminator 1 view .LVU150
 512 0058 0028     		cmp	r0, #0
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 39


 513 005a 48D1     		bne	.L31
 455:Core/Src/main.c ****   {
 514              		.loc 1 455 3 is_stmt 1 view .LVU151
 455:Core/Src/main.c ****   {
 515              		.loc 1 455 7 is_stmt 0 view .LVU152
 516 005c 2A48     		ldr	r0, .L37
 517 005e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 518              	.LVL13:
 455:Core/Src/main.c ****   {
 519              		.loc 1 455 6 discriminator 1 view .LVU153
 520 0062 0028     		cmp	r0, #0
 521 0064 45D1     		bne	.L32
 459:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 522              		.loc 1 459 3 is_stmt 1 view .LVU154
 459:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 523              		.loc 1 459 37 is_stmt 0 view .LVU155
 524 0066 2023     		movs	r3, #32
 525 0068 1593     		str	r3, [sp, #84]
 460:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 526              		.loc 1 460 3 is_stmt 1 view .LVU156
 460:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 527              		.loc 1 460 38 is_stmt 0 view .LVU157
 528 006a 0023     		movs	r3, #0
 529 006c 1693     		str	r3, [sp, #88]
 461:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 530              		.loc 1 461 3 is_stmt 1 view .LVU158
 461:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 531              		.loc 1 461 33 is_stmt 0 view .LVU159
 532 006e 1793     		str	r3, [sp, #92]
 462:Core/Src/main.c ****   {
 533              		.loc 1 462 3 is_stmt 1 view .LVU160
 462:Core/Src/main.c ****   {
 534              		.loc 1 462 7 is_stmt 0 view .LVU161
 535 0070 15A9     		add	r1, sp, #84
 536 0072 2548     		ldr	r0, .L37
 537 0074 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 538              	.LVL14:
 462:Core/Src/main.c ****   {
 539              		.loc 1 462 6 discriminator 1 view .LVU162
 540 0078 0028     		cmp	r0, #0
 541 007a 3CD1     		bne	.L33
 466:Core/Src/main.c ****   sConfigOC.Pulse = 2500;
 542              		.loc 1 466 3 is_stmt 1 view .LVU163
 466:Core/Src/main.c ****   sConfigOC.Pulse = 2500;
 543              		.loc 1 466 20 is_stmt 0 view .LVU164
 544 007c 6023     		movs	r3, #96
 545 007e 0E93     		str	r3, [sp, #56]
 467:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 546              		.loc 1 467 3 is_stmt 1 view .LVU165
 467:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 547              		.loc 1 467 19 is_stmt 0 view .LVU166
 548 0080 40F6C413 		movw	r3, #2500
 549 0084 0F93     		str	r3, [sp, #60]
 468:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 550              		.loc 1 468 3 is_stmt 1 view .LVU167
 468:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 551              		.loc 1 468 24 is_stmt 0 view .LVU168
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 40


 552 0086 0023     		movs	r3, #0
 553 0088 1093     		str	r3, [sp, #64]
 469:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 554              		.loc 1 469 3 is_stmt 1 view .LVU169
 469:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 555              		.loc 1 469 25 is_stmt 0 view .LVU170
 556 008a 1193     		str	r3, [sp, #68]
 470:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 557              		.loc 1 470 3 is_stmt 1 view .LVU171
 470:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 558              		.loc 1 470 24 is_stmt 0 view .LVU172
 559 008c 1293     		str	r3, [sp, #72]
 471:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 560              		.loc 1 471 3 is_stmt 1 view .LVU173
 471:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 561              		.loc 1 471 25 is_stmt 0 view .LVU174
 562 008e 1393     		str	r3, [sp, #76]
 472:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 563              		.loc 1 472 3 is_stmt 1 view .LVU175
 472:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 564              		.loc 1 472 26 is_stmt 0 view .LVU176
 565 0090 1493     		str	r3, [sp, #80]
 473:Core/Src/main.c ****   {
 566              		.loc 1 473 3 is_stmt 1 view .LVU177
 473:Core/Src/main.c ****   {
 567              		.loc 1 473 7 is_stmt 0 view .LVU178
 568 0092 0422     		movs	r2, #4
 569 0094 0EA9     		add	r1, sp, #56
 570 0096 1C48     		ldr	r0, .L37
 571 0098 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 572              	.LVL15:
 473:Core/Src/main.c ****   {
 573              		.loc 1 473 6 discriminator 1 view .LVU179
 574 009c 0028     		cmp	r0, #0
 575 009e 2CD1     		bne	.L34
 477:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 576              		.loc 1 477 3 is_stmt 1 view .LVU180
 477:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 577              		.loc 1 477 19 is_stmt 0 view .LVU181
 578 00a0 4FF4FA73 		mov	r3, #500
 579 00a4 0F93     		str	r3, [sp, #60]
 478:Core/Src/main.c ****   {
 580              		.loc 1 478 3 is_stmt 1 view .LVU182
 478:Core/Src/main.c ****   {
 581              		.loc 1 478 7 is_stmt 0 view .LVU183
 582 00a6 0822     		movs	r2, #8
 583 00a8 0EA9     		add	r1, sp, #56
 584 00aa 1748     		ldr	r0, .L37
 585 00ac FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 586              	.LVL16:
 478:Core/Src/main.c ****   {
 587              		.loc 1 478 6 discriminator 1 view .LVU184
 588 00b0 28BB     		cbnz	r0, .L35
 482:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 589              		.loc 1 482 3 is_stmt 1 view .LVU185
 482:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 590              		.loc 1 482 40 is_stmt 0 view .LVU186
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 41


 591 00b2 0023     		movs	r3, #0
 592 00b4 0193     		str	r3, [sp, #4]
 483:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 593              		.loc 1 483 3 is_stmt 1 view .LVU187
 483:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 594              		.loc 1 483 41 is_stmt 0 view .LVU188
 595 00b6 0293     		str	r3, [sp, #8]
 484:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 596              		.loc 1 484 3 is_stmt 1 view .LVU189
 484:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 597              		.loc 1 484 34 is_stmt 0 view .LVU190
 598 00b8 0393     		str	r3, [sp, #12]
 485:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 599              		.loc 1 485 3 is_stmt 1 view .LVU191
 485:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 600              		.loc 1 485 33 is_stmt 0 view .LVU192
 601 00ba 0493     		str	r3, [sp, #16]
 486:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 602              		.loc 1 486 3 is_stmt 1 view .LVU193
 486:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 603              		.loc 1 486 35 is_stmt 0 view .LVU194
 604 00bc 0593     		str	r3, [sp, #20]
 487:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 605              		.loc 1 487 3 is_stmt 1 view .LVU195
 487:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 606              		.loc 1 487 38 is_stmt 0 view .LVU196
 607 00be 4FF40052 		mov	r2, #8192
 608 00c2 0692     		str	r2, [sp, #24]
 488:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 609              		.loc 1 488 3 is_stmt 1 view .LVU197
 488:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 610              		.loc 1 488 36 is_stmt 0 view .LVU198
 611 00c4 0793     		str	r3, [sp, #28]
 489:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 612              		.loc 1 489 3 is_stmt 1 view .LVU199
 489:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 613              		.loc 1 489 36 is_stmt 0 view .LVU200
 614 00c6 0893     		str	r3, [sp, #32]
 490:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 615              		.loc 1 490 3 is_stmt 1 view .LVU201
 490:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 616              		.loc 1 490 36 is_stmt 0 view .LVU202
 617 00c8 0993     		str	r3, [sp, #36]
 491:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 618              		.loc 1 491 3 is_stmt 1 view .LVU203
 491:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 619              		.loc 1 491 39 is_stmt 0 view .LVU204
 620 00ca 4FF00072 		mov	r2, #33554432
 621 00ce 0A92     		str	r2, [sp, #40]
 492:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 622              		.loc 1 492 3 is_stmt 1 view .LVU205
 492:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 623              		.loc 1 492 37 is_stmt 0 view .LVU206
 624 00d0 0B93     		str	r3, [sp, #44]
 493:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 625              		.loc 1 493 3 is_stmt 1 view .LVU207
 493:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 42


 626              		.loc 1 493 37 is_stmt 0 view .LVU208
 627 00d2 0C93     		str	r3, [sp, #48]
 494:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 628              		.loc 1 494 3 is_stmt 1 view .LVU209
 494:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 629              		.loc 1 494 40 is_stmt 0 view .LVU210
 630 00d4 0D93     		str	r3, [sp, #52]
 495:Core/Src/main.c ****   {
 631              		.loc 1 495 3 is_stmt 1 view .LVU211
 495:Core/Src/main.c ****   {
 632              		.loc 1 495 7 is_stmt 0 view .LVU212
 633 00d6 01A9     		add	r1, sp, #4
 634 00d8 0B48     		ldr	r0, .L37
 635 00da FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 636              	.LVL17:
 495:Core/Src/main.c ****   {
 637              		.loc 1 495 6 discriminator 1 view .LVU213
 638 00de 80B9     		cbnz	r0, .L36
 502:Core/Src/main.c **** 
 639              		.loc 1 502 3 is_stmt 1 view .LVU214
 640 00e0 0948     		ldr	r0, .L37
 641 00e2 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 642              	.LVL18:
 504:Core/Src/main.c **** 
 643              		.loc 1 504 1 is_stmt 0 view .LVU215
 644 00e6 1CB0     		add	sp, sp, #112
 645              	.LCFI9:
 646              		.cfi_remember_state
 647              		.cfi_def_cfa_offset 8
 648              		@ sp needed
 649 00e8 10BD     		pop	{r4, pc}
 650              	.L30:
 651              	.LCFI10:
 652              		.cfi_restore_state
 448:Core/Src/main.c ****   }
 653              		.loc 1 448 5 is_stmt 1 view .LVU216
 654 00ea FFF7FEFF 		bl	Error_Handler
 655              	.LVL19:
 656              	.L31:
 453:Core/Src/main.c ****   }
 657              		.loc 1 453 5 view .LVU217
 658 00ee FFF7FEFF 		bl	Error_Handler
 659              	.LVL20:
 660              	.L32:
 457:Core/Src/main.c ****   }
 661              		.loc 1 457 5 view .LVU218
 662 00f2 FFF7FEFF 		bl	Error_Handler
 663              	.LVL21:
 664              	.L33:
 464:Core/Src/main.c ****   }
 665              		.loc 1 464 5 view .LVU219
 666 00f6 FFF7FEFF 		bl	Error_Handler
 667              	.LVL22:
 668              	.L34:
 475:Core/Src/main.c ****   }
 669              		.loc 1 475 5 view .LVU220
 670 00fa FFF7FEFF 		bl	Error_Handler
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 43


 671              	.LVL23:
 672              	.L35:
 480:Core/Src/main.c ****   }
 673              		.loc 1 480 5 view .LVU221
 674 00fe FFF7FEFF 		bl	Error_Handler
 675              	.LVL24:
 676              	.L36:
 497:Core/Src/main.c ****   }
 677              		.loc 1 497 5 view .LVU222
 678 0102 FFF7FEFF 		bl	Error_Handler
 679              	.LVL25:
 680              	.L38:
 681 0106 00BF     		.align	2
 682              	.L37:
 683 0108 00000000 		.word	htim1
 684 010c 002C0140 		.word	1073818624
 685              		.cfi_endproc
 686              	.LFE340:
 688              		.section	.text.MX_ICACHE_Init,"ax",%progbits
 689              		.align	1
 690              		.syntax unified
 691              		.thumb
 692              		.thumb_func
 694              	MX_ICACHE_Init:
 695              	.LFB338:
 349:Core/Src/main.c **** 
 696              		.loc 1 349 1 view -0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700 0000 08B5     		push	{r3, lr}
 701              	.LCFI11:
 702              		.cfi_def_cfa_offset 8
 703              		.cfi_offset 3, -8
 704              		.cfi_offset 14, -4
 361:Core/Src/main.c ****   {
 705              		.loc 1 361 3 view .LVU224
 361:Core/Src/main.c ****   {
 706              		.loc 1 361 7 is_stmt 0 view .LVU225
 707 0002 FFF7FEFF 		bl	HAL_ICACHE_Enable
 708              	.LVL26:
 361:Core/Src/main.c ****   {
 709              		.loc 1 361 6 discriminator 1 view .LVU226
 710 0006 00B9     		cbnz	r0, .L42
 369:Core/Src/main.c **** 
 711              		.loc 1 369 1 view .LVU227
 712 0008 08BD     		pop	{r3, pc}
 713              	.L42:
 363:Core/Src/main.c ****   }
 714              		.loc 1 363 5 is_stmt 1 view .LVU228
 715 000a FFF7FEFF 		bl	Error_Handler
 716              	.LVL27:
 717              		.cfi_endproc
 718              	.LFE338:
 720              		.section	.text.MX_USB_PCD_Init,"ax",%progbits
 721              		.align	1
 722              		.syntax unified
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 44


 723              		.thumb
 724              		.thumb_func
 726              	MX_USB_PCD_Init:
 727              	.LFB341:
 512:Core/Src/main.c **** 
 728              		.loc 1 512 1 view -0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732 0000 08B5     		push	{r3, lr}
 733              	.LCFI12:
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 3, -8
 736              		.cfi_offset 14, -4
 521:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.dev_endpoints = 8;
 737              		.loc 1 521 3 view .LVU230
 521:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.dev_endpoints = 8;
 738              		.loc 1 521 28 is_stmt 0 view .LVU231
 739 0002 0B48     		ldr	r0, .L47
 740 0004 0B4B     		ldr	r3, .L47+4
 741 0006 0360     		str	r3, [r0]
 522:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.speed = USBD_FS_SPEED;
 742              		.loc 1 522 3 is_stmt 1 view .LVU232
 522:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.speed = USBD_FS_SPEED;
 743              		.loc 1 522 38 is_stmt 0 view .LVU233
 744 0008 0823     		movs	r3, #8
 745 000a 0371     		strb	r3, [r0, #4]
 523:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 746              		.loc 1 523 3 is_stmt 1 view .LVU234
 523:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 747              		.loc 1 523 30 is_stmt 0 view .LVU235
 748 000c 0223     		movs	r3, #2
 749 000e C371     		strb	r3, [r0, #7]
 524:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.Sof_enable = DISABLE;
 750              		.loc 1 524 3 is_stmt 1 view .LVU236
 524:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.Sof_enable = DISABLE;
 751              		.loc 1 524 35 is_stmt 0 view .LVU237
 752 0010 4372     		strb	r3, [r0, #9]
 525:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.low_power_enable = DISABLE;
 753              		.loc 1 525 3 is_stmt 1 view .LVU238
 525:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.low_power_enable = DISABLE;
 754              		.loc 1 525 35 is_stmt 0 view .LVU239
 755 0012 0023     		movs	r3, #0
 756 0014 8372     		strb	r3, [r0, #10]
 526:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.lpm_enable = DISABLE;
 757              		.loc 1 526 3 is_stmt 1 view .LVU240
 526:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.lpm_enable = DISABLE;
 758              		.loc 1 526 41 is_stmt 0 view .LVU241
 759 0016 C372     		strb	r3, [r0, #11]
 527:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.battery_charging_enable = DISABLE;
 760              		.loc 1 527 3 is_stmt 1 view .LVU242
 527:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.battery_charging_enable = DISABLE;
 761              		.loc 1 527 35 is_stmt 0 view .LVU243
 762 0018 0373     		strb	r3, [r0, #12]
 528:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.vbus_sensing_enable = DISABLE;
 763              		.loc 1 528 3 is_stmt 1 view .LVU244
 528:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.vbus_sensing_enable = DISABLE;
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 45


 764              		.loc 1 528 48 is_stmt 0 view .LVU245
 765 001a 4373     		strb	r3, [r0, #13]
 529:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.bulk_doublebuffer_enable = DISABLE;
 766              		.loc 1 529 3 is_stmt 1 view .LVU246
 529:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.bulk_doublebuffer_enable = DISABLE;
 767              		.loc 1 529 44 is_stmt 0 view .LVU247
 768 001c 8373     		strb	r3, [r0, #14]
 530:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.iso_singlebuffer_enable = DISABLE;
 769              		.loc 1 530 3 is_stmt 1 view .LVU248
 530:Core/Src/main.c ****   hpcd_USB_DRD_FS.Init.iso_singlebuffer_enable = DISABLE;
 770              		.loc 1 530 49 is_stmt 0 view .LVU249
 771 001e C373     		strb	r3, [r0, #15]
 531:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_DRD_FS) != HAL_OK)
 772              		.loc 1 531 3 is_stmt 1 view .LVU250
 531:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_DRD_FS) != HAL_OK)
 773              		.loc 1 531 48 is_stmt 0 view .LVU251
 774 0020 0374     		strb	r3, [r0, #16]
 532:Core/Src/main.c ****   {
 775              		.loc 1 532 3 is_stmt 1 view .LVU252
 532:Core/Src/main.c ****   {
 776              		.loc 1 532 7 is_stmt 0 view .LVU253
 777 0022 FFF7FEFF 		bl	HAL_PCD_Init
 778              	.LVL28:
 532:Core/Src/main.c ****   {
 779              		.loc 1 532 6 discriminator 1 view .LVU254
 780 0026 00B9     		cbnz	r0, .L46
 540:Core/Src/main.c **** 
 781              		.loc 1 540 1 view .LVU255
 782 0028 08BD     		pop	{r3, pc}
 783              	.L46:
 534:Core/Src/main.c ****   }
 784              		.loc 1 534 5 is_stmt 1 view .LVU256
 785 002a FFF7FEFF 		bl	Error_Handler
 786              	.LVL29:
 787              	.L48:
 788 002e 00BF     		.align	2
 789              	.L47:
 790 0030 00000000 		.word	hpcd_USB_DRD_FS
 791 0034 00600140 		.word	1073831936
 792              		.cfi_endproc
 793              	.LFE341:
 795              		.section	.text.MX_ADC1_Init,"ax",%progbits
 796              		.align	1
 797              		.syntax unified
 798              		.thumb
 799              		.thumb_func
 801              	MX_ADC1_Init:
 802              	.LFB336:
 262:Core/Src/main.c **** 
 803              		.loc 1 262 1 view -0
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 32
 806              		@ frame_needed = 0, uses_anonymous_args = 0
 807 0000 00B5     		push	{lr}
 808              	.LCFI13:
 809              		.cfi_def_cfa_offset 4
 810              		.cfi_offset 14, -4
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 46


 811 0002 89B0     		sub	sp, sp, #36
 812              	.LCFI14:
 813              		.cfi_def_cfa_offset 40
 268:Core/Src/main.c **** 
 814              		.loc 1 268 3 view .LVU258
 268:Core/Src/main.c **** 
 815              		.loc 1 268 26 is_stmt 0 view .LVU259
 816 0004 2022     		movs	r2, #32
 817 0006 0021     		movs	r1, #0
 818 0008 6846     		mov	r0, sp
 819 000a FFF7FEFF 		bl	memset
 820              	.LVL30:
 276:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV2;
 821              		.loc 1 276 3 is_stmt 1 view .LVU260
 276:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV2;
 822              		.loc 1 276 18 is_stmt 0 view .LVU261
 823 000e 1A48     		ldr	r0, .L55
 824 0010 1A4B     		ldr	r3, .L55+4
 825 0012 0360     		str	r3, [r0]
 277:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 826              		.loc 1 277 3 is_stmt 1 view .LVU262
 277:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 827              		.loc 1 277 29 is_stmt 0 view .LVU263
 828 0014 4FF48023 		mov	r3, #262144
 829 0018 4360     		str	r3, [r0, #4]
 278:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 830              		.loc 1 278 3 is_stmt 1 view .LVU264
 278:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 831              		.loc 1 278 25 is_stmt 0 view .LVU265
 832 001a 0023     		movs	r3, #0
 833 001c 8360     		str	r3, [r0, #8]
 279:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 834              		.loc 1 279 3 is_stmt 1 view .LVU266
 279:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 835              		.loc 1 279 24 is_stmt 0 view .LVU267
 836 001e C360     		str	r3, [r0, #12]
 280:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 837              		.loc 1 280 3 is_stmt 1 view .LVU268
 280:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 838              		.loc 1 280 27 is_stmt 0 view .LVU269
 839 0020 0361     		str	r3, [r0, #16]
 281:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 840              		.loc 1 281 3 is_stmt 1 view .LVU270
 281:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 841              		.loc 1 281 27 is_stmt 0 view .LVU271
 842 0022 0422     		movs	r2, #4
 843 0024 4261     		str	r2, [r0, #20]
 282:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 844              		.loc 1 282 3 is_stmt 1 view .LVU272
 282:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 845              		.loc 1 282 31 is_stmt 0 view .LVU273
 846 0026 0376     		strb	r3, [r0, #24]
 283:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 847              		.loc 1 283 3 is_stmt 1 view .LVU274
 283:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 848              		.loc 1 283 33 is_stmt 0 view .LVU275
 849 0028 4376     		strb	r3, [r0, #25]
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 47


 284:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 850              		.loc 1 284 3 is_stmt 1 view .LVU276
 284:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 851              		.loc 1 284 30 is_stmt 0 view .LVU277
 852 002a 0122     		movs	r2, #1
 853 002c C261     		str	r2, [r0, #28]
 285:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 854              		.loc 1 285 3 is_stmt 1 view .LVU278
 285:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 855              		.loc 1 285 36 is_stmt 0 view .LVU279
 856 002e 80F82030 		strb	r3, [r0, #32]
 286:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 857              		.loc 1 286 3 is_stmt 1 view .LVU280
 286:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 858              		.loc 1 286 31 is_stmt 0 view .LVU281
 859 0032 8362     		str	r3, [r0, #40]
 287:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 860              		.loc 1 287 3 is_stmt 1 view .LVU282
 287:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 861              		.loc 1 287 35 is_stmt 0 view .LVU283
 862 0034 C362     		str	r3, [r0, #44]
 288:Core/Src/main.c ****   hadc1.Init.SamplingMode = ADC_SAMPLING_MODE_NORMAL;
 863              		.loc 1 288 3 is_stmt 1 view .LVU284
 288:Core/Src/main.c ****   hadc1.Init.SamplingMode = ADC_SAMPLING_MODE_NORMAL;
 864              		.loc 1 288 36 is_stmt 0 view .LVU285
 865 0036 80F83430 		strb	r3, [r0, #52]
 289:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 866              		.loc 1 289 3 is_stmt 1 view .LVU286
 289:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 867              		.loc 1 289 27 is_stmt 0 view .LVU287
 868 003a 0363     		str	r3, [r0, #48]
 290:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 869              		.loc 1 290 3 is_stmt 1 view .LVU288
 290:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 870              		.loc 1 290 22 is_stmt 0 view .LVU289
 871 003c 8363     		str	r3, [r0, #56]
 291:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 872              		.loc 1 291 3 is_stmt 1 view .LVU290
 291:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 873              		.loc 1 291 31 is_stmt 0 view .LVU291
 874 003e 80F83C30 		strb	r3, [r0, #60]
 292:Core/Src/main.c ****   {
 875              		.loc 1 292 3 is_stmt 1 view .LVU292
 292:Core/Src/main.c ****   {
 876              		.loc 1 292 7 is_stmt 0 view .LVU293
 877 0042 FFF7FEFF 		bl	HAL_ADC_Init
 878              	.LVL31:
 292:Core/Src/main.c ****   {
 879              		.loc 1 292 6 discriminator 1 view .LVU294
 880 0046 90B9     		cbnz	r0, .L53
 299:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 881              		.loc 1 299 3 is_stmt 1 view .LVU295
 299:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 882              		.loc 1 299 19 is_stmt 0 view .LVU296
 883 0048 0123     		movs	r3, #1
 884 004a 0093     		str	r3, [sp]
 300:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 48


 885              		.loc 1 300 3 is_stmt 1 view .LVU297
 300:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 886              		.loc 1 300 16 is_stmt 0 view .LVU298
 887 004c 0623     		movs	r3, #6
 888 004e 0193     		str	r3, [sp, #4]
 301:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 889              		.loc 1 301 3 is_stmt 1 view .LVU299
 301:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 890              		.loc 1 301 24 is_stmt 0 view .LVU300
 891 0050 0023     		movs	r3, #0
 892 0052 0293     		str	r3, [sp, #8]
 302:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 893              		.loc 1 302 3 is_stmt 1 view .LVU301
 302:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 894              		.loc 1 302 22 is_stmt 0 view .LVU302
 895 0054 7F22     		movs	r2, #127
 896 0056 0392     		str	r2, [sp, #12]
 303:Core/Src/main.c ****   sConfig.Offset = 0;
 897              		.loc 1 303 3 is_stmt 1 view .LVU303
 303:Core/Src/main.c ****   sConfig.Offset = 0;
 898              		.loc 1 303 24 is_stmt 0 view .LVU304
 899 0058 0422     		movs	r2, #4
 900 005a 0492     		str	r2, [sp, #16]
 304:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 901              		.loc 1 304 3 is_stmt 1 view .LVU305
 304:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 902              		.loc 1 304 18 is_stmt 0 view .LVU306
 903 005c 0593     		str	r3, [sp, #20]
 305:Core/Src/main.c ****   {
 904              		.loc 1 305 3 is_stmt 1 view .LVU307
 305:Core/Src/main.c ****   {
 905              		.loc 1 305 7 is_stmt 0 view .LVU308
 906 005e 6946     		mov	r1, sp
 907 0060 0548     		ldr	r0, .L55
 908 0062 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 909              	.LVL32:
 305:Core/Src/main.c ****   {
 910              		.loc 1 305 6 discriminator 1 view .LVU309
 911 0066 20B9     		cbnz	r0, .L54
 313:Core/Src/main.c **** 
 912              		.loc 1 313 1 view .LVU310
 913 0068 09B0     		add	sp, sp, #36
 914              	.LCFI15:
 915              		.cfi_remember_state
 916              		.cfi_def_cfa_offset 4
 917              		@ sp needed
 918 006a 5DF804FB 		ldr	pc, [sp], #4
 919              	.L53:
 920              	.LCFI16:
 921              		.cfi_restore_state
 294:Core/Src/main.c ****   }
 922              		.loc 1 294 5 is_stmt 1 view .LVU311
 923 006e FFF7FEFF 		bl	Error_Handler
 924              	.LVL33:
 925              	.L54:
 307:Core/Src/main.c ****   }
 926              		.loc 1 307 5 view .LVU312
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 49


 927 0072 FFF7FEFF 		bl	Error_Handler
 928              	.LVL34:
 929              	.L56:
 930 0076 00BF     		.align	2
 931              	.L55:
 932 0078 00000000 		.word	hadc1
 933 007c 00800242 		.word	1107460096
 934              		.cfi_endproc
 935              	.LFE336:
 937              		.section	.text.SystemClock_Config,"ax",%progbits
 938              		.align	1
 939              		.global	SystemClock_Config
 940              		.syntax unified
 941              		.thumb
 942              		.thumb_func
 944              	SystemClock_Config:
 945              	.LFB334:
 176:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 946              		.loc 1 176 1 view -0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 112
 949              		@ frame_needed = 0, uses_anonymous_args = 0
 950 0000 00B5     		push	{lr}
 951              	.LCFI17:
 952              		.cfi_def_cfa_offset 4
 953              		.cfi_offset 14, -4
 954 0002 9DB0     		sub	sp, sp, #116
 955              	.LCFI18:
 956              		.cfi_def_cfa_offset 120
 177:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 957              		.loc 1 177 3 view .LVU314
 177:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 958              		.loc 1 177 22 is_stmt 0 view .LVU315
 959 0004 5022     		movs	r2, #80
 960 0006 0021     		movs	r1, #0
 961 0008 08A8     		add	r0, sp, #32
 962 000a FFF7FEFF 		bl	memset
 963              	.LVL35:
 178:Core/Src/main.c **** 
 964              		.loc 1 178 3 is_stmt 1 view .LVU316
 178:Core/Src/main.c **** 
 965              		.loc 1 178 22 is_stmt 0 view .LVU317
 966 000e 0023     		movs	r3, #0
 967 0010 0293     		str	r3, [sp, #8]
 968 0012 0393     		str	r3, [sp, #12]
 969 0014 0493     		str	r3, [sp, #16]
 970 0016 0593     		str	r3, [sp, #20]
 971 0018 0693     		str	r3, [sp, #24]
 972 001a 0793     		str	r3, [sp, #28]
 182:Core/Src/main.c **** 
 973              		.loc 1 182 3 is_stmt 1 view .LVU318
 974              	.LBB11:
 182:Core/Src/main.c **** 
 975              		.loc 1 182 3 view .LVU319
 182:Core/Src/main.c **** 
 976              		.loc 1 182 3 view .LVU320
 977 001c 214B     		ldr	r3, .L64
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 50


 978 001e 1A69     		ldr	r2, [r3, #16]
 979 0020 42F03002 		orr	r2, r2, #48
 980 0024 1A61     		str	r2, [r3, #16]
 182:Core/Src/main.c **** 
 981              		.loc 1 182 3 view .LVU321
 982 0026 1B69     		ldr	r3, [r3, #16]
 983 0028 03F03003 		and	r3, r3, #48
 984 002c 0193     		str	r3, [sp, #4]
 182:Core/Src/main.c **** 
 985              		.loc 1 182 3 view .LVU322
 986 002e 019B     		ldr	r3, [sp, #4]
 987              	.LBE11:
 182:Core/Src/main.c **** 
 988              		.loc 1 182 3 view .LVU323
 184:Core/Src/main.c **** 
 989              		.loc 1 184 3 view .LVU324
 990              	.L58:
 184:Core/Src/main.c **** 
 991              		.loc 1 184 48 discriminator 1 view .LVU325
 184:Core/Src/main.c **** 
 992              		.loc 1 184 9 discriminator 1 view .LVU326
 184:Core/Src/main.c **** 
 993              		.loc 1 184 10 is_stmt 0 discriminator 1 view .LVU327
 994 0030 1C4B     		ldr	r3, .L64
 995 0032 5B69     		ldr	r3, [r3, #20]
 184:Core/Src/main.c **** 
 996              		.loc 1 184 9 discriminator 1 view .LVU328
 997 0034 13F0080F 		tst	r3, #8
 998 0038 FAD0     		beq	.L58
 189:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 999              		.loc 1 189 3 is_stmt 1 view .LVU329
 189:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1000              		.loc 1 189 36 is_stmt 0 view .LVU330
 1001 003a 0123     		movs	r3, #1
 1002 003c 0893     		str	r3, [sp, #32]
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1003              		.loc 1 190 3 is_stmt 1 view .LVU331
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1004              		.loc 1 190 30 is_stmt 0 view .LVU332
 1005 003e 4FF48033 		mov	r3, #65536
 1006 0042 0993     		str	r3, [sp, #36]
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLL1_SOURCE_HSE;
 1007              		.loc 1 191 3 is_stmt 1 view .LVU333
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLL1_SOURCE_HSE;
 1008              		.loc 1 191 34 is_stmt 0 view .LVU334
 1009 0044 0223     		movs	r3, #2
 1010 0046 1293     		str	r3, [sp, #72]
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 1011              		.loc 1 192 3 is_stmt 1 view .LVU335
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 1012              		.loc 1 192 35 is_stmt 0 view .LVU336
 1013 0048 0322     		movs	r2, #3
 1014 004a 1392     		str	r2, [sp, #76]
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 1015              		.loc 1 193 3 is_stmt 1 view .LVU337
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 1016              		.loc 1 193 30 is_stmt 0 view .LVU338
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 51


 1017 004c 1493     		str	r3, [sp, #80]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 1018              		.loc 1 194 3 is_stmt 1 view .LVU339
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 1019              		.loc 1 194 30 is_stmt 0 view .LVU340
 1020 004e 2822     		movs	r2, #40
 1021 0050 1592     		str	r2, [sp, #84]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 8;
 1022              		.loc 1 195 3 is_stmt 1 view .LVU341
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 8;
 1023              		.loc 1 195 30 is_stmt 0 view .LVU342
 1024 0052 1693     		str	r3, [sp, #88]
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1025              		.loc 1 196 3 is_stmt 1 view .LVU343
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1026              		.loc 1 196 30 is_stmt 0 view .LVU344
 1027 0054 0822     		movs	r2, #8
 1028 0056 1792     		str	r2, [sp, #92]
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1_VCIRANGE_3;
 1029              		.loc 1 197 3 is_stmt 1 view .LVU345
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1_VCIRANGE_3;
 1030              		.loc 1 197 30 is_stmt 0 view .LVU346
 1031 0058 1893     		str	r3, [sp, #96]
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1_VCORANGE_WIDE;
 1032              		.loc 1 198 3 is_stmt 1 view .LVU347
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1_VCORANGE_WIDE;
 1033              		.loc 1 198 32 is_stmt 0 view .LVU348
 1034 005a 0C23     		movs	r3, #12
 1035 005c 1993     		str	r3, [sp, #100]
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 1036              		.loc 1 199 3 is_stmt 1 view .LVU349
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 1037              		.loc 1 199 35 is_stmt 0 view .LVU350
 1038 005e 0023     		movs	r3, #0
 1039 0060 1A93     		str	r3, [sp, #104]
 200:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1040              		.loc 1 200 3 is_stmt 1 view .LVU351
 200:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1041              		.loc 1 200 34 is_stmt 0 view .LVU352
 1042 0062 1B93     		str	r3, [sp, #108]
 201:Core/Src/main.c ****   {
 1043              		.loc 1 201 3 is_stmt 1 view .LVU353
 201:Core/Src/main.c ****   {
 1044              		.loc 1 201 7 is_stmt 0 view .LVU354
 1045 0064 08A8     		add	r0, sp, #32
 1046 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1047              	.LVL36:
 201:Core/Src/main.c ****   {
 1048              		.loc 1 201 6 discriminator 1 view .LVU355
 1049 006a B8B9     		cbnz	r0, .L62
 208:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 1050              		.loc 1 208 3 is_stmt 1 view .LVU356
 208:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 1051              		.loc 1 208 31 is_stmt 0 view .LVU357
 1052 006c 1F23     		movs	r3, #31
 1053 006e 0293     		str	r3, [sp, #8]
 211:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 52


 1054              		.loc 1 211 3 is_stmt 1 view .LVU358
 211:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1055              		.loc 1 211 34 is_stmt 0 view .LVU359
 1056 0070 0323     		movs	r3, #3
 1057 0072 0393     		str	r3, [sp, #12]
 212:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1058              		.loc 1 212 3 is_stmt 1 view .LVU360
 212:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1059              		.loc 1 212 35 is_stmt 0 view .LVU361
 1060 0074 0023     		movs	r3, #0
 1061 0076 0493     		str	r3, [sp, #16]
 213:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1062              		.loc 1 213 3 is_stmt 1 view .LVU362
 213:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1063              		.loc 1 213 36 is_stmt 0 view .LVU363
 1064 0078 0593     		str	r3, [sp, #20]
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_HCLK_DIV1;
 1065              		.loc 1 214 3 is_stmt 1 view .LVU364
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_HCLK_DIV1;
 1066              		.loc 1 214 36 is_stmt 0 view .LVU365
 1067 007a 0693     		str	r3, [sp, #24]
 215:Core/Src/main.c **** 
 1068              		.loc 1 215 3 is_stmt 1 view .LVU366
 215:Core/Src/main.c **** 
 1069              		.loc 1 215 36 is_stmt 0 view .LVU367
 1070 007c 0793     		str	r3, [sp, #28]
 217:Core/Src/main.c ****   {
 1071              		.loc 1 217 3 is_stmt 1 view .LVU368
 217:Core/Src/main.c ****   {
 1072              		.loc 1 217 7 is_stmt 0 view .LVU369
 1073 007e 0521     		movs	r1, #5
 1074 0080 02A8     		add	r0, sp, #8
 1075 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1076              	.LVL37:
 217:Core/Src/main.c ****   {
 1077              		.loc 1 217 6 discriminator 1 view .LVU370
 1078 0086 58B9     		cbnz	r0, .L63
 224:Core/Src/main.c **** }
 1079              		.loc 1 224 3 is_stmt 1 view .LVU371
 1080 0088 074A     		ldr	r2, .L64+4
 1081 008a 1368     		ldr	r3, [r2]
 1082 008c 23F03003 		bic	r3, r3, #48
 1083 0090 43F02003 		orr	r3, r3, #32
 1084 0094 1360     		str	r3, [r2]
 225:Core/Src/main.c **** 
 1085              		.loc 1 225 1 is_stmt 0 view .LVU372
 1086 0096 1DB0     		add	sp, sp, #116
 1087              	.LCFI19:
 1088              		.cfi_remember_state
 1089              		.cfi_def_cfa_offset 4
 1090              		@ sp needed
 1091 0098 5DF804FB 		ldr	pc, [sp], #4
 1092              	.L62:
 1093              	.LCFI20:
 1094              		.cfi_restore_state
 203:Core/Src/main.c ****   }
 1095              		.loc 1 203 5 is_stmt 1 view .LVU373
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 53


 1096 009c FFF7FEFF 		bl	Error_Handler
 1097              	.LVL38:
 1098              	.L63:
 219:Core/Src/main.c ****   }
 1099              		.loc 1 219 5 view .LVU374
 1100 00a0 FFF7FEFF 		bl	Error_Handler
 1101              	.LVL39:
 1102              	.L65:
 1103              		.align	2
 1104              	.L64:
 1105 00a4 00080244 		.word	1140983808
 1106 00a8 00200240 		.word	1073881088
 1107              		.cfi_endproc
 1108              	.LFE334:
 1110              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 1111              		.align	1
 1112              		.global	PeriphCommonClock_Config
 1113              		.syntax unified
 1114              		.thumb
 1115              		.thumb_func
 1117              	PeriphCommonClock_Config:
 1118              	.LFB335:
 232:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 1119              		.loc 1 232 1 view -0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 136
 1122              		@ frame_needed = 0, uses_anonymous_args = 0
 1123 0000 10B5     		push	{r4, lr}
 1124              	.LCFI21:
 1125              		.cfi_def_cfa_offset 8
 1126              		.cfi_offset 4, -8
 1127              		.cfi_offset 14, -4
 1128 0002 A2B0     		sub	sp, sp, #136
 1129              	.LCFI22:
 1130              		.cfi_def_cfa_offset 144
 233:Core/Src/main.c **** 
 1131              		.loc 1 233 3 view .LVU376
 233:Core/Src/main.c **** 
 1132              		.loc 1 233 28 is_stmt 0 view .LVU377
 1133 0004 8822     		movs	r2, #136
 1134 0006 0021     		movs	r1, #0
 1135 0008 6846     		mov	r0, sp
 1136 000a FFF7FEFF 		bl	memset
 1137              	.LVL40:
 237:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2Source = RCC_PLL2_SOURCE_HSE;
 1138              		.loc 1 237 3 is_stmt 1 view .LVU378
 237:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2Source = RCC_PLL2_SOURCE_HSE;
 1139              		.loc 1 237 44 is_stmt 0 view .LVU379
 1140 000e 4FF40012 		mov	r2, #2097152
 1141 0012 1023     		movs	r3, #16
 1142 0014 CDE90023 		strd	r2, [sp]
 238:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2M = 2;
 1143              		.loc 1 238 3 is_stmt 1 view .LVU380
 238:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2M = 2;
 1144              		.loc 1 238 39 is_stmt 0 view .LVU381
 1145 0018 0323     		movs	r3, #3
 1146 001a 0293     		str	r3, [sp, #8]
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 54


 239:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2N = 16;
 1147              		.loc 1 239 3 is_stmt 1 view .LVU382
 239:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2N = 16;
 1148              		.loc 1 239 34 is_stmt 0 view .LVU383
 1149 001c 0222     		movs	r2, #2
 1150 001e 0392     		str	r2, [sp, #12]
 240:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2P = 4;
 1151              		.loc 1 240 3 is_stmt 1 view .LVU384
 240:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2P = 4;
 1152              		.loc 1 240 34 is_stmt 0 view .LVU385
 1153 0020 1023     		movs	r3, #16
 1154 0022 0493     		str	r3, [sp, #16]
 241:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2Q = 4;
 1155              		.loc 1 241 3 is_stmt 1 view .LVU386
 241:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2Q = 4;
 1156              		.loc 1 241 34 is_stmt 0 view .LVU387
 1157 0024 0423     		movs	r3, #4
 1158 0026 0593     		str	r3, [sp, #20]
 242:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2R = 4;
 1159              		.loc 1 242 3 is_stmt 1 view .LVU388
 242:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2R = 4;
 1160              		.loc 1 242 34 is_stmt 0 view .LVU389
 1161 0028 0693     		str	r3, [sp, #24]
 243:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2_VCIRANGE_3;
 1162              		.loc 1 243 3 is_stmt 1 view .LVU390
 243:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2_VCIRANGE_3;
 1163              		.loc 1 243 34 is_stmt 0 view .LVU391
 1164 002a 0793     		str	r3, [sp, #28]
 244:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2_VCORANGE_WIDE;
 1165              		.loc 1 244 3 is_stmt 1 view .LVU392
 244:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2_VCORANGE_WIDE;
 1166              		.loc 1 244 36 is_stmt 0 view .LVU393
 1167 002c 0C23     		movs	r3, #12
 1168 002e 0893     		str	r3, [sp, #32]
 245:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 1169              		.loc 1 245 3 is_stmt 1 view .LVU394
 246:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2ClockOut = RCC_PLL2_DIVR;
 1170              		.loc 1 246 3 view .LVU395
 247:Core/Src/main.c ****   PeriphClkInitStruct.AdcDacClockSelection = RCC_ADCDACCLKSOURCE_PLL2R;
 1171              		.loc 1 247 3 view .LVU396
 247:Core/Src/main.c ****   PeriphClkInitStruct.AdcDacClockSelection = RCC_ADCDACCLKSOURCE_PLL2R;
 1172              		.loc 1 247 41 is_stmt 0 view .LVU397
 1173 0030 4FF48023 		mov	r3, #262144
 1174 0034 0B93     		str	r3, [sp, #44]
 248:Core/Src/main.c ****   PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_PLL2Q;
 1175              		.loc 1 248 3 is_stmt 1 view .LVU398
 248:Core/Src/main.c ****   PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_PLL2Q;
 1176              		.loc 1 248 44 is_stmt 0 view .LVU399
 1177 0036 1992     		str	r2, [sp, #100]
 249:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1178              		.loc 1 249 3 is_stmt 1 view .LVU400
 249:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1179              		.loc 1 249 41 is_stmt 0 view .LVU401
 1180 0038 2023     		movs	r3, #32
 1181 003a 1F93     		str	r3, [sp, #124]
 250:Core/Src/main.c ****   {
 1182              		.loc 1 250 3 is_stmt 1 view .LVU402
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 55


 250:Core/Src/main.c ****   {
 1183              		.loc 1 250 7 is_stmt 0 view .LVU403
 1184 003c 6846     		mov	r0, sp
 1185 003e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1186              	.LVL41:
 250:Core/Src/main.c ****   {
 1187              		.loc 1 250 6 discriminator 1 view .LVU404
 1188 0042 08B9     		cbnz	r0, .L69
 254:Core/Src/main.c **** 
 1189              		.loc 1 254 1 view .LVU405
 1190 0044 22B0     		add	sp, sp, #136
 1191              	.LCFI23:
 1192              		.cfi_remember_state
 1193              		.cfi_def_cfa_offset 8
 1194              		@ sp needed
 1195 0046 10BD     		pop	{r4, pc}
 1196              	.L69:
 1197              	.LCFI24:
 1198              		.cfi_restore_state
 252:Core/Src/main.c ****   }
 1199              		.loc 1 252 5 is_stmt 1 view .LVU406
 1200 0048 FFF7FEFF 		bl	Error_Handler
 1201              	.LVL42:
 1202              		.cfi_endproc
 1203              	.LFE335:
 1205              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1206              		.align	2
 1207              	.LC0:
 1208 0000 4E75636C 		.ascii	"Nucleo STM32\015\000"
 1208      656F2053 
 1208      544D3332 
 1208      0D00
 1209 000e 0000     		.align	2
 1210              	.LC1:
 1211 0010 5469636B 		.ascii	"Tick %lu  load=%lX\015\012\000"
 1211      20256C75 
 1211      20206C6F 
 1211      61643D25 
 1211      6C580D0A 
 1212              		.section	.text.main,"ax",%progbits
 1213              		.align	1
 1214              		.global	main
 1215              		.syntax unified
 1216              		.thumb
 1217              		.thumb_func
 1219              	main:
 1220              	.LFB333:
  82:Core/Src/main.c **** 
 1221              		.loc 1 82 1 view -0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 0
 1224              		@ frame_needed = 0, uses_anonymous_args = 0
 1225 0000 08B5     		push	{r3, lr}
 1226              	.LCFI25:
 1227              		.cfi_def_cfa_offset 8
 1228              		.cfi_offset 3, -8
 1229              		.cfi_offset 14, -4
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 56


  91:Core/Src/main.c **** 
 1230              		.loc 1 91 3 view .LVU408
 1231 0002 FFF7FEFF 		bl	HAL_Init
 1232              	.LVL43:
  98:Core/Src/main.c **** 
 1233              		.loc 1 98 3 view .LVU409
 1234 0006 FFF7FEFF 		bl	SystemClock_Config
 1235              	.LVL44:
 101:Core/Src/main.c **** 
 1236              		.loc 1 101 3 view .LVU410
 1237 000a FFF7FEFF 		bl	PeriphCommonClock_Config
 1238              	.LVL45:
 108:Core/Src/main.c ****   MX_GPDMA1_Init();
 1239              		.loc 1 108 3 view .LVU411
 1240 000e FFF7FEFF 		bl	MX_GPIO_Init
 1241              	.LVL46:
 109:Core/Src/main.c ****   MX_SPI2_Init();
 1242              		.loc 1 109 3 view .LVU412
 1243 0012 FFF7FEFF 		bl	MX_GPDMA1_Init
 1244              	.LVL47:
 110:Core/Src/main.c ****   MX_TIM1_Init();
 1245              		.loc 1 110 3 view .LVU413
 1246 0016 FFF7FEFF 		bl	MX_SPI2_Init
 1247              	.LVL48:
 111:Core/Src/main.c ****   MX_ICACHE_Init();
 1248              		.loc 1 111 3 view .LVU414
 1249 001a FFF7FEFF 		bl	MX_TIM1_Init
 1250              	.LVL49:
 112:Core/Src/main.c ****   MX_USB_PCD_Init();
 1251              		.loc 1 112 3 view .LVU415
 1252 001e FFF7FEFF 		bl	MX_ICACHE_Init
 1253              	.LVL50:
 113:Core/Src/main.c ****   MX_ADC1_Init();
 1254              		.loc 1 113 3 view .LVU416
 1255 0022 FFF7FEFF 		bl	MX_USB_PCD_Init
 1256              	.LVL51:
 114:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1257              		.loc 1 114 3 view .LVU417
 1258 0026 FFF7FEFF 		bl	MX_ADC1_Init
 1259              	.LVL52:
 120:Core/Src/main.c **** 
 1260              		.loc 1 120 3 view .LVU418
 1261 002a 0020     		movs	r0, #0
 1262 002c FFF7FEFF 		bl	BSP_LED_Init
 1263              	.LVL53:
 123:Core/Src/main.c **** 
 1264              		.loc 1 123 3 view .LVU419
 1265 0030 0121     		movs	r1, #1
 1266 0032 0020     		movs	r0, #0
 1267 0034 FFF7FEFF 		bl	BSP_PB_Init
 1268              	.LVL54:
 126:Core/Src/main.c ****   BspCOMInit.WordLength = COM_WORDLENGTH_8B;
 1269              		.loc 1 126 3 view .LVU420
 126:Core/Src/main.c ****   BspCOMInit.WordLength = COM_WORDLENGTH_8B;
 1270              		.loc 1 126 25 is_stmt 0 view .LVU421
 1271 0038 1349     		ldr	r1, .L75
 1272 003a 4FF4E133 		mov	r3, #115200
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 57


 1273 003e 0B60     		str	r3, [r1]
 127:Core/Src/main.c ****   BspCOMInit.StopBits   = COM_STOPBITS_1;
 1274              		.loc 1 127 3 is_stmt 1 view .LVU422
 127:Core/Src/main.c ****   BspCOMInit.StopBits   = COM_STOPBITS_1;
 1275              		.loc 1 127 25 is_stmt 0 view .LVU423
 1276 0040 0020     		movs	r0, #0
 1277 0042 4860     		str	r0, [r1, #4]
 128:Core/Src/main.c ****   BspCOMInit.Parity     = COM_PARITY_NONE;
 1278              		.loc 1 128 3 is_stmt 1 view .LVU424
 128:Core/Src/main.c ****   BspCOMInit.Parity     = COM_PARITY_NONE;
 1279              		.loc 1 128 25 is_stmt 0 view .LVU425
 1280 0044 0881     		strh	r0, [r1, #8]	@ movhi
 129:Core/Src/main.c ****   BspCOMInit.HwFlowCtl  = COM_HWCONTROL_NONE;
 1281              		.loc 1 129 3 is_stmt 1 view .LVU426
 129:Core/Src/main.c ****   BspCOMInit.HwFlowCtl  = COM_HWCONTROL_NONE;
 1282              		.loc 1 129 25 is_stmt 0 view .LVU427
 1283 0046 4881     		strh	r0, [r1, #10]	@ movhi
 130:Core/Src/main.c ****   if (BSP_COM_Init(COM1, &BspCOMInit) != BSP_ERROR_NONE)
 1284              		.loc 1 130 3 is_stmt 1 view .LVU428
 130:Core/Src/main.c ****   if (BSP_COM_Init(COM1, &BspCOMInit) != BSP_ERROR_NONE)
 1285              		.loc 1 130 25 is_stmt 0 view .LVU429
 1286 0048 8881     		strh	r0, [r1, #12]	@ movhi
 131:Core/Src/main.c ****   {
 1287              		.loc 1 131 3 is_stmt 1 view .LVU430
 131:Core/Src/main.c ****   {
 1288              		.loc 1 131 7 is_stmt 0 view .LVU431
 1289 004a FFF7FEFF 		bl	BSP_COM_Init
 1290              	.LVL55:
 131:Core/Src/main.c ****   {
 1291              		.loc 1 131 6 discriminator 1 view .LVU432
 1292 004e 08B1     		cbz	r0, .L71
 133:Core/Src/main.c ****   }
 1293              		.loc 1 133 5 is_stmt 1 view .LVU433
 1294 0050 FFF7FEFF 		bl	Error_Handler
 1295              	.LVL56:
 1296              	.L71:
 139:Core/Src/main.c **** 
 1297              		.loc 1 139 3 view .LVU434
 1298 0054 0D48     		ldr	r0, .L75+4
 1299 0056 FFF7FEFF 		bl	puts
 1300              	.LVL57:
 142:Core/Src/main.c **** 
 1301              		.loc 1 142 3 view .LVU435
 1302 005a 0020     		movs	r0, #0
 1303 005c FFF7FEFF 		bl	BSP_LED_On
 1304              	.LVL58:
 1305              	.L72:
 148:Core/Src/main.c ****   {
 1306              		.loc 1 148 3 view .LVU436
 152:Core/Src/main.c ****     {
 1307              		.loc 1 152 5 view .LVU437
 152:Core/Src/main.c ****     {
 1308              		.loc 1 152 24 is_stmt 0 view .LVU438
 1309 0060 0B4B     		ldr	r3, .L75+8
 1310 0062 1B68     		ldr	r3, [r3]
 152:Core/Src/main.c ****     {
 1311              		.loc 1 152 8 view .LVU439
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 58


 1312 0064 012B     		cmp	r3, #1
 1313 0066 FBD1     		bne	.L72
 1314              	.LBB12:
 155:Core/Src/main.c ****       /* -- Sample board code to toggle led ---- */
 1315              		.loc 1 155 7 is_stmt 1 view .LVU440
 155:Core/Src/main.c ****       /* -- Sample board code to toggle led ---- */
 1316              		.loc 1 155 22 is_stmt 0 view .LVU441
 1317 0068 0020     		movs	r0, #0
 1318 006a 094B     		ldr	r3, .L75+8
 1319 006c 1860     		str	r0, [r3]
 157:Core/Src/main.c **** 
 1320              		.loc 1 157 7 is_stmt 1 view .LVU442
 1321 006e FFF7FEFF 		bl	BSP_LED_Toggle
 1322              	.LVL59:
 160:Core/Src/main.c ****       uint32_t load = SysTick->LOAD;
 1323              		.loc 1 160 7 view .LVU443
 160:Core/Src/main.c ****       uint32_t load = SysTick->LOAD;
 1324              		.loc 1 160 23 is_stmt 0 view .LVU444
 1325 0072 FFF7FEFF 		bl	HAL_GetTick
 1326              	.LVL60:
 1327 0076 0146     		mov	r1, r0
 1328              	.LVL61:
 161:Core/Src/main.c ****       printf("Tick %lu  load=%lX\r\n", tick, load);
 1329              		.loc 1 161 7 is_stmt 1 view .LVU445
 161:Core/Src/main.c ****       printf("Tick %lu  load=%lX\r\n", tick, load);
 1330              		.loc 1 161 16 is_stmt 0 view .LVU446
 1331 0078 4FF0E023 		mov	r3, #-536813568
 1332 007c 5A69     		ldr	r2, [r3, #20]
 1333              	.LVL62:
 162:Core/Src/main.c ****     }
 1334              		.loc 1 162 7 is_stmt 1 view .LVU447
 1335 007e 0548     		ldr	r0, .L75+12
 1336              	.LVL63:
 162:Core/Src/main.c ****     }
 1337              		.loc 1 162 7 is_stmt 0 view .LVU448
 1338 0080 FFF7FEFF 		bl	printf
 1339              	.LVL64:
 162:Core/Src/main.c ****     }
 1340              		.loc 1 162 7 view .LVU449
 1341 0084 ECE7     		b	.L72
 1342              	.L76:
 1343 0086 00BF     		.align	2
 1344              	.L75:
 1345 0088 00000000 		.word	BspCOMInit
 1346 008c 00000000 		.word	.LC0
 1347 0090 00000000 		.word	BspButtonState
 1348 0094 10000000 		.word	.LC1
 1349              	.LBE12:
 1350              		.cfi_endproc
 1351              	.LFE333:
 1353              		.global	hpcd_USB_DRD_FS
 1354              		.section	.bss.hpcd_USB_DRD_FS,"aw",%nobits
 1355              		.align	2
 1358              	hpcd_USB_DRD_FS:
 1359 0000 00000000 		.space	736
 1359      00000000 
 1359      00000000 
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 59


 1359      00000000 
 1359      00000000 
 1360              		.global	handle_GPDMA1_Channel5
 1361              		.section	.bss.handle_GPDMA1_Channel5,"aw",%nobits
 1362              		.align	2
 1365              	handle_GPDMA1_Channel5:
 1366 0000 00000000 		.space	120
 1366      00000000 
 1366      00000000 
 1366      00000000 
 1366      00000000 
 1367              		.global	htim1
 1368              		.section	.bss.htim1,"aw",%nobits
 1369              		.align	2
 1372              	htim1:
 1373 0000 00000000 		.space	76
 1373      00000000 
 1373      00000000 
 1373      00000000 
 1373      00000000 
 1374              		.global	hspi2
 1375              		.section	.bss.hspi2,"aw",%nobits
 1376              		.align	2
 1379              	hspi2:
 1380 0000 00000000 		.space	144
 1380      00000000 
 1380      00000000 
 1380      00000000 
 1380      00000000 
 1381              		.global	hadc1
 1382              		.section	.bss.hadc1,"aw",%nobits
 1383              		.align	2
 1386              	hadc1:
 1387 0000 00000000 		.space	104
 1387      00000000 
 1387      00000000 
 1387      00000000 
 1387      00000000 
 1388              		.global	BspButtonState
 1389              		.section	.bss.BspButtonState,"aw",%nobits
 1390              		.align	2
 1393              	BspButtonState:
 1394 0000 00000000 		.space	4
 1395              		.global	BspCOMInit
 1396              		.section	.bss.BspCOMInit,"aw",%nobits
 1397              		.align	2
 1400              	BspCOMInit:
 1401 0000 00000000 		.space	16
 1401      00000000 
 1401      00000000 
 1401      00000000 
 1402              		.text
 1403              	.Letext0:
 1404              		.file 3 "/opt/local/arm-none-eabi/include/machine/_default_types.h"
 1405              		.file 4 "Drivers/CMSIS/Device/ST/STM32H5xx/Include/stm32h503xx.h"
 1406              		.file 5 "/opt/local/arm-none-eabi/include/sys/_stdint.h"
 1407              		.file 6 "Drivers/CMSIS/Include/core_cm33.h"
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 60


 1408              		.file 7 "Drivers/CMSIS/Device/ST/STM32H5xx/Include/stm32h5xx.h"
 1409              		.file 8 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_def.h"
 1410              		.file 9 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_rcc.h"
 1411              		.file 10 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_rcc_ex.h"
 1412              		.file 11 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_gpio.h"
 1413              		.file 12 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_dma.h"
 1414              		.file 13 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_dma_ex.h"
 1415              		.file 14 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_adc.h"
 1416              		.file 15 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_spi.h"
 1417              		.file 16 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_tim.h"
 1418              		.file 17 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_ll_usb.h"
 1419              		.file 18 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_pcd.h"
 1420              		.file 19 "Drivers/BSP/STM32H5xx_Nucleo/stm32h5xx_nucleo.h"
 1421              		.file 20 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_tim_ex.h"
 1422              		.file 21 "Core/Inc/main.h"
 1423              		.file 22 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_cortex.h"
 1424              		.file 23 "/opt/local/arm-none-eabi/include/stdio.h"
 1425              		.file 24 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal_icache.h"
 1426              		.file 25 "Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal.h"
 1427              		.file 26 "<built-in>"
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 61


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:22     .text.MX_GPIO_Init:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:27     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:174    .text.MX_GPIO_Init:000000c0 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:182    .text.MX_GPDMA1_Init:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:187    .text.MX_GPDMA1_Init:00000000 MX_GPDMA1_Init
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:235    .text.MX_GPDMA1_Init:00000034 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:240    .text.BSP_PB_Callback:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:246    .text.BSP_PB_Callback:00000000 BSP_PB_Callback
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:268    .text.BSP_PB_Callback:0000000c $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1393   .bss.BspButtonState:00000000 BspButtonState
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:273    .text.Error_Handler:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:279    .text.Error_Handler:00000000 Error_Handler
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:311    .text.MX_SPI2_Init:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:316    .text.MX_SPI2_Init:00000000 MX_SPI2_Init
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:417    .text.MX_SPI2_Init:00000054 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1379   .bss.hspi2:00000000 hspi2
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:423    .text.MX_TIM1_Init:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:428    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:683    .text.MX_TIM1_Init:00000108 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1372   .bss.htim1:00000000 htim1
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:689    .text.MX_ICACHE_Init:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:694    .text.MX_ICACHE_Init:00000000 MX_ICACHE_Init
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:721    .text.MX_USB_PCD_Init:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:726    .text.MX_USB_PCD_Init:00000000 MX_USB_PCD_Init
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:790    .text.MX_USB_PCD_Init:00000030 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1358   .bss.hpcd_USB_DRD_FS:00000000 hpcd_USB_DRD_FS
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:796    .text.MX_ADC1_Init:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:801    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:932    .text.MX_ADC1_Init:00000078 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1386   .bss.hadc1:00000000 hadc1
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:938    .text.SystemClock_Config:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:944    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1105   .text.SystemClock_Config:000000a4 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1111   .text.PeriphCommonClock_Config:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1117   .text.PeriphCommonClock_Config:00000000 PeriphCommonClock_Config
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1206   .rodata.main.str1.4:00000000 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1213   .text.main:00000000 $t
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1219   .text.main:00000000 main
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1345   .text.main:00000088 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1400   .bss.BspCOMInit:00000000 BspCOMInit
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1355   .bss.hpcd_USB_DRD_FS:00000000 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1365   .bss.handle_GPDMA1_Channel5:00000000 handle_GPDMA1_Channel5
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1362   .bss.handle_GPDMA1_Channel5:00000000 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1369   .bss.htim1:00000000 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1376   .bss.hspi2:00000000 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1383   .bss.hadc1:00000000 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1390   .bss.BspButtonState:00000000 $d
/var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s:1397   .bss.BspCOMInit:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_SPI_Init
ARM GAS  /var/folders/l3/rwskfq612tq4b7hmtv37jkjw0000gp/T//ccKHkkT3.s 			page 62


memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_ICACHE_Enable
HAL_PCD_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
BSP_LED_Init
BSP_PB_Init
BSP_COM_Init
puts
BSP_LED_On
BSP_LED_Toggle
HAL_GetTick
printf
